// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"node_modules/vue/dist/vue.esm.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*!
 * Vue.js v2.6.10
 * (c) 2014-2019 Evan You
 * Released under the MIT License.
 */

/*  */
var emptyObject = Object.freeze({}); // These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.

function isUndef(v) {
  return v === undefined || v === null;
}

function isDef(v) {
  return v !== undefined && v !== null;
}

function isTrue(v) {
  return v === true;
}

function isFalse(v) {
  return v === false;
}
/**
 * Check if value is primitive.
 */


function isPrimitive(value) {
  return typeof value === 'string' || typeof value === 'number' || // $flow-disable-line
  typeof value === 'symbol' || typeof value === 'boolean';
}
/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */


function isObject(obj) {
  return obj !== null && typeof obj === 'object';
}
/**
 * Get the raw type string of a value, e.g., [object Object].
 */


var _toString = Object.prototype.toString;

function toRawType(value) {
  return _toString.call(value).slice(8, -1);
}
/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */


function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function isRegExp(v) {
  return _toString.call(v) === '[object RegExp]';
}
/**
 * Check if val is a valid array index.
 */


function isValidArrayIndex(val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val);
}

function isPromise(val) {
  return isDef(val) && typeof val.then === 'function' && typeof val.catch === 'function';
}
/**
 * Convert a value to a string that is actually rendered.
 */


function toString(val) {
  return val == null ? '' : Array.isArray(val) || isPlainObject(val) && val.toString === _toString ? JSON.stringify(val, null, 2) : String(val);
}
/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */


function toNumber(val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n;
}
/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */


function makeMap(str, expectsLowerCase) {
  var map = Object.create(null);
  var list = str.split(',');

  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }

  return expectsLowerCase ? function (val) {
    return map[val.toLowerCase()];
  } : function (val) {
    return map[val];
  };
}
/**
 * Check if a tag is a built-in tag.
 */


var isBuiltInTag = makeMap('slot,component', true);
/**
 * Check if an attribute is a reserved attribute.
 */

var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');
/**
 * Remove an item from an array.
 */

function remove(arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);

    if (index > -1) {
      return arr.splice(index, 1);
    }
  }
}
/**
 * Check whether an object has the property.
 */


var hasOwnProperty = Object.prototype.hasOwnProperty;

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
/**
 * Create a cached version of a pure function.
 */


function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}
/**
 * Camelize a hyphen-delimited string.
 */


var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
/**
 * Capitalize a string.
 */

var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
});
/**
 * Hyphenate a camelCase string.
 */

var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase();
});
/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */

function polyfillBind(fn, ctx) {
  function boundFn(a) {
    var l = arguments.length;
    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
  }

  boundFn._length = fn.length;
  return boundFn;
}

function nativeBind(fn, ctx) {
  return fn.bind(ctx);
}

var bind = Function.prototype.bind ? nativeBind : polyfillBind;
/**
 * Convert an Array-like object to a real Array.
 */

function toArray(list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);

  while (i--) {
    ret[i] = list[i + start];
  }

  return ret;
}
/**
 * Mix properties into target object.
 */


function extend(to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }

  return to;
}
/**
 * Merge an Array of Objects into a single Object.
 */


function toObject(arr) {
  var res = {};

  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }

  return res;
}
/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */


function noop(a, b, c) {}
/**
 * Always return false.
 */


var no = function (a, b, c) {
  return false;
};
/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */


var identity = function (_) {
  return _;
};
/**
 * Generate a string containing static keys from compiler modules.
 */


function genStaticKeys(modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || []);
  }, []).join(',');
}
/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */


function looseEqual(a, b) {
  if (a === b) {
    return true;
  }

  var isObjectA = isObject(a);
  var isObjectB = isObject(b);

  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);

      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i]);
        });
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime();
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key]);
        });
      } else {
        /* istanbul ignore next */
        return false;
      }
    } catch (e) {
      /* istanbul ignore next */
      return false;
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b);
  } else {
    return false;
  }
}
/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */


function looseIndexOf(arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) {
      return i;
    }
  }

  return -1;
}
/**
 * Ensure a function is called only once.
 */


function once(fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  };
}

var SSR_ATTR = 'data-server-rendered';
var ASSET_TYPES = ['component', 'directive', 'filter'];
var LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured', 'serverPrefetch'];
/*  */

var config = {
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
};
/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */

var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
/**
 * Check if a string starts with $ or _
 */

function isReserved(str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F;
}
/**
 * Define a property.
 */


function def(obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}
/**
 * Parse simple path.
 */


var bailRE = new RegExp("[^" + unicodeRegExp.source + ".$_\\d]");

function parsePath(path) {
  if (bailRE.test(path)) {
    return;
  }

  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) {
        return;
      }

      obj = obj[segments[i]];
    }

    return obj;
  };
}
/*  */
// can we use __proto__?


var hasProto = '__proto__' in {}; // Browser environment sniffing

var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';
var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/); // Firefox has a "watch" function on Object.prototype...

var nativeWatch = {}.watch;
var supportsPassive = false;

if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', {
      get: function get() {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    }); // https://github.com/facebook/flow/issues/285

    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
} // this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV


var _isServer;

var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }

  return _isServer;
}; // detect devtools


var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
/* istanbul ignore next */

function isNative(Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
}

var hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */
// $flow-disable-line


if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set =
  /*@__PURE__*/
  function () {
    function Set() {
      this.set = Object.create(null);
    }

    Set.prototype.has = function has(key) {
      return this.set[key] === true;
    };

    Set.prototype.add = function add(key) {
      this.set[key] = true;
    };

    Set.prototype.clear = function clear() {
      this.set = Object.create(null);
    };

    return Set;
  }();
}
/*  */


var warn = noop;
var tip = noop;
var generateComponentTrace = noop; // work around flow check

var formatComponentName = noop;

if ("development" !== 'production') {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;

  var classify = function (str) {
    return str.replace(classifyRE, function (c) {
      return c.toUpperCase();
    }).replace(/[-_]/g, '');
  };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && !config.silent) {
      console.error("[Vue warn]: " + msg + trace);
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && !config.silent) {
      console.warn("[Vue tip]: " + msg + (vm ? generateComponentTrace(vm) : ''));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>';
    }

    var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;

    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (name ? "<" + classify(name) + ">" : "<Anonymous>") + (file && includeFile !== false ? " at " + file : '');
  };

  var repeat = function (str, n) {
    var res = '';

    while (n) {
      if (n % 2 === 1) {
        res += str;
      }

      if (n > 1) {
        str += str;
      }

      n >>= 1;
    }

    return res;
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;

      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];

          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue;
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }

        tree.push(vm);
        vm = vm.$parent;
      }

      return '\n\nfound in\n\n' + tree.map(function (vm, i) {
        return "" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + "... (" + vm[1] + " recursive calls)" : formatComponentName(vm));
      }).join('\n');
    } else {
      return "\n\n(found in " + formatComponentName(vm) + ")";
    }
  };
}
/*  */


var uid = 0;
/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */

var Dep = function Dep() {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub(sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub(sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend() {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify() {
  // stabilize the subscriber list first
  var subs = this.subs.slice();

  if ("development" !== 'production' && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) {
      return a.id - b.id;
    });
  }

  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
}; // The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.


Dep.target = null;
var targetStack = [];

function pushTarget(target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget() {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}
/*  */


var VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = {
  child: {
    configurable: true
  }
}; // DEPRECATED: alias for componentInstance for backwards compat.

/* istanbul ignore next */

prototypeAccessors.child.get = function () {
  return this.componentInstance;
};

Object.defineProperties(VNode.prototype, prototypeAccessors);

var createEmptyVNode = function (text) {
  if (text === void 0) text = '';
  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node;
};

function createTextVNode(val) {
  return new VNode(undefined, undefined, undefined, String(val));
} // optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.


function cloneVNode(vnode) {
  var cloned = new VNode(vnode.tag, vnode.data, // #7975
  // clone children array to avoid mutating original in case of cloning
  // a child.
  vnode.children && vnode.children.slice(), vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned;
}
/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */


var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);
var methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];
/**
 * Intercept mutating methods and emit events
 */

methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator() {
    var args = [],
        len = arguments.length;

    while (len--) args[len] = arguments[len];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;

    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break;

      case 'splice':
        inserted = args.slice(2);
        break;
    }

    if (inserted) {
      ob.observeArray(inserted);
    } // notify change


    ob.dep.notify();
    return result;
  });
});
/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);
/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */

var shouldObserve = true;

function toggleObserving(value) {
  shouldObserve = value;
}
/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */


var Observer = function Observer(value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);

  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }

    this.observeArray(value);
  } else {
    this.walk(value);
  }
};
/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */


Observer.prototype.walk = function walk(obj) {
  var keys = Object.keys(obj);

  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};
/**
 * Observe a list of Array items.
 */


Observer.prototype.observeArray = function observeArray(items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
}; // helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */


function protoAugment(target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}
/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */

/* istanbul ignore next */


function copyAugment(target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}
/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */


function observe(value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return;
  }

  var ob;

  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (shouldObserve && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
    ob = new Observer(value);
  }

  if (asRootData && ob) {
    ob.vmCount++;
  }

  return ob;
}
/**
 * Define a reactive property on an Object.
 */


function defineReactive$$1(obj, key, val, customSetter, shallow) {
  var dep = new Dep();
  var property = Object.getOwnPropertyDescriptor(obj, key);

  if (property && property.configurable === false) {
    return;
  } // cater for pre-defined getter/setters


  var getter = property && property.get;
  var setter = property && property.set;

  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter() {
      var value = getter ? getter.call(obj) : val;

      if (Dep.target) {
        dep.depend();

        if (childOb) {
          childOb.dep.depend();

          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }

      return value;
    },
    set: function reactiveSetter(newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */

      if (newVal === value || newVal !== newVal && value !== value) {
        return;
      }
      /* eslint-enable no-self-compare */


      if ("development" !== 'production' && customSetter) {
        customSetter();
      } // #7981: for accessor properties without setter


      if (getter && !setter) {
        return;
      }

      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }

      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}
/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */


function set(target, key, val) {
  if ("development" !== 'production' && (isUndef(target) || isPrimitive(target))) {
    warn("Cannot set reactive property on undefined, null, or primitive value: " + target);
  }

  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val;
  }

  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val;
  }

  var ob = target.__ob__;

  if (target._isVue || ob && ob.vmCount) {
    "development" !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
    return val;
  }

  if (!ob) {
    target[key] = val;
    return val;
  }

  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val;
}
/**
 * Delete a property and trigger change if necessary.
 */


function del(target, key) {
  if ("development" !== 'production' && (isUndef(target) || isPrimitive(target))) {
    warn("Cannot delete reactive property on undefined, null, or primitive value: " + target);
  }

  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return;
  }

  var ob = target.__ob__;

  if (target._isVue || ob && ob.vmCount) {
    "development" !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
    return;
  }

  if (!hasOwn(target, key)) {
    return;
  }

  delete target[key];

  if (!ob) {
    return;
  }

  ob.dep.notify();
}
/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */


function dependArray(value) {
  for (var e = void 0, i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();

    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}
/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */


var strats = config.optionMergeStrategies;
/**
 * Options with restrictions
 */

if ("development" !== 'production') {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn("option \"" + key + "\" can only be used during instance " + 'creation with the `new` keyword.');
    }

    return defaultStrat(parent, child);
  };
}
/**
 * Helper that recursively merges two data objects together.
 */


function mergeData(to, from) {
  if (!from) {
    return to;
  }

  var key, toVal, fromVal;
  var keys = hasSymbol ? Reflect.ownKeys(from) : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i]; // in case the object is already observed...

    if (key === '__ob__') {
      continue;
    }

    toVal = to[key];
    fromVal = from[key];

    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (toVal !== fromVal && isPlainObject(toVal) && isPlainObject(fromVal)) {
      mergeData(toVal, fromVal);
    }
  }

  return to;
}
/**
 * Data
 */


function mergeDataOrFn(parentVal, childVal, vm) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal;
    }

    if (!parentVal) {
      return childVal;
    } // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.


    return function mergedDataFn() {
      return mergeData(typeof childVal === 'function' ? childVal.call(this, this) : childVal, typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal);
    };
  } else {
    return function mergedInstanceDataFn() {
      // instance merge
      var instanceData = typeof childVal === 'function' ? childVal.call(vm, vm) : childVal;
      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm, vm) : parentVal;

      if (instanceData) {
        return mergeData(instanceData, defaultData);
      } else {
        return defaultData;
      }
    };
  }
}

strats.data = function (parentVal, childVal, vm) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
      "development" !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
      return parentVal;
    }

    return mergeDataOrFn(parentVal, childVal);
  }

  return mergeDataOrFn(parentVal, childVal, vm);
};
/**
 * Hooks and props are merged as arrays.
 */


function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}

function dedupeHooks(hooks) {
  var res = [];

  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }

  return res;
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});
/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */

function mergeAssets(parentVal, childVal, vm, key) {
  var res = Object.create(parentVal || null);

  if (childVal) {
    "development" !== 'production' && assertObjectType(key, childVal, vm);
    return extend(res, childVal);
  } else {
    return res;
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});
/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */

strats.watch = function (parentVal, childVal, vm, key) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) {
    parentVal = undefined;
  }

  if (childVal === nativeWatch) {
    childVal = undefined;
  }
  /* istanbul ignore if */


  if (!childVal) {
    return Object.create(parentVal || null);
  }

  if ("development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }

  if (!parentVal) {
    return childVal;
  }

  var ret = {};
  extend(ret, parentVal);

  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];

    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }

    ret[key$1] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];
  }

  return ret;
};
/**
 * Other object hashes.
 */


strats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }

  if (!parentVal) {
    return childVal;
  }

  var ret = Object.create(null);
  extend(ret, parentVal);

  if (childVal) {
    extend(ret, childVal);
  }

  return ret;
};

strats.provide = mergeDataOrFn;
/**
 * Default strategy.
 */

var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined ? parentVal : childVal;
};
/**
 * Validate component names
 */


function checkComponents(options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName(name) {
  if (!new RegExp("^[a-zA-Z][\\-\\.0-9_" + unicodeRegExp.source + "]*$").test(name)) {
    warn('Invalid component name: "' + name + '". Component names ' + 'should conform to valid custom element name in html5 specification.');
  }

  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + name);
  }
}
/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */


function normalizeProps(options, vm) {
  var props = options.props;

  if (!props) {
    return;
  }

  var res = {};
  var i, val, name;

  if (Array.isArray(props)) {
    i = props.length;

    while (i--) {
      val = props[i];

      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = {
          type: null
        };
      } else if ("development" !== 'production') {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val) ? val : {
        type: val
      };
    }
  } else if ("development" !== 'production') {
    warn("Invalid value for option \"props\": expected an Array or an Object, " + "but got " + toRawType(props) + ".", vm);
  }

  options.props = res;
}
/**
 * Normalize all injections into Object-based format
 */


function normalizeInject(options, vm) {
  var inject = options.inject;

  if (!inject) {
    return;
  }

  var normalized = options.inject = {};

  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = {
        from: inject[i]
      };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val) ? extend({
        from: key
      }, val) : {
        from: val
      };
    }
  } else if ("development" !== 'production') {
    warn("Invalid value for option \"inject\": expected an Array or an Object, " + "but got " + toRawType(inject) + ".", vm);
  }
}
/**
 * Normalize raw function directives into object format.
 */


function normalizeDirectives(options) {
  var dirs = options.directives;

  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];

      if (typeof def$$1 === 'function') {
        dirs[key] = {
          bind: def$$1,
          update: def$$1
        };
      }
    }
  }
}

function assertObjectType(name, value, vm) {
  if (!isPlainObject(value)) {
    warn("Invalid value for option \"" + name + "\": expected an Object, " + "but got " + toRawType(value) + ".", vm);
  }
}
/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */


function mergeOptions(parent, child, vm) {
  if ("development" !== 'production') {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child); // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.

  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }

    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;

  for (key in parent) {
    mergeField(key);
  }

  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }

  function mergeField(key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }

  return options;
}
/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */


function resolveAsset(options, type, id, warnMissing) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return;
  }

  var assets = options[type]; // check local registration variations first

  if (hasOwn(assets, id)) {
    return assets[id];
  }

  var camelizedId = camelize(id);

  if (hasOwn(assets, camelizedId)) {
    return assets[camelizedId];
  }

  var PascalCaseId = capitalize(camelizedId);

  if (hasOwn(assets, PascalCaseId)) {
    return assets[PascalCaseId];
  } // fallback to prototype chain


  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];

  if ("development" !== 'production' && warnMissing && !res) {
    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
  }

  return res;
}
/*  */


function validateProp(key, propOptions, propsData, vm) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key]; // boolean casting

  var booleanIndex = getTypeIndex(Boolean, prop.type);

  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);

      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  } // check default value


  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key); // since the default value is a fresh copy,
    // make sure to observe it.

    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }

  if ("development" !== 'production' && // skip validation for weex recycle-list child component props
  !false) {
    assertProp(prop, key, value, vm, absent);
  }

  return value;
}
/**
 * Get the default value of a prop.
 */


function getPropDefaultValue(vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined;
  }

  var def = prop.default; // warn against non-factory defaults for Object & Array

  if ("development" !== 'production' && isObject(def)) {
    warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
  } // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger


  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
    return vm._props[key];
  } // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context


  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
}
/**
 * Assert whether a prop is valid.
 */


function assertProp(prop, name, value, vm, absent) {
  if (prop.required && absent) {
    warn('Missing required prop: "' + name + '"', vm);
    return;
  }

  if (value == null && !prop.required) {
    return;
  }

  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];

  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }

    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(getInvalidTypeMessage(name, value, expectedTypes), vm);
    return;
  }

  var validator = prop.validator;

  if (validator) {
    if (!validator(value)) {
      warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType(value, type) {
  var valid;
  var expectedType = getType(type);

  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects

    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }

  return {
    valid: valid,
    expectedType: expectedType
  };
}
/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */


function getType(fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : '';
}

function isSameType(a, b) {
  return getType(a) === getType(b);
}

function getTypeIndex(type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1;
  }

  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i;
    }
  }

  return -1;
}

function getInvalidTypeMessage(name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." + " Expected " + expectedTypes.map(capitalize).join(', ');
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType); // check if we need to specify expected value

  if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }

  message += ", got " + receivedType + " "; // check if we need to specify received value

  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }

  return message;
}

function styleValue(value, type) {
  if (type === 'String') {
    return "\"" + value + "\"";
  } else if (type === 'Number') {
    return "" + Number(value);
  } else {
    return "" + value;
  }
}

function isExplicable(value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) {
    return value.toLowerCase() === elem;
  });
}

function isBoolean() {
  var args = [],
      len = arguments.length;

  while (len--) args[len] = arguments[len];

  return args.some(function (elem) {
    return elem.toLowerCase() === 'boolean';
  });
}
/*  */


function handleError(err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();

  try {
    if (vm) {
      var cur = vm;

      while (cur = cur.$parent) {
        var hooks = cur.$options.errorCaptured;

        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;

              if (capture) {
                return;
              }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }

    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling(handler, context, args, vm, info) {
  var res;

  try {
    res = args ? handler.apply(context, args) : handler.call(context);

    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) {
        return handleError(e, vm, info + " (Promise/async)");
      }); // issue #9511
      // avoid catch triggering multiple times when nested calls

      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }

  return res;
}

function globalHandleError(err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info);
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }

  logError(err, vm, info);
}

function logError(err, vm, info) {
  if ("development" !== 'production') {
    warn("Error in " + info + ": \"" + err.toString() + "\"", vm);
  }
  /* istanbul ignore else */


  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err;
  }
}
/*  */


var isUsingMicroTask = false;
var callbacks = [];
var pending = false;

function flushCallbacks() {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;

  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
} // Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).


var timerFunc; // The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:

/* istanbul ignore next, $flow-disable-line */

if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();

  timerFunc = function () {
    p.then(flushCallbacks); // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.

    if (isIOS) {
      setTimeout(noop);
    }
  };

  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) || // PhantomJS and iOS 7.x
MutationObserver.toString() === '[object MutationObserverConstructor]')) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });

  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };

  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Techinically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick(cb, ctx) {
  var _resolve;

  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });

  if (!pending) {
    pending = true;
    timerFunc();
  } // $flow-disable-line


  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    });
  }
}
/*  */


var mark;
var measure;

if ("development" !== 'production') {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */

  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
    mark = function (tag) {
      return perf.mark(tag);
    };

    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag); // perf.clearMeasures(name)
    };
  }
}
/* not type checking this file because flow doesn't play well with Proxy */


var initProxy;

if ("development" !== 'production') {
  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn("Property or method \"" + key + "\" is not defined on the instance but " + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);
  };

  var warnReservedPrefix = function (target, key) {
    warn("Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " + 'properties starting with "$" or "_" are not proxied in the Vue instance to ' + 'prevent conflicts with Vue internals' + 'See: https://vuejs.org/v2/api/#data', target);
  };

  var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set(target, key, value) {
        if (isBuiltInModifier(key)) {
          warn("Avoid overwriting built-in modifier in config.keyCodes: ." + key);
          return false;
        } else {
          target[key] = value;
          return true;
        }
      }
    });
  }

  var hasHandler = {
    has: function has(target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) || typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data);

      if (!has && !isAllowed) {
        if (key in target.$data) {
          warnReservedPrefix(target, key);
        } else {
          warnNonPresent(target, key);
        }
      }

      return has || !isAllowed;
    }
  };
  var getHandler = {
    get: function get(target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) {
          warnReservedPrefix(target, key);
        } else {
          warnNonPresent(target, key);
        }
      }

      return target[key];
    }
  };

  initProxy = function initProxy(vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}
/*  */


var seenObjects = new _Set();
/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */

function traverse(val) {
  _traverse(val, seenObjects);

  seenObjects.clear();
}

function _traverse(val, seen) {
  var i, keys;
  var isA = Array.isArray(val);

  if (!isA && !isObject(val) || Object.isFrozen(val) || val instanceof VNode) {
    return;
  }

  if (val.__ob__) {
    var depId = val.__ob__.dep.id;

    if (seen.has(depId)) {
      return;
    }

    seen.add(depId);
  }

  if (isA) {
    i = val.length;

    while (i--) {
      _traverse(val[i], seen);
    }
  } else {
    keys = Object.keys(val);
    i = keys.length;

    while (i--) {
      _traverse(val[keys[i]], seen);
    }
  }
}
/*  */


var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first

  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  };
});

function createFnInvoker(fns, vm) {
  function invoker() {
    var arguments$1 = arguments;
    var fns = invoker.fns;

    if (Array.isArray(fns)) {
      var cloned = fns.slice();

      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler");
    }
  }

  invoker.fns = fns;
  return invoker;
}

function updateListeners(on, oldOn, add, remove$$1, createOnceHandler, vm) {
  var name, def$$1, cur, old, event;

  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);

    if (isUndef(cur)) {
      "development" !== 'production' && warn("Invalid handler for event \"" + event.name + "\": got " + String(cur), vm);
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }

      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }

      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }

  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}
/*  */


function mergeVNodeHook(def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }

  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook() {
    hook.apply(this, arguments); // important: remove merged hook to ensure it's called only once
    // and prevent memory leak

    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}
/*  */


function extractPropsFromVNodeData(data, Ctor, tag) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;

  if (isUndef(propOptions)) {
    return;
  }

  var res = {};
  var attrs = data.attrs;
  var props = data.props;

  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);

      if ("development" !== 'production') {
        var keyInLowerCase = key.toLowerCase();

        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
          tip("Prop \"" + keyInLowerCase + "\" is passed to component " + formatComponentName(tag || Ctor) + ", but the declared prop name is" + " \"" + key + "\". " + "Note that HTML attributes are case-insensitive and camelCased " + "props need to use their kebab-case equivalents when using in-DOM " + "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\".");
        }
      }

      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
    }
  }

  return res;
}

function checkProp(res, hash, key, altKey, preserve) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];

      if (!preserve) {
        delete hash[key];
      }

      return true;
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];

      if (!preserve) {
        delete hash[altKey];
      }

      return true;
    }
  }

  return false;
}
/*  */
// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:
// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.


function simpleNormalizeChildren(children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children);
    }
  }

  return children;
} // 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.


function normalizeChildren(children) {
  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
}

function isTextNode(node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment);
}

function normalizeArrayChildren(children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;

  for (i = 0; i < children.length; i++) {
    c = children[i];

    if (isUndef(c) || typeof c === 'boolean') {
      continue;
    }

    lastIndex = res.length - 1;
    last = res[lastIndex]; //  nested

    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, (nestedIndex || '') + "_" + i); // merge adjacent text nodes

        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + c[0].text);
          c.shift();
        }

        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }

        res.push(c);
      }
    }
  }

  return res;
}
/*  */


function initProvide(vm) {
  var provide = vm.$options.provide;

  if (provide) {
    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
  }
}

function initInjections(vm) {
  var result = resolveInject(vm.$options.inject, vm);

  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if ("development" !== 'production') {
        defineReactive$$1(vm, key, result[key], function () {
          warn("Avoid mutating an injected value directly since the changes will be " + "overwritten whenever the provided component re-renders. " + "injection being mutated: \"" + key + "\"", vm);
        });
      } else {
        defineReactive$$1(vm, key, result[key]);
      }
    });
    toggleObserving(true);
  }
}

function resolveInject(inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i]; // #6574 in case the inject object is observed...

      if (key === '__ob__') {
        continue;
      }

      var provideKey = inject[key].from;
      var source = vm;

      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break;
        }

        source = source.$parent;
      }

      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;
        } else if ("development" !== 'production') {
          warn("Injection \"" + key + "\" not found", vm);
        }
      }
    }

    return result;
  }
}
/*  */

/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */


function resolveSlots(children, context) {
  if (!children || !children.length) {
    return {};
  }

  var slots = {};

  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data; // remove slot attribute if the node is resolved as a Vue slot node

    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    } // named slots should only be respected if the vnode was rendered in the
    // same context.


    if ((child.context === context || child.fnContext === context) && data && data.slot != null) {
      var name = data.slot;
      var slot = slots[name] || (slots[name] = []);

      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  } // ignore slots that contains only whitespace


  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }

  return slots;
}

function isWhitespace(node) {
  return node.isComment && !node.asyncFactory || node.text === ' ';
}
/*  */


function normalizeScopedSlots(slots, normalSlots, prevSlots) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;

  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized;
  } else if (isStable && prevSlots && prevSlots !== emptyObject && key === prevSlots.$key && !hasNormalSlots && !prevSlots.$hasNormal) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots;
  } else {
    res = {};

    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  } // expose normal slots on scopedSlots


  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  } // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error


  if (slots && Object.isExtensible(slots)) {
    slots._normalized = res;
  }

  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res;
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res) ? [res] // single vnode
    : normalizeChildren(res);
    return res && (res.length === 0 || res.length === 1 && res[0].isComment // #9658
    ) ? undefined : res;
  }; // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.


  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }

  return normalized;
}

function proxyNormalSlot(slots, key) {
  return function () {
    return slots[key];
  };
}
/*  */

/**
 * Runtime helper for rendering v-for lists.
 */


function renderList(val, render) {
  var ret, i, l, keys, key;

  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);

    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);

    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();

      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);

      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }

  if (!isDef(ret)) {
    ret = [];
  }

  ret._isVList = true;
  return ret;
}
/*  */

/**
 * Runtime helper for rendering <slot>
 */


function renderSlot(name, fallback, props, bindObject) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;

  if (scopedSlotFn) {
    // scoped slot
    props = props || {};

    if (bindObject) {
      if ("development" !== 'production' && !isObject(bindObject)) {
        warn('slot v-bind without argument expects an Object', this);
      }

      props = extend(extend({}, bindObject), props);
    }

    nodes = scopedSlotFn(props) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;

  if (target) {
    return this.$createElement('template', {
      slot: target
    }, nodes);
  } else {
    return nodes;
  }
}
/*  */

/**
 * Runtime helper for resolving filters
 */


function resolveFilter(id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity;
}
/*  */


function isKeyNotMatch(expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1;
  } else {
    return expect !== actual;
  }
}
/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */


function checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;

  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName);
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode);
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key;
  }
}
/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */


function bindObjectProps(data, tag, value, asProp, isSync) {
  if (value) {
    if (!isObject(value)) {
      "development" !== 'production' && warn('v-bind without argument expects an Object or Array value', this);
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }

      var hash;

      var loop = function (key) {
        if (key === 'class' || key === 'style' || isReservedAttribute(key)) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
        }

        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);

        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});

            on["update:" + key] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop(key);
    }
  }

  return data;
}
/*  */

/**
 * Runtime helper for rendering static trees.
 */


function renderStatic(index, isInFor) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index]; // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.

  if (tree && !isInFor) {
    return tree;
  } // otherwise, render a fresh tree.


  tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, null, this // for render fns generated for functional component templates
  );
  markStatic(tree, "__static__" + index, false);
  return tree;
}
/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */


function markOnce(tree, index, key) {
  markStatic(tree, "__once__" + index + (key ? "_" + key : ""), true);
  return tree;
}

function markStatic(tree, key, isOnce) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], key + "_" + i, isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode(node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}
/*  */


function bindObjectListeners(data, value) {
  if (value) {
    if (!isPlainObject(value)) {
      "development" !== 'production' && warn('v-on without argument expects an Object value', this);
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};

      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }

  return data;
}
/*  */


function resolveScopedSlots(fns, // see flow/vnode
res, // the following are added in 2.6
hasDynamicKeys, contentHashKey) {
  res = res || {
    $stable: !hasDynamicKeys
  };

  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];

    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }

      res[slot.key] = slot.fn;
    }
  }

  if (contentHashKey) {
    res.$key = contentHashKey;
  }

  return res;
}
/*  */


function bindDynamicKeys(baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];

    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ("development" !== 'production' && key !== '' && key !== null) {
      // null is a speical value for explicitly removing a binding
      warn("Invalid value for dynamic directive argument (expected string or null): " + key, this);
    }
  }

  return baseObj;
} // helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.


function prependModifier(value, symbol) {
  return typeof value === 'string' ? symbol + value : value;
}
/*  */


function installRenderHelpers(target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}
/*  */


function FunctionalRenderContext(data, props, children, parent, Ctor) {
  var this$1 = this;
  var options = Ctor.options; // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check

  var contextVm;

  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent); // $flow-disable-line

    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent; // $flow-disable-line

    parent = parent._original;
  }

  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;
  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);

  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(data.scopedSlots, this$1.$slots = resolveSlots(children, parent));
    }

    return this$1.$slots;
  };

  Object.defineProperty(this, 'scopedSlots', {
    enumerable: true,
    get: function get() {
      return normalizeScopedSlots(data.scopedSlots, this.slots());
    }
  }); // support for compiled functional template

  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options; // pre-resolve slots for renderSlot()

    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);

      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }

      return vnode;
    };
  } else {
    this._c = function (a, b, c, d) {
      return createElement(contextVm, a, b, c, d, needNormalization);
    };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent(Ctor, propsData, data, contextVm, children) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;

  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) {
      mergeProps(props, data.attrs);
    }

    if (isDef(data.props)) {
      mergeProps(props, data.props);
    }
  }

  var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);
  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext);
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);

    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }

    return res;
  }
}

function cloneAndMarkFunctionalResult(vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;

  if ("development" !== 'production') {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }

  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }

  return clone;
}

function mergeProps(to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}
/*  */

/*  */

/*  */

/*  */
// inline hooks to be invoked on component VNodes during patch


var componentVNodeHooks = {
  init: function init(vnode, hydrating) {
    if (vnode.componentInstance && !vnode.componentInstance._isDestroyed && vnode.data.keepAlive) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow

      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance);
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },
  prepatch: function prepatch(oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(child, options.propsData, // updated props
    options.listeners, // updated listeners
    vnode, // new parent vnode
    options.children // new children
    );
  },
  insert: function insert(vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;

    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }

    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true
        /* direct */
        );
      }
    }
  },
  destroy: function destroy(vnode) {
    var componentInstance = vnode.componentInstance;

    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true
        /* direct */
        );
      }
    }
  }
};
var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent(Ctor, data, context, children, tag) {
  if (isUndef(Ctor)) {
    return;
  }

  var baseCtor = context.$options._base; // plain options object: turn it into a constructor

  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  } // if at this stage it's not a constructor or an async component factory,
  // reject.


  if (typeof Ctor !== 'function') {
    if ("development" !== 'production') {
      warn("Invalid Component definition: " + String(Ctor), context);
    }

    return;
  } // async component


  var asyncFactory;

  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);

    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(asyncFactory, data, context, children, tag);
    }
  }

  data = data || {}; // resolve constructor options in case global mixins are applied after
  // component constructor creation

  resolveConstructorOptions(Ctor); // transform component v-model data into props & events

  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  } // extract props


  var propsData = extractPropsFromVNodeData(data, Ctor, tag); // functional component

  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children);
  } // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners


  var listeners = data.on; // replace with listeners with .native modifier
  // so it gets processed during parent component patch.

  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot
    // work around flow
    var slot = data.slot;
    data = {};

    if (slot) {
      data.slot = slot;
    }
  } // install component management hooks onto the placeholder node


  installComponentHooks(data); // return a placeholder vnode

  var name = Ctor.options.name || tag;
  var vnode = new VNode("vue-component-" + Ctor.cid + (name ? "-" + name : ''), data, undefined, undefined, undefined, context, {
    Ctor: Ctor,
    propsData: propsData,
    listeners: listeners,
    tag: tag,
    children: children
  }, asyncFactory);
  return vnode;
}

function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  }; // check inline-template render functions

  var inlineTemplate = vnode.data.inlineTemplate;

  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }

  return new vnode.componentOptions.Ctor(options);
}

function installComponentHooks(data) {
  var hooks = data.hook || (data.hook = {});

  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];

    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1(f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };

  merged._merged = true;
  return merged;
} // transform component v-model info (value and callback) into
// prop and event handler respectively.


function transformModel(options, data) {
  var prop = options.model && options.model.prop || 'value';
  var event = options.model && options.model.event || 'input';
  (data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;

  if (isDef(existing)) {
    if (Array.isArray(existing) ? existing.indexOf(callback) === -1 : existing !== callback) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}
/*  */


var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2; // wrapper function for providing a more flexible interface
// without getting yelled at by flow

function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }

  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }

  return _createElement(context, tag, data, children, normalizationType);
}

function _createElement(context, tag, data, children, normalizationType) {
  if (isDef(data) && isDef(data.__ob__)) {
    "development" !== 'production' && warn("Avoid using observed data object as vnode data: " + JSON.stringify(data) + "\n" + 'Always create fresh vnode data objects in each render!', context);
    return createEmptyVNode();
  } // object syntax in v-bind


  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }

  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode();
  } // warn against non-primitive key


  if ("development" !== 'production' && isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {
    {
      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);
    }
  } // support single function children as default scoped slot


  if (Array.isArray(children) && typeof children[0] === 'function') {
    data = data || {};
    data.scopedSlots = {
      default: children[0]
    };
    children.length = 0;
  }

  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }

  var vnode, ns;

  if (typeof tag === 'string') {
    var Ctor;
    ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);

    if (config.isReservedTag(tag)) {
      // platform built-in elements
      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(tag, data, children, undefined, undefined, context);
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }

  if (Array.isArray(vnode)) {
    return vnode;
  } else if (isDef(vnode)) {
    if (isDef(ns)) {
      applyNS(vnode, ns);
    }

    if (isDef(data)) {
      registerDeepBindings(data);
    }

    return vnode;
  } else {
    return createEmptyVNode();
  }
}

function applyNS(vnode, ns, force) {
  vnode.ns = ns;

  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }

  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];

      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force) && child.tag !== 'svg')) {
        applyNS(child, ns, force);
      }
    }
  }
} // ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes


function registerDeepBindings(data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }

  if (isObject(data.class)) {
    traverse(data.class);
  }
}
/*  */


function initRender(vm) {
  vm._vnode = null; // the root of the child tree

  vm._staticTrees = null; // v-once cached trees

  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree

  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject; // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates

  vm._c = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, false);
  }; // normalization is always applied for the public version, used in
  // user-written render functions.


  vm.$createElement = function (a, b, c, d) {
    return createElement(vm, a, b, c, d, true);
  }; // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated


  var parentData = parentVnode && parentVnode.data;
  /* istanbul ignore else */

  if ("development" !== 'production') {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);
  }
}

var currentRenderingInstance = null;

function renderMixin(Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this);
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(_parentVnode.data.scopedSlots, vm.$slots, vm.$scopedSlots);
    } // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.


    vm.$vnode = _parentVnode; // render self

    var vnode;

    try {
      // There's no need to maintain a stack becaues all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render"); // return error render result,
      // or previous vnode to prevent render error causing blank component

      /* istanbul ignore else */

      if ("development" !== 'production' && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    } // if the returned array contains only a single node, allow it


    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    } // return empty vnode in case the render function errored out


    if (!(vnode instanceof VNode)) {
      if ("development" !== 'production' && Array.isArray(vnode)) {
        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
      }

      vnode = createEmptyVNode();
    } // set parent


    vnode.parent = _parentVnode;
    return vnode;
  };
}
/*  */


function ensureCtor(comp, base) {
  if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {
    comp = comp.default;
  }

  return isObject(comp) ? base.extend(comp) : comp;
}

function createAsyncPlaceholder(factory, data, context, children, tag) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = {
    data: data,
    context: context,
    children: children,
    tag: tag
  };
  return node;
}

function resolveAsyncComponent(factory, baseCtor) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp;
  }

  if (isDef(factory.resolved)) {
    return factory.resolved;
  }

  var owner = currentRenderingInstance;

  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp;
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null;
    owner.$on('hook:destroyed', function () {
      return remove(owners, owner);
    });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        owners[i].$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;

        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }

        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor); // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)

      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });
    var reject = once(function (reason) {
      "development" !== 'production' && warn("Failed to resolve async component: " + String(factory) + (reason ? "\nReason: " + reason : ''));

      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });
    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);

          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;

              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;

            if (isUndef(factory.resolved)) {
              reject("development" !== 'production' ? "timeout (" + res.timeout + "ms)" : null);
            }
          }, res.timeout);
        }
      }
    }

    sync = false; // return in case resolved synchronously

    return factory.loading ? factory.loadingComp : factory.resolved;
  }
}
/*  */


function isAsyncPlaceholder(node) {
  return node.isComment && node.asyncFactory;
}
/*  */


function getFirstComponentChild(children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];

      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c;
      }
    }
  }
}
/*  */

/*  */


function initEvents(vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false; // init parent attached events

  var listeners = vm.$options._parentListeners;

  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add(event, fn) {
  target.$on(event, fn);
}

function remove$1(event, fn) {
  target.$off(event, fn);
}

function createOnceHandler(event, fn) {
  var _target = target;
  return function onceHandler() {
    var res = fn.apply(null, arguments);

    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  };
}

function updateComponentListeners(vm, listeners, oldListeners) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin(Vue) {
  var hookRE = /^hook:/;

  Vue.prototype.$on = function (event, fn) {
    var vm = this;

    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn); // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup

      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }

    return vm;
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;

    function on() {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }

    on.fn = fn;
    vm.$on(event, on);
    return vm;
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this; // all

    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm;
    } // array of events


    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }

      return vm;
    } // specific event


    var cbs = vm._events[event];

    if (!cbs) {
      return vm;
    }

    if (!fn) {
      vm._events[event] = null;
      return vm;
    } // specific handler


    var cb;
    var i = cbs.length;

    while (i--) {
      cb = cbs[i];

      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break;
      }
    }

    return vm;
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;

    if ("development" !== 'production') {
      var lowerCaseEvent = event.toLowerCase();

      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip("Event \"" + lowerCaseEvent + "\" is emitted in component " + formatComponentName(vm) + " but the handler is registered for \"" + event + "\". " + "Note that HTML attributes are case-insensitive and you cannot use " + "v-on to listen to camelCase events when using in-DOM templates. " + "You should probably use \"" + hyphenate(event) + "\" instead of \"" + event + "\".");
      }
    }

    var cbs = vm._events[event];

    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";

      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }

    return vm;
  };
}
/*  */


var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  };
}

function initLifecycle(vm) {
  var options = vm.$options; // locate first non-abstract parent

  var parent = options.parent;

  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }

    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;
  vm.$children = [];
  vm.$refs = {};
  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin(Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode; // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.

    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false
      /* removeOnly */
      );
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }

    restoreActiveInstance(); // update __vue__ reference

    if (prevEl) {
      prevEl.__vue__ = null;
    }

    if (vm.$el) {
      vm.$el.__vue__ = vm;
    } // if parent is an HOC, update its $el as well


    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    } // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.

  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;

    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;

    if (vm._isBeingDestroyed) {
      return;
    }

    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true; // remove self from parent

    var parent = vm.$parent;

    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    } // teardown watchers


    if (vm._watcher) {
      vm._watcher.teardown();
    }

    var i = vm._watchers.length;

    while (i--) {
      vm._watchers[i].teardown();
    } // remove reference from data ob
    // frozen object may not have observer.


    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    } // call the last hook...


    vm._isDestroyed = true; // invoke destroy hooks on current rendered tree

    vm.__patch__(vm._vnode, null); // fire destroyed hook


    callHook(vm, 'destroyed'); // turn off all instance listeners.

    vm.$off(); // remove __vue__ reference

    if (vm.$el) {
      vm.$el.__vue__ = null;
    } // release circular reference (#6759)


    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent(vm, el, hydrating) {
  vm.$el = el;

  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;

    if ("development" !== 'production') {
      /* istanbul ignore if */
      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
      } else {
        warn('Failed to mount component: template or render function not defined.', vm);
      }
    }
  }

  callHook(vm, 'beforeMount');
  var updateComponent;
  /* istanbul ignore if */

  if ("development" !== 'production' && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;
      mark(startTag);

      var vnode = vm._render();

      mark(endTag);
      measure("vue " + name + " render", startTag, endTag);
      mark(startTag);

      vm._update(vnode, hydrating);

      mark(endTag);
      measure("vue " + name + " patch", startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  } // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined


  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true
  /* isRenderWatcher */
  );
  hydrating = false; // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook

  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }

  return vm;
}

function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
  if ("development" !== 'production') {
    isUpdatingChildComponent = true;
  } // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.
  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.


  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(newScopedSlots && !newScopedSlots.$stable || oldScopedSlots !== emptyObject && !oldScopedSlots.$stable || newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key); // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.

  var needsForceUpdate = !!(renderChildren || // has new static slots
  vm.$options._renderChildren || // has old static slots
  hasDynamicScopedSlot);
  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) {
    // update child tree's parent
    vm._vnode.parent = parentVnode;
  }

  vm.$options._renderChildren = renderChildren; // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render

  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject; // update props

  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];

    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?

      props[key] = validateProp(key, propOptions, propsData, vm);
    }

    toggleObserving(true); // keep a copy of raw propsData

    vm.$options.propsData = propsData;
  } // update listeners


  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners); // resolve slots + force update if has children

  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if ("development" !== 'production') {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree(vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) {
      return true;
    }
  }

  return false;
}

function activateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = false;

    if (isInInactiveTree(vm)) {
      return;
    }
  } else if (vm._directInactive) {
    return;
  }

  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;

    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }

    callHook(vm, 'activated');
  }
}

function deactivateChildComponent(vm, direct) {
  if (direct) {
    vm._directInactive = true;

    if (isInInactiveTree(vm)) {
      return;
    }
  }

  if (!vm._inactive) {
    vm._inactive = true;

    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }

    callHook(vm, 'deactivated');
  }
}

function callHook(vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";

  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }

  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }

  popTarget();
}
/*  */


var MAX_UPDATE_COUNT = 100;
var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;
/**
 * Reset the scheduler's state.
 */

function resetSchedulerState() {
  index = queue.length = activatedChildren.length = 0;
  has = {};

  if ("development" !== 'production') {
    circular = {};
  }

  waiting = flushing = false;
} // Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.


var currentFlushTimestamp = 0; // Async edge case fix requires storing an event listener's attach timestamp.

var getNow = Date.now; // Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)

if (inBrowser && !isIE) {
  var performance = window.performance;

  if (performance && typeof performance.now === 'function' && getNow() > document.createEvent('Event').timeStamp) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () {
      return performance.now();
    };
  }
}
/**
 * Flush both queues and run the watchers.
 */


function flushSchedulerQueue() {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id; // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.

  queue.sort(function (a, b) {
    return a.id - b.id;
  }); // do not cache length because more watchers might be pushed
  // as we run existing watchers

  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];

    if (watcher.before) {
      watcher.before();
    }

    id = watcher.id;
    has[id] = null;
    watcher.run(); // in dev build, check and stop circular updates.

    if ("development" !== 'production' && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;

      if (circular[id] > MAX_UPDATE_COUNT) {
        warn('You may have an infinite update loop ' + (watcher.user ? "in watcher with expression \"" + watcher.expression + "\"" : "in a component render function."), watcher.vm);
        break;
      }
    }
  } // keep copies of post queues before resetting state


  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();
  resetSchedulerState(); // call component updated and activated hooks

  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue); // devtool hook

  /* istanbul ignore if */

  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks(queue) {
  var i = queue.length;

  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;

    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}
/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */


function queueActivatedComponent(vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks(queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true
    /* true */
    );
  }
}
/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */


function queueWatcher(watcher) {
  var id = watcher.id;

  if (has[id] == null) {
    has[id] = true;

    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;

      while (i > index && queue[i].id > watcher.id) {
        i--;
      }

      queue.splice(i + 1, 0, watcher);
    } // queue the flush


    if (!waiting) {
      waiting = true;

      if ("development" !== 'production' && !config.async) {
        flushSchedulerQueue();
        return;
      }

      nextTick(flushSchedulerQueue);
    }
  }
}
/*  */


var uid$2 = 0;
/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */

var Watcher = function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {
  this.vm = vm;

  if (isRenderWatcher) {
    vm._watcher = this;
  }

  vm._watchers.push(this); // options


  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }

  this.cb = cb;
  this.id = ++uid$2; // uid for batching

  this.active = true;
  this.dirty = this.lazy; // for lazy watchers

  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression = "development" !== 'production' ? expOrFn.toString() : ''; // parse expression for getter

  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);

    if (!this.getter) {
      this.getter = noop;
      "development" !== 'production' && warn("Failed watching path: \"" + expOrFn + "\" " + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
    }
  }

  this.value = this.lazy ? undefined : this.get();
};
/**
 * Evaluate the getter, and re-collect dependencies.
 */


Watcher.prototype.get = function get() {
  pushTarget(this);
  var value;
  var vm = this.vm;

  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, "getter for watcher \"" + this.expression + "\"");
    } else {
      throw e;
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }

    popTarget();
    this.cleanupDeps();
  }

  return value;
};
/**
 * Add a dependency to this directive.
 */


Watcher.prototype.addDep = function addDep(dep) {
  var id = dep.id;

  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);

    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};
/**
 * Clean up for dependency collection.
 */


Watcher.prototype.cleanupDeps = function cleanupDeps() {
  var i = this.deps.length;

  while (i--) {
    var dep = this.deps[i];

    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }

  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};
/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */


Watcher.prototype.update = function update() {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};
/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */


Watcher.prototype.run = function run() {
  if (this.active) {
    var value = this.get();

    if (value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even
    // when the value is the same, because the value may
    // have mutated.
    isObject(value) || this.deep) {
      // set new value
      var oldValue = this.value;
      this.value = value;

      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, "callback for watcher \"" + this.expression + "\"");
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};
/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */


Watcher.prototype.evaluate = function evaluate() {
  this.value = this.get();
  this.dirty = false;
};
/**
 * Depend on all deps collected by this watcher.
 */


Watcher.prototype.depend = function depend() {
  var i = this.deps.length;

  while (i--) {
    this.deps[i].depend();
  }
};
/**
 * Remove self from all dependencies' subscriber list.
 */


Watcher.prototype.teardown = function teardown() {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }

    var i = this.deps.length;

    while (i--) {
      this.deps[i].removeSub(this);
    }

    this.active = false;
  }
};
/*  */


var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };

  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState(vm) {
  vm._watchers = [];
  var opts = vm.$options;

  if (opts.props) {
    initProps(vm, opts.props);
  }

  if (opts.methods) {
    initMethods(vm, opts.methods);
  }

  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true
    /* asRootData */
    );
  }

  if (opts.computed) {
    initComputed(vm, opts.computed);
  }

  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps(vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {}; // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.

  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent; // root instance props should be converted

  if (!isRoot) {
    toggleObserving(false);
  }

  var loop = function (key) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */

    if ("development" !== 'production') {
      var hyphenatedKey = hyphenate(key);

      if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {
        warn("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop.", vm);
      }

      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          warn("Avoid mutating a prop directly since the value will be " + "overwritten whenever the parent component re-renders. " + "Instead, use a data or computed property based on the prop's " + "value. Prop being mutated: \"" + key + "\"", vm);
        }
      });
    } else {
      defineReactive$$1(props, key, value);
    } // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.


    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop(key);

  toggleObserving(true);
}

function initData(vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};

  if (!isPlainObject(data)) {
    data = {};
    "development" !== 'production' && warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
  } // proxy data on instance


  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;

  while (i--) {
    var key = keys[i];

    if ("development" !== 'production') {
      if (methods && hasOwn(methods, key)) {
        warn("Method \"" + key + "\" has already been defined as a data property.", vm);
      }
    }

    if (props && hasOwn(props, key)) {
      "development" !== 'production' && warn("The data property \"" + key + "\" is already declared as a prop. " + "Use prop default value instead.", vm);
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  } // observe data


  observe(data, true
  /* asRootData */
  );
}

function getData(data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();

  try {
    return data.call(vm, vm);
  } catch (e) {
    handleError(e, vm, "data()");
    return {};
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = {
  lazy: true
};

function initComputed(vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null); // computed properties are just getters during SSR

  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;

    if ("development" !== 'production' && getter == null) {
      warn("Getter is missing for computed property \"" + key + "\".", vm);
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);
    } // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.


    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if ("development" !== 'production') {
      if (key in vm.$data) {
        warn("The computed property \"" + key + "\" is already defined in data.", vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn("The computed property \"" + key + "\" is already defined as a prop.", vm);
      }
    }
  }
}

function defineComputed(target, key, userDef) {
  var shouldCache = !isServerRendering();

  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : createGetterInvoker(userDef.get) : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }

  if ("development" !== 'production' && sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn("Computed property \"" + key + "\" was assigned to but it has no setter.", this);
    };
  }

  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter(key) {
  return function computedGetter() {
    var watcher = this._computedWatchers && this._computedWatchers[key];

    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }

      if (Dep.target) {
        watcher.depend();
      }

      return watcher.value;
    }
  };
}

function createGetterInvoker(fn) {
  return function computedGetter() {
    return fn.call(this, this);
  };
}

function initMethods(vm, methods) {
  var props = vm.$options.props;

  for (var key in methods) {
    if ("development" !== 'production') {
      if (typeof methods[key] !== 'function') {
        warn("Method \"" + key + "\" has type \"" + typeof methods[key] + "\" in the component definition. " + "Did you reference the function correctly?", vm);
      }

      if (props && hasOwn(props, key)) {
        warn("Method \"" + key + "\" has already been defined as a prop.", vm);
      }

      if (key in vm && isReserved(key)) {
        warn("Method \"" + key + "\" conflicts with an existing Vue instance method. " + "Avoid defining component methods that start with _ or $.");
      }
    }

    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch(vm, watch) {
  for (var key in watch) {
    var handler = watch[key];

    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher(vm, expOrFn, handler, options) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }

  if (typeof handler === 'string') {
    handler = vm[handler];
  }

  return vm.$watch(expOrFn, handler, options);
}

function stateMixin(Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};

  dataDef.get = function () {
    return this._data;
  };

  var propsDef = {};

  propsDef.get = function () {
    return this._props;
  };

  if ("development" !== 'production') {
    dataDef.set = function () {
      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
    };

    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }

  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);
  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (expOrFn, cb, options) {
    var vm = this;

    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options);
    }

    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);

    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, "callback for immediate watcher \"" + watcher.expression + "\"");
      }
    }

    return function unwatchFn() {
      watcher.teardown();
    };
  };
}
/*  */


var uid$3 = 0;

function initMixin(Vue) {
  Vue.prototype._init = function (options) {
    var vm = this; // a uid

    vm._uid = uid$3++;
    var startTag, endTag;
    /* istanbul ignore if */

    if ("development" !== 'production' && config.performance && mark) {
      startTag = "vue-perf-start:" + vm._uid;
      endTag = "vue-perf-end:" + vm._uid;
      mark(startTag);
    } // a flag to avoid this being observed


    vm._isVue = true; // merge options

    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
    }
    /* istanbul ignore else */


    if ("development" !== 'production') {
      initProxy(vm);
    } else {
      vm._renderProxy = vm;
    } // expose real self


    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props

    initState(vm);
    initProvide(vm); // resolve provide after data/props

    callHook(vm, 'created');
    /* istanbul ignore if */

    if ("development" !== 'production' && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure("vue " + vm._name + " init", startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent(vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options); // doing this because it's faster than dynamic enumeration.

  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;
  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions(Ctor) {
  var options = Ctor.options;

  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;

    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions; // check if there are any late-modified/attached options (#4976)

      var modifiedOptions = resolveModifiedOptions(Ctor); // update base extend options

      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }

      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);

      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }

  return options;
}

function resolveModifiedOptions(Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;

  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) {
        modified = {};
      }

      modified[key] = latest[key];
    }
  }

  return modified;
}

function Vue(options) {
  if ("development" !== 'production' && !(this instanceof Vue)) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }

  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);
/*  */

function initUse(Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = this._installedPlugins || (this._installedPlugins = []);

    if (installedPlugins.indexOf(plugin) > -1) {
      return this;
    } // additional parameters


    var args = toArray(arguments, 1);
    args.unshift(this);

    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }

    installedPlugins.push(plugin);
    return this;
  };
}
/*  */


function initMixin$1(Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this;
  };
}
/*  */


function initExtend(Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;
  /**
   * Class inheritance
   */

  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});

    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId];
    }

    var name = extendOptions.name || Super.options.name;

    if ("development" !== 'production' && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent(options) {
      this._init(options);
    };

    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(Super.options, extendOptions);
    Sub['super'] = Super; // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.

    if (Sub.options.props) {
      initProps$1(Sub);
    }

    if (Sub.options.computed) {
      initComputed$1(Sub);
    } // allow further extension/mixin/plugin usage


    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use; // create asset registers, so extended classes
    // can have their private assets too.

    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    }); // enable recursive self-lookup

    if (name) {
      Sub.options.components[name] = Sub;
    } // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.


    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options); // cache constructor

    cachedCtors[SuperId] = Sub;
    return Sub;
  };
}

function initProps$1(Comp) {
  var props = Comp.options.props;

  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1(Comp) {
  var computed = Comp.options.computed;

  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}
/*  */


function initAssetRegisters(Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (id, definition) {
      if (!definition) {
        return this.options[type + 's'][id];
      } else {
        /* istanbul ignore if */
        if ("development" !== 'production' && type === 'component') {
          validateComponentName(id);
        }

        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }

        if (type === 'directive' && typeof definition === 'function') {
          definition = {
            bind: definition,
            update: definition
          };
        }

        this.options[type + 's'][id] = definition;
        return definition;
      }
    };
  });
}
/*  */


function getComponentName(opts) {
  return opts && (opts.Ctor.options.name || opts.tag);
}

function matches(pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1;
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1;
  } else if (isRegExp(pattern)) {
    return pattern.test(name);
  }
  /* istanbul ignore next */


  return false;
}

function pruneCache(keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;

  for (var key in cache) {
    var cachedNode = cache[key];

    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);

      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry(cache, key, keys, current) {
  var cached$$1 = cache[key];

  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }

  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];
var KeepAlive = {
  name: 'keep-alive',
  abstract: true,
  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },
  created: function created() {
    this.cache = Object.create(null);
    this.keys = [];
  },
  destroyed: function destroyed() {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },
  mounted: function mounted() {
    var this$1 = this;
    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) {
        return matches(val, name);
      });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) {
        return !matches(val, name);
      });
    });
  },
  render: function render() {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;

    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;

      if ( // not included
      include && (!name || !matches(include, name)) || // excluded
      exclude && name && matches(exclude, name)) {
        return vnode;
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null // same constructor may get registered as different local components
      // so cid alone is not enough (#3269)
      ? componentOptions.Ctor.cid + (componentOptions.tag ? "::" + componentOptions.tag : '') : vnode.key;

      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance; // make current key freshest

        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key); // prune oldest entry

        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }

    return vnode || slot && slot[0];
  }
};
var builtInComponents = {
  KeepAlive: KeepAlive
};
/*  */

function initGlobalAPI(Vue) {
  // config
  var configDef = {};

  configDef.get = function () {
    return config;
  };

  if ("development" !== 'production') {
    configDef.set = function () {
      warn('Do not replace the Vue.config object, set individual fields instead.');
    };
  }

  Object.defineProperty(Vue, 'config', configDef); // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.

  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };
  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick; // 2.6 explicit observable API

  Vue.observable = function (obj) {
    observe(obj);
    return obj;
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  }); // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.

  Vue.options._base = Vue;
  extend(Vue.options.components, builtInComponents);
  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);
Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});
Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get() {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext;
  }
}); // expose FunctionalRenderContext for ssr runtime helper installation

Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});
Vue.version = '2.6.10';
/*  */
// these are reserved for web because they are directly compiled away
// during template compilation

var isReservedAttr = makeMap('style,class'); // attributes that should be using props for binding

var acceptValue = makeMap('input,textarea,option,select,progress');

var mustUseProp = function (tag, type, attr) {
  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');
var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false' ? 'false' // allow arbitrary string value for contenteditable
  : key === 'contenteditable' && isValidContentEditableValue(value) ? value : 'true';
};

var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');
var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : '';
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false;
};
/*  */


function genClassForVnode(vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;

  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;

    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }

  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }

  return renderClass(data.staticClass, data.class);
}

function mergeClassData(child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class) ? [child.class, parent.class] : parent.class
  };
}

function renderClass(staticClass, dynamicClass) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass));
  }
  /* istanbul ignore next */


  return '';
}

function concat(a, b) {
  return a ? b ? a + ' ' + b : a : b || '';
}

function stringifyClass(value) {
  if (Array.isArray(value)) {
    return stringifyArray(value);
  }

  if (isObject(value)) {
    return stringifyObject(value);
  }

  if (typeof value === 'string') {
    return value;
  }
  /* istanbul ignore next */


  return '';
}

function stringifyArray(value) {
  var res = '';
  var stringified;

  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) {
        res += ' ';
      }

      res += stringified;
    }
  }

  return res;
}

function stringifyObject(value) {
  var res = '';

  for (var key in value) {
    if (value[key]) {
      if (res) {
        res += ' ';
      }

      res += key;
    }
  }

  return res;
}
/*  */


var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};
var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot'); // this map is intentionally selective, only covering SVG elements that may
// contain child elements.

var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

var isPreTag = function (tag) {
  return tag === 'pre';
};

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag);
};

function getTagNamespace(tag) {
  if (isSVG(tag)) {
    return 'svg';
  } // basic support for MathML
  // note it doesn't support other MathML elements being component roots


  if (tag === 'math') {
    return 'math';
  }
}

var unknownElementCache = Object.create(null);

function isUnknownElement(tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true;
  }

  if (isReservedTag(tag)) {
    return false;
  }

  tag = tag.toLowerCase();
  /* istanbul ignore if */

  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag];
  }

  var el = document.createElement(tag);

  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
  } else {
    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');
/*  */

/**
 * Query an element selector if it's not an element already.
 */

function query(el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);

    if (!selected) {
      "development" !== 'production' && warn('Cannot find element: ' + el);
      return document.createElement('div');
    }

    return selected;
  } else {
    return el;
  }
}
/*  */


function createElement$1(tagName, vnode) {
  var elm = document.createElement(tagName);

  if (tagName !== 'select') {
    return elm;
  } // false or null will remove the attribute but undefined will not


  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }

  return elm;
}

function createElementNS(namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName);
}

function createTextNode(text) {
  return document.createTextNode(text);
}

function createComment(text) {
  return document.createComment(text);
}

function insertBefore(parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild(node, child) {
  node.removeChild(child);
}

function appendChild(node, child) {
  node.appendChild(child);
}

function parentNode(node) {
  return node.parentNode;
}

function nextSibling(node) {
  return node.nextSibling;
}

function tagName(node) {
  return node.tagName;
}

function setTextContent(node, text) {
  node.textContent = text;
}

function setStyleScope(node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps =
/*#__PURE__*/
Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});
/*  */

var ref = {
  create: function create(_, vnode) {
    registerRef(vnode);
  },
  update: function update(oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy(vnode) {
    registerRef(vnode, true);
  }
};

function registerRef(vnode, isRemoval) {
  var key = vnode.data.ref;

  if (!isDef(key)) {
    return;
  }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;

  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}
/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */


var emptyNode = new VNode('', {}, []);
var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode(a, b) {
  return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));
}

function sameInputType(a, b) {
  if (a.tag !== 'input') {
    return true;
  }

  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);
}

function createKeyToOldIdx(children, beginIdx, endIdx) {
  var i, key;
  var map = {};

  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;

    if (isDef(key)) {
      map[key] = i;
    }
  }

  return map;
}

function createPatchFunction(backend) {
  var i, j;
  var cbs = {};
  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];

    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt(elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
  }

  function createRmCb(childElm, listeners) {
    function remove$$1() {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }

    remove$$1.listeners = listeners;
    return remove$$1;
  }

  function removeNode(el) {
    var parent = nodeOps.parentNode(el); // element may have already been removed due to v-html / v-text

    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1(vnode, inVPre) {
    return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(function (ignore) {
      return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;
    })) && config.isUnknownElement(vnode.tag);
  }

  var creatingElmInVPre = 0;

  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check

    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return;
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;

    if (isDef(tag)) {
      if ("development" !== 'production') {
        if (data && data.pre) {
          creatingElmInVPre++;
        }

        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
        }
      }

      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
      setScope(vnode);
      /* istanbul ignore if */

      {
        createChildren(vnode, children, insertedVnodeQueue);

        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }

        insert(parentElm, vnode.elm, refElm);
      }

      if ("development" !== 'production' && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;

    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;

      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false
        /* hydrating */
        );
      } // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.


      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);

        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }

        return true;
      }
    }
  }

  function initComponent(vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }

    vnode.elm = vnode.componentInstance.$el;

    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode); // make sure to invoke the insert hook

      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
    var i; // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.

    var innerNode = vnode;

    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;

      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }

        insertedVnodeQueue.push(innerNode);
        break;
      }
    } // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself


    insert(parentElm, vnode.elm, refElm);
  }

  function insert(parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren(vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if ("development" !== 'production') {
        checkDuplicateKeys(children);
      }

      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable(vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }

    return isDef(vnode.tag);
  }

  function invokeCreateHooks(vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }

    i = vnode.data.hook; // Reuse variable

    if (isDef(i)) {
      if (isDef(i.create)) {
        i.create(emptyNode, vnode);
      }

      if (isDef(i.insert)) {
        insertedVnodeQueue.push(vnode);
      }
    }
  } // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.


  function setScope(vnode) {
    var i;

    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;

      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }

        ancestor = ancestor.parent;
      }
    } // for slot content they should also get the scopeId from the host instance.


    if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.fnContext && isDef(i = i.$options._scopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook(vnode) {
    var i, j;
    var data = vnode.data;

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) {
        i(vnode);
      }

      for (i = 0; i < cbs.destroy.length; ++i) {
        cbs.destroy[i](vnode);
      }
    }

    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];

      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else {
          // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook(vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;

      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      } // recursively invoke hooks on child component root node


      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }

      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }

      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm; // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions

    var canMove = !removeOnly;

    if ("development" !== 'production') {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) {
        // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) {
        // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) {
          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
        }

        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);

        if (isUndef(idxInOld)) {
          // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];

          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }

        newStartVnode = newCh[++newStartIdx];
      }
    }

    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys(children) {
    var seenKeys = {};

    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;

      if (isDef(key)) {
        if (seenKeys[key]) {
          warn("Duplicate keys detected: '" + key + "'. This may cause an update error.", vnode.context);
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld(node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];

      if (isDef(c) && sameVnode(node, c)) {
        return i;
      }
    }
  }

  function patchVnode(oldVnode, vnode, insertedVnodeQueue, ownerArray, index, removeOnly) {
    if (oldVnode === vnode) {
      return;
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }

      return;
    } // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.


    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
      vnode.componentInstance = oldVnode.componentInstance;
      return;
    }

    var i;
    var data = vnode.data;

    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;

    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) {
        cbs.update[i](oldVnode, vnode);
      }

      if (isDef(i = data.hook) && isDef(i = i.update)) {
        i(oldVnode, vnode);
      }
    }

    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) {
          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
        }
      } else if (isDef(ch)) {
        if ("development" !== 'production') {
          checkDuplicateKeys(ch);
        }

        if (isDef(oldVnode.text)) {
          nodeOps.setTextContent(elm, '');
        }

        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
        i(oldVnode, vnode);
      }
    }
  }

  function invokeInsertHook(vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false; // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).

  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key'); // Note: this is a browser-only function so we can assume elms are DOM nodes.

  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || data && data.pre;
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true;
    } // assert node match


    if ("development" !== 'production') {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false;
      }
    }

    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) {
        i(vnode, true
        /* hydrating */
        );
      }

      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true;
      }
    }

    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ("development" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }

              return false;
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;

            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break;
              }

              childNode = childNode.nextSibling;
            } // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.


            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ("development" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }

              return false;
            }
          }
        }
      }

      if (isDef(data)) {
        var fullInvoke = false;

        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break;
          }
        }

        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }

    return true;
  }

  function assertNodeMatch(node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3);
    }
  }

  return function patch(oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) {
        invokeDestroyHook(oldVnode);
      }

      return;
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);

      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }

          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode;
            } else if ("development" !== 'production') {
              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
            }
          } // either not server-rendered, or hydration failed.
          // create an empty node and replace it


          oldVnode = emptyNodeAt(oldVnode);
        } // replacing existing element


        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm); // create new node

        createElm(vnode, insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a
        // leaving transition. Only happens when combining transition +
        // keep-alive + HOCs. (#4590)
        oldElm._leaveCb ? null : parentElm, nodeOps.nextSibling(oldElm)); // update parent placeholder node element, recursively

        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);

          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }

            ancestor.elm = vnode.elm;

            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              } // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.


              var insert = ancestor.data.hook.insert;

              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }

            ancestor = ancestor.parent;
          }
        } // destroy old node


        if (isDef(parentElm)) {
          removeVnodes(parentElm, [oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm;
  };
}
/*  */


var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives(vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives(oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update(oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);
  var dirsWithInsert = [];
  var dirsWithPostpatch = [];
  var key, oldDir, dir;

  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];

    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);

      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);

      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };

    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1(dirs, vm) {
  var res = Object.create(null);

  if (!dirs) {
    // $flow-disable-line
    return res;
  }

  var i, dir;

  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];

    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }

    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  } // $flow-disable-line


  return res;
}

function getRawDirName(dir) {
  return dir.rawName || dir.name + "." + Object.keys(dir.modifiers || {}).join('.');
}

function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];

  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, "directive " + dir.name + " " + hook + " hook");
    }
  }
}

var baseModules = [ref, directives];
/*  */

function updateAttrs(oldVnode, vnode) {
  var opts = vnode.componentOptions;

  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return;
  }

  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return;
  }

  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {}; // clone observed objects, as the user probably wants to mutate it

  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];

    if (old !== cur) {
      setAttr(elm, key, cur);
    }
  } // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max

  /* istanbul ignore if */


  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }

  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr(el, key, value) {
  if (el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr(el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.

    /* istanbul ignore if */
    if (isIE && !isIE9 && el.tagName === 'TEXTAREA' && key === 'placeholder' && value !== '' && !el.__ieph) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };

      el.addEventListener('input', blocker); // $flow-disable-line

      el.__ieph = true;
      /* IE placeholder patched */
    }

    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};
/*  */

function updateClass(oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
    return;
  }

  var cls = genClassForVnode(vnode); // handle transition classes

  var transitionClass = el._transitionClasses;

  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  } // set the class


  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};
/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters(exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);

    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) {
        inSingle = false;
      }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) {
        inDouble = false;
      }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) {
        inTemplateString = false;
      }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) {
        inRegex = false;
      }
    } else if (c === 0x7C && // pipe
    exp.charCodeAt(i + 1) !== 0x7C && exp.charCodeAt(i - 1) !== 0x7C && !curly && !square && !paren) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22:
          inDouble = true;
          break;
        // "

        case 0x27:
          inSingle = true;
          break;
        // '

        case 0x60:
          inTemplateString = true;
          break;
        // `

        case 0x28:
          paren++;
          break;
        // (

        case 0x29:
          paren--;
          break;
        // )

        case 0x5B:
          square++;
          break;
        // [

        case 0x5D:
          square--;
          break;
        // ]

        case 0x7B:
          curly++;
          break;
        // {

        case 0x7D:
          curly--;
          break;
        // }
      }

      if (c === 0x2f) {
        // /
        var j = i - 1;
        var p = void 0; // find first non-whitespace prev char

        for (; j >= 0; j--) {
          p = exp.charAt(j);

          if (p !== ' ') {
            break;
          }
        }

        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter() {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression;
}

function wrapFilter(exp, filter) {
  var i = filter.indexOf('(');

  if (i < 0) {
    // _f: resolveFilter
    return "_f(\"" + filter + "\")(" + exp + ")";
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return "_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args);
  }
}
/*  */

/* eslint-disable no-unused-vars */


function baseWarn(msg, range) {
  console.error("[Vue compiler]: " + msg);
}
/* eslint-enable no-unused-vars */


function pluckModuleFunction(modules, key) {
  return modules ? modules.map(function (m) {
    return m[key];
  }).filter(function (_) {
    return _;
  }) : [];
}

function addProp(el, name, value, range, dynamic) {
  (el.props || (el.props = [])).push(rangeSetItem({
    name: name,
    value: value,
    dynamic: dynamic
  }, range));
  el.plain = false;
}

function addAttr(el, name, value, range, dynamic) {
  var attrs = dynamic ? el.dynamicAttrs || (el.dynamicAttrs = []) : el.attrs || (el.attrs = []);
  attrs.push(rangeSetItem({
    name: name,
    value: value,
    dynamic: dynamic
  }, range));
  el.plain = false;
} // add a raw attr (use this in preTransforms)


function addRawAttr(el, name, value, range) {
  el.attrsMap[name] = value;
  el.attrsList.push(rangeSetItem({
    name: name,
    value: value
  }, range));
}

function addDirective(el, name, rawName, value, arg, isDynamicArg, modifiers, range) {
  (el.directives || (el.directives = [])).push(rangeSetItem({
    name: name,
    rawName: rawName,
    value: value,
    arg: arg,
    isDynamicArg: isDynamicArg,
    modifiers: modifiers
  }, range));
  el.plain = false;
}

function prependModifierMarker(symbol, name, dynamic) {
  return dynamic ? "_p(" + name + ",\"" + symbol + "\")" : symbol + name; // mark the event as captured
}

function addHandler(el, name, value, modifiers, important, warn, range, dynamic) {
  modifiers = modifiers || emptyObject; // warn prevent and passive modifier

  /* istanbul ignore if */

  if ("development" !== 'production' && warn && modifiers.prevent && modifiers.passive) {
    warn('passive and prevent can\'t be used together. ' + 'Passive handler can\'t prevent default event.', range);
  } // normalize click.right and click.middle since they don't actually fire
  // this is technically browser-specific, but at least for now browsers are
  // the only target envs that have right/middle clicks.


  if (modifiers.right) {
    if (dynamic) {
      name = "(" + name + ")==='click'?'contextmenu':(" + name + ")";
    } else if (name === 'click') {
      name = 'contextmenu';
      delete modifiers.right;
    }
  } else if (modifiers.middle) {
    if (dynamic) {
      name = "(" + name + ")==='click'?'mouseup':(" + name + ")";
    } else if (name === 'click') {
      name = 'mouseup';
    }
  } // check capture modifier


  if (modifiers.capture) {
    delete modifiers.capture;
    name = prependModifierMarker('!', name, dynamic);
  }

  if (modifiers.once) {
    delete modifiers.once;
    name = prependModifierMarker('~', name, dynamic);
  }
  /* istanbul ignore if */


  if (modifiers.passive) {
    delete modifiers.passive;
    name = prependModifierMarker('&', name, dynamic);
  }

  var events;

  if (modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }

  var newHandler = rangeSetItem({
    value: value.trim(),
    dynamic: dynamic
  }, range);

  if (modifiers !== emptyObject) {
    newHandler.modifiers = modifiers;
  }

  var handlers = events[name];
  /* istanbul ignore if */

  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }

  el.plain = false;
}

function getRawBindingAttr(el, name) {
  return el.rawAttrsMap[':' + name] || el.rawAttrsMap['v-bind:' + name] || el.rawAttrsMap[name];
}

function getBindingAttr(el, name, getStatic) {
  var dynamicValue = getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);

  if (dynamicValue != null) {
    return parseFilters(dynamicValue);
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);

    if (staticValue != null) {
      return JSON.stringify(staticValue);
    }
  }
} // note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.


function getAndRemoveAttr(el, name, removeFromMap) {
  var val;

  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;

    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break;
      }
    }
  }

  if (removeFromMap) {
    delete el.attrsMap[name];
  }

  return val;
}

function getAndRemoveAttrByRegex(el, name) {
  var list = el.attrsList;

  for (var i = 0, l = list.length; i < l; i++) {
    var attr = list[i];

    if (name.test(attr.name)) {
      list.splice(i, 1);
      return attr;
    }
  }
}

function rangeSetItem(item, range) {
  if (range) {
    if (range.start != null) {
      item.start = range.start;
    }

    if (range.end != null) {
      item.end = range.end;
    }
  }

  return item;
}
/*  */

/**
 * Cross-platform code generation for component v-model
 */


function genComponentModel(el, value, modifiers) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;
  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;

  if (trim) {
    valueExpression = "(typeof " + baseValueExpression + " === 'string'" + "? " + baseValueExpression + ".trim()" + ": " + baseValueExpression + ")";
  }

  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var assignment = genAssignmentCode(value, valueExpression);
  el.model = {
    value: "(" + value + ")",
    expression: JSON.stringify(value),
    callback: "function (" + baseValueExpression + ") {" + assignment + "}"
  };
}
/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */


function genAssignmentCode(value, assignment) {
  var res = parseModel(value);

  if (res.key === null) {
    return value + "=" + assignment;
  } else {
    return "$set(" + res.exp + ", " + res.key + ", " + assignment + ")";
  }
}
/**
 * Parse a v-model expression into a base path and a final key segment.
 * Handles both dot-path and possible square brackets.
 *
 * Possible cases:
 *
 * - test
 * - test[key]
 * - test[test1[key]]
 * - test["a"][key]
 * - xxx.test[a[a].test1[key]]
 * - test.xxx.a["asa"][test1[key]]
 *
 */


var len, str, chr, index$1, expressionPos, expressionEndPos;

function parseModel(val) {
  // Fix https://github.com/vuejs/vue/pull/7730
  // allow v-model="obj.val " (trailing whitespace)
  val = val.trim();
  len = val.length;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    index$1 = val.lastIndexOf('.');

    if (index$1 > -1) {
      return {
        exp: val.slice(0, index$1),
        key: '"' + val.slice(index$1 + 1) + '"'
      };
    } else {
      return {
        exp: val,
        key: null
      };
    }
  }

  str = val;
  index$1 = expressionPos = expressionEndPos = 0;

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */

    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.slice(0, expressionPos),
    key: val.slice(expressionPos + 1, expressionEndPos)
  };
}

function next() {
  return str.charCodeAt(++index$1);
}

function eof() {
  return index$1 >= len;
}

function isStringStart(chr) {
  return chr === 0x22 || chr === 0x27;
}

function parseBracket(chr) {
  var inBracket = 1;
  expressionPos = index$1;

  while (!eof()) {
    chr = next();

    if (isStringStart(chr)) {
      parseString(chr);
      continue;
    }

    if (chr === 0x5B) {
      inBracket++;
    }

    if (chr === 0x5D) {
      inBracket--;
    }

    if (inBracket === 0) {
      expressionEndPos = index$1;
      break;
    }
  }
}

function parseString(chr) {
  var stringQuote = chr;

  while (!eof()) {
    chr = next();

    if (chr === stringQuote) {
      break;
    }
  }
}
/*  */


var warn$1; // in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.

var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model(el, dir, _warn) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if ("development" !== 'production') {
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1("<" + el.tag + " v-model=\"" + value + "\" type=\"file\">:\n" + "File inputs are read only. Use a v-on:change listener instead.", el.rawAttrsMap['v-model']);
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers); // component v-model doesn't need extra runtime

    return false;
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers); // component v-model doesn't need extra runtime

    return false;
  } else if ("development" !== 'production') {
    warn$1("<" + el.tag + " v-model=\"" + value + "\">: " + "v-model is not supported on this element type. " + 'If you are working with contenteditable, it\'s recommended to ' + 'wrap a library dedicated for that purpose inside a custom component.', el.rawAttrsMap['v-model']);
  } // ensure runtime directive metadata


  return true;
}

function genCheckboxModel(el, value, modifiers) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked', "Array.isArray(" + value + ")" + "?_i(" + value + "," + valueBinding + ")>-1" + (trueValueBinding === 'true' ? ":(" + value + ")" : ":_q(" + value + "," + trueValueBinding + ")"));
  addHandler(el, 'change', "var $$a=" + value + "," + '$$el=$event.target,' + "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" + 'if(Array.isArray($$a)){' + "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," + '$$i=_i($$a,$$v);' + "if($$el.checked){$$i<0&&(" + genAssignmentCode(value, '$$a.concat([$$v])') + ")}" + "else{$$i>-1&&(" + genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))') + ")}" + "}else{" + genAssignmentCode(value, '$$c') + "}", null, true);
}

function genRadioModel(el, value, modifiers) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? "_n(" + valueBinding + ")" : valueBinding;
  addProp(el, 'checked', "_q(" + value + "," + valueBinding + ")");
  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
}

function genSelect(el, value, modifiers) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" + ".call($event.target.options,function(o){return o.selected})" + ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" + "return " + (number ? '_n(val)' : 'val') + "})";
  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + genAssignmentCode(value, assignment);
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel(el, value, modifiers) {
  var type = el.attrsMap.type; // warn if v-bind:value conflicts with v-model
  // except for inputs with v-bind:type

  if ("development" !== 'production') {
    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];

    if (value$1 && !typeBinding) {
      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
      warn$1(binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " + 'because the latter already expands to a value binding internally', el.rawAttrsMap[binding]);
    }
  }

  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input';
  var valueExpression = '$event.target.value';

  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }

  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);

  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', "(" + value + ")");
  addHandler(el, event, code, null, true);

  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}
/*  */
// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.


function normalizeEvents(on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  } // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4

  /* istanbul ignore if */


  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1(event, handler, capture) {
  var _target = target$1; // save current target element in closure

  return function onceHandler() {
    var res = handler.apply(null, arguments);

    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  };
} // #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.


var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1(name, handler, capture, passive) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;

    handler = original._wrapper = function (e) {
      if ( // no bubbling, should always fire.
      // this is just a safety net in case event.timeStamp is unreliable in
      // certain weird environments...
      e.target === e.currentTarget || // event is fired after handler attachment
      e.timeStamp >= attachedTimestamp || // bail for environments that have buggy event.timeStamp implementations
      // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
      // #9681 QtWebEngine event.timeStamp is negative value
      e.timeStamp <= 0 || // #9448 bail if event is fired in another document in a multi-page
      // electron/nw.js app, since event.timeStamp will be using a different
      // starting reference
      e.target.ownerDocument !== document) {
        return original.apply(this, arguments);
      }
    };
  }

  target$1.addEventListener(name, handler, supportsPassive ? {
    capture: capture,
    passive: passive
  } : capture);
}

function remove$2(name, handler, capture, _target) {
  (_target || target$1).removeEventListener(name, handler._wrapper || handler, capture);
}

function updateDOMListeners(oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return;
  }

  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};
/*  */

var svgContainer;

function updateDOMProps(oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return;
  }

  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {}; // clone observed objects, as the user probably wants to mutate it

  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key]; // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)

    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) {
        vnode.children.length = 0;
      }

      if (cur === oldProps[key]) {
        continue;
      } // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property


      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur; // avoid resetting cursor position when value is the same

      var strCur = isUndef(cur) ? '' : String(cur);

      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;

      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }

      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if ( // skip the update if old and new VDOM state is the same.
    // `value` is handled separately because the DOM value may be temporarily
    // out of sync with VDOM state due to focus, composition and modifiers.
    // This  #4521 by skipping the unnecesarry `checked` update.
    cur !== oldProps[key]) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
} // check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue(elm, checkVal) {
  return !elm.composing && (elm.tagName === 'OPTION' || isNotInFocusAndDirty(elm, checkVal) || isDirtyWithModifiers(elm, checkVal));
}

function isNotInFocusAndDirty(elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true; // #6157
  // work around IE bug when accessing document.activeElement in an iframe

  try {
    notInFocus = document.activeElement !== elm;
  } catch (e) {}

  return notInFocus && elm.value !== checkVal;
}

function isDirtyWithModifiers(elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime

  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal);
    }

    if (modifiers.trim) {
      return value.trim() !== newVal.trim();
    }
  }

  return value !== newVal;
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};
/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res;
}); // merge static and dynamic style data on the same vnode

function normalizeStyleData(data) {
  var style = normalizeStyleBinding(data.style); // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it

  return data.staticStyle ? extend(data.staticStyle, style) : style;
} // normalize possible array / string values into Object


function normalizeStyleBinding(bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle);
  }

  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle);
  }

  return bindingStyle;
}
/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */


function getStyle(vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;

    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;

      if (childNode && childNode.data && (styleData = normalizeStyleData(childNode.data))) {
        extend(res, styleData);
      }
    }
  }

  if (styleData = normalizeStyleData(vnode.data)) {
    extend(res, styleData);
  }

  var parentNode = vnode;

  while (parentNode = parentNode.parent) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }

  return res;
}
/*  */


var cssVarRE = /^--/;
var importantRE = /\s*!important$/;

var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);

    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];
var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);

  if (prop !== 'filter' && prop in emptyStyle) {
    return prop;
  }

  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);

  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;

    if (name in emptyStyle) {
      return name;
    }
  }
});

function updateStyle(oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
    return;
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // if static style exists, stylebinding already merged into it when doing normalizeStyleData

  var oldStyle = oldStaticStyle || oldStyleBinding;
  var style = normalizeStyleBinding(vnode.data.style) || {}; // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.

  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;
  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }

  for (name in newStyle) {
    cur = newStyle[name];

    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};
/*  */

var whitespaceRE = /\s+/;
/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */

function addClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }
  /* istanbul ignore else */


  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) {
        return el.classList.add(c);
      });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";

    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}
/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */


function removeClass(el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return;
  }
  /* istanbul ignore else */


  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) {
        return el.classList.remove(c);
      });
    } else {
      el.classList.remove(cls);
    }

    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';

    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }

    cur = cur.trim();

    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}
/*  */


function resolveTransition(def$$1) {
  if (!def$$1) {
    return;
  }
  /* istanbul ignore else */


  if (typeof def$$1 === 'object') {
    var res = {};

    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }

    extend(res, def$$1);
    return res;
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1);
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: name + "-enter",
    enterToClass: name + "-enter-to",
    enterActiveClass: name + "-enter-active",
    leaveClass: name + "-leave",
    leaveToClass: name + "-leave-to",
    leaveActiveClass: name + "-leave-active"
  };
});
var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation'; // Transition property/event sniffing

var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';

if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }

  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
} // binding to window is necessary to make hot reload work in IE in strict mode


var raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout :
/* istanbul ignore next */
function (fn) {
  return fn();
};

function nextFrame(fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass(el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);

  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass(el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }

  removeClass(el, cls);
}

function whenTransitionEnds(el, expectedType, cb) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;

  if (!type) {
    return cb();
  }

  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;

  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };

  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };

  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo(el, expectedType) {
  var styles = window.getComputedStyle(el); // JSDOM may return undefined for transition properties

  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);
  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */

  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
  }

  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  };
}

function getTimeout(delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i]);
  }));
} // Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors


function toMs(s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000;
}
/*  */


function enter(vnode, toggleDisplay) {
  var el = vnode.elm; // call leave callback now

  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;

    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);

  if (isUndef(data)) {
    return;
  }
  /* istanbul ignore if */


  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration; // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.

  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;

  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return;
  }

  var startClass = isAppear && appearClass ? appearClass : enterClass;
  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;
  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;
  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

  if ("development" !== 'production' && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);
  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }

    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }

      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }

    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];

      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
        pendingNode.elm._leaveCb();
      }

      enterHook && enterHook(el, cb);
    });
  } // start enter transition


  beforeEnterHook && beforeEnterHook(el);

  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);

      if (!cb.cancelled) {
        addTransitionClass(el, toClass);

        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave(vnode, rm) {
  var el = vnode.elm; // call enter callback now

  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;

    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);

  if (isUndef(data) || el.nodeType !== 1) {
    return rm();
  }
  /* istanbul ignore if */


  if (isDef(el._leaveCb)) {
    return;
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;
  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);
  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

  if ("development" !== 'production' && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }

    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }

    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }

      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }

    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave() {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return;
    } // record leaving element


    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
    }

    beforeLeave && beforeLeave(el);

    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);

        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);

          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }

    leave && leave(el, cb);

    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
} // only used in dev mode


function checkDuration(val, name, vnode) {
  if (typeof val !== 'number') {
    warn("<transition> explicit " + name + " duration is not a valid number - " + "got " + JSON.stringify(val) + ".", vnode.context);
  } else if (isNaN(val)) {
    warn("<transition> explicit " + name + " duration is NaN - " + 'the duration expression might be incorrect.', vnode.context);
  }
}

function isValidDuration(val) {
  return typeof val === 'number' && !isNaN(val);
}
/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */


function getHookArgumentsLength(fn) {
  if (isUndef(fn)) {
    return false;
  }

  var invokerFns = fn.fns;

  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
  } else {
    return (fn._length || fn.length) > 1;
  }
}

function _enter(_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1(vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};
var platformModules = [attrs, klass, events, domProps, style, transition];
/*  */
// the directive module should be applied last, after all
// built-in modules have been applied.

var modules = platformModules.concat(baseModules);
var patch = createPatchFunction({
  nodeOps: nodeOps,
  modules: modules
});
/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */

if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;

    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted(el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }

      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;

      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.

        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */

        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },
  componentUpdated: function componentUpdated(el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context); // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.

      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);

      if (curOptions.some(function (o, i) {
        return !looseEqual(o, prevOptions[i]);
      })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple ? binding.value.some(function (v) {
          return hasNoMatchingOption(v, curOptions);
        }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);

        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected(el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */

  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected(el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;

  if (isMultiple && !Array.isArray(value)) {
    "development" !== 'production' && warn("<select multiple v-model=\"" + binding.expression + "\"> " + "expects an Array value for its binding, but got " + Object.prototype.toString.call(value).slice(8, -1), vm);
    return;
  }

  var selected, option;

  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];

    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;

      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }

        return;
      }
    }
  }

  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption(value, options) {
  return options.every(function (o) {
    return !looseEqual(o, value);
  });
}

function getValue(option) {
  return '_value' in option ? option._value : option.value;
}

function onCompositionStart(e) {
  e.target.composing = true;
}

function onCompositionEnd(e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) {
    return;
  }

  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger(el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}
/*  */
// recursively search for possible transition defined inside the component root


function locateNode(vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
}

var show = {
  bind: function bind(el, ref, vnode) {
    var value = ref.value;
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;

    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },
  update: function update(el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;
    /* istanbul ignore if */

    if (!value === !oldValue) {
      return;
    }

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;

    if (transition$$1) {
      vnode.data.show = true;

      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },
  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};
var platformDirectives = {
  model: directive,
  show: show
};
/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
}; // in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered

function getRealChild(vnode) {
  var compOptions = vnode && vnode.componentOptions;

  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children));
  } else {
    return vnode;
  }
}

function extractTransitionData(comp) {
  var data = {};
  var options = comp.$options; // props

  for (var key in options.propsData) {
    data[key] = comp[key];
  } // events.
  // extract listeners and pass them directly to the transition methods


  var listeners = options._parentListeners;

  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }

  return data;
}

function placeholder(h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    });
  }
}

function hasParentTransition(vnode) {
  while (vnode = vnode.parent) {
    if (vnode.data.transition) {
      return true;
    }
  }
}

function isSameChild(child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag;
}

var isNotTextNode = function (c) {
  return c.tag || isAsyncPlaceholder(c);
};

var isVShowDirective = function (d) {
  return d.name === 'show';
};

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,
  render: function render(h) {
    var this$1 = this;
    var children = this.$slots.default;

    if (!children) {
      return;
    } // filter out text nodes (possible whitespaces)


    children = children.filter(isNotTextNode);
    /* istanbul ignore if */

    if (!children.length) {
      return;
    } // warn multiple elements


    if ("development" !== 'production' && children.length > 1) {
      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
    }

    var mode = this.mode; // warn invalid mode

    if ("development" !== 'production' && mode && mode !== 'in-out' && mode !== 'out-in') {
      warn('invalid <transition> mode: ' + mode, this.$parent);
    }

    var rawChild = children[0]; // if this is a component root node and the component's
    // parent container node also has transition, skip.

    if (hasParentTransition(this.$vnode)) {
      return rawChild;
    } // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive


    var child = getRealChild(rawChild);
    /* istanbul ignore if */

    if (!child) {
      return rawChild;
    }

    if (this._leaving) {
      return placeholder(h, rawChild);
    } // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.


    var id = "__transition-" + this._uid + "-";
    child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;
    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild); // mark v-show
    // so that the transition module can hand over the control to the directive

    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node
    !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data); // handle transition mode

      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild);
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild;
        }

        var delayedLeave;

        var performLeave = function () {
          delayedLeave();
        };

        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) {
          delayedLeave = leave;
        });
      }
    }

    return rawChild;
  }
};
/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);
delete props.mode;
var TransitionGroup = {
  props: props,
  beforeMount: function beforeMount() {
    var this$1 = this;
    var update = this._update;

    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1); // force removing pass

      this$1.__patch__(this$1._vnode, this$1.kept, false, // hydrating
      true // removeOnly (!important, avoids unnecessary moves)
      );

      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },
  render: function render(h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];

      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c;
          (c.data || (c.data = {})).transition = transitionData;
        } else if ("development" !== 'production') {
          var opts = c.componentOptions;
          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
          warn("<transition-group> children must be keyed: <" + name + ">");
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];

      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();

        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }

      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children);
  },
  updated: function updated() {
    var children = this.prevChildren;
    var moveClass = this.moveClass || (this.name || 'v') + '-move';

    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return;
    } // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.


    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation); // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line

    this._reflow = document.body.offsetHeight;
    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
          if (e && e.target !== el) {
            return;
          }

          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },
  methods: {
    hasMove: function hasMove(el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false;
      }
      /* istanbul ignore if */


      if (this._hasMove) {
        return this._hasMove;
      } // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.


      var clone = el.cloneNode();

      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) {
          removeClass(clone, cls);
        });
      }

      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return this._hasMove = info.hasTransform;
    }
  }
};

function callPendingCbs(c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */


  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition(c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation(c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;

  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};
/*  */
// install platform specific utils

Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement; // install platform runtime directives & components

extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents); // install platform patch function

Vue.prototype.__patch__ = inBrowser ? patch : noop; // public mount method

Vue.prototype.$mount = function (el, hydrating) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating);
}; // devtools global hook

/* istanbul ignore next */


if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if ("development" !== 'production' && "development" !== 'test') {
        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
      }
    }

    if ("development" !== 'production' && "development" !== 'test' && config.productionTip !== false && typeof console !== 'undefined') {
      console[console.info ? 'info' : 'log']("You are running Vue in development mode.\n" + "Make sure to turn on production mode when deploying for production.\n" + "See more tips at https://vuejs.org/guide/deployment.html");
    }
  }, 0);
}
/*  */


var defaultTagRE = /\{\{((?:.|\r?\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;
var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g');
});

function parseText(text, delimiters) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;

  if (!tagRE.test(text)) {
    return;
  }

  var tokens = [];
  var rawTokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index, tokenValue;

  while (match = tagRE.exec(text)) {
    index = match.index; // push text token

    if (index > lastIndex) {
      rawTokens.push(tokenValue = text.slice(lastIndex, index));
      tokens.push(JSON.stringify(tokenValue));
    } // tag token


    var exp = parseFilters(match[1].trim());
    tokens.push("_s(" + exp + ")");
    rawTokens.push({
      '@binding': exp
    });
    lastIndex = index + match[0].length;
  }

  if (lastIndex < text.length) {
    rawTokens.push(tokenValue = text.slice(lastIndex));
    tokens.push(JSON.stringify(tokenValue));
  }

  return {
    expression: tokens.join('+'),
    tokens: rawTokens
  };
}
/*  */


function transformNode(el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');

  if ("development" !== 'production' && staticClass) {
    var res = parseText(staticClass, options.delimiters);

    if (res) {
      warn("class=\"" + staticClass + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class="{{ val }}">, use <div :class="val">.', el.rawAttrsMap['class']);
    }
  }

  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }

  var classBinding = getBindingAttr(el, 'class', false
  /* getStatic */
  );

  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData(el) {
  var data = '';

  if (el.staticClass) {
    data += "staticClass:" + el.staticClass + ",";
  }

  if (el.classBinding) {
    data += "class:" + el.classBinding + ",";
  }

  return data;
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
};
/*  */

function transformNode$1(el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');

  if (staticStyle) {
    /* istanbul ignore if */
    if ("development" !== 'production') {
      var res = parseText(staticStyle, options.delimiters);

      if (res) {
        warn("style=\"" + staticStyle + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style="{{ val }}">, use <div :style="val">.', el.rawAttrsMap['style']);
      }
    }

    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false
  /* getStatic */
  );

  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1(el) {
  var data = '';

  if (el.staticStyle) {
    data += "staticStyle:" + el.staticStyle + ",";
  }

  if (el.styleBinding) {
    data += "style:(" + el.styleBinding + "),";
  }

  return data;
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
};
/*  */

var decoder;
var he = {
  decode: function decode(html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent;
  }
};
/*  */

var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr'); // Elements that you can, intentionally, leave open
// (and which close themselves)

var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'); // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content

var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track');
/**
 * Not type-checking this file because it's mostly vendor code.
 */
// Regular Expressions for parsing tags and attributes

var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
var dynamicArgAttribute = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
var ncname = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + unicodeRegExp.source + "]*";
var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
var startTagOpen = new RegExp("^<" + qnameCapture);
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp("^<\\/" + qnameCapture + "[^>]*>");
var doctype = /^<!DOCTYPE [^>]+>/i; // #7298: escape - to avoid being pased as HTML comment when inlined in page

var comment = /^<!\--/;
var conditionalComment = /^<!\[/; // Special Elements (can contain anything)

var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};
var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n',
  '&#9;': '\t',
  '&#39;': "'"
};
var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g; // #5992

var isIgnoreNewlineTag = makeMap('pre,textarea', true);

var shouldIgnoreFirstNewline = function (tag, html) {
  return tag && isIgnoreNewlineTag(tag) && html[0] === '\n';
};

function decodeAttr(value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) {
    return decodingMap[match];
  });
}

function parseHTML(html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;

  while (html) {
    last = html; // Make sure we're not in a plaintext content element like script/style

    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');

      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);
            }

            advance(commentEnd + 3);
            continue;
          }
        } // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment


        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue;
          }
        } // Doctype:


        var doctypeMatch = html.match(doctype);

        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue;
        } // End tag:


        var endTagMatch = html.match(endTag);

        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue;
        } // Start tag:


        var startTagMatch = parseStartTag();

        if (startTagMatch) {
          handleStartTag(startTagMatch);

          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {
            advance(1);
          }

          continue;
        }
      }

      var text = void 0,
          rest = void 0,
          next = void 0;

      if (textEnd >= 0) {
        rest = html.slice(textEnd);

        while (!endTag.test(rest) && !startTagOpen.test(rest) && !comment.test(rest) && !conditionalComment.test(rest)) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);

          if (next < 0) {
            break;
          }

          textEnd += next;
          rest = html.slice(textEnd);
        }

        text = html.substring(0, textEnd);
      }

      if (textEnd < 0) {
        text = html;
      }

      if (text) {
        advance(text.length);
      }

      if (options.chars && text) {
        options.chars(text, index - text.length, index);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;

        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text.replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
          .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }

        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }

        if (options.chars) {
          options.chars(text);
        }

        return '';
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);

      if ("development" !== 'production' && !stack.length && options.warn) {
        options.warn("Mal-formatted tag at end of template: \"" + html + "\"", {
          start: index + html.length
        });
      }

      break;
    }
  } // Clean up any remaining tags


  parseEndTag();

  function advance(n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag() {
    var start = html.match(startTagOpen);

    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;

      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {
        attr.start = index;
        advance(attr[0].length);
        attr.end = index;
        match.attrs.push(attr);
      }

      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match;
      }
    }
  }

  function handleStartTag(match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }

      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;
    var l = match.attrs.length;
    var attrs = new Array(l);

    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      var value = args[3] || args[4] || args[5] || '';
      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href' ? options.shouldDecodeNewlinesForHref : options.shouldDecodeNewlines;
      attrs[i] = {
        name: args[1],
        value: decodeAttr(value, shouldDecodeNewlines)
      };

      if ("development" !== 'production' && options.outputSourceRange) {
        attrs[i].start = args.start + args[0].match(/^\s*/).length;
        attrs[i].end = args.end;
      }
    }

    if (!unary) {
      stack.push({
        tag: tagName,
        lowerCasedTag: tagName.toLowerCase(),
        attrs: attrs,
        start: match.start,
        end: match.end
      });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag(tagName, start, end) {
    var pos, lowerCasedTagName;

    if (start == null) {
      start = index;
    }

    if (end == null) {
      end = index;
    } // Find the closest opened tag of the same type


    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();

      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break;
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if ("development" !== 'production' && (i > pos || !tagName) && options.warn) {
          options.warn("tag <" + stack[i].tag + "> has no matching end tag.", {
            start: stack[i].start,
            end: stack[i].end
          });
        }

        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      } // Remove the open elements from the stack


      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }

      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}
/*  */


var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:/;
var forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
var stripParensRE = /^\(|\)$/g;
var dynamicArgRE = /^\[.*\]$/;
var argRE = /:(.*)$/;
var bindRE = /^:|^\.|^v-bind:/;
var modifierRE = /\.[^.\]]+(?=[^\]]*$)/g;
var slotRE = /^v-slot(:|$)|^#/;
var lineBreakRE = /[\r\n]/;
var whitespaceRE$1 = /\s+/g;
var invalidAttributeRE = /[\s"'<>\/=]/;
var decodeHTMLCached = cached(he.decode);
var emptySlotScopeToken = "_empty_"; // configurable state

var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;
var maybeComponent;

function createASTElement(tag, attrs, parent) {
  return {
    type: 1,
    tag: tag,
    attrsList: attrs,
    attrsMap: makeAttrsMap(attrs),
    rawAttrsMap: {},
    parent: parent,
    children: []
  };
}
/**
 * Convert HTML string to AST.
 */


function parse(template, options) {
  warn$2 = options.warn || baseWarn;
  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;
  var isReservedTag = options.isReservedTag || no;

  maybeComponent = function (el) {
    return !!el.component || !isReservedTag(el.tag);
  };

  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
  delimiters = options.delimiters;
  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var whitespaceOption = options.whitespace;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce(msg, range) {
    if (!warned) {
      warned = true;
      warn$2(msg, range);
    }
  }

  function closeElement(element) {
    trimEndingWhitespace(element);

    if (!inVPre && !element.processed) {
      element = processElement(element, options);
    } // tree management


    if (!stack.length && element !== root) {
      // allow root elements with v-if, v-else-if and v-else
      if (root.if && (element.elseif || element.else)) {
        if ("development" !== 'production') {
          checkRootConstraints(element);
        }

        addIfCondition(root, {
          exp: element.elseif,
          block: element
        });
      } else if ("development" !== 'production') {
        warnOnce("Component template should contain exactly one root element. " + "If you are using v-if on multiple elements, " + "use v-else-if to chain them instead.", {
          start: element.start
        });
      }
    }

    if (currentParent && !element.forbidden) {
      if (element.elseif || element.else) {
        processIfConditions(element, currentParent);
      } else {
        if (element.slotScope) {
          // scoped slot
          // keep it in the children list so that v-else(-if) conditions can
          // find it as the prev node.
          var name = element.slotTarget || '"default"';
          (currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        }

        currentParent.children.push(element);
        element.parent = currentParent;
      }
    } // final children cleanup
    // filter out scoped slots


    element.children = element.children.filter(function (c) {
      return !c.slotScope;
    }); // remove trailing whitespace node again

    trimEndingWhitespace(element); // check pre state

    if (element.pre) {
      inVPre = false;
    }

    if (platformIsPreTag(element.tag)) {
      inPre = false;
    } // apply post-transforms


    for (var i = 0; i < postTransforms.length; i++) {
      postTransforms[i](element, options);
    }
  }

  function trimEndingWhitespace(el) {
    // remove trailing whitespace node
    if (!inPre) {
      var lastNode;

      while ((lastNode = el.children[el.children.length - 1]) && lastNode.type === 3 && lastNode.text === ' ') {
        el.children.pop();
      }
    }
  }

  function checkRootConstraints(el) {
    if (el.tag === 'slot' || el.tag === 'template') {
      warnOnce("Cannot use <" + el.tag + "> as component root element because it may " + 'contain multiple nodes.', {
        start: el.start
      });
    }

    if (el.attrsMap.hasOwnProperty('v-for')) {
      warnOnce('Cannot use v-for on stateful component root element because ' + 'it renders multiple elements.', el.rawAttrsMap['v-for']);
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
    shouldKeepComment: options.comments,
    outputSourceRange: options.outputSourceRange,
    start: function start(tag, attrs, unary, start$1, end) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = currentParent && currentParent.ns || platformGetTagNamespace(tag); // handle IE svg bug

      /* istanbul ignore if */

      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = createASTElement(tag, attrs, currentParent);

      if (ns) {
        element.ns = ns;
      }

      if ("development" !== 'production') {
        if (options.outputSourceRange) {
          element.start = start$1;
          element.end = end;
          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {
            cumulated[attr.name] = attr;
            return cumulated;
          }, {});
        }

        attrs.forEach(function (attr) {
          if (invalidAttributeRE.test(attr.name)) {
            warn$2("Invalid dynamic argument expression: attribute names cannot contain " + "spaces, quotes, <, >, / or =.", {
              start: attr.start + attr.name.indexOf("["),
              end: attr.start + attr.name.length
            });
          }
        });
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
        "development" !== 'production' && warn$2('Templates should only be responsible for mapping the state to the ' + 'UI. Avoid placing tags with side-effects in your templates, such as ' + "<" + tag + ">" + ', as they will not be parsed.', {
          start: element.start
        });
      } // apply pre-transforms


      for (var i = 0; i < preTransforms.length; i++) {
        element = preTransforms[i](element, options) || element;
      }

      if (!inVPre) {
        processPre(element);

        if (element.pre) {
          inVPre = true;
        }
      }

      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }

      if (inVPre) {
        processRawAttrs(element);
      } else if (!element.processed) {
        // structural directives
        processFor(element);
        processIf(element);
        processOnce(element);
      }

      if (!root) {
        root = element;

        if ("development" !== 'production') {
          checkRootConstraints(root);
        }
      }

      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        closeElement(element);
      }
    },
    end: function end(tag, start, end$1) {
      var element = stack[stack.length - 1]; // pop stack

      stack.length -= 1;
      currentParent = stack[stack.length - 1];

      if ("development" !== 'production' && options.outputSourceRange) {
        element.end = end$1;
      }

      closeElement(element);
    },
    chars: function chars(text, start, end) {
      if (!currentParent) {
        if ("development" !== 'production') {
          if (text === template) {
            warnOnce('Component template requires a root element, rather than just text.', {
              start: start
            });
          } else if (text = text.trim()) {
            warnOnce("text \"" + text + "\" outside root element will be ignored.", {
              start: start
            });
          }
        }

        return;
      } // IE textarea placeholder bug

      /* istanbul ignore if */


      if (isIE && currentParent.tag === 'textarea' && currentParent.attrsMap.placeholder === text) {
        return;
      }

      var children = currentParent.children;

      if (inPre || text.trim()) {
        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);
      } else if (!children.length) {
        // remove the whitespace-only node right after an opening tag
        text = '';
      } else if (whitespaceOption) {
        if (whitespaceOption === 'condense') {
          // in condense mode, remove the whitespace node if it contains
          // line break, otherwise condense to a single space
          text = lineBreakRE.test(text) ? '' : ' ';
        } else {
          text = ' ';
        }
      } else {
        text = preserveWhitespace ? ' ' : '';
      }

      if (text) {
        if (!inPre && whitespaceOption === 'condense') {
          // condense consecutive whitespaces into single space
          text = text.replace(whitespaceRE$1, ' ');
        }

        var res;
        var child;

        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
          child = {
            type: 2,
            expression: res.expression,
            tokens: res.tokens,
            text: text
          };
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          child = {
            type: 3,
            text: text
          };
        }

        if (child) {
          if ("development" !== 'production' && options.outputSourceRange) {
            child.start = start;
            child.end = end;
          }

          children.push(child);
        }
      }
    },
    comment: function comment(text, start, end) {
      // adding anyting as a sibling to the root node is forbidden
      // comments should still be allowed, but ignored
      if (currentParent) {
        var child = {
          type: 3,
          text: text,
          isComment: true
        };

        if ("development" !== 'production' && options.outputSourceRange) {
          child.start = start;
          child.end = end;
        }

        currentParent.children.push(child);
      }
    }
  });
  return root;
}

function processPre(el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs(el) {
  var list = el.attrsList;
  var len = list.length;

  if (len) {
    var attrs = el.attrs = new Array(len);

    for (var i = 0; i < len; i++) {
      attrs[i] = {
        name: list[i].name,
        value: JSON.stringify(list[i].value)
      };

      if (list[i].start != null) {
        attrs[i].start = list[i].start;
        attrs[i].end = list[i].end;
      }
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processElement(element, options) {
  processKey(element); // determine whether this is a plain element after
  // removing structural attributes

  element.plain = !element.key && !element.scopedSlots && !element.attrsList.length;
  processRef(element);
  processSlotContent(element);
  processSlotOutlet(element);
  processComponent(element);

  for (var i = 0; i < transforms.length; i++) {
    element = transforms[i](element, options) || element;
  }

  processAttrs(element);
  return element;
}

function processKey(el) {
  var exp = getBindingAttr(el, 'key');

  if (exp) {
    if ("development" !== 'production') {
      if (el.tag === 'template') {
        warn$2("<template> cannot be keyed. Place the key on real elements instead.", getRawBindingAttr(el, 'key'));
      }

      if (el.for) {
        var iterator = el.iterator2 || el.iterator1;
        var parent = el.parent;

        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {
          warn$2("Do not use v-for index as key on <transition-group> children, " + "this is the same as not using keys.", getRawBindingAttr(el, 'key'), true
          /* tip */
          );
        }
      }
    }

    el.key = exp;
  }
}

function processRef(el) {
  var ref = getBindingAttr(el, 'ref');

  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor(el) {
  var exp;

  if (exp = getAndRemoveAttr(el, 'v-for')) {
    var res = parseFor(exp);

    if (res) {
      extend(el, res);
    } else if ("development" !== 'production') {
      warn$2("Invalid v-for expression: " + exp, el.rawAttrsMap['v-for']);
    }
  }
}

function parseFor(exp) {
  var inMatch = exp.match(forAliasRE);

  if (!inMatch) {
    return;
  }

  var res = {};
  res.for = inMatch[2].trim();
  var alias = inMatch[1].trim().replace(stripParensRE, '');
  var iteratorMatch = alias.match(forIteratorRE);

  if (iteratorMatch) {
    res.alias = alias.replace(forIteratorRE, '').trim();
    res.iterator1 = iteratorMatch[1].trim();

    if (iteratorMatch[2]) {
      res.iterator2 = iteratorMatch[2].trim();
    }
  } else {
    res.alias = alias;
  }

  return res;
}

function processIf(el) {
  var exp = getAndRemoveAttr(el, 'v-if');

  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }

    var elseif = getAndRemoveAttr(el, 'v-else-if');

    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions(el, parent) {
  var prev = findPrevElement(parent.children);

  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if ("development" !== 'production') {
    warn$2("v-" + (el.elseif ? 'else-if="' + el.elseif + '"' : 'else') + " " + "used on element <" + el.tag + "> without corresponding v-if.", el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']);
  }
}

function findPrevElement(children) {
  var i = children.length;

  while (i--) {
    if (children[i].type === 1) {
      return children[i];
    } else {
      if ("development" !== 'production' && children[i].text !== ' ') {
        warn$2("text \"" + children[i].text.trim() + "\" between v-if and v-else(-if) " + "will be ignored.", children[i]);
      }

      children.pop();
    }
  }
}

function addIfCondition(el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }

  el.ifConditions.push(condition);
}

function processOnce(el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');

  if (once$$1 != null) {
    el.once = true;
  }
} // handle content being passed to a component as slot,
// e.g. <template slot="xxx">, <div slot-scope="xxx">


function processSlotContent(el) {
  var slotScope;

  if (el.tag === 'template') {
    slotScope = getAndRemoveAttr(el, 'scope');
    /* istanbul ignore if */

    if ("development" !== 'production' && slotScope) {
      warn$2("the \"scope\" attribute for scoped slots have been deprecated and " + "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " + "can also be used on plain elements in addition to <template> to " + "denote scoped slots.", el.rawAttrsMap['scope'], true);
    }

    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
  } else if (slotScope = getAndRemoveAttr(el, 'slot-scope')) {
    /* istanbul ignore if */
    if ("development" !== 'production' && el.attrsMap['v-for']) {
      warn$2("Ambiguous combined usage of slot-scope and v-for on <" + el.tag + "> " + "(v-for takes higher priority). Use a wrapper <template> for the " + "scoped slot to make it clearer.", el.rawAttrsMap['slot-scope'], true);
    }

    el.slotScope = slotScope;
  } // slot="xxx"


  var slotTarget = getBindingAttr(el, 'slot');

  if (slotTarget) {
    el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']); // preserve slot as an attribute for native shadow DOM compat
    // only for non-scoped slots.

    if (el.tag !== 'template' && !el.slotScope) {
      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));
    }
  } // 2.6 v-slot syntax


  {
    if (el.tag === 'template') {
      // v-slot on <template>
      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);

      if (slotBinding) {
        if ("development" !== 'production') {
          if (el.slotTarget || el.slotScope) {
            warn$2("Unexpected mixed usage of different slot syntaxes.", el);
          }

          if (el.parent && !maybeComponent(el.parent)) {
            warn$2("<template v-slot> can only appear at the root level inside " + "the receiving the component", el);
          }
        }

        var ref = getSlotName(slotBinding);
        var name = ref.name;
        var dynamic = ref.dynamic;
        el.slotTarget = name;
        el.slotTargetDynamic = dynamic;
        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf
      }
    } else {
      // v-slot on component, denotes default slot
      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);

      if (slotBinding$1) {
        if ("development" !== 'production') {
          if (!maybeComponent(el)) {
            warn$2("v-slot can only be used on components or <template>.", slotBinding$1);
          }

          if (el.slotScope || el.slotTarget) {
            warn$2("Unexpected mixed usage of different slot syntaxes.", el);
          }

          if (el.scopedSlots) {
            warn$2("To avoid scope ambiguity, the default slot should also use " + "<template> syntax when there are other named slots.", slotBinding$1);
          }
        } // add the component's children to its default slot


        var slots = el.scopedSlots || (el.scopedSlots = {});
        var ref$1 = getSlotName(slotBinding$1);
        var name$1 = ref$1.name;
        var dynamic$1 = ref$1.dynamic;
        var slotContainer = slots[name$1] = createASTElement('template', [], el);
        slotContainer.slotTarget = name$1;
        slotContainer.slotTargetDynamic = dynamic$1;
        slotContainer.children = el.children.filter(function (c) {
          if (!c.slotScope) {
            c.parent = slotContainer;
            return true;
          }
        });
        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken; // remove children as they are returned from scopedSlots now

        el.children = []; // mark el non-plain so data gets generated

        el.plain = false;
      }
    }
  }
}

function getSlotName(binding) {
  var name = binding.name.replace(slotRE, '');

  if (!name) {
    if (binding.name[0] !== '#') {
      name = 'default';
    } else if ("development" !== 'production') {
      warn$2("v-slot shorthand syntax requires a slot name.", binding);
    }
  }

  return dynamicArgRE.test(name) // dynamic [name]
  ? {
    name: name.slice(1, -1),
    dynamic: true
  } // static name
  : {
    name: "\"" + name + "\"",
    dynamic: false
  };
} // handle <slot/> outlets


function processSlotOutlet(el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');

    if ("development" !== 'production' && el.key) {
      warn$2("`key` does not work on <slot> because slots are abstract outlets " + "and can possibly expand into multiple elements. " + "Use the key on a wrapping element instead.", getRawBindingAttr(el, 'key'));
    }
  }
}

function processComponent(el) {
  var binding;

  if (binding = getBindingAttr(el, 'is')) {
    el.component = binding;
  }

  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs(el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;

  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;

    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true; // modifiers

      modifiers = parseModifiers(name.replace(dirRE, '')); // support .foo shorthand syntax for the .prop modifier

      if (modifiers) {
        name = name.replace(modifierRE, '');
      }

      if (bindRE.test(name)) {
        // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isDynamic = dynamicArgRE.test(name);

        if (isDynamic) {
          name = name.slice(1, -1);
        }

        if ("development" !== 'production' && value.trim().length === 0) {
          warn$2("The value for a v-bind expression cannot be empty. Found in \"v-bind:" + name + "\"");
        }

        if (modifiers) {
          if (modifiers.prop && !isDynamic) {
            name = camelize(name);

            if (name === 'innerHtml') {
              name = 'innerHTML';
            }
          }

          if (modifiers.camel && !isDynamic) {
            name = camelize(name);
          }

          if (modifiers.sync) {
            syncGen = genAssignmentCode(value, "$event");

            if (!isDynamic) {
              addHandler(el, "update:" + camelize(name), syncGen, null, false, warn$2, list[i]);

              if (hyphenate(name) !== camelize(name)) {
                addHandler(el, "update:" + hyphenate(name), syncGen, null, false, warn$2, list[i]);
              }
            } else {
              // handler w/ dynamic event name
              addHandler(el, "\"update:\"+(" + name + ")", syncGen, null, false, warn$2, list[i], true // dynamic
              );
            }
          }
        }

        if (modifiers && modifiers.prop || !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
          addProp(el, name, value, list[i], isDynamic);
        } else {
          addAttr(el, name, value, list[i], isDynamic);
        }
      } else if (onRE.test(name)) {
        // v-on
        name = name.replace(onRE, '');
        isDynamic = dynamicArgRE.test(name);

        if (isDynamic) {
          name = name.slice(1, -1);
        }

        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);
      } else {
        // normal directives
        name = name.replace(dirRE, ''); // parse arg

        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        isDynamic = false;

        if (arg) {
          name = name.slice(0, -(arg.length + 1));

          if (dynamicArgRE.test(arg)) {
            arg = arg.slice(1, -1);
            isDynamic = true;
          }
        }

        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);

        if ("development" !== 'production' && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if ("development" !== 'production') {
        var res = parseText(value, delimiters);

        if (res) {
          warn$2(name + "=\"" + value + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div id="{{ val }}">, use <div :id="val">.', list[i]);
        }
      }

      addAttr(el, name, JSON.stringify(value), list[i]); // #6887 firefox doesn't update muted state if set via attribute
      // even immediately after element creation

      if (!el.component && name === 'muted' && platformMustUseProp(el.tag, el.attrsMap.type, name)) {
        addProp(el, name, 'true', list[i]);
      }
    }
  }
}

function checkInFor(el) {
  var parent = el;

  while (parent) {
    if (parent.for !== undefined) {
      return true;
    }

    parent = parent.parent;
  }

  return false;
}

function parseModifiers(name) {
  var match = name.match(modifierRE);

  if (match) {
    var ret = {};
    match.forEach(function (m) {
      ret[m.slice(1)] = true;
    });
    return ret;
  }
}

function makeAttrsMap(attrs) {
  var map = {};

  for (var i = 0, l = attrs.length; i < l; i++) {
    if ("development" !== 'production' && map[attrs[i].name] && !isIE && !isEdge) {
      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);
    }

    map[attrs[i].name] = attrs[i].value;
  }

  return map;
} // for script (e.g. type="x/template") or style, do not decode content


function isTextTag(el) {
  return el.tag === 'script' || el.tag === 'style';
}

function isForbiddenTag(el) {
  return el.tag === 'style' || el.tag === 'script' && (!el.attrsMap.type || el.attrsMap.type === 'text/javascript');
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;
/* istanbul ignore next */

function guardIESVGBug(attrs) {
  var res = [];

  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];

    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }

  return res;
}

function checkForAliasModel(el, value) {
  var _el = el;

  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2("<" + el.tag + " v-model=\"" + value + "\">: " + "You are binding v-model directly to a v-for iteration alias. " + "This will not be able to modify the v-for source array because " + "writing to the alias is like modifying a function local variable. " + "Consider using an array of objects and use v-model on an object property instead.", el.rawAttrsMap['v-model']);
    }

    _el = _el.parent;
  }
}
/*  */


function preTransformNode(el, options) {
  if (el.tag === 'input') {
    var map = el.attrsMap;

    if (!map['v-model']) {
      return;
    }

    var typeBinding;

    if (map[':type'] || map['v-bind:type']) {
      typeBinding = getBindingAttr(el, 'type');
    }

    if (!map.type && !typeBinding && map['v-bind']) {
      typeBinding = "(" + map['v-bind'] + ").type";
    }

    if (typeBinding) {
      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
      var ifConditionExtra = ifCondition ? "&&(" + ifCondition + ")" : "";
      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true); // 1. checkbox

      var branch0 = cloneASTElement(el); // process for on the main node

      processFor(branch0);
      addRawAttr(branch0, 'type', 'checkbox');
      processElement(branch0, options);
      branch0.processed = true; // prevent it from double-processed

      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
      addIfCondition(branch0, {
        exp: branch0.if,
        block: branch0
      }); // 2. add radio else-if condition

      var branch1 = cloneASTElement(el);
      getAndRemoveAttr(branch1, 'v-for', true);
      addRawAttr(branch1, 'type', 'radio');
      processElement(branch1, options);
      addIfCondition(branch0, {
        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
        block: branch1
      }); // 3. other

      var branch2 = cloneASTElement(el);
      getAndRemoveAttr(branch2, 'v-for', true);
      addRawAttr(branch2, ':type', typeBinding);
      processElement(branch2, options);
      addIfCondition(branch0, {
        exp: ifCondition,
        block: branch2
      });

      if (hasElse) {
        branch0.else = true;
      } else if (elseIfCondition) {
        branch0.elseif = elseIfCondition;
      }

      return branch0;
    }
  }
}

function cloneASTElement(el) {
  return createASTElement(el.tag, el.attrsList.slice(), el.parent);
}

var model$1 = {
  preTransformNode: preTransformNode
};
var modules$1 = [klass$1, style$1, model$1];
/*  */

function text(el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', "_s(" + dir.value + ")", dir);
  }
}
/*  */


function html(el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', "_s(" + dir.value + ")", dir);
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};
/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};
/*  */

var isStaticKey;
var isPlatformReservedTag;
var genStaticKeysCached = cached(genStaticKeys$1);
/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */

function optimize(root, options) {
  if (!root) {
    return;
  }

  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no; // first pass: mark all non-static nodes.

  markStatic$1(root); // second pass: mark static roots.

  markStaticRoots(root, false);
}

function genStaticKeys$1(keys) {
  return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' + (keys ? ',' + keys : ''));
}

function markStatic$1(node) {
  node.static = isStatic(node);

  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (!isPlatformReservedTag(node.tag) && node.tag !== 'slot' && node.attrsMap['inline-template'] == null) {
      return;
    }

    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);

      if (!child.static) {
        node.static = false;
      }
    }

    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);

        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots(node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    } // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.


    if (node.static && node.children.length && !(node.children.length === 1 && node.children[0].type === 3)) {
      node.staticRoot = true;
      return;
    } else {
      node.staticRoot = false;
    }

    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }

    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic(node) {
  if (node.type === 2) {
    // expression
    return false;
  }

  if (node.type === 3) {
    // text
    return true;
  }

  return !!(node.pre || !node.hasBindings && // no dynamic bindings
  !node.if && !node.for && // not v-if or v-for or v-else
  !isBuiltInTag(node.tag) && // not a built-in
  isPlatformReservedTag(node.tag) && // not a component
  !isDirectChildOfTemplateFor(node) && Object.keys(node).every(isStaticKey));
}

function isDirectChildOfTemplateFor(node) {
  while (node.parent) {
    node = node.parent;

    if (node.tag !== 'template') {
      return false;
    }

    if (node.for) {
      return true;
    }
  }

  return false;
}
/*  */


var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*(?:[\w$]+)?\s*\(/;
var fnInvokeRE = /\([^)]*?\);*$/;
var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/; // KeyboardEvent.keyCode aliases

var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
}; // KeyboardEvent.key aliases

var keyNames = {
  // #7880: IE11 and Edge use `Esc` for Escape key name.
  esc: ['Esc', 'Escape'],
  tab: 'Tab',
  enter: 'Enter',
  // #9112: IE11 uses `Spacebar` for Space key name.
  space: [' ', 'Spacebar'],
  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
  up: ['Up', 'ArrowUp'],
  left: ['Left', 'ArrowLeft'],
  right: ['Right', 'ArrowRight'],
  down: ['Down', 'ArrowDown'],
  // #9112: IE11 uses `Del` for Delete key name.
  'delete': ['Backspace', 'Delete', 'Del']
}; // #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once

var genGuard = function (condition) {
  return "if(" + condition + ")return null;";
};

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers(events, isNative) {
  var prefix = isNative ? 'nativeOn:' : 'on:';
  var staticHandlers = "";
  var dynamicHandlers = "";

  for (var name in events) {
    var handlerCode = genHandler(events[name]);

    if (events[name] && events[name].dynamic) {
      dynamicHandlers += name + "," + handlerCode + ",";
    } else {
      staticHandlers += "\"" + name + "\":" + handlerCode + ",";
    }
  }

  staticHandlers = "{" + staticHandlers.slice(0, -1) + "}";

  if (dynamicHandlers) {
    return prefix + "_d(" + staticHandlers + ",[" + dynamicHandlers.slice(0, -1) + "])";
  } else {
    return prefix + staticHandlers;
  }
}

function genHandler(handler) {
  if (!handler) {
    return 'function(){}';
  }

  if (Array.isArray(handler)) {
    return "[" + handler.map(function (handler) {
      return genHandler(handler);
    }).join(',') + "]";
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);
  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));

  if (!handler.modifiers) {
    if (isMethodPath || isFunctionExpression) {
      return handler.value;
    }

    return "function($event){" + (isFunctionInvocation ? "return " + handler.value : handler.value) + "}"; // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];

    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key]; // left/right

        if (keyCodes[key]) {
          keys.push(key);
        }
      } else if (key === 'exact') {
        var modifiers = handler.modifiers;
        genModifierCode += genGuard(['ctrl', 'shift', 'alt', 'meta'].filter(function (keyModifier) {
          return !modifiers[keyModifier];
        }).map(function (keyModifier) {
          return "$event." + keyModifier + "Key";
        }).join('||'));
      } else {
        keys.push(key);
      }
    }

    if (keys.length) {
      code += genKeyFilter(keys);
    } // Make sure modifiers like prevent and stop get executed after key filtering


    if (genModifierCode) {
      code += genModifierCode;
    }

    var handlerCode = isMethodPath ? "return " + handler.value + "($event)" : isFunctionExpression ? "return (" + handler.value + ")($event)" : isFunctionInvocation ? "return " + handler.value : handler.value;
    return "function($event){" + code + handlerCode + "}";
  }
}

function genKeyFilter(keys) {
  return (// make sure the key filters only apply to KeyboardEvents
    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake
    // key events that do not have keyCode property...
    "if(!$event.type.indexOf('key')&&" + keys.map(genFilterCode).join('&&') + ")return null;"
  );
}

function genFilterCode(key) {
  var keyVal = parseInt(key, 10);

  if (keyVal) {
    return "$event.keyCode!==" + keyVal;
  }

  var keyCode = keyCodes[key];
  var keyName = keyNames[key];
  return "_k($event.keyCode," + JSON.stringify(key) + "," + JSON.stringify(keyCode) + "," + "$event.key," + "" + JSON.stringify(keyName) + ")";
}
/*  */


function on(el, dir) {
  if ("development" !== 'production' && dir.modifiers) {
    warn("v-on without argument does not support modifiers.");
  }

  el.wrapListeners = function (code) {
    return "_g(" + code + "," + dir.value + ")";
  };
}
/*  */


function bind$1(el, dir) {
  el.wrapData = function (code) {
    return "_b(" + code + ",'" + el.tag + "'," + dir.value + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")";
  };
}
/*  */


var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
};
/*  */

var CodegenState = function CodegenState(options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;

  this.maybeComponent = function (el) {
    return !!el.component || !isReservedTag(el.tag);
  };

  this.onceId = 0;
  this.staticRenderFns = [];
  this.pre = false;
};

function generate(ast, options) {
  var state = new CodegenState(options);
  var code = ast ? genElement(ast, state) : '_c("div")';
  return {
    render: "with(this){return " + code + "}",
    staticRenderFns: state.staticRenderFns
  };
}

function genElement(el, state) {
  if (el.parent) {
    el.pre = el.pre || el.parent.pre;
  }

  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state);
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state);
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state);
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state);
  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {
    return genChildren(el, state) || 'void 0';
  } else if (el.tag === 'slot') {
    return genSlot(el, state);
  } else {
    // component or element
    var code;

    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data;

      if (!el.plain || el.pre && state.maybeComponent(el)) {
        data = genData$2(el, state);
      }

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + el.tag + "'" + (data ? "," + data : '') + (children ? "," + children : '') + ")";
    } // module transforms


    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }

    return code;
  }
} // hoist static sub-trees out


function genStatic(el, state) {
  el.staticProcessed = true; // Some elements (templates) need to behave differently inside of a v-pre
  // node.  All pre nodes are static roots, so we can use this as a location to
  // wrap a state change and reset it upon exiting the pre node.

  var originalPreState = state.pre;

  if (el.pre) {
    state.pre = el.pre;
  }

  state.staticRenderFns.push("with(this){return " + genElement(el, state) + "}");
  state.pre = originalPreState;
  return "_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")";
} // v-once


function genOnce(el, state) {
  el.onceProcessed = true;

  if (el.if && !el.ifProcessed) {
    return genIf(el, state);
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;

    while (parent) {
      if (parent.for) {
        key = parent.key;
        break;
      }

      parent = parent.parent;
    }

    if (!key) {
      "development" !== 'production' && state.warn("v-once can only be used inside v-for that is keyed. ", el.rawAttrsMap['v-once']);
      return genElement(el, state);
    }

    return "_o(" + genElement(el, state) + "," + state.onceId++ + "," + key + ")";
  } else {
    return genStatic(el, state);
  }
}

function genIf(el, state, altGen, altEmpty) {
  el.ifProcessed = true; // avoid recursion

  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty);
}

function genIfConditions(conditions, state, altGen, altEmpty) {
  if (!conditions.length) {
    return altEmpty || '_e()';
  }

  var condition = conditions.shift();

  if (condition.exp) {
    return "(" + condition.exp + ")?" + genTernaryExp(condition.block) + ":" + genIfConditions(conditions, state, altGen, altEmpty);
  } else {
    return "" + genTernaryExp(condition.block);
  } // v-if with v-once should generate code like (a)?_m(0):_m(1)


  function genTernaryExp(el) {
    return altGen ? altGen(el, state) : el.once ? genOnce(el, state) : genElement(el, state);
  }
}

function genFor(el, state, altGen, altHelper) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
  var iterator2 = el.iterator2 ? "," + el.iterator2 : '';

  if ("development" !== 'production' && state.maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key) {
    state.warn("<" + el.tag + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " + "v-for should have explicit keys. " + "See https://vuejs.org/guide/list.html#key for more info.", el.rawAttrsMap['v-for'], true
    /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion

  return (altHelper || '_l') + "((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + (altGen || genElement)(el, state) + '})';
}

function genData$2(el, state) {
  var data = '{'; // directives first.
  // directives may mutate the el's other properties before they are generated.

  var dirs = genDirectives(el, state);

  if (dirs) {
    data += dirs + ',';
  } // key


  if (el.key) {
    data += "key:" + el.key + ",";
  } // ref


  if (el.ref) {
    data += "ref:" + el.ref + ",";
  }

  if (el.refInFor) {
    data += "refInFor:true,";
  } // pre


  if (el.pre) {
    data += "pre:true,";
  } // record original tag name for components using "is" attribute


  if (el.component) {
    data += "tag:\"" + el.tag + "\",";
  } // module data generation functions


  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  } // attributes


  if (el.attrs) {
    data += "attrs:" + genProps(el.attrs) + ",";
  } // DOM props


  if (el.props) {
    data += "domProps:" + genProps(el.props) + ",";
  } // event handlers


  if (el.events) {
    data += genHandlers(el.events, false) + ",";
  }

  if (el.nativeEvents) {
    data += genHandlers(el.nativeEvents, true) + ",";
  } // slot target
  // only for non-scoped slots


  if (el.slotTarget && !el.slotScope) {
    data += "slot:" + el.slotTarget + ",";
  } // scoped slots


  if (el.scopedSlots) {
    data += genScopedSlots(el, el.scopedSlots, state) + ",";
  } // component v-model


  if (el.model) {
    data += "model:{value:" + el.model.value + ",callback:" + el.model.callback + ",expression:" + el.model.expression + "},";
  } // inline-template


  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);

    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }

  data = data.replace(/,$/, '') + '}'; // v-bind dynamic argument wrap
  // v-bind with dynamic arguments must be applied using the same v-bind object
  // merge helper so that class/style/mustUseProp attrs are handled correctly.

  if (el.dynamicAttrs) {
    data = "_b(" + data + ",\"" + el.tag + "\"," + genProps(el.dynamicAttrs) + ")";
  } // v-bind data wrap


  if (el.wrapData) {
    data = el.wrapData(data);
  } // v-on data wrap


  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }

  return data;
}

function genDirectives(el, state) {
  var dirs = el.directives;

  if (!dirs) {
    return;
  }

  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;

  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];

    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }

    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + dir.name + "\",rawName:\"" + dir.rawName + "\"" + (dir.value ? ",value:(" + dir.value + "),expression:" + JSON.stringify(dir.value) : '') + (dir.arg ? ",arg:" + (dir.isDynamicArg ? dir.arg : "\"" + dir.arg + "\"") : '') + (dir.modifiers ? ",modifiers:" + JSON.stringify(dir.modifiers) : '') + "},";
    }
  }

  if (hasRuntime) {
    return res.slice(0, -1) + ']';
  }
}

function genInlineTemplate(el, state) {
  var ast = el.children[0];

  if ("development" !== 'production' && (el.children.length !== 1 || ast.type !== 1)) {
    state.warn('Inline-template components must have exactly one child element.', {
      start: el.start
    });
  }

  if (ast && ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return "inlineTemplate:{render:function(){" + inlineRenderFns.render + "},staticRenderFns:[" + inlineRenderFns.staticRenderFns.map(function (code) {
      return "function(){" + code + "}";
    }).join(',') + "]}";
  }
}

function genScopedSlots(el, slots, state) {
  // by default scoped slots are considered "stable", this allows child
  // components with only scoped slots to skip forced updates from parent.
  // but in some cases we have to bail-out of this optimization
  // for example if the slot contains dynamic names, has v-if or v-for on them...
  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {
    var slot = slots[key];
    return slot.slotTargetDynamic || slot.if || slot.for || containsSlotChild(slot) // is passing down slot from parent which may be dynamic
    ;
  }); // #9534: if a component with scoped slots is inside a conditional branch,
  // it's possible for the same component to be reused but with different
  // compiled slot content. To avoid that, we generate a unique key based on
  // the generated code of all the slot contents.

  var needsKey = !!el.if; // OR when it is inside another scoped slot or v-for (the reactivity may be
  // disconnected due to the intermediate scope variable)
  // #9438, #9506
  // TODO: this can be further optimized by properly analyzing in-scope bindings
  // and skip force updating ones that do not actually use scope variables.

  if (!needsForceUpdate) {
    var parent = el.parent;

    while (parent) {
      if (parent.slotScope && parent.slotScope !== emptySlotScopeToken || parent.for) {
        needsForceUpdate = true;
        break;
      }

      if (parent.if) {
        needsKey = true;
      }

      parent = parent.parent;
    }
  }

  var generatedSlots = Object.keys(slots).map(function (key) {
    return genScopedSlot(slots[key], state);
  }).join(',');
  return "scopedSlots:_u([" + generatedSlots + "]" + (needsForceUpdate ? ",null,true" : "") + (!needsForceUpdate && needsKey ? ",null,false," + hash(generatedSlots) : "") + ")";
}

function hash(str) {
  var hash = 5381;
  var i = str.length;

  while (i) {
    hash = hash * 33 ^ str.charCodeAt(--i);
  }

  return hash >>> 0;
}

function containsSlotChild(el) {
  if (el.type === 1) {
    if (el.tag === 'slot') {
      return true;
    }

    return el.children.some(containsSlotChild);
  }

  return false;
}

function genScopedSlot(el, state) {
  var isLegacySyntax = el.attrsMap['slot-scope'];

  if (el.if && !el.ifProcessed && !isLegacySyntax) {
    return genIf(el, state, genScopedSlot, "null");
  }

  if (el.for && !el.forProcessed) {
    return genFor(el, state, genScopedSlot);
  }

  var slotScope = el.slotScope === emptySlotScopeToken ? "" : String(el.slotScope);
  var fn = "function(" + slotScope + "){" + "return " + (el.tag === 'template' ? el.if && isLegacySyntax ? "(" + el.if + ")?" + (genChildren(el, state) || 'undefined') + ":undefined" : genChildren(el, state) || 'undefined' : genElement(el, state)) + "}"; // reverse proxy v-slot without scope on this.$slots

  var reverseProxy = slotScope ? "" : ",proxy:true";
  return "{key:" + (el.slotTarget || "\"default\"") + ",fn:" + fn + reverseProxy + "}";
}

function genChildren(el, state, checkSkip, altGenElement, altGenNode) {
  var children = el.children;

  if (children.length) {
    var el$1 = children[0]; // optimize single v-for

    if (children.length === 1 && el$1.for && el$1.tag !== 'template' && el$1.tag !== 'slot') {
      var normalizationType = checkSkip ? state.maybeComponent(el$1) ? ",1" : ",0" : "";
      return "" + (altGenElement || genElement)(el$1, state) + normalizationType;
    }

    var normalizationType$1 = checkSkip ? getNormalizationType(children, state.maybeComponent) : 0;
    var gen = altGenNode || genNode;
    return "[" + children.map(function (c) {
      return gen(c, state);
    }).join(',') + "]" + (normalizationType$1 ? "," + normalizationType$1 : '');
  }
} // determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed


function getNormalizationType(children, maybeComponent) {
  var res = 0;

  for (var i = 0; i < children.length; i++) {
    var el = children[i];

    if (el.type !== 1) {
      continue;
    }

    if (needsNormalization(el) || el.ifConditions && el.ifConditions.some(function (c) {
      return needsNormalization(c.block);
    })) {
      res = 2;
      break;
    }

    if (maybeComponent(el) || el.ifConditions && el.ifConditions.some(function (c) {
      return maybeComponent(c.block);
    })) {
      res = 1;
    }
  }

  return res;
}

function needsNormalization(el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot';
}

function genNode(node, state) {
  if (node.type === 1) {
    return genElement(node, state);
  } else if (node.type === 3 && node.isComment) {
    return genComment(node);
  } else {
    return genText(node);
  }
}

function genText(text) {
  return "_v(" + (text.type === 2 ? text.expression // no need for () because already wrapped in _s()
  : transformSpecialNewlines(JSON.stringify(text.text))) + ")";
}

function genComment(comment) {
  return "_e(" + JSON.stringify(comment.text) + ")";
}

function genSlot(el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? "," + children : '');
  var attrs = el.attrs || el.dynamicAttrs ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) {
    return {
      // slot props are camelized
      name: camelize(attr.name),
      value: attr.value,
      dynamic: attr.dynamic
    };
  })) : null;
  var bind$$1 = el.attrsMap['v-bind'];

  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }

  if (attrs) {
    res += "," + attrs;
  }

  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }

  return res + ')';
} // componentName is el.component, take it as argument to shun flow's pessimistic refinement


function genComponent(componentName, el, state) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return "_c(" + componentName + "," + genData$2(el, state) + (children ? "," + children : '') + ")";
}

function genProps(props) {
  var staticProps = "";
  var dynamicProps = "";

  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    var value = transformSpecialNewlines(prop.value);

    if (prop.dynamic) {
      dynamicProps += prop.name + "," + value + ",";
    } else {
      staticProps += "\"" + prop.name + "\":" + value + ",";
    }
  }

  staticProps = "{" + staticProps.slice(0, -1) + "}";

  if (dynamicProps) {
    return "_d(" + staticProps + ",[" + dynamicProps.slice(0, -1) + "])";
  } else {
    return staticProps;
  }
} // #3895, #4268


function transformSpecialNewlines(text) {
  return text.replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029');
}
/*  */
// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed


var prohibitedKeywordRE = new RegExp('\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b') + '\\b'); // these unary operators should not be used as property/method names

var unaryOperatorsRE = new RegExp('\\b' + 'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)'); // strip strings in expressions

var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g; // detect problematic expressions in a template

function detectErrors(ast, warn) {
  if (ast) {
    checkNode(ast, warn);
  }
}

function checkNode(node, warn) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];

        if (value) {
          var range = node.rawAttrsMap[name];

          if (name === 'v-for') {
            checkFor(node, "v-for=\"" + value + "\"", warn, range);
          } else if (onRE.test(name)) {
            checkEvent(value, name + "=\"" + value + "\"", warn, range);
          } else {
            checkExpression(value, name + "=\"" + value + "\"", warn, range);
          }
        }
      }
    }

    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], warn);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, warn, node);
  }
}

function checkEvent(exp, text, warn, range) {
  var stipped = exp.replace(stripStringRE, '');
  var keywordMatch = stipped.match(unaryOperatorsRE);

  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
    warn("avoid using JavaScript unary operator as property name: " + "\"" + keywordMatch[0] + "\" in expression " + text.trim(), range);
  }

  checkExpression(exp, text, warn, range);
}

function checkFor(node, text, warn, range) {
  checkExpression(node.for || '', text, warn, range);
  checkIdentifier(node.alias, 'v-for alias', text, warn, range);
  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);
  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);
}

function checkIdentifier(ident, type, text, warn, range) {
  if (typeof ident === 'string') {
    try {
      new Function("var " + ident + "=_");
    } catch (e) {
      warn("invalid " + type + " \"" + ident + "\" in expression: " + text.trim(), range);
    }
  }
}

function checkExpression(exp, text, warn, range) {
  try {
    new Function("return " + exp);
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);

    if (keywordMatch) {
      warn("avoid using JavaScript keyword as property name: " + "\"" + keywordMatch[0] + "\"\n  Raw expression: " + text.trim(), range);
    } else {
      warn("invalid expression: " + e.message + " in\n\n" + "    " + exp + "\n\n" + "  Raw expression: " + text.trim() + "\n", range);
    }
  }
}
/*  */


var range = 2;

function generateCodeFrame(source, start, end) {
  if (start === void 0) start = 0;
  if (end === void 0) end = source.length;
  var lines = source.split(/\r?\n/);
  var count = 0;
  var res = [];

  for (var i = 0; i < lines.length; i++) {
    count += lines[i].length + 1;

    if (count >= start) {
      for (var j = i - range; j <= i + range || end > count; j++) {
        if (j < 0 || j >= lines.length) {
          continue;
        }

        res.push("" + (j + 1) + repeat$1(" ", 3 - String(j + 1).length) + "|  " + lines[j]);
        var lineLength = lines[j].length;

        if (j === i) {
          // push underline
          var pad = start - (count - lineLength) + 1;
          var length = end > count ? lineLength - pad : end - start;
          res.push("   |  " + repeat$1(" ", pad) + repeat$1("^", length));
        } else if (j > i) {
          if (end > count) {
            var length$1 = Math.min(end - count, lineLength);
            res.push("   |  " + repeat$1("^", length$1));
          }

          count += lineLength + 1;
        }
      }

      break;
    }
  }

  return res.join('\n');
}

function repeat$1(str, n) {
  var result = '';

  if (n > 0) {
    while (true) {
      // eslint-disable-line
      if (n & 1) {
        result += str;
      }

      n >>>= 1;

      if (n <= 0) {
        break;
      }

      str += str;
    }
  }

  return result;
}
/*  */


function createFunction(code, errors) {
  try {
    return new Function(code);
  } catch (err) {
    errors.push({
      err: err,
      code: code
    });
    return noop;
  }
}

function createCompileToFunctionFn(compile) {
  var cache = Object.create(null);
  return function compileToFunctions(template, options, vm) {
    options = extend({}, options);
    var warn$$1 = options.warn || warn;
    delete options.warn;
    /* istanbul ignore if */

    if ("development" !== 'production') {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn$$1('It seems you are using the standalone build of Vue.js in an ' + 'environment with Content Security Policy that prohibits unsafe-eval. ' + 'The template compiler cannot work in this environment. Consider ' + 'relaxing the policy to allow unsafe-eval or pre-compiling your ' + 'templates into render functions.');
        }
      }
    } // check cache


    var key = options.delimiters ? String(options.delimiters) + template : template;

    if (cache[key]) {
      return cache[key];
    } // compile


    var compiled = compile(template, options); // check compilation errors/tips

    if ("development" !== 'production') {
      if (compiled.errors && compiled.errors.length) {
        if (options.outputSourceRange) {
          compiled.errors.forEach(function (e) {
            warn$$1("Error compiling template:\n\n" + e.msg + "\n\n" + generateCodeFrame(template, e.start, e.end), vm);
          });
        } else {
          warn$$1("Error compiling template:\n\n" + template + "\n\n" + compiled.errors.map(function (e) {
            return "- " + e;
          }).join('\n') + '\n', vm);
        }
      }

      if (compiled.tips && compiled.tips.length) {
        if (options.outputSourceRange) {
          compiled.tips.forEach(function (e) {
            return tip(e.msg, vm);
          });
        } else {
          compiled.tips.forEach(function (msg) {
            return tip(msg, vm);
          });
        }
      }
    } // turn code into functions


    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors);
    }); // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use

    /* istanbul ignore if */

    if ("development" !== 'production') {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn$$1("Failed to generate render function:\n\n" + fnGenErrors.map(function (ref) {
          var err = ref.err;
          var code = ref.code;
          return err.toString() + " in\n\n" + code + "\n";
        }).join('\n'), vm);
      }
    }

    return cache[key] = res;
  };
}
/*  */


function createCompilerCreator(baseCompile) {
  return function createCompiler(baseOptions) {
    function compile(template, options) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];

      var warn = function (msg, range, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        if ("development" !== 'production' && options.outputSourceRange) {
          // $flow-disable-line
          var leadingSpaceLength = template.match(/^\s*/)[0].length;

          warn = function (msg, range, tip) {
            var data = {
              msg: msg
            };

            if (range) {
              if (range.start != null) {
                data.start = range.start + leadingSpaceLength;
              }

              if (range.end != null) {
                data.end = range.end + leadingSpaceLength;
              }
            }

            (tip ? tips : errors).push(data);
          };
        } // merge custom modules


        if (options.modules) {
          finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
        } // merge custom directives


        if (options.directives) {
          finalOptions.directives = extend(Object.create(baseOptions.directives || null), options.directives);
        } // copy other options


        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      finalOptions.warn = warn;
      var compiled = baseCompile(template.trim(), finalOptions);

      if ("development" !== 'production') {
        detectErrors(compiled.ast, warn);
      }

      compiled.errors = errors;
      compiled.tips = tips;
      return compiled;
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    };
  };
}
/*  */
// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.


var createCompiler = createCompilerCreator(function baseCompile(template, options) {
  var ast = parse(template.trim(), options);

  if (options.optimize !== false) {
    optimize(ast, options);
  }

  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  };
});
/*  */

var ref$1 = createCompiler(baseOptions);
var compile = ref$1.compile;
var compileToFunctions = ref$1.compileToFunctions;
/*  */
// check whether current browser encodes a char inside attribute values

var div;

function getShouldDecode(href) {
  div = div || document.createElement('div');
  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
  return div.innerHTML.indexOf('&#10;') > 0;
} // #3663: IE encodes newlines inside attribute values while other browsers don't


var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false; // #6828: chrome encodes content in a[href]

var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;
/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML;
});
var mount = Vue.prototype.$mount;

Vue.prototype.$mount = function (el, hydrating) {
  el = el && query(el);
  /* istanbul ignore if */

  if (el === document.body || el === document.documentElement) {
    "development" !== 'production' && warn("Do not mount Vue to <html> or <body> - mount to normal elements instead.");
    return this;
  }

  var options = this.$options; // resolve template/el and convert to render function

  if (!options.render) {
    var template = options.template;

    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */

          if ("development" !== 'production' && !template) {
            warn("Template element not found or is empty: " + options.template, this);
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if ("development" !== 'production') {
          warn('invalid template option:' + template, this);
        }

        return this;
      }
    } else if (el) {
      template = getOuterHTML(el);
    }

    if (template) {
      /* istanbul ignore if */
      if ("development" !== 'production' && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        outputSourceRange: "development" !== 'production',
        shouldDecodeNewlines: shouldDecodeNewlines,
        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;
      /* istanbul ignore if */

      if ("development" !== 'production' && config.performance && mark) {
        mark('compile end');
        measure("vue " + this._name + " compile", 'compile', 'compile end');
      }
    }
  }

  return mount.call(this, el, hydrating);
};
/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */


function getOuterHTML(el) {
  if (el.outerHTML) {
    return el.outerHTML;
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML;
  }
}

Vue.compile = compileToFunctions;
var _default = Vue;
exports.default = _default;
},{}],"node_modules/vue-multiselect/dist/vue-multiselect.min.js":[function(require,module,exports) {
var define;
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function (obj) { return typeof obj; }; } else { _typeof = function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.VueMultiselect = e() : t.VueMultiselect = e();
}(this, function () {
  return function (t) {
    function e(i) {
      if (n[i]) return n[i].exports;
      var r = n[i] = {
        i: i,
        l: !1,
        exports: {}
      };
      return t[i].call(r.exports, r, r.exports, e), r.l = !0, r.exports;
    }

    var n = {};
    return e.m = t, e.c = n, e.i = function (t) {
      return t;
    }, e.d = function (t, n, i) {
      e.o(t, n) || Object.defineProperty(t, n, {
        configurable: !1,
        enumerable: !0,
        get: i
      });
    }, e.n = function (t) {
      var n = t && t.__esModule ? function () {
        return t.default;
      } : function () {
        return t;
      };
      return e.d(n, "a", n), n;
    }, e.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }, e.p = "/", e(e.s = 60);
  }([function (t, e) {
    var n = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
    "number" == typeof __g && (__g = n);
  }, function (t, e, n) {
    var i = n(49)("wks"),
        r = n(30),
        o = n(0).Symbol,
        s = "function" == typeof o;
    (t.exports = function (t) {
      return i[t] || (i[t] = s && o[t] || (s ? o : r)("Symbol." + t));
    }).store = i;
  }, function (t, e, n) {
    var i = n(5);

    t.exports = function (t) {
      if (!i(t)) throw TypeError(t + " is not an object!");
      return t;
    };
  }, function (t, e, n) {
    var i = n(0),
        r = n(10),
        o = n(8),
        s = n(6),
        u = n(11),
        a = function (t, e, n) {
      var l,
          c,
          f,
          p,
          h = t & a.F,
          d = t & a.G,
          v = t & a.S,
          g = t & a.P,
          y = t & a.B,
          m = d ? i : v ? i[e] || (i[e] = {}) : (i[e] || {}).prototype,
          b = d ? r : r[e] || (r[e] = {}),
          _ = b.prototype || (b.prototype = {});

      d && (n = e);

      for (l in n) c = !h && m && void 0 !== m[l], f = (c ? m : n)[l], p = y && c ? u(f, i) : g && "function" == typeof f ? u(Function.call, f) : f, m && s(m, l, f, t & a.U), b[l] != f && o(b, l, p), g && _[l] != f && (_[l] = f);
    };

    i.core = r, a.F = 1, a.G = 2, a.S = 4, a.P = 8, a.B = 16, a.W = 32, a.U = 64, a.R = 128, t.exports = a;
  }, function (t, e, n) {
    t.exports = !n(7)(function () {
      return 7 != Object.defineProperty({}, "a", {
        get: function () {
          return 7;
        }
      }).a;
    });
  }, function (t, e) {
    t.exports = function (t) {
      return "object" == _typeof(t) ? null !== t : "function" == typeof t;
    };
  }, function (t, e, n) {
    var i = n(0),
        r = n(8),
        o = n(12),
        s = n(30)("src"),
        u = Function.toString,
        a = ("" + u).split("toString");
    n(10).inspectSource = function (t) {
      return u.call(t);
    }, (t.exports = function (t, e, n, u) {
      var l = "function" == typeof n;
      l && (o(n, "name") || r(n, "name", e)), t[e] !== n && (l && (o(n, s) || r(n, s, t[e] ? "" + t[e] : a.join(String(e)))), t === i ? t[e] = n : u ? t[e] ? t[e] = n : r(t, e, n) : (delete t[e], r(t, e, n)));
    })(Function.prototype, "toString", function () {
      return "function" == typeof this && this[s] || u.call(this);
    });
  }, function (t, e) {
    t.exports = function (t) {
      try {
        return !!t();
      } catch (t) {
        return !0;
      }
    };
  }, function (t, e, n) {
    var i = n(13),
        r = n(25);
    t.exports = n(4) ? function (t, e, n) {
      return i.f(t, e, r(1, n));
    } : function (t, e, n) {
      return t[e] = n, t;
    };
  }, function (t, e) {
    var n = {}.toString;

    t.exports = function (t) {
      return n.call(t).slice(8, -1);
    };
  }, function (t, e) {
    var n = t.exports = {
      version: "2.5.7"
    };
    "number" == typeof __e && (__e = n);
  }, function (t, e, n) {
    var i = n(14);

    t.exports = function (t, e, n) {
      if (i(t), void 0 === e) return t;

      switch (n) {
        case 1:
          return function (n) {
            return t.call(e, n);
          };

        case 2:
          return function (n, i) {
            return t.call(e, n, i);
          };

        case 3:
          return function (n, i, r) {
            return t.call(e, n, i, r);
          };
      }

      return function () {
        return t.apply(e, arguments);
      };
    };
  }, function (t, e) {
    var n = {}.hasOwnProperty;

    t.exports = function (t, e) {
      return n.call(t, e);
    };
  }, function (t, e, n) {
    var i = n(2),
        r = n(41),
        o = n(29),
        s = Object.defineProperty;
    e.f = n(4) ? Object.defineProperty : function (t, e, n) {
      if (i(t), e = o(e, !0), i(n), r) try {
        return s(t, e, n);
      } catch (t) {}
      if ("get" in n || "set" in n) throw TypeError("Accessors not supported!");
      return "value" in n && (t[e] = n.value), t;
    };
  }, function (t, e) {
    t.exports = function (t) {
      if ("function" != typeof t) throw TypeError(t + " is not a function!");
      return t;
    };
  }, function (t, e) {
    t.exports = {};
  }, function (t, e) {
    t.exports = function (t) {
      if (void 0 == t) throw TypeError("Can't call method on  " + t);
      return t;
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(7);

    t.exports = function (t, e) {
      return !!t && i(function () {
        e ? t.call(null, function () {}, 1) : t.call(null);
      });
    };
  }, function (t, e, n) {
    var i = n(23),
        r = n(16);

    t.exports = function (t) {
      return i(r(t));
    };
  }, function (t, e, n) {
    var i = n(53),
        r = Math.min;

    t.exports = function (t) {
      return t > 0 ? r(i(t), 9007199254740991) : 0;
    };
  }, function (t, e, n) {
    var i = n(11),
        r = n(23),
        o = n(28),
        s = n(19),
        u = n(64);

    t.exports = function (t, e) {
      var n = 1 == t,
          a = 2 == t,
          l = 3 == t,
          c = 4 == t,
          f = 6 == t,
          p = 5 == t || f,
          h = e || u;
      return function (e, u, d) {
        for (var v, g, y = o(e), m = r(y), b = i(u, d, 3), _ = s(m.length), x = 0, w = n ? h(e, _) : a ? h(e, 0) : void 0; _ > x; x++) if ((p || x in m) && (v = m[x], g = b(v, x, y), t)) if (n) w[x] = g;else if (g) switch (t) {
          case 3:
            return !0;

          case 5:
            return v;

          case 6:
            return x;

          case 2:
            w.push(v);
        } else if (c) return !1;

        return f ? -1 : l || c ? c : w;
      };
    };
  }, function (t, e, n) {
    var i = n(5),
        r = n(0).document,
        o = i(r) && i(r.createElement);

    t.exports = function (t) {
      return o ? r.createElement(t) : {};
    };
  }, function (t, e) {
    t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
  }, function (t, e, n) {
    var i = n(9);
    t.exports = Object("z").propertyIsEnumerable(0) ? Object : function (t) {
      return "String" == i(t) ? t.split("") : Object(t);
    };
  }, function (t, e) {
    t.exports = !1;
  }, function (t, e) {
    t.exports = function (t, e) {
      return {
        enumerable: !(1 & t),
        configurable: !(2 & t),
        writable: !(4 & t),
        value: e
      };
    };
  }, function (t, e, n) {
    var i = n(13).f,
        r = n(12),
        o = n(1)("toStringTag");

    t.exports = function (t, e, n) {
      t && !r(t = n ? t : t.prototype, o) && i(t, o, {
        configurable: !0,
        value: e
      });
    };
  }, function (t, e, n) {
    var i = n(49)("keys"),
        r = n(30);

    t.exports = function (t) {
      return i[t] || (i[t] = r(t));
    };
  }, function (t, e, n) {
    var i = n(16);

    t.exports = function (t) {
      return Object(i(t));
    };
  }, function (t, e, n) {
    var i = n(5);

    t.exports = function (t, e) {
      if (!i(t)) return t;
      var n, r;
      if (e && "function" == typeof (n = t.toString) && !i(r = n.call(t))) return r;
      if ("function" == typeof (n = t.valueOf) && !i(r = n.call(t))) return r;
      if (!e && "function" == typeof (n = t.toString) && !i(r = n.call(t))) return r;
      throw TypeError("Can't convert object to primitive value");
    };
  }, function (t, e) {
    var n = 0,
        i = Math.random();

    t.exports = function (t) {
      return "Symbol(".concat(void 0 === t ? "" : t, ")_", (++n + i).toString(36));
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(0),
        r = n(12),
        o = n(9),
        s = n(67),
        u = n(29),
        a = n(7),
        l = n(77).f,
        c = n(45).f,
        f = n(13).f,
        p = n(51).trim,
        h = i.Number,
        d = h,
        v = h.prototype,
        g = "Number" == o(n(44)(v)),
        y = "trim" in String.prototype,
        m = function (t) {
      var e = u(t, !1);

      if ("string" == typeof e && e.length > 2) {
        e = y ? e.trim() : p(e, 3);
        var n,
            i,
            r,
            o = e.charCodeAt(0);

        if (43 === o || 45 === o) {
          if (88 === (n = e.charCodeAt(2)) || 120 === n) return NaN;
        } else if (48 === o) {
          switch (e.charCodeAt(1)) {
            case 66:
            case 98:
              i = 2, r = 49;
              break;

            case 79:
            case 111:
              i = 8, r = 55;
              break;

            default:
              return +e;
          }

          for (var s, a = e.slice(2), l = 0, c = a.length; l < c; l++) if ((s = a.charCodeAt(l)) < 48 || s > r) return NaN;

          return parseInt(a, i);
        }
      }

      return +e;
    };

    if (!h(" 0o1") || !h("0b1") || h("+0x1")) {
      h = function (t) {
        var e = arguments.length < 1 ? 0 : t,
            n = this;
        return n instanceof h && (g ? a(function () {
          v.valueOf.call(n);
        }) : "Number" != o(n)) ? s(new d(m(e)), n, h) : m(e);
      };

      for (var b, _ = n(4) ? l(d) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), x = 0; _.length > x; x++) r(d, b = _[x]) && !r(h, b) && f(h, b, c(d, b));

      h.prototype = v, v.constructor = h, n(6)(i, "Number", h);
    }
  }, function (t, e, n) {
    "use strict";

    function i(t) {
      return 0 !== t && (!(!Array.isArray(t) || 0 !== t.length) || !t);
    }

    function r(t) {
      return function () {
        return !t.apply(void 0, arguments);
      };
    }

    function o(t, e) {
      return void 0 === t && (t = "undefined"), null === t && (t = "null"), !1 === t && (t = "false"), -1 !== t.toString().toLowerCase().indexOf(e.trim());
    }

    function s(t, e, n, i) {
      return t.filter(function (t) {
        return o(i(t, n), e);
      });
    }

    function u(t) {
      return t.filter(function (t) {
        return !t.$isLabel;
      });
    }

    function a(t, e) {
      return function (n) {
        return n.reduce(function (n, i) {
          return i[t] && i[t].length ? (n.push({
            $groupLabel: i[e],
            $isLabel: !0
          }), n.concat(i[t])) : n;
        }, []);
      };
    }

    function l(t, e, i, r, o) {
      return function (u) {
        return u.map(function (u) {
          var a;
          if (!u[i]) return console.warn("Options passed to vue-multiselect do not contain groups, despite the config."), [];
          var l = s(u[i], t, e, o);
          return l.length ? (a = {}, n.i(d.a)(a, r, u[r]), n.i(d.a)(a, i, l), a) : [];
        });
      };
    }

    var c = n(59),
        f = n(54),
        p = (n.n(f), n(95)),
        h = (n.n(p), n(31)),
        d = (n.n(h), n(58)),
        v = n(91),
        g = (n.n(v), n(98)),
        y = (n.n(g), n(92)),
        m = (n.n(y), n(88)),
        b = (n.n(m), n(97)),
        _ = (n.n(b), n(89)),
        x = (n.n(_), n(96)),
        w = (n.n(x), n(93)),
        S = (n.n(w), n(90)),
        O = (n.n(S), function () {
      for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];

      return function (t) {
        return e.reduce(function (t, e) {
          return e(t);
        }, t);
      };
    });

    e.a = {
      data: function () {
        return {
          search: "",
          isOpen: !1,
          preferredOpenDirection: "below",
          optimizedHeight: this.maxHeight
        };
      },
      props: {
        internalSearch: {
          type: Boolean,
          default: !0
        },
        options: {
          type: Array,
          required: !0
        },
        multiple: {
          type: Boolean,
          default: !1
        },
        value: {
          type: null,
          default: function () {
            return [];
          }
        },
        trackBy: {
          type: String
        },
        label: {
          type: String
        },
        searchable: {
          type: Boolean,
          default: !0
        },
        clearOnSelect: {
          type: Boolean,
          default: !0
        },
        hideSelected: {
          type: Boolean,
          default: !1
        },
        placeholder: {
          type: String,
          default: "Select option"
        },
        allowEmpty: {
          type: Boolean,
          default: !0
        },
        resetAfter: {
          type: Boolean,
          default: !1
        },
        closeOnSelect: {
          type: Boolean,
          default: !0
        },
        customLabel: {
          type: Function,
          default: function (t, e) {
            return i(t) ? "" : e ? t[e] : t;
          }
        },
        taggable: {
          type: Boolean,
          default: !1
        },
        tagPlaceholder: {
          type: String,
          default: "Press enter to create a tag"
        },
        tagPosition: {
          type: String,
          default: "top"
        },
        max: {
          type: [Number, Boolean],
          default: !1
        },
        id: {
          default: null
        },
        optionsLimit: {
          type: Number,
          default: 1e3
        },
        groupValues: {
          type: String
        },
        groupLabel: {
          type: String
        },
        groupSelect: {
          type: Boolean,
          default: !1
        },
        blockKeys: {
          type: Array,
          default: function () {
            return [];
          }
        },
        preserveSearch: {
          type: Boolean,
          default: !1
        },
        preselectFirst: {
          type: Boolean,
          default: !1
        }
      },
      mounted: function () {
        !this.multiple && this.max && console.warn("[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false."), this.preselectFirst && !this.internalValue.length && this.options.length && this.select(this.filteredOptions[0]);
      },
      computed: {
        internalValue: function () {
          return this.value || 0 === this.value ? Array.isArray(this.value) ? this.value : [this.value] : [];
        },
        filteredOptions: function () {
          var t = this.search || "",
              e = t.toLowerCase().trim(),
              n = this.options.concat();
          return n = this.internalSearch ? this.groupValues ? this.filterAndFlat(n, e, this.label) : s(n, e, this.label, this.customLabel) : this.groupValues ? a(this.groupValues, this.groupLabel)(n) : n, n = this.hideSelected ? n.filter(r(this.isSelected)) : n, this.taggable && e.length && !this.isExistingOption(e) && ("bottom" === this.tagPosition ? n.push({
            isTag: !0,
            label: t
          }) : n.unshift({
            isTag: !0,
            label: t
          })), n.slice(0, this.optionsLimit);
        },
        valueKeys: function () {
          var t = this;
          return this.trackBy ? this.internalValue.map(function (e) {
            return e[t.trackBy];
          }) : this.internalValue;
        },
        optionKeys: function () {
          var t = this;
          return (this.groupValues ? this.flatAndStrip(this.options) : this.options).map(function (e) {
            return t.customLabel(e, t.label).toString().toLowerCase();
          });
        },
        currentOptionLabel: function () {
          return this.multiple ? this.searchable ? "" : this.placeholder : this.internalValue.length ? this.getOptionLabel(this.internalValue[0]) : this.searchable ? "" : this.placeholder;
        }
      },
      watch: {
        internalValue: function () {
          this.resetAfter && this.internalValue.length && (this.search = "", this.$emit("input", this.multiple ? [] : null));
        },
        search: function () {
          this.$emit("search-change", this.search, this.id);
        }
      },
      methods: {
        getValue: function () {
          return this.multiple ? this.internalValue : 0 === this.internalValue.length ? null : this.internalValue[0];
        },
        filterAndFlat: function (t, e, n) {
          return O(l(e, n, this.groupValues, this.groupLabel, this.customLabel), a(this.groupValues, this.groupLabel))(t);
        },
        flatAndStrip: function (t) {
          return O(a(this.groupValues, this.groupLabel), u)(t);
        },
        updateSearch: function (t) {
          this.search = t;
        },
        isExistingOption: function (t) {
          return !!this.options && this.optionKeys.indexOf(t) > -1;
        },
        isSelected: function (t) {
          var e = this.trackBy ? t[this.trackBy] : t;
          return this.valueKeys.indexOf(e) > -1;
        },
        isOptionDisabled: function (t) {
          return !!t.$isDisabled;
        },
        getOptionLabel: function (t) {
          if (i(t)) return "";
          if (t.isTag) return t.label;
          if (t.$isLabel) return t.$groupLabel;
          var e = this.customLabel(t, this.label);
          return i(e) ? "" : e;
        },
        select: function (t, e) {
          if (t.$isLabel && this.groupSelect) return void this.selectGroup(t);

          if (!(-1 !== this.blockKeys.indexOf(e) || this.disabled || t.$isDisabled || t.$isLabel) && (!this.max || !this.multiple || this.internalValue.length !== this.max) && ("Tab" !== e || this.pointerDirty)) {
            if (t.isTag) this.$emit("tag", t.label, this.id), this.search = "", this.closeOnSelect && !this.multiple && this.deactivate();else {
              if (this.isSelected(t)) return void ("Tab" !== e && this.removeElement(t));
              this.$emit("select", t, this.id), this.multiple ? this.$emit("input", this.internalValue.concat([t]), this.id) : this.$emit("input", t, this.id), this.clearOnSelect && (this.search = "");
            }
            this.closeOnSelect && this.deactivate();
          }
        },
        selectGroup: function (t) {
          var e = this,
              n = this.options.find(function (n) {
            return n[e.groupLabel] === t.$groupLabel;
          });
          if (n) if (this.wholeGroupSelected(n)) {
            this.$emit("remove", n[this.groupValues], this.id);
            var i = this.internalValue.filter(function (t) {
              return -1 === n[e.groupValues].indexOf(t);
            });
            this.$emit("input", i, this.id);
          } else {
            var r = n[this.groupValues].filter(function (t) {
              return !(e.isOptionDisabled(t) || e.isSelected(t));
            });
            this.$emit("select", r, this.id), this.$emit("input", this.internalValue.concat(r), this.id);
          }
        },
        wholeGroupSelected: function (t) {
          var e = this;
          return t[this.groupValues].every(function (t) {
            return e.isSelected(t) || e.isOptionDisabled(t);
          });
        },
        wholeGroupDisabled: function (t) {
          return t[this.groupValues].every(this.isOptionDisabled);
        },
        removeElement: function (t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];

          if (!this.disabled && !t.$isDisabled) {
            if (!this.allowEmpty && this.internalValue.length <= 1) return void this.deactivate();
            var i = "object" === n.i(c.a)(t) ? this.valueKeys.indexOf(t[this.trackBy]) : this.valueKeys.indexOf(t);

            if (this.$emit("remove", t, this.id), this.multiple) {
              var r = this.internalValue.slice(0, i).concat(this.internalValue.slice(i + 1));
              this.$emit("input", r, this.id);
            } else this.$emit("input", null, this.id);

            this.closeOnSelect && e && this.deactivate();
          }
        },
        removeLastElement: function () {
          -1 === this.blockKeys.indexOf("Delete") && 0 === this.search.length && Array.isArray(this.internalValue) && this.internalValue.length && this.removeElement(this.internalValue[this.internalValue.length - 1], !1);
        },
        activate: function () {
          var t = this;
          this.isOpen || this.disabled || (this.adjustPosition(), this.groupValues && 0 === this.pointer && this.filteredOptions.length && (this.pointer = 1), this.isOpen = !0, this.searchable ? (this.preserveSearch || (this.search = ""), this.$nextTick(function () {
            return t.$refs.search.focus();
          })) : this.$el.focus(), this.$emit("open", this.id));
        },
        deactivate: function () {
          this.isOpen && (this.isOpen = !1, this.searchable ? this.$refs.search.blur() : this.$el.blur(), this.preserveSearch || (this.search = ""), this.$emit("close", this.getValue(), this.id));
        },
        toggle: function () {
          this.isOpen ? this.deactivate() : this.activate();
        },
        adjustPosition: function () {
          if ("undefined" != typeof window) {
            var t = this.$el.getBoundingClientRect().top,
                e = window.innerHeight - this.$el.getBoundingClientRect().bottom;
            e > this.maxHeight || e > t || "below" === this.openDirection || "bottom" === this.openDirection ? (this.preferredOpenDirection = "below", this.optimizedHeight = Math.min(e - 40, this.maxHeight)) : (this.preferredOpenDirection = "above", this.optimizedHeight = Math.min(t - 40, this.maxHeight));
          }
        }
      }
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(54),
        r = (n.n(i), n(31));
    n.n(r);
    e.a = {
      data: function () {
        return {
          pointer: 0,
          pointerDirty: !1
        };
      },
      props: {
        showPointer: {
          type: Boolean,
          default: !0
        },
        optionHeight: {
          type: Number,
          default: 40
        }
      },
      computed: {
        pointerPosition: function () {
          return this.pointer * this.optionHeight;
        },
        visibleElements: function () {
          return this.optimizedHeight / this.optionHeight;
        }
      },
      watch: {
        filteredOptions: function () {
          this.pointerAdjust();
        },
        isOpen: function () {
          this.pointerDirty = !1;
        }
      },
      methods: {
        optionHighlight: function (t, e) {
          return {
            "multiselect__option--highlight": t === this.pointer && this.showPointer,
            "multiselect__option--selected": this.isSelected(e)
          };
        },
        groupHighlight: function (t, e) {
          var n = this;
          if (!this.groupSelect) return ["multiselect__option--group", "multiselect__option--disabled"];
          var i = this.options.find(function (t) {
            return t[n.groupLabel] === e.$groupLabel;
          });
          return i && !this.wholeGroupDisabled(i) ? ["multiselect__option--group", {
            "multiselect__option--highlight": t === this.pointer && this.showPointer
          }, {
            "multiselect__option--group-selected": this.wholeGroupSelected(i)
          }] : "multiselect__option--disabled";
        },
        addPointerElement: function () {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "Enter",
              e = t.key;
          this.filteredOptions.length > 0 && this.select(this.filteredOptions[this.pointer], e), this.pointerReset();
        },
        pointerForward: function () {
          this.pointer < this.filteredOptions.length - 1 && (this.pointer++, this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight && (this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight), this.filteredOptions[this.pointer] && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect && this.pointerForward()), this.pointerDirty = !0;
        },
        pointerBackward: function () {
          this.pointer > 0 ? (this.pointer--, this.$refs.list.scrollTop >= this.pointerPosition && (this.$refs.list.scrollTop = this.pointerPosition), this.filteredOptions[this.pointer] && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect && this.pointerBackward()) : this.filteredOptions[this.pointer] && this.filteredOptions[0].$isLabel && !this.groupSelect && this.pointerForward(), this.pointerDirty = !0;
        },
        pointerReset: function () {
          this.closeOnSelect && (this.pointer = 0, this.$refs.list && (this.$refs.list.scrollTop = 0));
        },
        pointerAdjust: function () {
          this.pointer >= this.filteredOptions.length - 1 && (this.pointer = this.filteredOptions.length ? this.filteredOptions.length - 1 : 0), this.filteredOptions.length > 0 && this.filteredOptions[this.pointer].$isLabel && !this.groupSelect && this.pointerForward();
        },
        pointerSet: function (t) {
          this.pointer = t, this.pointerDirty = !0;
        }
      }
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(36),
        r = n(74),
        o = n(15),
        s = n(18);
    t.exports = n(72)(Array, "Array", function (t, e) {
      this._t = s(t), this._i = 0, this._k = e;
    }, function () {
      var t = this._t,
          e = this._k,
          n = this._i++;
      return !t || n >= t.length ? (this._t = void 0, r(1)) : "keys" == e ? r(0, n) : "values" == e ? r(0, t[n]) : r(0, [n, t[n]]);
    }, "values"), o.Arguments = o.Array, i("keys"), i("values"), i("entries");
  }, function (t, e, n) {
    "use strict";

    var i = n(31),
        r = (n.n(i), n(32)),
        o = n(33);
    e.a = {
      name: "vue-multiselect",
      mixins: [r.a, o.a],
      props: {
        name: {
          type: String,
          default: ""
        },
        selectLabel: {
          type: String,
          default: "Press enter to select"
        },
        selectGroupLabel: {
          type: String,
          default: "Press enter to select group"
        },
        selectedLabel: {
          type: String,
          default: "Selected"
        },
        deselectLabel: {
          type: String,
          default: "Press enter to remove"
        },
        deselectGroupLabel: {
          type: String,
          default: "Press enter to deselect group"
        },
        showLabels: {
          type: Boolean,
          default: !0
        },
        limit: {
          type: Number,
          default: 99999
        },
        maxHeight: {
          type: Number,
          default: 300
        },
        limitText: {
          type: Function,
          default: function (t) {
            return "and ".concat(t, " more");
          }
        },
        loading: {
          type: Boolean,
          default: !1
        },
        disabled: {
          type: Boolean,
          default: !1
        },
        openDirection: {
          type: String,
          default: ""
        },
        showNoOptions: {
          type: Boolean,
          default: !0
        },
        showNoResults: {
          type: Boolean,
          default: !0
        },
        tabindex: {
          type: Number,
          default: 0
        }
      },
      computed: {
        isSingleLabelVisible: function () {
          return (this.singleValue || 0 === this.singleValue) && (!this.isOpen || !this.searchable) && !this.visibleValues.length;
        },
        isPlaceholderVisible: function () {
          return !(this.internalValue.length || this.searchable && this.isOpen);
        },
        visibleValues: function () {
          return this.multiple ? this.internalValue.slice(0, this.limit) : [];
        },
        singleValue: function () {
          return this.internalValue[0];
        },
        deselectLabelText: function () {
          return this.showLabels ? this.deselectLabel : "";
        },
        deselectGroupLabelText: function () {
          return this.showLabels ? this.deselectGroupLabel : "";
        },
        selectLabelText: function () {
          return this.showLabels ? this.selectLabel : "";
        },
        selectGroupLabelText: function () {
          return this.showLabels ? this.selectGroupLabel : "";
        },
        selectedLabelText: function () {
          return this.showLabels ? this.selectedLabel : "";
        },
        inputStyle: function () {
          if (this.searchable || this.multiple && this.value && this.value.length) return this.isOpen ? {
            width: "100%"
          } : {
            width: "0",
            position: "absolute",
            padding: "0"
          };
        },
        contentStyle: function () {
          return this.options.length ? {
            display: "inline-block"
          } : {
            display: "block"
          };
        },
        isAbove: function () {
          return "above" === this.openDirection || "top" === this.openDirection || "below" !== this.openDirection && "bottom" !== this.openDirection && "above" === this.preferredOpenDirection;
        },
        showSearchInput: function () {
          return this.searchable && (!this.hasSingleSelectedSlot || !this.visibleSingleValue && 0 !== this.visibleSingleValue || this.isOpen);
        }
      }
    };
  }, function (t, e, n) {
    var i = n(1)("unscopables"),
        r = Array.prototype;
    void 0 == r[i] && n(8)(r, i, {}), t.exports = function (t) {
      r[i][t] = !0;
    };
  }, function (t, e, n) {
    var i = n(18),
        r = n(19),
        o = n(85);

    t.exports = function (t) {
      return function (e, n, s) {
        var u,
            a = i(e),
            l = r(a.length),
            c = o(s, l);

        if (t && n != n) {
          for (; l > c;) if ((u = a[c++]) != u) return !0;
        } else for (; l > c; c++) if ((t || c in a) && a[c] === n) return t || c || 0;

        return !t && -1;
      };
    };
  }, function (t, e, n) {
    var i = n(9),
        r = n(1)("toStringTag"),
        o = "Arguments" == i(function () {
      return arguments;
    }()),
        s = function (t, e) {
      try {
        return t[e];
      } catch (t) {}
    };

    t.exports = function (t) {
      var e, n, u;
      return void 0 === t ? "Undefined" : null === t ? "Null" : "string" == typeof (n = s(e = Object(t), r)) ? n : o ? i(e) : "Object" == (u = i(e)) && "function" == typeof e.callee ? "Arguments" : u;
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(2);

    t.exports = function () {
      var t = i(this),
          e = "";
      return t.global && (e += "g"), t.ignoreCase && (e += "i"), t.multiline && (e += "m"), t.unicode && (e += "u"), t.sticky && (e += "y"), e;
    };
  }, function (t, e, n) {
    var i = n(0).document;
    t.exports = i && i.documentElement;
  }, function (t, e, n) {
    t.exports = !n(4) && !n(7)(function () {
      return 7 != Object.defineProperty(n(21)("div"), "a", {
        get: function () {
          return 7;
        }
      }).a;
    });
  }, function (t, e, n) {
    var i = n(9);

    t.exports = Array.isArray || function (t) {
      return "Array" == i(t);
    };
  }, function (t, e, n) {
    "use strict";

    function i(t) {
      var e, n;
      this.promise = new t(function (t, i) {
        if (void 0 !== e || void 0 !== n) throw TypeError("Bad Promise constructor");
        e = t, n = i;
      }), this.resolve = r(e), this.reject = r(n);
    }

    var r = n(14);

    t.exports.f = function (t) {
      return new i(t);
    };
  }, function (t, e, n) {
    var i = n(2),
        r = n(76),
        o = n(22),
        s = n(27)("IE_PROTO"),
        u = function () {},
        a = function () {
      var t,
          e = n(21)("iframe"),
          i = o.length;

      for (e.style.display = "none", n(40).appendChild(e), e.src = "javascript:", t = e.contentWindow.document, t.open(), t.write("<script>document.F=Object<\/script>"), t.close(), a = t.F; i--;) delete a.prototype[o[i]];

      return a();
    };

    t.exports = Object.create || function (t, e) {
      var n;
      return null !== t ? (u.prototype = i(t), n = new u(), u.prototype = null, n[s] = t) : n = a(), void 0 === e ? n : r(n, e);
    };
  }, function (t, e, n) {
    var i = n(79),
        r = n(25),
        o = n(18),
        s = n(29),
        u = n(12),
        a = n(41),
        l = Object.getOwnPropertyDescriptor;
    e.f = n(4) ? l : function (t, e) {
      if (t = o(t), e = s(e, !0), a) try {
        return l(t, e);
      } catch (t) {}
      if (u(t, e)) return r(!i.f.call(t, e), t[e]);
    };
  }, function (t, e, n) {
    var i = n(12),
        r = n(18),
        o = n(37)(!1),
        s = n(27)("IE_PROTO");

    t.exports = function (t, e) {
      var n,
          u = r(t),
          a = 0,
          l = [];

      for (n in u) n != s && i(u, n) && l.push(n);

      for (; e.length > a;) i(u, n = e[a++]) && (~o(l, n) || l.push(n));

      return l;
    };
  }, function (t, e, n) {
    var i = n(46),
        r = n(22);

    t.exports = Object.keys || function (t) {
      return i(t, r);
    };
  }, function (t, e, n) {
    var i = n(2),
        r = n(5),
        o = n(43);

    t.exports = function (t, e) {
      if (i(t), r(e) && e.constructor === t) return e;
      var n = o.f(t);
      return (0, n.resolve)(e), n.promise;
    };
  }, function (t, e, n) {
    var i = n(10),
        r = n(0),
        o = r["__core-js_shared__"] || (r["__core-js_shared__"] = {});
    (t.exports = function (t, e) {
      return o[t] || (o[t] = void 0 !== e ? e : {});
    })("versions", []).push({
      version: i.version,
      mode: n(24) ? "pure" : "global",
      copyright: "© 2018 Denis Pushkarev (zloirock.ru)"
    });
  }, function (t, e, n) {
    var i = n(2),
        r = n(14),
        o = n(1)("species");

    t.exports = function (t, e) {
      var n,
          s = i(t).constructor;
      return void 0 === s || void 0 == (n = i(s)[o]) ? e : r(n);
    };
  }, function (t, e, n) {
    var i = n(3),
        r = n(16),
        o = n(7),
        s = n(84),
        u = "[" + s + "]",
        a = "​",
        l = RegExp("^" + u + u + "*"),
        c = RegExp(u + u + "*$"),
        f = function (t, e, n) {
      var r = {},
          u = o(function () {
        return !!s[t]() || a[t]() != a;
      }),
          l = r[t] = u ? e(p) : s[t];
      n && (r[n] = l), i(i.P + i.F * u, "String", r);
    },
        p = f.trim = function (t, e) {
      return t = String(r(t)), 1 & e && (t = t.replace(l, "")), 2 & e && (t = t.replace(c, "")), t;
    };

    t.exports = f;
  }, function (t, e, n) {
    var i,
        r,
        o,
        s = n(11),
        u = n(68),
        a = n(40),
        l = n(21),
        c = n(0),
        f = c.process,
        p = c.setImmediate,
        h = c.clearImmediate,
        d = c.MessageChannel,
        v = c.Dispatch,
        g = 0,
        y = {},
        m = function () {
      var t = +this;

      if (y.hasOwnProperty(t)) {
        var e = y[t];
        delete y[t], e();
      }
    },
        b = function (t) {
      m.call(t.data);
    };

    p && h || (p = function (t) {
      for (var e = [], n = 1; arguments.length > n;) e.push(arguments[n++]);

      return y[++g] = function () {
        u("function" == typeof t ? t : Function(t), e);
      }, i(g), g;
    }, h = function (t) {
      delete y[t];
    }, "process" == n(9)(f) ? i = function (t) {
      f.nextTick(s(m, t, 1));
    } : v && v.now ? i = function (t) {
      v.now(s(m, t, 1));
    } : d ? (r = new d(), o = r.port2, r.port1.onmessage = b, i = s(o.postMessage, o, 1)) : c.addEventListener && "function" == typeof postMessage && !c.importScripts ? (i = function (t) {
      c.postMessage(t + "", "*");
    }, c.addEventListener("message", b, !1)) : i = "onreadystatechange" in l("script") ? function (t) {
      a.appendChild(l("script")).onreadystatechange = function () {
        a.removeChild(this), m.call(t);
      };
    } : function (t) {
      setTimeout(s(m, t, 1), 0);
    }), t.exports = {
      set: p,
      clear: h
    };
  }, function (t, e) {
    var n = Math.ceil,
        i = Math.floor;

    t.exports = function (t) {
      return isNaN(t = +t) ? 0 : (t > 0 ? i : n)(t);
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(3),
        r = n(20)(5),
        o = !0;
    "find" in [] && Array(1).find(function () {
      o = !1;
    }), i(i.P + i.F * o, "Array", {
      find: function (t) {
        return r(this, t, arguments.length > 1 ? arguments[1] : void 0);
      }
    }), n(36)("find");
  }, function (t, e, n) {
    "use strict";

    var i,
        r,
        o,
        s,
        u = n(24),
        a = n(0),
        l = n(11),
        c = n(38),
        f = n(3),
        p = n(5),
        h = n(14),
        d = n(61),
        v = n(66),
        g = n(50),
        y = n(52).set,
        m = n(75)(),
        b = n(43),
        _ = n(80),
        x = n(86),
        w = n(48),
        S = a.TypeError,
        O = a.process,
        L = O && O.versions,
        k = L && L.v8 || "",
        P = a.Promise,
        T = "process" == c(O),
        V = function () {},
        E = r = b.f,
        A = !!function () {
      try {
        var t = P.resolve(1),
            e = (t.constructor = {})[n(1)("species")] = function (t) {
          t(V, V);
        };

        return (T || "function" == typeof PromiseRejectionEvent) && t.then(V) instanceof e && 0 !== k.indexOf("6.6") && -1 === x.indexOf("Chrome/66");
      } catch (t) {}
    }(),
        C = function (t) {
      var e;
      return !(!p(t) || "function" != typeof (e = t.then)) && e;
    },
        D = function (t, e) {
      if (!t._n) {
        t._n = !0;
        var n = t._c;
        m(function () {
          for (var i = t._v, r = 1 == t._s, o = 0; n.length > o;) !function (e) {
            var n,
                o,
                s,
                u = r ? e.ok : e.fail,
                a = e.resolve,
                l = e.reject,
                c = e.domain;

            try {
              u ? (r || (2 == t._h && $(t), t._h = 1), !0 === u ? n = i : (c && c.enter(), n = u(i), c && (c.exit(), s = !0)), n === e.promise ? l(S("Promise-chain cycle")) : (o = C(n)) ? o.call(n, a, l) : a(n)) : l(i);
            } catch (t) {
              c && !s && c.exit(), l(t);
            }
          }(n[o++]);

          t._c = [], t._n = !1, e && !t._h && j(t);
        });
      }
    },
        j = function (t) {
      y.call(a, function () {
        var e,
            n,
            i,
            r = t._v,
            o = N(t);
        if (o && (e = _(function () {
          T ? O.emit("unhandledRejection", r, t) : (n = a.onunhandledrejection) ? n({
            promise: t,
            reason: r
          }) : (i = a.console) && i.error && i.error("Unhandled promise rejection", r);
        }), t._h = T || N(t) ? 2 : 1), t._a = void 0, o && e.e) throw e.v;
      });
    },
        N = function (t) {
      return 1 !== t._h && 0 === (t._a || t._c).length;
    },
        $ = function (t) {
      y.call(a, function () {
        var e;
        T ? O.emit("rejectionHandled", t) : (e = a.onrejectionhandled) && e({
          promise: t,
          reason: t._v
        });
      });
    },
        F = function (t) {
      var e = this;
      e._d || (e._d = !0, e = e._w || e, e._v = t, e._s = 2, e._a || (e._a = e._c.slice()), D(e, !0));
    },
        M = function (t) {
      var e,
          n = this;

      if (!n._d) {
        n._d = !0, n = n._w || n;

        try {
          if (n === t) throw S("Promise can't be resolved itself");
          (e = C(t)) ? m(function () {
            var i = {
              _w: n,
              _d: !1
            };

            try {
              e.call(t, l(M, i, 1), l(F, i, 1));
            } catch (t) {
              F.call(i, t);
            }
          }) : (n._v = t, n._s = 1, D(n, !1));
        } catch (t) {
          F.call({
            _w: n,
            _d: !1
          }, t);
        }
      }
    };

    A || (P = function (t) {
      d(this, P, "Promise", "_h"), h(t), i.call(this);

      try {
        t(l(M, this, 1), l(F, this, 1));
      } catch (t) {
        F.call(this, t);
      }
    }, i = function (t) {
      this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, this._n = !1;
    }, i.prototype = n(81)(P.prototype, {
      then: function (t, e) {
        var n = E(g(this, P));
        return n.ok = "function" != typeof t || t, n.fail = "function" == typeof e && e, n.domain = T ? O.domain : void 0, this._c.push(n), this._a && this._a.push(n), this._s && D(this, !1), n.promise;
      },
      catch: function (t) {
        return this.then(void 0, t);
      }
    }), o = function () {
      var t = new i();
      this.promise = t, this.resolve = l(M, t, 1), this.reject = l(F, t, 1);
    }, b.f = E = function (t) {
      return t === P || t === s ? new o(t) : r(t);
    }), f(f.G + f.W + f.F * !A, {
      Promise: P
    }), n(26)(P, "Promise"), n(83)("Promise"), s = n(10).Promise, f(f.S + f.F * !A, "Promise", {
      reject: function (t) {
        var e = E(this);
        return (0, e.reject)(t), e.promise;
      }
    }), f(f.S + f.F * (u || !A), "Promise", {
      resolve: function (t) {
        return w(u && this === s ? P : this, t);
      }
    }), f(f.S + f.F * !(A && n(73)(function (t) {
      P.all(t).catch(V);
    })), "Promise", {
      all: function (t) {
        var e = this,
            n = E(e),
            i = n.resolve,
            r = n.reject,
            o = _(function () {
          var n = [],
              o = 0,
              s = 1;
          v(t, !1, function (t) {
            var u = o++,
                a = !1;
            n.push(void 0), s++, e.resolve(t).then(function (t) {
              a || (a = !0, n[u] = t, --s || i(n));
            }, r);
          }), --s || i(n);
        });

        return o.e && r(o.v), n.promise;
      },
      race: function (t) {
        var e = this,
            n = E(e),
            i = n.reject,
            r = _(function () {
          v(t, !1, function (t) {
            e.resolve(t).then(n.resolve, i);
          });
        });

        return r.e && i(r.v), n.promise;
      }
    });
  }, function (t, e, n) {
    "use strict";

    var i = n(3),
        r = n(10),
        o = n(0),
        s = n(50),
        u = n(48);
    i(i.P + i.R, "Promise", {
      finally: function (t) {
        var e = s(this, r.Promise || o.Promise),
            n = "function" == typeof t;
        return this.then(n ? function (n) {
          return u(e, t()).then(function () {
            return n;
          });
        } : t, n ? function (n) {
          return u(e, t()).then(function () {
            throw n;
          });
        } : t);
      }
    });
  }, function (t, e, n) {
    "use strict";

    function i(t) {
      n(99);
    }

    var r = n(35),
        o = n(101),
        s = n(100),
        u = i,
        a = s(r.a, o.a, !1, u, null, null);
    e.a = a.exports;
  }, function (t, e, n) {
    "use strict";

    function i(t, e, n) {
      return e in t ? Object.defineProperty(t, e, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = n, t;
    }

    e.a = i;
  }, function (t, e, n) {
    "use strict";

    function i(t) {
      return (i = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
        return _typeof(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
      })(t);
    }

    function r(t) {
      return (r = "function" == typeof Symbol && "symbol" === i(Symbol.iterator) ? function (t) {
        return i(t);
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : i(t);
      })(t);
    }

    e.a = r;
  }, function (t, e, n) {
    "use strict";

    Object.defineProperty(e, "__esModule", {
      value: !0
    });
    var i = n(34),
        r = (n.n(i), n(55)),
        o = (n.n(r), n(56)),
        s = (n.n(o), n(57)),
        u = n(32),
        a = n(33);
    n.d(e, "Multiselect", function () {
      return s.a;
    }), n.d(e, "multiselectMixin", function () {
      return u.a;
    }), n.d(e, "pointerMixin", function () {
      return a.a;
    }), e.default = s.a;
  }, function (t, e) {
    t.exports = function (t, e, n, i) {
      if (!(t instanceof e) || void 0 !== i && i in t) throw TypeError(n + ": incorrect invocation!");
      return t;
    };
  }, function (t, e, n) {
    var i = n(14),
        r = n(28),
        o = n(23),
        s = n(19);

    t.exports = function (t, e, n, u, a) {
      i(e);
      var l = r(t),
          c = o(l),
          f = s(l.length),
          p = a ? f - 1 : 0,
          h = a ? -1 : 1;
      if (n < 2) for (;;) {
        if (p in c) {
          u = c[p], p += h;
          break;
        }

        if (p += h, a ? p < 0 : f <= p) throw TypeError("Reduce of empty array with no initial value");
      }

      for (; a ? p >= 0 : f > p; p += h) p in c && (u = e(u, c[p], p, l));

      return u;
    };
  }, function (t, e, n) {
    var i = n(5),
        r = n(42),
        o = n(1)("species");

    t.exports = function (t) {
      var e;
      return r(t) && (e = t.constructor, "function" != typeof e || e !== Array && !r(e.prototype) || (e = void 0), i(e) && null === (e = e[o]) && (e = void 0)), void 0 === e ? Array : e;
    };
  }, function (t, e, n) {
    var i = n(63);

    t.exports = function (t, e) {
      return new (i(t))(e);
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(8),
        r = n(6),
        o = n(7),
        s = n(16),
        u = n(1);

    t.exports = function (t, e, n) {
      var a = u(t),
          l = n(s, a, ""[t]),
          c = l[0],
          f = l[1];
      o(function () {
        var e = {};
        return e[a] = function () {
          return 7;
        }, 7 != ""[t](e);
      }) && (r(String.prototype, t, c), i(RegExp.prototype, a, 2 == e ? function (t, e) {
        return f.call(t, this, e);
      } : function (t) {
        return f.call(t, this);
      }));
    };
  }, function (t, e, n) {
    var i = n(11),
        r = n(70),
        o = n(69),
        s = n(2),
        u = n(19),
        a = n(87),
        l = {},
        c = {},
        e = t.exports = function (t, e, n, f, p) {
      var h,
          d,
          v,
          g,
          y = p ? function () {
        return t;
      } : a(t),
          m = i(n, f, e ? 2 : 1),
          b = 0;
      if ("function" != typeof y) throw TypeError(t + " is not iterable!");

      if (o(y)) {
        for (h = u(t.length); h > b; b++) if ((g = e ? m(s(d = t[b])[0], d[1]) : m(t[b])) === l || g === c) return g;
      } else for (v = y.call(t); !(d = v.next()).done;) if ((g = r(v, m, d.value, e)) === l || g === c) return g;
    };

    e.BREAK = l, e.RETURN = c;
  }, function (t, e, n) {
    var i = n(5),
        r = n(82).set;

    t.exports = function (t, e, n) {
      var o,
          s = e.constructor;
      return s !== n && "function" == typeof s && (o = s.prototype) !== n.prototype && i(o) && r && r(t, o), t;
    };
  }, function (t, e) {
    t.exports = function (t, e, n) {
      var i = void 0 === n;

      switch (e.length) {
        case 0:
          return i ? t() : t.call(n);

        case 1:
          return i ? t(e[0]) : t.call(n, e[0]);

        case 2:
          return i ? t(e[0], e[1]) : t.call(n, e[0], e[1]);

        case 3:
          return i ? t(e[0], e[1], e[2]) : t.call(n, e[0], e[1], e[2]);

        case 4:
          return i ? t(e[0], e[1], e[2], e[3]) : t.call(n, e[0], e[1], e[2], e[3]);
      }

      return t.apply(n, e);
    };
  }, function (t, e, n) {
    var i = n(15),
        r = n(1)("iterator"),
        o = Array.prototype;

    t.exports = function (t) {
      return void 0 !== t && (i.Array === t || o[r] === t);
    };
  }, function (t, e, n) {
    var i = n(2);

    t.exports = function (t, e, n, r) {
      try {
        return r ? e(i(n)[0], n[1]) : e(n);
      } catch (e) {
        var o = t.return;
        throw void 0 !== o && i(o.call(t)), e;
      }
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(44),
        r = n(25),
        o = n(26),
        s = {};
    n(8)(s, n(1)("iterator"), function () {
      return this;
    }), t.exports = function (t, e, n) {
      t.prototype = i(s, {
        next: r(1, n)
      }), o(t, e + " Iterator");
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(24),
        r = n(3),
        o = n(6),
        s = n(8),
        u = n(15),
        a = n(71),
        l = n(26),
        c = n(78),
        f = n(1)("iterator"),
        p = !([].keys && "next" in [].keys()),
        h = function () {
      return this;
    };

    t.exports = function (t, e, n, d, v, g, y) {
      a(n, e, d);

      var m,
          b,
          _,
          x = function (t) {
        if (!p && t in L) return L[t];

        switch (t) {
          case "keys":
          case "values":
            return function () {
              return new n(this, t);
            };
        }

        return function () {
          return new n(this, t);
        };
      },
          w = e + " Iterator",
          S = "values" == v,
          O = !1,
          L = t.prototype,
          k = L[f] || L["@@iterator"] || v && L[v],
          P = k || x(v),
          T = v ? S ? x("entries") : P : void 0,
          V = "Array" == e ? L.entries || k : k;

      if (V && (_ = c(V.call(new t()))) !== Object.prototype && _.next && (l(_, w, !0), i || "function" == typeof _[f] || s(_, f, h)), S && k && "values" !== k.name && (O = !0, P = function () {
        return k.call(this);
      }), i && !y || !p && !O && L[f] || s(L, f, P), u[e] = P, u[w] = h, v) if (m = {
        values: S ? P : x("values"),
        keys: g ? P : x("keys"),
        entries: T
      }, y) for (b in m) b in L || o(L, b, m[b]);else r(r.P + r.F * (p || O), e, m);
      return m;
    };
  }, function (t, e, n) {
    var i = n(1)("iterator"),
        r = !1;

    try {
      var o = [7][i]();
      o.return = function () {
        r = !0;
      }, Array.from(o, function () {
        throw 2;
      });
    } catch (t) {}

    t.exports = function (t, e) {
      if (!e && !r) return !1;
      var n = !1;

      try {
        var o = [7],
            s = o[i]();
        s.next = function () {
          return {
            done: n = !0
          };
        }, o[i] = function () {
          return s;
        }, t(o);
      } catch (t) {}

      return n;
    };
  }, function (t, e) {
    t.exports = function (t, e) {
      return {
        value: e,
        done: !!t
      };
    };
  }, function (t, e, n) {
    var i = n(0),
        r = n(52).set,
        o = i.MutationObserver || i.WebKitMutationObserver,
        s = i.process,
        u = i.Promise,
        a = "process" == n(9)(s);

    t.exports = function () {
      var t,
          e,
          n,
          l = function () {
        var i, r;

        for (a && (i = s.domain) && i.exit(); t;) {
          r = t.fn, t = t.next;

          try {
            r();
          } catch (i) {
            throw t ? n() : e = void 0, i;
          }
        }

        e = void 0, i && i.enter();
      };

      if (a) n = function () {
        s.nextTick(l);
      };else if (!o || i.navigator && i.navigator.standalone) {
        if (u && u.resolve) {
          var c = u.resolve(void 0);

          n = function () {
            c.then(l);
          };
        } else n = function () {
          r.call(i, l);
        };
      } else {
        var f = !0,
            p = document.createTextNode("");
        new o(l).observe(p, {
          characterData: !0
        }), n = function () {
          p.data = f = !f;
        };
      }
      return function (i) {
        var r = {
          fn: i,
          next: void 0
        };
        e && (e.next = r), t || (t = r, n()), e = r;
      };
    };
  }, function (t, e, n) {
    var i = n(13),
        r = n(2),
        o = n(47);
    t.exports = n(4) ? Object.defineProperties : function (t, e) {
      r(t);

      for (var n, s = o(e), u = s.length, a = 0; u > a;) i.f(t, n = s[a++], e[n]);

      return t;
    };
  }, function (t, e, n) {
    var i = n(46),
        r = n(22).concat("length", "prototype");

    e.f = Object.getOwnPropertyNames || function (t) {
      return i(t, r);
    };
  }, function (t, e, n) {
    var i = n(12),
        r = n(28),
        o = n(27)("IE_PROTO"),
        s = Object.prototype;

    t.exports = Object.getPrototypeOf || function (t) {
      return t = r(t), i(t, o) ? t[o] : "function" == typeof t.constructor && t instanceof t.constructor ? t.constructor.prototype : t instanceof Object ? s : null;
    };
  }, function (t, e) {
    e.f = {}.propertyIsEnumerable;
  }, function (t, e) {
    t.exports = function (t) {
      try {
        return {
          e: !1,
          v: t()
        };
      } catch (t) {
        return {
          e: !0,
          v: t
        };
      }
    };
  }, function (t, e, n) {
    var i = n(6);

    t.exports = function (t, e, n) {
      for (var r in e) i(t, r, e[r], n);

      return t;
    };
  }, function (t, e, n) {
    var i = n(5),
        r = n(2),
        o = function (t, e) {
      if (r(t), !i(e) && null !== e) throw TypeError(e + ": can't set as prototype!");
    };

    t.exports = {
      set: Object.setPrototypeOf || ("__proto__" in {} ? function (t, e, i) {
        try {
          i = n(11)(Function.call, n(45).f(Object.prototype, "__proto__").set, 2), i(t, []), e = !(t instanceof Array);
        } catch (t) {
          e = !0;
        }

        return function (t, n) {
          return o(t, n), e ? t.__proto__ = n : i(t, n), t;
        };
      }({}, !1) : void 0),
      check: o
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(0),
        r = n(13),
        o = n(4),
        s = n(1)("species");

    t.exports = function (t) {
      var e = i[t];
      o && e && !e[s] && r.f(e, s, {
        configurable: !0,
        get: function () {
          return this;
        }
      });
    };
  }, function (t, e) {
    t.exports = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
  }, function (t, e, n) {
    var i = n(53),
        r = Math.max,
        o = Math.min;

    t.exports = function (t, e) {
      return t = i(t), t < 0 ? r(t + e, 0) : o(t, e);
    };
  }, function (t, e, n) {
    var i = n(0),
        r = i.navigator;
    t.exports = r && r.userAgent || "";
  }, function (t, e, n) {
    var i = n(38),
        r = n(1)("iterator"),
        o = n(15);

    t.exports = n(10).getIteratorMethod = function (t) {
      if (void 0 != t) return t[r] || t["@@iterator"] || o[i(t)];
    };
  }, function (t, e, n) {
    "use strict";

    var i = n(3),
        r = n(20)(2);
    i(i.P + i.F * !n(17)([].filter, !0), "Array", {
      filter: function (t) {
        return r(this, t, arguments[1]);
      }
    });
  }, function (t, e, n) {
    "use strict";

    var i = n(3),
        r = n(37)(!1),
        o = [].indexOf,
        s = !!o && 1 / [1].indexOf(1, -0) < 0;
    i(i.P + i.F * (s || !n(17)(o)), "Array", {
      indexOf: function (t) {
        return s ? o.apply(this, arguments) || 0 : r(this, t, arguments[1]);
      }
    });
  }, function (t, e, n) {
    var i = n(3);
    i(i.S, "Array", {
      isArray: n(42)
    });
  }, function (t, e, n) {
    "use strict";

    var i = n(3),
        r = n(20)(1);
    i(i.P + i.F * !n(17)([].map, !0), "Array", {
      map: function (t) {
        return r(this, t, arguments[1]);
      }
    });
  }, function (t, e, n) {
    "use strict";

    var i = n(3),
        r = n(62);
    i(i.P + i.F * !n(17)([].reduce, !0), "Array", {
      reduce: function (t) {
        return r(this, t, arguments.length, arguments[1], !1);
      }
    });
  }, function (t, e, n) {
    var i = Date.prototype,
        r = i.toString,
        o = i.getTime;
    new Date(NaN) + "" != "Invalid Date" && n(6)(i, "toString", function () {
      var t = o.call(this);
      return t === t ? r.call(this) : "Invalid Date";
    });
  }, function (t, e, n) {
    n(4) && "g" != /./g.flags && n(13).f(RegExp.prototype, "flags", {
      configurable: !0,
      get: n(39)
    });
  }, function (t, e, n) {
    n(65)("search", 1, function (t, e, n) {
      return [function (n) {
        "use strict";

        var i = t(this),
            r = void 0 == n ? void 0 : n[e];
        return void 0 !== r ? r.call(n, i) : new RegExp(n)[e](String(i));
      }, n];
    });
  }, function (t, e, n) {
    "use strict";

    n(94);

    var i = n(2),
        r = n(39),
        o = n(4),
        s = /./.toString,
        u = function (t) {
      n(6)(RegExp.prototype, "toString", t, !0);
    };

    n(7)(function () {
      return "/a/b" != s.call({
        source: "a",
        flags: "b"
      });
    }) ? u(function () {
      var t = i(this);
      return "/".concat(t.source, "/", "flags" in t ? t.flags : !o && t instanceof RegExp ? r.call(t) : void 0);
    }) : "toString" != s.name && u(function () {
      return s.call(this);
    });
  }, function (t, e, n) {
    "use strict";

    n(51)("trim", function (t) {
      return function () {
        return t(this, 3);
      };
    });
  }, function (t, e, n) {
    for (var i = n(34), r = n(47), o = n(6), s = n(0), u = n(8), a = n(15), l = n(1), c = l("iterator"), f = l("toStringTag"), p = a.Array, h = {
      CSSRuleList: !0,
      CSSStyleDeclaration: !1,
      CSSValueList: !1,
      ClientRectList: !1,
      DOMRectList: !1,
      DOMStringList: !1,
      DOMTokenList: !0,
      DataTransferItemList: !1,
      FileList: !1,
      HTMLAllCollection: !1,
      HTMLCollection: !1,
      HTMLFormElement: !1,
      HTMLSelectElement: !1,
      MediaList: !0,
      MimeTypeArray: !1,
      NamedNodeMap: !1,
      NodeList: !0,
      PaintRequestList: !1,
      Plugin: !1,
      PluginArray: !1,
      SVGLengthList: !1,
      SVGNumberList: !1,
      SVGPathSegList: !1,
      SVGPointList: !1,
      SVGStringList: !1,
      SVGTransformList: !1,
      SourceBufferList: !1,
      StyleSheetList: !0,
      TextTrackCueList: !1,
      TextTrackList: !1,
      TouchList: !1
    }, d = r(h), v = 0; v < d.length; v++) {
      var g,
          y = d[v],
          m = h[y],
          b = s[y],
          _ = b && b.prototype;

      if (_ && (_[c] || u(_, c, p), _[f] || u(_, f, y), a[y] = p, m)) for (g in i) _[g] || o(_, g, i[g], !0);
    }
  }, function (t, e) {}, function (t, e) {
    t.exports = function (t, e, n, i, r, o) {
      var s,
          u = t = t || {},
          a = _typeof(t.default);

      "object" !== a && "function" !== a || (s = t, u = t.default);
      var l = "function" == typeof u ? u.options : u;
      e && (l.render = e.render, l.staticRenderFns = e.staticRenderFns, l._compiled = !0), n && (l.functional = !0), r && (l._scopeId = r);
      var c;

      if (o ? (c = function (t) {
        t = t || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, t || "undefined" == typeof __VUE_SSR_CONTEXT__ || (t = __VUE_SSR_CONTEXT__), i && i.call(this, t), t && t._registeredComponents && t._registeredComponents.add(o);
      }, l._ssrRegister = c) : i && (c = i), c) {
        var f = l.functional,
            p = f ? l.render : l.beforeCreate;
        f ? (l._injectStyles = c, l.render = function (t, e) {
          return c.call(e), p(t, e);
        }) : l.beforeCreate = p ? [].concat(p, c) : [c];
      }

      return {
        esModule: s,
        exports: u,
        options: l
      };
    };
  }, function (t, e, n) {
    "use strict";

    var i = function () {
      var t = this,
          e = t.$createElement,
          n = t._self._c || e;
      return n("div", {
        staticClass: "multiselect",
        class: {
          "multiselect--active": t.isOpen,
          "multiselect--disabled": t.disabled,
          "multiselect--above": t.isAbove
        },
        attrs: {
          tabindex: t.searchable ? -1 : t.tabindex
        },
        on: {
          focus: function (e) {
            t.activate();
          },
          blur: function (e) {
            !t.searchable && t.deactivate();
          },
          keydown: [function (e) {
            return "button" in e || !t._k(e.keyCode, "down", 40, e.key, ["Down", "ArrowDown"]) ? e.target !== e.currentTarget ? null : (e.preventDefault(), void t.pointerForward()) : null;
          }, function (e) {
            return "button" in e || !t._k(e.keyCode, "up", 38, e.key, ["Up", "ArrowUp"]) ? e.target !== e.currentTarget ? null : (e.preventDefault(), void t.pointerBackward()) : null;
          }],
          keypress: function (e) {
            return "button" in e || !t._k(e.keyCode, "enter", 13, e.key, "Enter") || !t._k(e.keyCode, "tab", 9, e.key, "Tab") ? (e.stopPropagation(), e.target !== e.currentTarget ? null : void t.addPointerElement(e)) : null;
          },
          keyup: function (e) {
            if (!("button" in e) && t._k(e.keyCode, "esc", 27, e.key, "Escape")) return null;
            t.deactivate();
          }
        }
      }, [t._t("caret", [n("div", {
        staticClass: "multiselect__select",
        on: {
          mousedown: function (e) {
            e.preventDefault(), e.stopPropagation(), t.toggle();
          }
        }
      })], {
        toggle: t.toggle
      }), t._v(" "), t._t("clear", null, {
        search: t.search
      }), t._v(" "), n("div", {
        ref: "tags",
        staticClass: "multiselect__tags"
      }, [t._t("selection", [n("div", {
        directives: [{
          name: "show",
          rawName: "v-show",
          value: t.visibleValues.length > 0,
          expression: "visibleValues.length > 0"
        }],
        staticClass: "multiselect__tags-wrap"
      }, [t._l(t.visibleValues, function (e, i) {
        return [t._t("tag", [n("span", {
          key: i,
          staticClass: "multiselect__tag"
        }, [n("span", {
          domProps: {
            textContent: t._s(t.getOptionLabel(e))
          }
        }), t._v(" "), n("i", {
          staticClass: "multiselect__tag-icon",
          attrs: {
            "aria-hidden": "true",
            tabindex: "1"
          },
          on: {
            keypress: function (n) {
              if (!("button" in n) && t._k(n.keyCode, "enter", 13, n.key, "Enter")) return null;
              n.preventDefault(), t.removeElement(e);
            },
            mousedown: function (n) {
              n.preventDefault(), t.removeElement(e);
            }
          }
        })])], {
          option: e,
          search: t.search,
          remove: t.removeElement
        })];
      })], 2), t._v(" "), t.internalValue && t.internalValue.length > t.limit ? [t._t("limit", [n("strong", {
        staticClass: "multiselect__strong",
        domProps: {
          textContent: t._s(t.limitText(t.internalValue.length - t.limit))
        }
      })])] : t._e()], {
        search: t.search,
        remove: t.removeElement,
        values: t.visibleValues,
        isOpen: t.isOpen
      }), t._v(" "), n("transition", {
        attrs: {
          name: "multiselect__loading"
        }
      }, [t._t("loading", [n("div", {
        directives: [{
          name: "show",
          rawName: "v-show",
          value: t.loading,
          expression: "loading"
        }],
        staticClass: "multiselect__spinner"
      })])], 2), t._v(" "), t.searchable ? n("input", {
        ref: "search",
        staticClass: "multiselect__input",
        style: t.inputStyle,
        attrs: {
          name: t.name,
          id: t.id,
          type: "text",
          autocomplete: "nope",
          placeholder: t.placeholder,
          disabled: t.disabled,
          tabindex: t.tabindex
        },
        domProps: {
          value: t.search
        },
        on: {
          input: function (e) {
            t.updateSearch(e.target.value);
          },
          focus: function (e) {
            e.preventDefault(), t.activate();
          },
          blur: function (e) {
            e.preventDefault(), t.deactivate();
          },
          keyup: function (e) {
            if (!("button" in e) && t._k(e.keyCode, "esc", 27, e.key, "Escape")) return null;
            t.deactivate();
          },
          keydown: [function (e) {
            if (!("button" in e) && t._k(e.keyCode, "down", 40, e.key, ["Down", "ArrowDown"])) return null;
            e.preventDefault(), t.pointerForward();
          }, function (e) {
            if (!("button" in e) && t._k(e.keyCode, "up", 38, e.key, ["Up", "ArrowUp"])) return null;
            e.preventDefault(), t.pointerBackward();
          }, function (e) {
            if (!("button" in e) && t._k(e.keyCode, "delete", [8, 46], e.key, ["Backspace", "Delete"])) return null;
            e.stopPropagation(), t.removeLastElement();
          }],
          keypress: function (e) {
            return "button" in e || !t._k(e.keyCode, "enter", 13, e.key, "Enter") ? (e.preventDefault(), e.stopPropagation(), e.target !== e.currentTarget ? null : void t.addPointerElement(e)) : null;
          }
        }
      }) : t._e(), t._v(" "), t.isSingleLabelVisible ? n("span", {
        staticClass: "multiselect__single",
        on: {
          mousedown: function (e) {
            return e.preventDefault(), t.toggle(e);
          }
        }
      }, [t._t("singleLabel", [[t._v(t._s(t.currentOptionLabel))]], {
        option: t.singleValue
      })], 2) : t._e(), t._v(" "), t.isPlaceholderVisible ? n("span", {
        staticClass: "multiselect__placeholder",
        on: {
          mousedown: function (e) {
            return e.preventDefault(), t.toggle(e);
          }
        }
      }, [t._t("placeholder", [t._v("\n          " + t._s(t.placeholder) + "\n        ")])], 2) : t._e()], 2), t._v(" "), n("transition", {
        attrs: {
          name: "multiselect"
        }
      }, [n("div", {
        directives: [{
          name: "show",
          rawName: "v-show",
          value: t.isOpen,
          expression: "isOpen"
        }],
        ref: "list",
        staticClass: "multiselect__content-wrapper",
        style: {
          maxHeight: t.optimizedHeight + "px"
        },
        attrs: {
          tabindex: "-1"
        },
        on: {
          focus: t.activate,
          mousedown: function (t) {
            t.preventDefault();
          }
        }
      }, [n("ul", {
        staticClass: "multiselect__content",
        style: t.contentStyle
      }, [t._t("beforeList"), t._v(" "), t.multiple && t.max === t.internalValue.length ? n("li", [n("span", {
        staticClass: "multiselect__option"
      }, [t._t("maxElements", [t._v("Maximum of " + t._s(t.max) + " options selected. First remove a selected option to select another.")])], 2)]) : t._e(), t._v(" "), !t.max || t.internalValue.length < t.max ? t._l(t.filteredOptions, function (e, i) {
        return n("li", {
          key: i,
          staticClass: "multiselect__element"
        }, [e && (e.$isLabel || e.$isDisabled) ? t._e() : n("span", {
          staticClass: "multiselect__option",
          class: t.optionHighlight(i, e),
          attrs: {
            "data-select": e && e.isTag ? t.tagPlaceholder : t.selectLabelText,
            "data-selected": t.selectedLabelText,
            "data-deselect": t.deselectLabelText
          },
          on: {
            click: function (n) {
              n.stopPropagation(), t.select(e);
            },
            mouseenter: function (e) {
              if (e.target !== e.currentTarget) return null;
              t.pointerSet(i);
            }
          }
        }, [t._t("option", [n("span", [t._v(t._s(t.getOptionLabel(e)))])], {
          option: e,
          search: t.search
        })], 2), t._v(" "), e && (e.$isLabel || e.$isDisabled) ? n("span", {
          staticClass: "multiselect__option",
          class: t.groupHighlight(i, e),
          attrs: {
            "data-select": t.groupSelect && t.selectGroupLabelText,
            "data-deselect": t.groupSelect && t.deselectGroupLabelText
          },
          on: {
            mouseenter: function (e) {
              if (e.target !== e.currentTarget) return null;
              t.groupSelect && t.pointerSet(i);
            },
            mousedown: function (n) {
              n.preventDefault(), t.selectGroup(e);
            }
          }
        }, [t._t("option", [n("span", [t._v(t._s(t.getOptionLabel(e)))])], {
          option: e,
          search: t.search
        })], 2) : t._e()]);
      }) : t._e(), t._v(" "), n("li", {
        directives: [{
          name: "show",
          rawName: "v-show",
          value: t.showNoResults && 0 === t.filteredOptions.length && t.search && !t.loading,
          expression: "showNoResults && (filteredOptions.length === 0 && search && !loading)"
        }]
      }, [n("span", {
        staticClass: "multiselect__option"
      }, [t._t("noResult", [t._v("No elements found. Consider changing the search query.")], {
        search: t.search
      })], 2)]), t._v(" "), n("li", {
        directives: [{
          name: "show",
          rawName: "v-show",
          value: t.showNoOptions && 0 === t.options.length && !t.search && !t.loading,
          expression: "showNoOptions && (options.length === 0 && !search && !loading)"
        }]
      }, [n("span", {
        staticClass: "multiselect__option"
      }, [t._t("noOptions", [t._v("List is empty.")])], 2)]), t._v(" "), t._t("afterList")], 2)])])], 2);
    },
        r = [],
        o = {
      render: i,
      staticRenderFns: r
    };

    e.a = o;
  }]);
});
},{}],"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js":[function(require,module,exports) {
var bundleURL = null;

function getBundleURLCached() {
  if (!bundleURL) {
    bundleURL = getBundleURL();
  }

  return bundleURL;
}

function getBundleURL() {
  // Attempt to find the URL of the current script and use that as the base URL
  try {
    throw new Error();
  } catch (err) {
    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\/\/[^)\n]+/g);

    if (matches) {
      return getBaseURL(matches[0]);
    }
  }

  return '/';
}

function getBaseURL(url) {
  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\/\/.+)\/[^/]+$/, '$1') + '/';
}

exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
},{}],"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js":[function(require,module,exports) {
var bundle = require('./bundle-url');

function updateLink(link) {
  var newLink = link.cloneNode();

  newLink.onload = function () {
    link.remove();
  };

  newLink.href = link.href.split('?')[0] + '?' + Date.now();
  link.parentNode.insertBefore(newLink, link.nextSibling);
}

var cssTimeout = null;

function reloadCSS() {
  if (cssTimeout) {
    return;
  }

  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');

    for (var i = 0; i < links.length; i++) {
      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {
        updateLink(links[i]);
      }
    }

    cssTimeout = null;
  }, 50);
}

module.exports = reloadCSS;
},{"./bundle-url":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js"}],"node_modules/vue-multiselect/dist/vue-multiselect.min.css":[function(require,module,exports) {
var reloadCSS = require('_css_loader');

module.hot.dispose(reloadCSS);
module.hot.accept(reloadCSS);
},{"_css_loader":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"node_modules/vue-hot-reload-api/dist/index.js":[function(require,module,exports) {
var Vue // late bind
var version
var map = Object.create(null)
if (typeof window !== 'undefined') {
  window.__VUE_HOT_MAP__ = map
}
var installed = false
var isBrowserify = false
var initHookName = 'beforeCreate'

exports.install = function (vue, browserify) {
  if (installed) { return }
  installed = true

  Vue = vue.__esModule ? vue.default : vue
  version = Vue.version.split('.').map(Number)
  isBrowserify = browserify

  // compat with < 2.0.0-alpha.7
  if (Vue.config._lifecycleHooks.indexOf('init') > -1) {
    initHookName = 'init'
  }

  exports.compatible = version[0] >= 2
  if (!exports.compatible) {
    console.warn(
      '[HMR] You are using a version of vue-hot-reload-api that is ' +
        'only compatible with Vue.js core ^2.0.0.'
    )
    return
  }
}

/**
 * Create a record for a hot module, which keeps track of its constructor
 * and instances
 *
 * @param {String} id
 * @param {Object} options
 */

exports.createRecord = function (id, options) {
  if(map[id]) { return }

  var Ctor = null
  if (typeof options === 'function') {
    Ctor = options
    options = Ctor.options
  }
  makeOptionsHot(id, options)
  map[id] = {
    Ctor: Ctor,
    options: options,
    instances: []
  }
}

/**
 * Check if module is recorded
 *
 * @param {String} id
 */

exports.isRecorded = function (id) {
  return typeof map[id] !== 'undefined'
}

/**
 * Make a Component options object hot.
 *
 * @param {String} id
 * @param {Object} options
 */

function makeOptionsHot(id, options) {
  if (options.functional) {
    var render = options.render
    options.render = function (h, ctx) {
      var instances = map[id].instances
      if (ctx && instances.indexOf(ctx.parent) < 0) {
        instances.push(ctx.parent)
      }
      return render(h, ctx)
    }
  } else {
    injectHook(options, initHookName, function() {
      var record = map[id]
      if (!record.Ctor) {
        record.Ctor = this.constructor
      }
      record.instances.push(this)
    })
    injectHook(options, 'beforeDestroy', function() {
      var instances = map[id].instances
      instances.splice(instances.indexOf(this), 1)
    })
  }
}

/**
 * Inject a hook to a hot reloadable component so that
 * we can keep track of it.
 *
 * @param {Object} options
 * @param {String} name
 * @param {Function} hook
 */

function injectHook(options, name, hook) {
  var existing = options[name]
  options[name] = existing
    ? Array.isArray(existing) ? existing.concat(hook) : [existing, hook]
    : [hook]
}

function tryWrap(fn) {
  return function (id, arg) {
    try {
      fn(id, arg)
    } catch (e) {
      console.error(e)
      console.warn(
        'Something went wrong during Vue component hot-reload. Full reload required.'
      )
    }
  }
}

function updateOptions (oldOptions, newOptions) {
  for (var key in oldOptions) {
    if (!(key in newOptions)) {
      delete oldOptions[key]
    }
  }
  for (var key$1 in newOptions) {
    oldOptions[key$1] = newOptions[key$1]
  }
}

exports.rerender = tryWrap(function (id, options) {
  var record = map[id]
  if (!options) {
    record.instances.slice().forEach(function (instance) {
      instance.$forceUpdate()
    })
    return
  }
  if (typeof options === 'function') {
    options = options.options
  }
  if (record.Ctor) {
    record.Ctor.options.render = options.render
    record.Ctor.options.staticRenderFns = options.staticRenderFns
    record.instances.slice().forEach(function (instance) {
      instance.$options.render = options.render
      instance.$options.staticRenderFns = options.staticRenderFns
      // reset static trees
      // pre 2.5, all static trees are cached together on the instance
      if (instance._staticTrees) {
        instance._staticTrees = []
      }
      // 2.5.0
      if (Array.isArray(record.Ctor.options.cached)) {
        record.Ctor.options.cached = []
      }
      // 2.5.3
      if (Array.isArray(instance.$options.cached)) {
        instance.$options.cached = []
      }

      // post 2.5.4: v-once trees are cached on instance._staticTrees.
      // Pure static trees are cached on the staticRenderFns array
      // (both already reset above)

      // 2.6: temporarily mark rendered scoped slots as unstable so that
      // child components can be forced to update
      var restore = patchScopedSlots(instance)
      instance.$forceUpdate()
      instance.$nextTick(restore)
    })
  } else {
    // functional or no instance created yet
    record.options.render = options.render
    record.options.staticRenderFns = options.staticRenderFns

    // handle functional component re-render
    if (record.options.functional) {
      // rerender with full options
      if (Object.keys(options).length > 2) {
        updateOptions(record.options, options)
      } else {
        // template-only rerender.
        // need to inject the style injection code for CSS modules
        // to work properly.
        var injectStyles = record.options._injectStyles
        if (injectStyles) {
          var render = options.render
          record.options.render = function (h, ctx) {
            injectStyles.call(ctx)
            return render(h, ctx)
          }
        }
      }
      record.options._Ctor = null
      // 2.5.3
      if (Array.isArray(record.options.cached)) {
        record.options.cached = []
      }
      record.instances.slice().forEach(function (instance) {
        instance.$forceUpdate()
      })
    }
  }
})

exports.reload = tryWrap(function (id, options) {
  var record = map[id]
  if (options) {
    if (typeof options === 'function') {
      options = options.options
    }
    makeOptionsHot(id, options)
    if (record.Ctor) {
      if (version[1] < 2) {
        // preserve pre 2.2 behavior for global mixin handling
        record.Ctor.extendOptions = options
      }
      var newCtor = record.Ctor.super.extend(options)
      // prevent record.options._Ctor from being overwritten accidentally
      newCtor.options._Ctor = record.options._Ctor
      record.Ctor.options = newCtor.options
      record.Ctor.cid = newCtor.cid
      record.Ctor.prototype = newCtor.prototype
      if (newCtor.release) {
        // temporary global mixin strategy used in < 2.0.0-alpha.6
        newCtor.release()
      }
    } else {
      updateOptions(record.options, options)
    }
  }
  record.instances.slice().forEach(function (instance) {
    if (instance.$vnode && instance.$vnode.context) {
      instance.$vnode.context.$forceUpdate()
    } else {
      console.warn(
        'Root or manually mounted instance modified. Full reload required.'
      )
    }
  })
})

// 2.6 optimizes template-compiled scoped slots and skips updates if child
// only uses scoped slots. We need to patch the scoped slots resolving helper
// to temporarily mark all scoped slots as unstable in order to force child
// updates.
function patchScopedSlots (instance) {
  if (!instance._u) { return }
  // https://github.com/vuejs/vue/blob/dev/src/core/instance/render-helpers/resolve-scoped-slots.js
  var original = instance._u
  instance._u = function (slots) {
    try {
      // 2.6.4 ~ 2.6.6
      return original(slots, true)
    } catch (e) {
      // 2.5 / >= 2.6.7
      return original(slots, null, true)
    }
  }
  return function () {
    instance._u = original
  }
}

},{}],"components/TeamCard.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vueMultiselect = _interopRequireDefault(require("vue-multiselect"));

require("../node_modules/vue-multiselect/dist/vue-multiselect.min.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// https://vue-multiselect.js.org/
var _default = {
  name: "TeamCard",
  props: ["team", "employees", "projects"],
  components: {
    Multiselect: _vueMultiselect.default
  },
  methods: {
    teamCustomLabel: function teamCustomLabel(_ref) {
      var FirstName = _ref.FirstName,
          LastName = _ref.LastName;
      return "".concat(FirstName, " ").concat(LastName);
    },
    employeeCustomLabel: function employeeCustomLabel(_ref2) {
      var FirstName = _ref2.FirstName,
          LastName = _ref2.LastName;
      return "".concat(FirstName, " ").concat(LastName);
    },
    projectCustomLabel: function projectCustomLabel(_ref3) {
      var ProjectName = _ref3.ProjectName;
      return "".concat(ProjectName);
    },
    saveTeam: function saveTeam() {
      var _this = this;

      var currentTeam = {};
      currentTeam.Projects = this.team.Projects;
      currentTeam.Employees = this.team.Employees;
      currentTeam.TeamLead = this.team.TeamLead;
      currentTeam._id = this.team._id;
      fetch("http://pure-citadel-90161.herokuapp.com/" + currentTeam._id, {
        method: "PUT",
        body: JSON.stringify({
          Employees: currentTeam.Employees,
          TeamLead: currentTeam.TeamLead,
          Projects: currentTeam.Projects,
          _id: currentTeam._id
        }),
        headers: {
          "Content-Type": "application/json"
        }
      }).then(function (res) {
        return res.json();
      }).then(function (data) {
        console.log(data);

        _this.$emit("team-updated", _this.team.TeamName + "Finished Updating");
      }).catch(function (err) {
        console.log(err);

        _this.$emit("team-updated", _this.team.TeamName + " Error on update" + error);
      });
    }
  }
};
exports.default = _default;
        var $94d89d = exports.default || module.exports;
      
      if (typeof $94d89d === 'function') {
        $94d89d = $94d89d.options;
      }
    
        /* template */
        Object.assign($94d89d, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "col-sm-4" }, [
    _c("div", { staticClass: "card" }, [
      _c("div", { staticClass: "card-header" }, [
        _c("strong", [_vm._v(_vm._s(this.team.TeamName))]),
        _vm._v(" "),
        _c(
          "button",
          {
            staticClass: "btn btn-primary btn-sm float-right",
            on: { click: _vm.saveTeam }
          },
          [_vm._v("Save")]
        )
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "card-body" },
        [
          _c("h5", [_vm._v("Team Lead")]),
          _vm._v(" "),
          _c("multiselect", {
            staticClass: "single",
            attrs: {
              options: _vm.employees,
              "custom-label": _vm.teamCustomLabel,
              placeholder: "Select one",
              label: "fullName",
              "track-by": "LastName"
            },
            model: {
              value: _vm.team.TeamLead,
              callback: function($$v) {
                _vm.$set(_vm.team, "TeamLead", $$v)
              },
              expression: "team.TeamLead"
            }
          }),
          _vm._v(" "),
          _c("h5", [_vm._v("Team Members")]),
          _vm._v(" "),
          _c("multiselect", {
            staticClass: "multiple",
            attrs: {
              options: _vm.employees,
              "custom-label": _vm.employeeCustomLabel,
              multiple: true,
              "close-on-select": false,
              "clear-on-select": false,
              "preserve-search": true,
              placeholder: "Pick some",
              label: "fullName",
              "track-by": "LastName",
              "preselect-first": true
            },
            scopedSlots: _vm._u([
              {
                key: "selection",
                fn: function(ref) {
                  var values = ref.values
                  var search = ref.search
                  var isOpen = ref.isOpen
                  return [
                    values.length && !isOpen
                      ? _c("span", { staticClass: "multiselect__single" }, [
                          _vm._v(_vm._s(values.length) + " options selected")
                        ])
                      : _vm._e()
                  ]
                }
              }
            ]),
            model: {
              value: _vm.team.Employees,
              callback: function($$v) {
                _vm.$set(_vm.team, "Employees", $$v)
              },
              expression: "team.Employees"
            }
          }),
          _vm._v(" "),
          _c("h5", [_vm._v("Projects")]),
          _vm._v(" "),
          _c("multiselect", {
            staticClass: "multiple",
            attrs: {
              options: _vm.projects,
              "custom-label": _vm.projectCustomLabel,
              multiple: true,
              "close-on-select": false,
              "clear-on-select": false,
              "preserve-search": true,
              placeholder: "Choose Project",
              label: "projectName",
              "track-by": "ProjectName",
              "preselect-first": true
            },
            scopedSlots: _vm._u([
              {
                key: "selection",
                fn: function(ref) {
                  var values = ref.values
                  var search = ref.search
                  var isOpen = ref.isOpen
                  return [
                    values.length && !isOpen
                      ? _c("span", { staticClass: "multiselect__single" }, [
                          _vm._v(_vm._s(values.length) + " options selected")
                        ])
                      : _vm._e()
                  ]
                }
              }
            ]),
            model: {
              value: _vm.team.Projects,
              callback: function($$v) {
                _vm.$set(_vm.team, "Projects", $$v)
              },
              expression: "team.Projects"
            }
          })
        ],
        1
      )
    ])
  ])
}
var staticRenderFns = []
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-94d89d",
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$94d89d', $94d89d);
          } else {
            api.reload('$94d89d', $94d89d);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"vue-multiselect":"node_modules/vue-multiselect/dist/vue-multiselect.min.js","../node_modules/vue-multiselect/dist/vue-multiselect.min.css":"node_modules/vue-multiselect/dist/vue-multiselect.min.css","_css_loader":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.esm.js"}],"node_modules/lodash-es/_freeGlobal.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
var _default = freeGlobal;
exports.default = _default;
},{}],"node_modules/lodash-es/_root.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _freeGlobal = _interopRequireDefault(require("./_freeGlobal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */

var root = _freeGlobal.default || freeSelf || Function('return this')();
var _default = root;
exports.default = _default;
},{"./_freeGlobal.js":"node_modules/lodash-es/_freeGlobal.js"}],"node_modules/lodash-es/_Symbol.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Built-in value references. */
var Symbol = _root.default.Symbol;
var _default = Symbol;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_getRawTag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/** Built-in value references. */

var symToStringTag = _Symbol.default ? _Symbol.default.toStringTag : undefined;
/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */

function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);

  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }

  return result;
}

var _default = getRawTag;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js"}],"node_modules/lodash-es/_objectToString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */

function objectToString(value) {
  return nativeObjectToString.call(value);
}

var _default = objectToString;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseGetTag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

var _getRawTag = _interopRequireDefault(require("./_getRawTag.js"));

var _objectToString = _interopRequireDefault(require("./_objectToString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';
/** Built-in value references. */

var symToStringTag = _Symbol.default ? _Symbol.default.toStringTag : undefined;
/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }

  return symToStringTag && symToStringTag in Object(value) ? (0, _getRawTag.default)(value) : (0, _objectToString.default)(value);
}

var _default = baseGetTag;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js","./_getRawTag.js":"node_modules/lodash-es/_getRawTag.js","./_objectToString.js":"node_modules/lodash-es/_objectToString.js"}],"node_modules/lodash-es/isObjectLike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

var _default = isObjectLike;
exports.default = _default;
},{}],"node_modules/lodash-es/isSymbol.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */

function isSymbol(value) {
  return typeof value == 'symbol' || (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == symbolTag;
}

var _default = isSymbol;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/_baseToNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;
/**
 * The base implementation of `_.toNumber` which doesn't ensure correct
 * conversions of binary, hexadecimal, or octal string values.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 */

function baseToNumber(value) {
  if (typeof value == 'number') {
    return value;
  }

  if ((0, _isSymbol.default)(value)) {
    return NAN;
  }

  return +value;
}

var _default = baseToNumber;
exports.default = _default;
},{"./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/_arrayMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }

  return result;
}

var _default = arrayMap;
exports.default = _default;
},{}],"node_modules/lodash-es/isArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;
var _default = isArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseToString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;
/** Used to convert symbols to primitives and strings. */

var symbolProto = _Symbol.default ? _Symbol.default.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;
/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */

function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }

  if ((0, _isArray.default)(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return (0, _arrayMap.default)(value, baseToString) + '';
  }

  if ((0, _isSymbol.default)(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }

  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

var _default = baseToString;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/_createMathOperation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToNumber = _interopRequireDefault(require("./_baseToNumber.js"));

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that performs a mathematical operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @param {number} [defaultValue] The value used for `undefined` arguments.
 * @returns {Function} Returns the new mathematical operation function.
 */
function createMathOperation(operator, defaultValue) {
  return function (value, other) {
    var result;

    if (value === undefined && other === undefined) {
      return defaultValue;
    }

    if (value !== undefined) {
      result = value;
    }

    if (other !== undefined) {
      if (result === undefined) {
        return other;
      }

      if (typeof value == 'string' || typeof other == 'string') {
        value = (0, _baseToString.default)(value);
        other = (0, _baseToString.default)(other);
      } else {
        value = (0, _baseToNumber.default)(value);
        other = (0, _baseToNumber.default)(other);
      }

      result = operator(value, other);
    }

    return result;
  };
}

var _default = createMathOperation;
exports.default = _default;
},{"./_baseToNumber.js":"node_modules/lodash-es/_baseToNumber.js","./_baseToString.js":"node_modules/lodash-es/_baseToString.js"}],"node_modules/lodash-es/add.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createMathOperation = _interopRequireDefault(require("./_createMathOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Adds two numbers.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {number} augend The first number in an addition.
 * @param {number} addend The second number in an addition.
 * @returns {number} Returns the total.
 * @example
 *
 * _.add(6, 4);
 * // => 10
 */
var add = (0, _createMathOperation.default)(function (augend, addend) {
  return augend + addend;
}, 0);
var _default = add;
exports.default = _default;
},{"./_createMathOperation.js":"node_modules/lodash-es/_createMathOperation.js"}],"node_modules/lodash-es/isObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var _default = isObject;
exports.default = _default;
},{}],"node_modules/lodash-es/toNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;
/** Used to match leading and trailing whitespace. */

var reTrim = /^\s+|\s+$/g;
/** Used to detect bad signed hexadecimal string values. */

var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */

var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */

var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */

var freeParseInt = parseInt;
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */

function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }

  if ((0, _isSymbol.default)(value)) {
    return NAN;
  }

  if ((0, _isObject.default)(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = (0, _isObject.default)(other) ? other + '' : other;
  }

  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }

  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}

var _default = toNumber;
exports.default = _default;
},{"./isObject.js":"node_modules/lodash-es/isObject.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/toFinite.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;
/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */

function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }

  value = (0, _toNumber.default)(value);

  if (value === INFINITY || value === -INFINITY) {
    var sign = value < 0 ? -1 : 1;
    return sign * MAX_INTEGER;
  }

  return value === value ? value : 0;
}

var _default = toFinite;
exports.default = _default;
},{"./toNumber.js":"node_modules/lodash-es/toNumber.js"}],"node_modules/lodash-es/toInteger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = (0, _toFinite.default)(value),
      remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}

var _default = toInteger;
exports.default = _default;
},{"./toFinite.js":"node_modules/lodash-es/toFinite.js"}],"node_modules/lodash-es/after.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * The opposite of `_.before`; this method creates a function that invokes
 * `func` once it's called `n` or more times.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {number} n The number of calls before `func` is invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var saves = ['profile', 'settings'];
 *
 * var done = _.after(saves.length, function() {
 *   console.log('done saving!');
 * });
 *
 * _.forEach(saves, function(type) {
 *   asyncSave({ 'type': type, 'complete': done });
 * });
 * // => Logs 'done saving!' after the two async saves have completed.
 */

function after(n, func) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  n = (0, _toInteger.default)(n);
  return function () {
    if (--n < 1) {
      return func.apply(this, arguments);
    }
  };
}

var _default = after;
exports.default = _default;
},{"./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

var _default = identity;
exports.default = _default;
},{}],"node_modules/lodash-es/isFunction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */

function isFunction(value) {
  if (!(0, _isObject.default)(value)) {
    return false;
  } // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.


  var tag = (0, _baseGetTag.default)(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

var _default = isFunction;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/_coreJsData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to detect overreaching core-js shims. */
var coreJsData = _root.default['__core-js_shared__'];
var _default = coreJsData;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_isMasked.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _coreJsData = _interopRequireDefault(require("./_coreJsData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to detect methods masquerading as native. */
var maskSrcKey = function () {
  var uid = /[^.]+$/.exec(_coreJsData.default && _coreJsData.default.keys && _coreJsData.default.keys.IE_PROTO || '');
  return uid ? 'Symbol(src)_1.' + uid : '';
}();
/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */


function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}

var _default = isMasked;
exports.default = _default;
},{"./_coreJsData.js":"node_modules/lodash-es/_coreJsData.js"}],"node_modules/lodash-es/_toSource.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var funcProto = Function.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */

function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}

    try {
      return func + '';
    } catch (e) {}
  }

  return '';
}

var _default = toSource;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseIsNative.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isMasked = _interopRequireDefault(require("./_isMasked.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _toSource = _interopRequireDefault(require("./_toSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
/** Used to detect host constructors (Safari). */

var reIsHostCtor = /^\[object .+?Constructor\]$/;
/** Used for built-in method references. */

var funcProto = Function.prototype,
    objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to detect if a method is native. */

var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */

function baseIsNative(value) {
  if (!(0, _isObject.default)(value) || (0, _isMasked.default)(value)) {
    return false;
  }

  var pattern = (0, _isFunction.default)(value) ? reIsNative : reIsHostCtor;
  return pattern.test((0, _toSource.default)(value));
}

var _default = baseIsNative;
exports.default = _default;
},{"./isFunction.js":"node_modules/lodash-es/isFunction.js","./_isMasked.js":"node_modules/lodash-es/_isMasked.js","./isObject.js":"node_modules/lodash-es/isObject.js","./_toSource.js":"node_modules/lodash-es/_toSource.js"}],"node_modules/lodash-es/_getValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

var _default = getValue;
exports.default = _default;
},{}],"node_modules/lodash-es/_getNative.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsNative = _interopRequireDefault(require("./_baseIsNative.js"));

var _getValue = _interopRequireDefault(require("./_getValue.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = (0, _getValue.default)(object, key);
  return (0, _baseIsNative.default)(value) ? value : undefined;
}

var _default = getNative;
exports.default = _default;
},{"./_baseIsNative.js":"node_modules/lodash-es/_baseIsNative.js","./_getValue.js":"node_modules/lodash-es/_getValue.js"}],"node_modules/lodash-es/_WeakMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references that are verified to be native. */
var WeakMap = (0, _getNative.default)(_root.default, 'WeakMap');
var _default = WeakMap;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_metaMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _WeakMap = _interopRequireDefault(require("./_WeakMap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to store function metadata. */
var metaMap = _WeakMap.default && new _WeakMap.default();
var _default = metaMap;
exports.default = _default;
},{"./_WeakMap.js":"node_modules/lodash-es/_WeakMap.js"}],"node_modules/lodash-es/_baseSetData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _identity = _interopRequireDefault(require("./identity.js"));

var _metaMap = _interopRequireDefault(require("./_metaMap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !_metaMap.default ? _identity.default : function (func, data) {
  _metaMap.default.set(func, data);

  return func;
};
var _default = baseSetData;
exports.default = _default;
},{"./identity.js":"node_modules/lodash-es/identity.js","./_metaMap.js":"node_modules/lodash-es/_metaMap.js"}],"node_modules/lodash-es/_baseCreate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Built-in value references. */
var objectCreate = Object.create;
/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */

var baseCreate = function () {
  function object() {}

  return function (proto) {
    if (!(0, _isObject.default)(proto)) {
      return {};
    }

    if (objectCreate) {
      return objectCreate(proto);
    }

    object.prototype = proto;
    var result = new object();
    object.prototype = undefined;
    return result;
  };
}();

var _default = baseCreate;
exports.default = _default;
},{"./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/_createCtor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseCreate = _interopRequireDefault(require("./_baseCreate.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
  return function () {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;

    switch (args.length) {
      case 0:
        return new Ctor();

      case 1:
        return new Ctor(args[0]);

      case 2:
        return new Ctor(args[0], args[1]);

      case 3:
        return new Ctor(args[0], args[1], args[2]);

      case 4:
        return new Ctor(args[0], args[1], args[2], args[3]);

      case 5:
        return new Ctor(args[0], args[1], args[2], args[3], args[4]);

      case 6:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

      case 7:
        return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }

    var thisBinding = (0, _baseCreate.default)(Ctor.prototype),
        result = Ctor.apply(thisBinding, args); // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.

    return (0, _isObject.default)(result) ? result : thisBinding;
  };
}

var _default = createCtor;
exports.default = _default;
},{"./_baseCreate.js":"node_modules/lodash-es/_baseCreate.js","./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/_createBind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCtor = _interopRequireDefault(require("./_createCtor.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;
/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */

function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = (0, _createCtor.default)(func);

  function wrapper() {
    var fn = this && this !== _root.default && this instanceof wrapper ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }

  return wrapper;
}

var _default = createBind;
exports.default = _default;
},{"./_createCtor.js":"node_modules/lodash-es/_createCtor.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_apply.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);

    case 1:
      return func.call(thisArg, args[0]);

    case 2:
      return func.call(thisArg, args[0], args[1]);

    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }

  return func.apply(thisArg, args);
}

var _default = apply;
exports.default = _default;
},{}],"node_modules/lodash-es/_composeArgs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */

function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }

  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }

  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }

  return result;
}

var _default = composeArgs;
exports.default = _default;
},{}],"node_modules/lodash-es/_composeArgsRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */

function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }

  var offset = argsIndex;

  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }

  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }

  return result;
}

var _default = composeArgsRight;
exports.default = _default;
},{}],"node_modules/lodash-es/_countHolders.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }

  return result;
}

var _default = countHolders;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseLodash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {// No operation performed.
}

var _default = baseLodash;
exports.default = _default;
},{}],"node_modules/lodash-es/_LazyWrapper.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseCreate = _interopRequireDefault(require("./_baseCreate.js"));

var _baseLodash = _interopRequireDefault(require("./_baseLodash.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;
/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */

function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
} // Ensure `LazyWrapper` is an instance of `baseLodash`.


LazyWrapper.prototype = (0, _baseCreate.default)(_baseLodash.default.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;
var _default = LazyWrapper;
exports.default = _default;
},{"./_baseCreate.js":"node_modules/lodash-es/_baseCreate.js","./_baseLodash.js":"node_modules/lodash-es/_baseLodash.js"}],"node_modules/lodash-es/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {// No operation performed.
}

var _default = noop;
exports.default = _default;
},{}],"node_modules/lodash-es/_getData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _metaMap = _interopRequireDefault(require("./_metaMap.js"));

var _noop = _interopRequireDefault(require("./noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !_metaMap.default ? _noop.default : function (func) {
  return _metaMap.default.get(func);
};
var _default = getData;
exports.default = _default;
},{"./_metaMap.js":"node_modules/lodash-es/_metaMap.js","./noop.js":"node_modules/lodash-es/noop.js"}],"node_modules/lodash-es/_realNames.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to lookup unminified function names. */
var realNames = {};
var _default = realNames;
exports.default = _default;
},{}],"node_modules/lodash-es/_getFuncName.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _realNames = _interopRequireDefault(require("./_realNames.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */

function getFuncName(func) {
  var result = func.name + '',
      array = _realNames.default[result],
      length = hasOwnProperty.call(_realNames.default, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;

    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }

  return result;
}

var _default = getFuncName;
exports.default = _default;
},{"./_realNames.js":"node_modules/lodash-es/_realNames.js"}],"node_modules/lodash-es/_LodashWrapper.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseCreate = _interopRequireDefault(require("./_baseCreate.js"));

var _baseLodash = _interopRequireDefault(require("./_baseLodash.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = (0, _baseCreate.default)(_baseLodash.default.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;
var _default = LodashWrapper;
exports.default = _default;
},{"./_baseCreate.js":"node_modules/lodash-es/_baseCreate.js","./_baseLodash.js":"node_modules/lodash-es/_baseLodash.js"}],"node_modules/lodash-es/_copyArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;
  array || (array = Array(length));

  while (++index < length) {
    array[index] = source[index];
  }

  return array;
}

var _default = copyArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_wrapperClone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof _LazyWrapper.default) {
    return wrapper.clone();
  }

  var result = new _LodashWrapper.default(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = (0, _copyArray.default)(wrapper.__actions__);
  result.__index__ = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

var _default = wrapperClone;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js"}],"node_modules/lodash-es/wrapperLodash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

var _baseLodash = _interopRequireDefault(require("./_baseLodash.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

var _wrapperClone = _interopRequireDefault(require("./_wrapperClone.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */

function lodash(value) {
  if ((0, _isObjectLike.default)(value) && !(0, _isArray.default)(value) && !(value instanceof _LazyWrapper.default)) {
    if (value instanceof _LodashWrapper.default) {
      return value;
    }

    if (hasOwnProperty.call(value, '__wrapped__')) {
      return (0, _wrapperClone.default)(value);
    }
  }

  return new _LodashWrapper.default(value);
} // Ensure wrappers are instances of `baseLodash`.


lodash.prototype = _baseLodash.default.prototype;
lodash.prototype.constructor = lodash;
var _default = lodash;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js","./_baseLodash.js":"node_modules/lodash-es/_baseLodash.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js","./_wrapperClone.js":"node_modules/lodash-es/_wrapperClone.js"}],"node_modules/lodash-es/_isLaziable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _getData = _interopRequireDefault(require("./_getData.js"));

var _getFuncName = _interopRequireDefault(require("./_getFuncName.js"));

var _wrapperLodash = _interopRequireDefault(require("./wrapperLodash.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = (0, _getFuncName.default)(func),
      other = _wrapperLodash.default[funcName];

  if (typeof other != 'function' || !(funcName in _LazyWrapper.default.prototype)) {
    return false;
  }

  if (func === other) {
    return true;
  }

  var data = (0, _getData.default)(other);
  return !!data && func === data[0];
}

var _default = isLaziable;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_getData.js":"node_modules/lodash-es/_getData.js","./_getFuncName.js":"node_modules/lodash-es/_getFuncName.js","./wrapperLodash.js":"node_modules/lodash-es/wrapperLodash.js"}],"node_modules/lodash-es/_shortOut.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeNow = Date.now;
/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */

function shortOut(func) {
  var count = 0,
      lastCalled = 0;
  return function () {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;

    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }

    return func.apply(undefined, arguments);
  };
}

var _default = shortOut;
exports.default = _default;
},{}],"node_modules/lodash-es/_setData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSetData = _interopRequireDefault(require("./_baseSetData.js"));

var _shortOut = _interopRequireDefault(require("./_shortOut.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = (0, _shortOut.default)(_baseSetData.default);
var _default = setData;
exports.default = _default;
},{"./_baseSetData.js":"node_modules/lodash-es/_baseSetData.js","./_shortOut.js":"node_modules/lodash-es/_shortOut.js"}],"node_modules/lodash-es/_getWrapDetails.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;
/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */

function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

var _default = getWrapDetails;
exports.default = _default;
},{}],"node_modules/lodash-es/_insertWrapDetails.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */

function insertWrapDetails(source, details) {
  var length = details.length;

  if (!length) {
    return source;
  }

  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

var _default = insertWrapDetails;
exports.default = _default;
},{}],"node_modules/lodash-es/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function () {
    return value;
  };
}

var _default = constant;
exports.default = _default;
},{}],"node_modules/lodash-es/_defineProperty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defineProperty = function () {
  try {
    var func = (0, _getNative.default)(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}();

var _default = defineProperty;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js"}],"node_modules/lodash-es/_baseSetToString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constant = _interopRequireDefault(require("./constant.js"));

var _defineProperty = _interopRequireDefault(require("./_defineProperty.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty.default ? _identity.default : function (func, string) {
  return (0, _defineProperty.default)(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': (0, _constant.default)(string),
    'writable': true
  });
};
var _default = baseSetToString;
exports.default = _default;
},{"./constant.js":"node_modules/lodash-es/constant.js","./_defineProperty.js":"node_modules/lodash-es/_defineProperty.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/_setToString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSetToString = _interopRequireDefault(require("./_baseSetToString.js"));

var _shortOut = _interopRequireDefault(require("./_shortOut.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = (0, _shortOut.default)(_baseSetToString.default);
var _default = setToString;
exports.default = _default;
},{"./_baseSetToString.js":"node_modules/lodash-es/_baseSetToString.js","./_shortOut.js":"node_modules/lodash-es/_shortOut.js"}],"node_modules/lodash-es/_arrayEach.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }

  return array;
}

var _default = arrayEach;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseFindIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while (fromRight ? index-- : ++index < length) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }

  return -1;
}

var _default = baseFindIndex;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseIsNaN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

var _default = baseIsNaN;
exports.default = _default;
},{}],"node_modules/lodash-es/_strictIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }

  return -1;
}

var _default = strictIndexOf;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFindIndex = _interopRequireDefault(require("./_baseFindIndex.js"));

var _baseIsNaN = _interopRequireDefault(require("./_baseIsNaN.js"));

var _strictIndexOf = _interopRequireDefault(require("./_strictIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value ? (0, _strictIndexOf.default)(array, value, fromIndex) : (0, _baseFindIndex.default)(array, _baseIsNaN.default, fromIndex);
}

var _default = baseIndexOf;
exports.default = _default;
},{"./_baseFindIndex.js":"node_modules/lodash-es/_baseFindIndex.js","./_baseIsNaN.js":"node_modules/lodash-es/_baseIsNaN.js","./_strictIndexOf.js":"node_modules/lodash-es/_strictIndexOf.js"}],"node_modules/lodash-es/_arrayIncludes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIndexOf = _interopRequireDefault(require("./_baseIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && (0, _baseIndexOf.default)(array, value, 0) > -1;
}

var _default = arrayIncludes;
exports.default = _default;
},{"./_baseIndexOf.js":"node_modules/lodash-es/_baseIndexOf.js"}],"node_modules/lodash-es/_updateWrapDetails.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _arrayIncludes = _interopRequireDefault(require("./_arrayIncludes.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256,
    WRAP_FLIP_FLAG = 512;
/** Used to associate wrap methods with their bit flags. */

var wrapFlags = [['ary', WRAP_ARY_FLAG], ['bind', WRAP_BIND_FLAG], ['bindKey', WRAP_BIND_KEY_FLAG], ['curry', WRAP_CURRY_FLAG], ['curryRight', WRAP_CURRY_RIGHT_FLAG], ['flip', WRAP_FLIP_FLAG], ['partial', WRAP_PARTIAL_FLAG], ['partialRight', WRAP_PARTIAL_RIGHT_FLAG], ['rearg', WRAP_REARG_FLAG]];
/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */

function updateWrapDetails(details, bitmask) {
  (0, _arrayEach.default)(wrapFlags, function (pair) {
    var value = '_.' + pair[0];

    if (bitmask & pair[1] && !(0, _arrayIncludes.default)(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

var _default = updateWrapDetails;
exports.default = _default;
},{"./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_arrayIncludes.js":"node_modules/lodash-es/_arrayIncludes.js"}],"node_modules/lodash-es/_setWrapToString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getWrapDetails = _interopRequireDefault(require("./_getWrapDetails.js"));

var _insertWrapDetails = _interopRequireDefault(require("./_insertWrapDetails.js"));

var _setToString = _interopRequireDefault(require("./_setToString.js"));

var _updateWrapDetails = _interopRequireDefault(require("./_updateWrapDetails.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
  var source = reference + '';
  return (0, _setToString.default)(wrapper, (0, _insertWrapDetails.default)(source, (0, _updateWrapDetails.default)((0, _getWrapDetails.default)(source), bitmask)));
}

var _default = setWrapToString;
exports.default = _default;
},{"./_getWrapDetails.js":"node_modules/lodash-es/_getWrapDetails.js","./_insertWrapDetails.js":"node_modules/lodash-es/_insertWrapDetails.js","./_setToString.js":"node_modules/lodash-es/_setToString.js","./_updateWrapDetails.js":"node_modules/lodash-es/_updateWrapDetails.js"}],"node_modules/lodash-es/_createRecurry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isLaziable = _interopRequireDefault(require("./_isLaziable.js"));

var _setData = _interopRequireDefault(require("./_setData.js"));

var _setWrapToString = _interopRequireDefault(require("./_setWrapToString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;
/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */

function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;
  bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
  }

  var newData = [func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity];
  var result = wrapFunc.apply(undefined, newData);

  if ((0, _isLaziable.default)(func)) {
    (0, _setData.default)(result, newData);
  }

  result.placeholder = placeholder;
  return (0, _setWrapToString.default)(result, func, bitmask);
}

var _default = createRecurry;
exports.default = _default;
},{"./_isLaziable.js":"node_modules/lodash-es/_isLaziable.js","./_setData.js":"node_modules/lodash-es/_setData.js","./_setWrapToString.js":"node_modules/lodash-es/_setWrapToString.js"}],"node_modules/lodash-es/_getHolder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
  var object = func;
  return object.placeholder;
}

var _default = getHolder;
exports.default = _default;
},{}],"node_modules/lodash-es/_isIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/** Used to detect unsigned integer values. */

var reIsUint = /^(?:0|[1-9]\d*)$/;
/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */

function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
}

var _default = isIndex;
exports.default = _default;
},{}],"node_modules/lodash-es/_reorder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;
/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */

function reorder(array, indexes) {
  var arrLength = array.length,
      length = nativeMin(indexes.length, arrLength),
      oldArray = (0, _copyArray.default)(array);

  while (length--) {
    var index = indexes[length];
    array[length] = (0, _isIndex.default)(index, arrLength) ? oldArray[index] : undefined;
  }

  return array;
}

var _default = reorder;
exports.default = _default;
},{"./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js"}],"node_modules/lodash-es/_replaceHolders.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';
/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */

function replaceHolders(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];

    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result[resIndex++] = index;
    }
  }

  return result;
}

var _default = replaceHolders;
exports.default = _default;
},{}],"node_modules/lodash-es/_createHybrid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _composeArgs = _interopRequireDefault(require("./_composeArgs.js"));

var _composeArgsRight = _interopRequireDefault(require("./_composeArgsRight.js"));

var _countHolders = _interopRequireDefault(require("./_countHolders.js"));

var _createCtor = _interopRequireDefault(require("./_createCtor.js"));

var _createRecurry = _interopRequireDefault(require("./_createRecurry.js"));

var _getHolder = _interopRequireDefault(require("./_getHolder.js"));

var _reorder = _interopRequireDefault(require("./_reorder.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_ARY_FLAG = 128,
    WRAP_FLIP_FLAG = 512;
/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */

function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG,
      isBind = bitmask & WRAP_BIND_FLAG,
      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
      isFlip = bitmask & WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : (0, _createCtor.default)(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }

    if (isCurried) {
      var placeholder = (0, _getHolder.default)(wrapper),
          holdersCount = (0, _countHolders.default)(args, placeholder);
    }

    if (partials) {
      args = (0, _composeArgs.default)(args, partials, holders, isCurried);
    }

    if (partialsRight) {
      args = (0, _composeArgsRight.default)(args, partialsRight, holdersRight, isCurried);
    }

    length -= holdersCount;

    if (isCurried && length < arity) {
      var newHolders = (0, _replaceHolders.default)(args, placeholder);
      return (0, _createRecurry.default)(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
    }

    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;
    length = args.length;

    if (argPos) {
      args = (0, _reorder.default)(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }

    if (isAry && ary < length) {
      args.length = ary;
    }

    if (this && this !== _root.default && this instanceof wrapper) {
      fn = Ctor || (0, _createCtor.default)(fn);
    }

    return fn.apply(thisBinding, args);
  }

  return wrapper;
}

var _default = createHybrid;
exports.default = _default;
},{"./_composeArgs.js":"node_modules/lodash-es/_composeArgs.js","./_composeArgsRight.js":"node_modules/lodash-es/_composeArgsRight.js","./_countHolders.js":"node_modules/lodash-es/_countHolders.js","./_createCtor.js":"node_modules/lodash-es/_createCtor.js","./_createRecurry.js":"node_modules/lodash-es/_createRecurry.js","./_getHolder.js":"node_modules/lodash-es/_getHolder.js","./_reorder.js":"node_modules/lodash-es/_reorder.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_createCurry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _createCtor = _interopRequireDefault(require("./_createCtor.js"));

var _createHybrid = _interopRequireDefault(require("./_createHybrid.js"));

var _createRecurry = _interopRequireDefault(require("./_createRecurry.js"));

var _getHolder = _interopRequireDefault(require("./_getHolder.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
  var Ctor = (0, _createCtor.default)(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = (0, _getHolder.default)(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }

    var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : (0, _replaceHolders.default)(args, placeholder);
    length -= holders.length;

    if (length < arity) {
      return (0, _createRecurry.default)(func, bitmask, _createHybrid.default, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
    }

    var fn = this && this !== _root.default && this instanceof wrapper ? Ctor : func;
    return (0, _apply.default)(fn, this, args);
  }

  return wrapper;
}

var _default = createCurry;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_createCtor.js":"node_modules/lodash-es/_createCtor.js","./_createHybrid.js":"node_modules/lodash-es/_createHybrid.js","./_createRecurry.js":"node_modules/lodash-es/_createRecurry.js","./_getHolder.js":"node_modules/lodash-es/_getHolder.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_createPartial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _createCtor = _interopRequireDefault(require("./_createCtor.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;
/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */

function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = (0, _createCtor.default)(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = this && this !== _root.default && this instanceof wrapper ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }

    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }

    return (0, _apply.default)(fn, isBind ? thisArg : this, args);
  }

  return wrapper;
}

var _default = createPartial;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_createCtor.js":"node_modules/lodash-es/_createCtor.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_mergeData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _composeArgs = _interopRequireDefault(require("./_composeArgs.js"));

var _composeArgsRight = _interopRequireDefault(require("./_composeArgsRight.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';
/** Used to compose bitmasks for function metadata. */

var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMin = Math.min;
/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */

function mergeData(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
  var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG; // Exit early if metadata can't be merged.

  if (!(isCommon || isCombo)) {
    return data;
  } // Use source `thisArg` if available.


  if (srcBitmask & WRAP_BIND_FLAG) {
    data[2] = source[2]; // Set when currying a bound function.

    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
  } // Compose partial arguments.


  var value = source[3];

  if (value) {
    var partials = data[3];
    data[3] = partials ? (0, _composeArgs.default)(partials, value, source[4]) : value;
    data[4] = partials ? (0, _replaceHolders.default)(data[3], PLACEHOLDER) : source[4];
  } // Compose partial right arguments.


  value = source[5];

  if (value) {
    partials = data[5];
    data[5] = partials ? (0, _composeArgsRight.default)(partials, value, source[6]) : value;
    data[6] = partials ? (0, _replaceHolders.default)(data[5], PLACEHOLDER) : source[6];
  } // Use source `argPos` if available.


  value = source[7];

  if (value) {
    data[7] = value;
  } // Use source `ary` if it's smaller.


  if (srcBitmask & WRAP_ARY_FLAG) {
    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
  } // Use source `arity` if one is not provided.


  if (data[9] == null) {
    data[9] = source[9];
  } // Use source `func` and merge bitmasks.


  data[0] = source[0];
  data[1] = newBitmask;
  return data;
}

var _default = mergeData;
exports.default = _default;
},{"./_composeArgs.js":"node_modules/lodash-es/_composeArgs.js","./_composeArgsRight.js":"node_modules/lodash-es/_composeArgsRight.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js"}],"node_modules/lodash-es/_createWrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSetData = _interopRequireDefault(require("./_baseSetData.js"));

var _createBind = _interopRequireDefault(require("./_createBind.js"));

var _createCurry = _interopRequireDefault(require("./_createCurry.js"));

var _createHybrid = _interopRequireDefault(require("./_createHybrid.js"));

var _createPartial = _interopRequireDefault(require("./_createPartial.js"));

var _getData = _interopRequireDefault(require("./_getData.js"));

var _mergeData = _interopRequireDefault(require("./_mergeData.js"));

var _setData = _interopRequireDefault(require("./_setData.js"));

var _setWrapToString = _interopRequireDefault(require("./_setWrapToString.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/** Used to compose bitmasks for function metadata. */

var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax = Math.max;
/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */

function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;

  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  var length = partials ? partials.length : 0;

  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }

  ary = ary === undefined ? ary : nativeMax((0, _toInteger.default)(ary), 0);
  arity = arity === undefined ? arity : (0, _toInteger.default)(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;
    partials = holders = undefined;
  }

  var data = isBindKey ? undefined : (0, _getData.default)(func);
  var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

  if (data) {
    (0, _mergeData.default)(newData, data);
  }

  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
  }

  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
    var result = (0, _createBind.default)(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
    result = (0, _createCurry.default)(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = (0, _createPartial.default)(func, bitmask, thisArg, partials);
  } else {
    result = _createHybrid.default.apply(undefined, newData);
  }

  var setter = data ? _baseSetData.default : _setData.default;
  return (0, _setWrapToString.default)(setter(result, newData), func, bitmask);
}

var _default = createWrap;
exports.default = _default;
},{"./_baseSetData.js":"node_modules/lodash-es/_baseSetData.js","./_createBind.js":"node_modules/lodash-es/_createBind.js","./_createCurry.js":"node_modules/lodash-es/_createCurry.js","./_createHybrid.js":"node_modules/lodash-es/_createHybrid.js","./_createPartial.js":"node_modules/lodash-es/_createPartial.js","./_getData.js":"node_modules/lodash-es/_getData.js","./_mergeData.js":"node_modules/lodash-es/_mergeData.js","./_setData.js":"node_modules/lodash-es/_setData.js","./_setWrapToString.js":"node_modules/lodash-es/_setWrapToString.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/ary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_ARY_FLAG = 128;
/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */

function ary(func, n, guard) {
  n = guard ? undefined : n;
  n = func && n == null ? func.length : n;
  return (0, _createWrap.default)(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

var _default = ary;
exports.default = _default;
},{"./_createWrap.js":"node_modules/lodash-es/_createWrap.js"}],"node_modules/lodash-es/_baseAssignValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty = _interopRequireDefault(require("./_defineProperty.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty.default) {
    (0, _defineProperty.default)(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

var _default = baseAssignValue;
exports.default = _default;
},{"./_defineProperty.js":"node_modules/lodash-es/_defineProperty.js"}],"node_modules/lodash-es/eq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || value !== value && other !== other;
}

var _default = eq;
exports.default = _default;
},{}],"node_modules/lodash-es/_assignValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */

function assignValue(object, key, value) {
  var objValue = object[key];

  if (!(hasOwnProperty.call(object, key) && (0, _eq.default)(objValue, value)) || value === undefined && !(key in object)) {
    (0, _baseAssignValue.default)(object, key, value);
  }
}

var _default = assignValue;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/_copyObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assignValue = _interopRequireDefault(require("./_assignValue.js"));

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});
  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];
    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }

    if (isNew) {
      (0, _baseAssignValue.default)(object, key, newValue);
    } else {
      (0, _assignValue.default)(object, key, newValue);
    }
  }

  return object;
}

var _default = copyObject;
exports.default = _default;
},{"./_assignValue.js":"node_modules/lodash-es/_assignValue.js","./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js"}],"node_modules/lodash-es/_overRest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */

function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? func.length - 1 : start, 0);
  return function () {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }

    index = -1;
    var otherArgs = Array(start + 1);

    while (++index < start) {
      otherArgs[index] = args[index];
    }

    otherArgs[start] = transform(array);
    return (0, _apply.default)(func, this, otherArgs);
  };
}

var _default = overRest;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js"}],"node_modules/lodash-es/_baseRest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _identity = _interopRequireDefault(require("./identity.js"));

var _overRest = _interopRequireDefault(require("./_overRest.js"));

var _setToString = _interopRequireDefault(require("./_setToString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return (0, _setToString.default)((0, _overRest.default)(func, start, _identity.default), func + '');
}

var _default = baseRest;
exports.default = _default;
},{"./identity.js":"node_modules/lodash-es/identity.js","./_overRest.js":"node_modules/lodash-es/_overRest.js","./_setToString.js":"node_modules/lodash-es/_setToString.js"}],"node_modules/lodash-es/isLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */

function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

var _default = isLength;
exports.default = _default;
},{}],"node_modules/lodash-es/isArrayLike.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isLength = _interopRequireDefault(require("./isLength.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && (0, _isLength.default)(value.length) && !(0, _isFunction.default)(value);
}

var _default = isArrayLike;
exports.default = _default;
},{"./isFunction.js":"node_modules/lodash-es/isFunction.js","./isLength.js":"node_modules/lodash-es/isLength.js"}],"node_modules/lodash-es/_isIterateeCall.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _eq = _interopRequireDefault(require("./eq.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!(0, _isObject.default)(object)) {
    return false;
  }

  var type = typeof index;

  if (type == 'number' ? (0, _isArrayLike.default)(object) && (0, _isIndex.default)(index, object.length) : type == 'string' && index in object) {
    return (0, _eq.default)(object[index], value);
  }

  return false;
}

var _default = isIterateeCall;
exports.default = _default;
},{"./eq.js":"node_modules/lodash-es/eq.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js","./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/_createAssigner.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return (0, _baseRest.default)(function (object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;
    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

    if (guard && (0, _isIterateeCall.default)(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }

    object = Object(object);

    while (++index < length) {
      var source = sources[index];

      if (source) {
        assigner(object, source, index, customizer);
      }
    }

    return object;
  });
}

var _default = createAssigner;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js"}],"node_modules/lodash-es/_isPrototype.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */

function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
  return value === proto;
}

var _default = isPrototype;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseTimes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }

  return result;
}

var _default = baseTimes;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseIsArguments.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';
/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */

function baseIsArguments(value) {
  return (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == argsTag;
}

var _default = baseIsArguments;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isArguments.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsArguments = _interopRequireDefault(require("./_baseIsArguments.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references. */

var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */

var isArguments = (0, _baseIsArguments.default)(function () {
  return arguments;
}()) ? _baseIsArguments.default : function (value) {
  return (0, _isObjectLike.default)(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
};
var _default = isArguments;
exports.default = _default;
},{"./_baseIsArguments.js":"node_modules/lodash-es/_baseIsArguments.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/stubFalse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

var _default = stubFalse;
exports.default = _default;
},{}],"node_modules/lodash-es/isBuffer.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

var _stubFalse = _interopRequireDefault(require("./stubFalse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */

var Buffer = moduleExports ? _root.default.Buffer : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;
/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */

var isBuffer = nativeIsBuffer || _stubFalse.default;
var _default = isBuffer;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js","./stubFalse.js":"node_modules/lodash-es/stubFalse.js"}],"node_modules/lodash-es/_baseIsTypedArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isLength = _interopRequireDefault(require("./isLength.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values of typed arrays. */

var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */

function baseIsTypedArray(value) {
  return (0, _isObjectLike.default)(value) && (0, _isLength.default)(value.length) && !!typedArrayTags[(0, _baseGetTag.default)(value)];
}

var _default = baseIsTypedArray;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isLength.js":"node_modules/lodash-es/isLength.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/_baseUnary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function (value) {
    return func(value);
  };
}

var _default = baseUnary;
exports.default = _default;
},{}],"node_modules/lodash-es/_nodeUtil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _freeGlobal = _interopRequireDefault(require("./_freeGlobal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Detect free variable `process` from Node.js. */

var freeProcess = moduleExports && _freeGlobal.default.process;
/** Used to access faster Node.js helpers. */

var nodeUtil = function () {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    } // Legacy `process.binding('util')` for Node.js < 10.


    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}();

var _default = nodeUtil;
exports.default = _default;
},{"./_freeGlobal.js":"node_modules/lodash-es/_freeGlobal.js"}],"node_modules/lodash-es/isTypedArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsTypedArray = _interopRequireDefault(require("./_baseIsTypedArray.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _nodeUtil = _interopRequireDefault(require("./_nodeUtil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil.default && _nodeUtil.default.isTypedArray;
/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */

var isTypedArray = nodeIsTypedArray ? (0, _baseUnary.default)(nodeIsTypedArray) : _baseIsTypedArray.default;
var _default = isTypedArray;
exports.default = _default;
},{"./_baseIsTypedArray.js":"node_modules/lodash-es/_baseIsTypedArray.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_nodeUtil.js":"node_modules/lodash-es/_nodeUtil.js"}],"node_modules/lodash-es/_arrayLikeKeys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseTimes = _interopRequireDefault(require("./_baseTimes.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */

function arrayLikeKeys(value, inherited) {
  var isArr = (0, _isArray.default)(value),
      isArg = !isArr && (0, _isArguments.default)(value),
      isBuff = !isArr && !isArg && (0, _isBuffer.default)(value),
      isType = !isArr && !isArg && !isBuff && (0, _isTypedArray.default)(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? (0, _baseTimes.default)(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.
    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.
    (0, _isIndex.default)(key, length)))) {
      result.push(key);
    }
  }

  return result;
}

var _default = arrayLikeKeys;
exports.default = _default;
},{"./_baseTimes.js":"node_modules/lodash-es/_baseTimes.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js"}],"node_modules/lodash-es/_overArg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function (arg) {
    return func(transform(arg));
  };
}

var _default = overArg;
exports.default = _default;
},{}],"node_modules/lodash-es/_nativeKeys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _overArg = _interopRequireDefault(require("./_overArg.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = (0, _overArg.default)(Object.keys, Object);
var _default = nativeKeys;
exports.default = _default;
},{"./_overArg.js":"node_modules/lodash-es/_overArg.js"}],"node_modules/lodash-es/_baseKeys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isPrototype = _interopRequireDefault(require("./_isPrototype.js"));

var _nativeKeys = _interopRequireDefault(require("./_nativeKeys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

function baseKeys(object) {
  if (!(0, _isPrototype.default)(object)) {
    return (0, _nativeKeys.default)(object);
  }

  var result = [];

  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }

  return result;
}

var _default = baseKeys;
exports.default = _default;
},{"./_isPrototype.js":"node_modules/lodash-es/_isPrototype.js","./_nativeKeys.js":"node_modules/lodash-es/_nativeKeys.js"}],"node_modules/lodash-es/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayLikeKeys = _interopRequireDefault(require("./_arrayLikeKeys.js"));

var _baseKeys = _interopRequireDefault(require("./_baseKeys.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return (0, _isArrayLike.default)(object) ? (0, _arrayLikeKeys.default)(object) : (0, _baseKeys.default)(object);
}

var _default = keys;
exports.default = _default;
},{"./_arrayLikeKeys.js":"node_modules/lodash-es/_arrayLikeKeys.js","./_baseKeys.js":"node_modules/lodash-es/_baseKeys.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js"}],"node_modules/lodash-es/assign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assignValue = _interopRequireDefault(require("./_assignValue.js"));

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _createAssigner = _interopRequireDefault(require("./_createAssigner.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isPrototype = _interopRequireDefault(require("./_isPrototype.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */

var assign = (0, _createAssigner.default)(function (object, source) {
  if ((0, _isPrototype.default)(source) || (0, _isArrayLike.default)(source)) {
    (0, _copyObject.default)(source, (0, _keys.default)(source), object);
    return;
  }

  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      (0, _assignValue.default)(object, key, source[key]);
    }
  }
});
var _default = assign;
exports.default = _default;
},{"./_assignValue.js":"node_modules/lodash-es/_assignValue.js","./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_createAssigner.js":"node_modules/lodash-es/_createAssigner.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./_isPrototype.js":"node_modules/lodash-es/_isPrototype.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_nativeKeysIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];

  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }

  return result;
}

var _default = nativeKeysIn;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseKeysIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isPrototype = _interopRequireDefault(require("./_isPrototype.js"));

var _nativeKeysIn = _interopRequireDefault(require("./_nativeKeysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */

function baseKeysIn(object) {
  if (!(0, _isObject.default)(object)) {
    return (0, _nativeKeysIn.default)(object);
  }

  var isProto = (0, _isPrototype.default)(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }

  return result;
}

var _default = baseKeysIn;
exports.default = _default;
},{"./isObject.js":"node_modules/lodash-es/isObject.js","./_isPrototype.js":"node_modules/lodash-es/_isPrototype.js","./_nativeKeysIn.js":"node_modules/lodash-es/_nativeKeysIn.js"}],"node_modules/lodash-es/keysIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayLikeKeys = _interopRequireDefault(require("./_arrayLikeKeys.js"));

var _baseKeysIn = _interopRequireDefault(require("./_baseKeysIn.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return (0, _isArrayLike.default)(object) ? (0, _arrayLikeKeys.default)(object, true) : (0, _baseKeysIn.default)(object);
}

var _default = keysIn;
exports.default = _default;
},{"./_arrayLikeKeys.js":"node_modules/lodash-es/_arrayLikeKeys.js","./_baseKeysIn.js":"node_modules/lodash-es/_baseKeysIn.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js"}],"node_modules/lodash-es/assignIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _createAssigner = _interopRequireDefault(require("./_createAssigner.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.assign` except that it iterates over own and
 * inherited source properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extend
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assign
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assignIn({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
 */
var assignIn = (0, _createAssigner.default)(function (object, source) {
  (0, _copyObject.default)(source, (0, _keysIn.default)(source), object);
});
var _default = assignIn;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_createAssigner.js":"node_modules/lodash-es/_createAssigner.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/assignInWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _createAssigner = _interopRequireDefault(require("./_createAssigner.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.assignIn` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias extendWith
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignInWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignInWith = (0, _createAssigner.default)(function (object, source, srcIndex, customizer) {
  (0, _copyObject.default)(source, (0, _keysIn.default)(source), object, customizer);
});
var _default = assignInWith;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_createAssigner.js":"node_modules/lodash-es/_createAssigner.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/assignWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _createAssigner = _interopRequireDefault(require("./_createAssigner.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.assign` except that it accepts `customizer`
 * which is invoked to produce the assigned values. If `customizer` returns
 * `undefined`, assignment is handled by the method instead. The `customizer`
 * is invoked with five arguments: (objValue, srcValue, key, object, source).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @see _.assignInWith
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignWith = (0, _createAssigner.default)(function (object, source, srcIndex, customizer) {
  (0, _copyObject.default)(source, (0, _keys.default)(source), object, customizer);
});
var _default = assignWith;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_createAssigner.js":"node_modules/lodash-es/_createAssigner.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_isKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;
/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */

function isKey(value, object) {
  if ((0, _isArray.default)(value)) {
    return false;
  }

  var type = typeof value;

  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || (0, _isSymbol.default)(value)) {
    return true;
  }

  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
}

var _default = isKey;
exports.default = _default;
},{"./isArray.js":"node_modules/lodash-es/isArray.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/_nativeCreate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references that are verified to be native. */
var nativeCreate = (0, _getNative.default)(Object, 'create');
var _default = nativeCreate;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js"}],"node_modules/lodash-es/_hashClear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _nativeCreate = _interopRequireDefault(require("./_nativeCreate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate.default ? (0, _nativeCreate.default)(null) : {};
  this.size = 0;
}

var _default = hashClear;
exports.default = _default;
},{"./_nativeCreate.js":"node_modules/lodash-es/_nativeCreate.js"}],"node_modules/lodash-es/_hashDelete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

var _default = hashDelete;
exports.default = _default;
},{}],"node_modules/lodash-es/_hashGet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _nativeCreate = _interopRequireDefault(require("./_nativeCreate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */

function hashGet(key) {
  var data = this.__data__;

  if (_nativeCreate.default) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }

  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

var _default = hashGet;
exports.default = _default;
},{"./_nativeCreate.js":"node_modules/lodash-es/_nativeCreate.js"}],"node_modules/lodash-es/_hashHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _nativeCreate = _interopRequireDefault(require("./_nativeCreate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */

function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate.default ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

var _default = hashHas;
exports.default = _default;
},{"./_nativeCreate.js":"node_modules/lodash-es/_nativeCreate.js"}],"node_modules/lodash-es/_hashSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _nativeCreate = _interopRequireDefault(require("./_nativeCreate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */

function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = _nativeCreate.default && value === undefined ? HASH_UNDEFINED : value;
  return this;
}

var _default = hashSet;
exports.default = _default;
},{"./_nativeCreate.js":"node_modules/lodash-es/_nativeCreate.js"}],"node_modules/lodash-es/_Hash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _hashClear = _interopRequireDefault(require("./_hashClear.js"));

var _hashDelete = _interopRequireDefault(require("./_hashDelete.js"));

var _hashGet = _interopRequireDefault(require("./_hashGet.js"));

var _hashHas = _interopRequireDefault(require("./_hashHas.js"));

var _hashSet = _interopRequireDefault(require("./_hashSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `Hash`.


Hash.prototype.clear = _hashClear.default;
Hash.prototype['delete'] = _hashDelete.default;
Hash.prototype.get = _hashGet.default;
Hash.prototype.has = _hashHas.default;
Hash.prototype.set = _hashSet.default;
var _default = Hash;
exports.default = _default;
},{"./_hashClear.js":"node_modules/lodash-es/_hashClear.js","./_hashDelete.js":"node_modules/lodash-es/_hashDelete.js","./_hashGet.js":"node_modules/lodash-es/_hashGet.js","./_hashHas.js":"node_modules/lodash-es/_hashHas.js","./_hashSet.js":"node_modules/lodash-es/_hashSet.js"}],"node_modules/lodash-es/_listCacheClear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

var _default = listCacheClear;
exports.default = _default;
},{}],"node_modules/lodash-es/_assocIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;

  while (length--) {
    if ((0, _eq.default)(array[length][0], key)) {
      return length;
    }
  }

  return -1;
}

var _default = assocIndexOf;
exports.default = _default;
},{"./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/_listCacheDelete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assocIndexOf = _interopRequireDefault(require("./_assocIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */

function listCacheDelete(key) {
  var data = this.__data__,
      index = (0, _assocIndexOf.default)(data, key);

  if (index < 0) {
    return false;
  }

  var lastIndex = data.length - 1;

  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }

  --this.size;
  return true;
}

var _default = listCacheDelete;
exports.default = _default;
},{"./_assocIndexOf.js":"node_modules/lodash-es/_assocIndexOf.js"}],"node_modules/lodash-es/_listCacheGet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assocIndexOf = _interopRequireDefault(require("./_assocIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = (0, _assocIndexOf.default)(data, key);
  return index < 0 ? undefined : data[index][1];
}

var _default = listCacheGet;
exports.default = _default;
},{"./_assocIndexOf.js":"node_modules/lodash-es/_assocIndexOf.js"}],"node_modules/lodash-es/_listCacheHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assocIndexOf = _interopRequireDefault(require("./_assocIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return (0, _assocIndexOf.default)(this.__data__, key) > -1;
}

var _default = listCacheHas;
exports.default = _default;
},{"./_assocIndexOf.js":"node_modules/lodash-es/_assocIndexOf.js"}],"node_modules/lodash-es/_listCacheSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assocIndexOf = _interopRequireDefault(require("./_assocIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = (0, _assocIndexOf.default)(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }

  return this;
}

var _default = listCacheSet;
exports.default = _default;
},{"./_assocIndexOf.js":"node_modules/lodash-es/_assocIndexOf.js"}],"node_modules/lodash-es/_ListCache.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _listCacheClear = _interopRequireDefault(require("./_listCacheClear.js"));

var _listCacheDelete = _interopRequireDefault(require("./_listCacheDelete.js"));

var _listCacheGet = _interopRequireDefault(require("./_listCacheGet.js"));

var _listCacheHas = _interopRequireDefault(require("./_listCacheHas.js"));

var _listCacheSet = _interopRequireDefault(require("./_listCacheSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `ListCache`.


ListCache.prototype.clear = _listCacheClear.default;
ListCache.prototype['delete'] = _listCacheDelete.default;
ListCache.prototype.get = _listCacheGet.default;
ListCache.prototype.has = _listCacheHas.default;
ListCache.prototype.set = _listCacheSet.default;
var _default = ListCache;
exports.default = _default;
},{"./_listCacheClear.js":"node_modules/lodash-es/_listCacheClear.js","./_listCacheDelete.js":"node_modules/lodash-es/_listCacheDelete.js","./_listCacheGet.js":"node_modules/lodash-es/_listCacheGet.js","./_listCacheHas.js":"node_modules/lodash-es/_listCacheHas.js","./_listCacheSet.js":"node_modules/lodash-es/_listCacheSet.js"}],"node_modules/lodash-es/_Map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references that are verified to be native. */
var Map = (0, _getNative.default)(_root.default, 'Map');
var _default = Map;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_mapCacheClear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Hash = _interopRequireDefault(require("./_Hash.js"));

var _ListCache = _interopRequireDefault(require("./_ListCache.js"));

var _Map = _interopRequireDefault(require("./_Map.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash.default(),
    'map': new (_Map.default || _ListCache.default)(),
    'string': new _Hash.default()
  };
}

var _default = mapCacheClear;
exports.default = _default;
},{"./_Hash.js":"node_modules/lodash-es/_Hash.js","./_ListCache.js":"node_modules/lodash-es/_ListCache.js","./_Map.js":"node_modules/lodash-es/_Map.js"}],"node_modules/lodash-es/_isKeyable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
}

var _default = isKeyable;
exports.default = _default;
},{}],"node_modules/lodash-es/_getMapData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isKeyable = _interopRequireDefault(require("./_isKeyable.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return (0, _isKeyable.default)(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
}

var _default = getMapData;
exports.default = _default;
},{"./_isKeyable.js":"node_modules/lodash-es/_isKeyable.js"}],"node_modules/lodash-es/_mapCacheDelete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getMapData = _interopRequireDefault(require("./_getMapData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = (0, _getMapData.default)(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

var _default = mapCacheDelete;
exports.default = _default;
},{"./_getMapData.js":"node_modules/lodash-es/_getMapData.js"}],"node_modules/lodash-es/_mapCacheGet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getMapData = _interopRequireDefault(require("./_getMapData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return (0, _getMapData.default)(this, key).get(key);
}

var _default = mapCacheGet;
exports.default = _default;
},{"./_getMapData.js":"node_modules/lodash-es/_getMapData.js"}],"node_modules/lodash-es/_mapCacheHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getMapData = _interopRequireDefault(require("./_getMapData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return (0, _getMapData.default)(this, key).has(key);
}

var _default = mapCacheHas;
exports.default = _default;
},{"./_getMapData.js":"node_modules/lodash-es/_getMapData.js"}],"node_modules/lodash-es/_mapCacheSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getMapData = _interopRequireDefault(require("./_getMapData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = (0, _getMapData.default)(this, key),
      size = data.size;
  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

var _default = mapCacheSet;
exports.default = _default;
},{"./_getMapData.js":"node_modules/lodash-es/_getMapData.js"}],"node_modules/lodash-es/_MapCache.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mapCacheClear = _interopRequireDefault(require("./_mapCacheClear.js"));

var _mapCacheDelete = _interopRequireDefault(require("./_mapCacheDelete.js"));

var _mapCacheGet = _interopRequireDefault(require("./_mapCacheGet.js"));

var _mapCacheHas = _interopRequireDefault(require("./_mapCacheHas.js"));

var _mapCacheSet = _interopRequireDefault(require("./_mapCacheSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;
  this.clear();

  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
} // Add methods to `MapCache`.


MapCache.prototype.clear = _mapCacheClear.default;
MapCache.prototype['delete'] = _mapCacheDelete.default;
MapCache.prototype.get = _mapCacheGet.default;
MapCache.prototype.has = _mapCacheHas.default;
MapCache.prototype.set = _mapCacheSet.default;
var _default = MapCache;
exports.default = _default;
},{"./_mapCacheClear.js":"node_modules/lodash-es/_mapCacheClear.js","./_mapCacheDelete.js":"node_modules/lodash-es/_mapCacheDelete.js","./_mapCacheGet.js":"node_modules/lodash-es/_mapCacheGet.js","./_mapCacheHas.js":"node_modules/lodash-es/_mapCacheHas.js","./_mapCacheSet.js":"node_modules/lodash-es/_mapCacheSet.js"}],"node_modules/lodash-es/memoize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _MapCache = _interopRequireDefault(require("./_MapCache.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */

function memoize(func, resolver) {
  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  var memoized = function () {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }

    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };

  memoized.cache = new (memoize.Cache || _MapCache.default)();
  return memoized;
} // Expose `MapCache`.


memoize.Cache = _MapCache.default;
var _default = memoize;
exports.default = _default;
},{"./_MapCache.js":"node_modules/lodash-es/_MapCache.js"}],"node_modules/lodash-es/_memoizeCapped.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _memoize = _interopRequireDefault(require("./memoize.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;
/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */

function memoizeCapped(func) {
  var result = (0, _memoize.default)(func, function (key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }

    return key;
  });
  var cache = result.cache;
  return result;
}

var _default = memoizeCapped;
exports.default = _default;
},{"./memoize.js":"node_modules/lodash-es/memoize.js"}],"node_modules/lodash-es/_stringToPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _memoizeCapped = _interopRequireDefault(require("./_memoizeCapped.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
/** Used to match backslashes in property paths. */

var reEscapeChar = /\\(\\)?/g;
/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */

var stringToPath = (0, _memoizeCapped.default)(function (string) {
  var result = [];

  if (string.charCodeAt(0) === 46
  /* . */
  ) {
      result.push('');
    }

  string.replace(rePropName, function (match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);
  });
  return result;
});
var _default = stringToPath;
exports.default = _default;
},{"./_memoizeCapped.js":"node_modules/lodash-es/_memoizeCapped.js"}],"node_modules/lodash-es/toString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : (0, _baseToString.default)(value);
}

var _default = toString;
exports.default = _default;
},{"./_baseToString.js":"node_modules/lodash-es/_baseToString.js"}],"node_modules/lodash-es/_castPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isKey = _interopRequireDefault(require("./_isKey.js"));

var _stringToPath = _interopRequireDefault(require("./_stringToPath.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if ((0, _isArray.default)(value)) {
    return value;
  }

  return (0, _isKey.default)(value, object) ? [value] : (0, _stringToPath.default)((0, _toString.default)(value));
}

var _default = castPath;
exports.default = _default;
},{"./isArray.js":"node_modules/lodash-es/isArray.js","./_isKey.js":"node_modules/lodash-es/_isKey.js","./_stringToPath.js":"node_modules/lodash-es/_stringToPath.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/_toKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;
/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */

function toKey(value) {
  if (typeof value == 'string' || (0, _isSymbol.default)(value)) {
    return value;
  }

  var result = value + '';
  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}

var _default = toKey;
exports.default = _default;
},{"./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/_baseGet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = (0, _castPath.default)(path, object);
  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[(0, _toKey.default)(path[index++])];
  }

  return index && index == length ? object : undefined;
}

var _default = baseGet;
exports.default = _default;
},{"./_castPath.js":"node_modules/lodash-es/_castPath.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/get.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGet = _interopRequireDefault(require("./_baseGet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : (0, _baseGet.default)(object, path);
  return result === undefined ? defaultValue : result;
}

var _default = get;
exports.default = _default;
},{"./_baseGet.js":"node_modules/lodash-es/_baseGet.js"}],"node_modules/lodash-es/_baseAt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get = _interopRequireDefault(require("./get.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.at` without support for individual paths.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {string[]} paths The property paths to pick.
 * @returns {Array} Returns the picked elements.
 */
function baseAt(object, paths) {
  var index = -1,
      length = paths.length,
      result = Array(length),
      skip = object == null;

  while (++index < length) {
    result[index] = skip ? undefined : (0, _get.default)(object, paths[index]);
  }

  return result;
}

var _default = baseAt;
exports.default = _default;
},{"./get.js":"node_modules/lodash-es/get.js"}],"node_modules/lodash-es/_arrayPush.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }

  return array;
}

var _default = arrayPush;
exports.default = _default;
},{}],"node_modules/lodash-es/_isFlattenable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Built-in value references. */
var spreadableSymbol = _Symbol.default ? _Symbol.default.isConcatSpreadable : undefined;
/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */

function isFlattenable(value) {
  return (0, _isArray.default)(value) || (0, _isArguments.default)(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}

var _default = isFlattenable;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_baseFlatten.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _isFlattenable = _interopRequireDefault(require("./_isFlattenable.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;
  predicate || (predicate = _isFlattenable.default);
  result || (result = []);

  while (++index < length) {
    var value = array[index];

    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        (0, _arrayPush.default)(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }

  return result;
}

var _default = baseFlatten;
exports.default = _default;
},{"./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_isFlattenable.js":"node_modules/lodash-es/_isFlattenable.js"}],"node_modules/lodash-es/flatten.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? (0, _baseFlatten.default)(array, 1) : [];
}

var _default = flatten;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js"}],"node_modules/lodash-es/_flatRest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _flatten = _interopRequireDefault(require("./flatten.js"));

var _overRest = _interopRequireDefault(require("./_overRest.js"));

var _setToString = _interopRequireDefault(require("./_setToString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return (0, _setToString.default)((0, _overRest.default)(func, undefined, _flatten.default), func + '');
}

var _default = flatRest;
exports.default = _default;
},{"./flatten.js":"node_modules/lodash-es/flatten.js","./_overRest.js":"node_modules/lodash-es/_overRest.js","./_setToString.js":"node_modules/lodash-es/_setToString.js"}],"node_modules/lodash-es/at.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAt = _interopRequireDefault(require("./_baseAt.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of values corresponding to `paths` of `object`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Array} Returns the picked values.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _.at(object, ['a[0].b.c', 'a[1]']);
 * // => [3, 4]
 */
var at = (0, _flatRest.default)(_baseAt.default);
var _default = at;
exports.default = _default;
},{"./_baseAt.js":"node_modules/lodash-es/_baseAt.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js"}],"node_modules/lodash-es/_getPrototype.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _overArg = _interopRequireDefault(require("./_overArg.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Built-in value references. */
var getPrototype = (0, _overArg.default)(Object.getPrototypeOf, Object);
var _default = getPrototype;
exports.default = _default;
},{"./_overArg.js":"node_modules/lodash-es/_overArg.js"}],"node_modules/lodash-es/isPlainObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _getPrototype = _interopRequireDefault(require("./_getPrototype.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var objectTag = '[object Object]';
/** Used for built-in method references. */

var funcProto = Function.prototype,
    objectProto = Object.prototype;
/** Used to resolve the decompiled source of functions. */

var funcToString = funcProto.toString;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Used to infer the `Object` constructor. */

var objectCtorString = funcToString.call(Object);
/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */

function isPlainObject(value) {
  if (!(0, _isObjectLike.default)(value) || (0, _baseGetTag.default)(value) != objectTag) {
    return false;
  }

  var proto = (0, _getPrototype.default)(value);

  if (proto === null) {
    return true;
  }

  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
}

var _default = isPlainObject;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./_getPrototype.js":"node_modules/lodash-es/_getPrototype.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isError.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var domExcTag = '[object DOMException]',
    errorTag = '[object Error]';
/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
 * `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * _.isError(new Error);
 * // => true
 *
 * _.isError(Error);
 * // => false
 */

function isError(value) {
  if (!(0, _isObjectLike.default)(value)) {
    return false;
  }

  var tag = (0, _baseGetTag.default)(value);
  return tag == errorTag || tag == domExcTag || typeof value.message == 'string' && typeof value.name == 'string' && !(0, _isPlainObject.default)(value);
}

var _default = isError;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js","./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js"}],"node_modules/lodash-es/attempt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isError = _interopRequireDefault(require("./isError.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Attempts to invoke `func`, returning either the result or the caught error
 * object. Any additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Function} func The function to attempt.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {*} Returns the `func` result or error object.
 * @example
 *
 * // Avoid throwing errors for invalid selectors.
 * var elements = _.attempt(function(selector) {
 *   return document.querySelectorAll(selector);
 * }, '>_>');
 *
 * if (_.isError(elements)) {
 *   elements = [];
 * }
 */
var attempt = (0, _baseRest.default)(function (func, args) {
  try {
    return (0, _apply.default)(func, undefined, args);
  } catch (e) {
    return (0, _isError.default)(e) ? e : new Error(e);
  }
});
var _default = attempt;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./isError.js":"node_modules/lodash-es/isError.js"}],"node_modules/lodash-es/before.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that invokes `func`, with the `this` binding and arguments
 * of the created function, while it's called less than `n` times. Subsequent
 * calls to the created function return the result of the last `func` invocation.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {number} n The number of calls at which `func` is no longer invoked.
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * jQuery(element).on('click', _.before(5, addContactToList));
 * // => Allows adding up to 4 contacts to the list.
 */

function before(n, func) {
  var result;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  n = (0, _toInteger.default)(n);
  return function () {
    if (--n > 0) {
      result = func.apply(this, arguments);
    }

    if (n <= 1) {
      func = undefined;
    }

    return result;
  };
}

var _default = before;
exports.default = _default;
},{"./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/bind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

var _getHolder = _interopRequireDefault(require("./_getHolder.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_PARTIAL_FLAG = 32;
/**
 * Creates a function that invokes `func` with the `this` binding of `thisArg`
 * and `partials` prepended to the arguments it receives.
 *
 * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for partially applied arguments.
 *
 * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
 * property of bound functions.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * function greet(greeting, punctuation) {
 *   return greeting + ' ' + this.user + punctuation;
 * }
 *
 * var object = { 'user': 'fred' };
 *
 * var bound = _.bind(greet, object, 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bind(greet, object, _, '!');
 * bound('hi');
 * // => 'hi fred!'
 */

var bind = (0, _baseRest.default)(function (func, thisArg, partials) {
  var bitmask = WRAP_BIND_FLAG;

  if (partials.length) {
    var holders = (0, _replaceHolders.default)(partials, (0, _getHolder.default)(bind));
    bitmask |= WRAP_PARTIAL_FLAG;
  }

  return (0, _createWrap.default)(func, bitmask, thisArg, partials, holders);
}); // Assign default placeholders.

bind.placeholder = {};
var _default = bind;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_createWrap.js":"node_modules/lodash-es/_createWrap.js","./_getHolder.js":"node_modules/lodash-es/_getHolder.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js"}],"node_modules/lodash-es/bindAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _bind = _interopRequireDefault(require("./bind.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Binds methods of an object to the object itself, overwriting the existing
 * method.
 *
 * **Note:** This method doesn't set the "length" property of bound functions.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {Object} object The object to bind and assign the bound methods to.
 * @param {...(string|string[])} methodNames The object method names to bind.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var view = {
 *   'label': 'docs',
 *   'click': function() {
 *     console.log('clicked ' + this.label);
 *   }
 * };
 *
 * _.bindAll(view, ['click']);
 * jQuery(element).on('click', view.click);
 * // => Logs 'clicked docs' when clicked.
 */
var bindAll = (0, _flatRest.default)(function (object, methodNames) {
  (0, _arrayEach.default)(methodNames, function (key) {
    key = (0, _toKey.default)(key);
    (0, _baseAssignValue.default)(object, key, (0, _bind.default)(object[key], object));
  });
  return object;
});
var _default = bindAll;
exports.default = _default;
},{"./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./bind.js":"node_modules/lodash-es/bind.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/bindKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

var _getHolder = _interopRequireDefault(require("./_getHolder.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_PARTIAL_FLAG = 32;
/**
 * Creates a function that invokes the method at `object[key]` with `partials`
 * prepended to the arguments it receives.
 *
 * This method differs from `_.bind` by allowing bound functions to reference
 * methods that may be redefined or don't yet exist. See
 * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
 * for more details.
 *
 * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Function
 * @param {Object} object The object to invoke the method on.
 * @param {string} key The key of the method.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new bound function.
 * @example
 *
 * var object = {
 *   'user': 'fred',
 *   'greet': function(greeting, punctuation) {
 *     return greeting + ' ' + this.user + punctuation;
 *   }
 * };
 *
 * var bound = _.bindKey(object, 'greet', 'hi');
 * bound('!');
 * // => 'hi fred!'
 *
 * object.greet = function(greeting, punctuation) {
 *   return greeting + 'ya ' + this.user + punctuation;
 * };
 *
 * bound('!');
 * // => 'hiya fred!'
 *
 * // Bound with placeholders.
 * var bound = _.bindKey(object, 'greet', _, '!');
 * bound('hi');
 * // => 'hiya fred!'
 */

var bindKey = (0, _baseRest.default)(function (object, key, partials) {
  var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;

  if (partials.length) {
    var holders = (0, _replaceHolders.default)(partials, (0, _getHolder.default)(bindKey));
    bitmask |= WRAP_PARTIAL_FLAG;
  }

  return (0, _createWrap.default)(key, bitmask, object, partials, holders);
}); // Assign default placeholders.

bindKey.placeholder = {};
var _default = bindKey;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_createWrap.js":"node_modules/lodash-es/_createWrap.js","./_getHolder.js":"node_modules/lodash-es/_getHolder.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js"}],"node_modules/lodash-es/_baseSlice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }

  end = end > length ? length : end;

  if (end < 0) {
    end += length;
  }

  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result = Array(length);

  while (++index < length) {
    result[index] = array[index + start];
  }

  return result;
}

var _default = baseSlice;
exports.default = _default;
},{}],"node_modules/lodash-es/_castSlice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return !start && end >= length ? array : (0, _baseSlice.default)(array, start, end);
}

var _default = castSlice;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js"}],"node_modules/lodash-es/_hasUnicode.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';
/** Used to compose unicode capture groups. */

var rsZWJ = '\\u200d';
/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */

var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');
/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */

function hasUnicode(string) {
  return reHasUnicode.test(string);
}

var _default = hasUnicode;
exports.default = _default;
},{}],"node_modules/lodash-es/_asciiToArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

var _default = asciiToArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_unicodeToArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';
/** Used to compose unicode capture groups. */

var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';
/** Used to compose unicode regexes. */

var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */

var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */

function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

var _default = unicodeToArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_stringToArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asciiToArray = _interopRequireDefault(require("./_asciiToArray.js"));

var _hasUnicode = _interopRequireDefault(require("./_hasUnicode.js"));

var _unicodeToArray = _interopRequireDefault(require("./_unicodeToArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return (0, _hasUnicode.default)(string) ? (0, _unicodeToArray.default)(string) : (0, _asciiToArray.default)(string);
}

var _default = stringToArray;
exports.default = _default;
},{"./_asciiToArray.js":"node_modules/lodash-es/_asciiToArray.js","./_hasUnicode.js":"node_modules/lodash-es/_hasUnicode.js","./_unicodeToArray.js":"node_modules/lodash-es/_unicodeToArray.js"}],"node_modules/lodash-es/_createCaseFirst.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _hasUnicode = _interopRequireDefault(require("./_hasUnicode.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function (string) {
    string = (0, _toString.default)(string);
    var strSymbols = (0, _hasUnicode.default)(string) ? (0, _stringToArray.default)(string) : undefined;
    var chr = strSymbols ? strSymbols[0] : string.charAt(0);
    var trailing = strSymbols ? (0, _castSlice.default)(strSymbols, 1).join('') : string.slice(1);
    return chr[methodName]() + trailing;
  };
}

var _default = createCaseFirst;
exports.default = _default;
},{"./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_hasUnicode.js":"node_modules/lodash-es/_hasUnicode.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/upperFirst.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCaseFirst = _interopRequireDefault(require("./_createCaseFirst.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = (0, _createCaseFirst.default)('toUpperCase');
var _default = upperFirst;
exports.default = _default;
},{"./_createCaseFirst.js":"node_modules/lodash-es/_createCaseFirst.js"}],"node_modules/lodash-es/capitalize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

var _upperFirst = _interopRequireDefault(require("./upperFirst.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return (0, _upperFirst.default)((0, _toString.default)(string).toLowerCase());
}

var _default = capitalize;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js","./upperFirst.js":"node_modules/lodash-es/upperFirst.js"}],"node_modules/lodash-es/_arrayReduce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }

  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }

  return accumulator;
}

var _default = arrayReduce;
exports.default = _default;
},{}],"node_modules/lodash-es/_basePropertyOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function (key) {
    return object == null ? undefined : object[key];
  };
}

var _default = basePropertyOf;
exports.default = _default;
},{}],"node_modules/lodash-es/_deburrLetter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePropertyOf = _interopRequireDefault(require("./_basePropertyOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',
  '\xc1': 'A',
  '\xc2': 'A',
  '\xc3': 'A',
  '\xc4': 'A',
  '\xc5': 'A',
  '\xe0': 'a',
  '\xe1': 'a',
  '\xe2': 'a',
  '\xe3': 'a',
  '\xe4': 'a',
  '\xe5': 'a',
  '\xc7': 'C',
  '\xe7': 'c',
  '\xd0': 'D',
  '\xf0': 'd',
  '\xc8': 'E',
  '\xc9': 'E',
  '\xca': 'E',
  '\xcb': 'E',
  '\xe8': 'e',
  '\xe9': 'e',
  '\xea': 'e',
  '\xeb': 'e',
  '\xcc': 'I',
  '\xcd': 'I',
  '\xce': 'I',
  '\xcf': 'I',
  '\xec': 'i',
  '\xed': 'i',
  '\xee': 'i',
  '\xef': 'i',
  '\xd1': 'N',
  '\xf1': 'n',
  '\xd2': 'O',
  '\xd3': 'O',
  '\xd4': 'O',
  '\xd5': 'O',
  '\xd6': 'O',
  '\xd8': 'O',
  '\xf2': 'o',
  '\xf3': 'o',
  '\xf4': 'o',
  '\xf5': 'o',
  '\xf6': 'o',
  '\xf8': 'o',
  '\xd9': 'U',
  '\xda': 'U',
  '\xdb': 'U',
  '\xdc': 'U',
  '\xf9': 'u',
  '\xfa': 'u',
  '\xfb': 'u',
  '\xfc': 'u',
  '\xdd': 'Y',
  '\xfd': 'y',
  '\xff': 'y',
  '\xc6': 'Ae',
  '\xe6': 'ae',
  '\xde': 'Th',
  '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',
  '\u0102': 'A',
  '\u0104': 'A',
  '\u0101': 'a',
  '\u0103': 'a',
  '\u0105': 'a',
  '\u0106': 'C',
  '\u0108': 'C',
  '\u010a': 'C',
  '\u010c': 'C',
  '\u0107': 'c',
  '\u0109': 'c',
  '\u010b': 'c',
  '\u010d': 'c',
  '\u010e': 'D',
  '\u0110': 'D',
  '\u010f': 'd',
  '\u0111': 'd',
  '\u0112': 'E',
  '\u0114': 'E',
  '\u0116': 'E',
  '\u0118': 'E',
  '\u011a': 'E',
  '\u0113': 'e',
  '\u0115': 'e',
  '\u0117': 'e',
  '\u0119': 'e',
  '\u011b': 'e',
  '\u011c': 'G',
  '\u011e': 'G',
  '\u0120': 'G',
  '\u0122': 'G',
  '\u011d': 'g',
  '\u011f': 'g',
  '\u0121': 'g',
  '\u0123': 'g',
  '\u0124': 'H',
  '\u0126': 'H',
  '\u0125': 'h',
  '\u0127': 'h',
  '\u0128': 'I',
  '\u012a': 'I',
  '\u012c': 'I',
  '\u012e': 'I',
  '\u0130': 'I',
  '\u0129': 'i',
  '\u012b': 'i',
  '\u012d': 'i',
  '\u012f': 'i',
  '\u0131': 'i',
  '\u0134': 'J',
  '\u0135': 'j',
  '\u0136': 'K',
  '\u0137': 'k',
  '\u0138': 'k',
  '\u0139': 'L',
  '\u013b': 'L',
  '\u013d': 'L',
  '\u013f': 'L',
  '\u0141': 'L',
  '\u013a': 'l',
  '\u013c': 'l',
  '\u013e': 'l',
  '\u0140': 'l',
  '\u0142': 'l',
  '\u0143': 'N',
  '\u0145': 'N',
  '\u0147': 'N',
  '\u014a': 'N',
  '\u0144': 'n',
  '\u0146': 'n',
  '\u0148': 'n',
  '\u014b': 'n',
  '\u014c': 'O',
  '\u014e': 'O',
  '\u0150': 'O',
  '\u014d': 'o',
  '\u014f': 'o',
  '\u0151': 'o',
  '\u0154': 'R',
  '\u0156': 'R',
  '\u0158': 'R',
  '\u0155': 'r',
  '\u0157': 'r',
  '\u0159': 'r',
  '\u015a': 'S',
  '\u015c': 'S',
  '\u015e': 'S',
  '\u0160': 'S',
  '\u015b': 's',
  '\u015d': 's',
  '\u015f': 's',
  '\u0161': 's',
  '\u0162': 'T',
  '\u0164': 'T',
  '\u0166': 'T',
  '\u0163': 't',
  '\u0165': 't',
  '\u0167': 't',
  '\u0168': 'U',
  '\u016a': 'U',
  '\u016c': 'U',
  '\u016e': 'U',
  '\u0170': 'U',
  '\u0172': 'U',
  '\u0169': 'u',
  '\u016b': 'u',
  '\u016d': 'u',
  '\u016f': 'u',
  '\u0171': 'u',
  '\u0173': 'u',
  '\u0174': 'W',
  '\u0175': 'w',
  '\u0176': 'Y',
  '\u0177': 'y',
  '\u0178': 'Y',
  '\u0179': 'Z',
  '\u017b': 'Z',
  '\u017d': 'Z',
  '\u017a': 'z',
  '\u017c': 'z',
  '\u017e': 'z',
  '\u0132': 'IJ',
  '\u0133': 'ij',
  '\u0152': 'Oe',
  '\u0153': 'oe',
  '\u0149': "'n",
  '\u017f': 's'
};
/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */

var deburrLetter = (0, _basePropertyOf.default)(deburredLetters);
var _default = deburrLetter;
exports.default = _default;
},{"./_basePropertyOf.js":"node_modules/lodash-es/_basePropertyOf.js"}],"node_modules/lodash-es/deburr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _deburrLetter = _interopRequireDefault(require("./_deburrLetter.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
/** Used to compose unicode character classes. */

var rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
/** Used to compose unicode capture groups. */

var rsCombo = '[' + rsComboRange + ']';
/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */

var reComboMark = RegExp(rsCombo, 'g');
/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */

function deburr(string) {
  string = (0, _toString.default)(string);
  return string && string.replace(reLatin, _deburrLetter.default).replace(reComboMark, '');
}

var _default = deburr;
exports.default = _default;
},{"./_deburrLetter.js":"node_modules/lodash-es/_deburrLetter.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/_asciiWords.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */

function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

var _default = asciiWords;
exports.default = _default;
},{}],"node_modules/lodash-es/_hasUnicodeWord.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */

function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

var _default = hasUnicodeWord;
exports.default = _default;
},{}],"node_modules/lodash-es/_unicodeWords.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
/** Used to compose unicode capture groups. */

var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';
/** Used to compose unicode regexes. */

var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;
/** Used to match complex or compound words. */

var reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');
/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */

function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

var _default = unicodeWords;
exports.default = _default;
},{}],"node_modules/lodash-es/words.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asciiWords = _interopRequireDefault(require("./_asciiWords.js"));

var _hasUnicodeWord = _interopRequireDefault(require("./_hasUnicodeWord.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

var _unicodeWords = _interopRequireDefault(require("./_unicodeWords.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = (0, _toString.default)(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return (0, _hasUnicodeWord.default)(string) ? (0, _unicodeWords.default)(string) : (0, _asciiWords.default)(string);
  }

  return string.match(pattern) || [];
}

var _default = words;
exports.default = _default;
},{"./_asciiWords.js":"node_modules/lodash-es/_asciiWords.js","./_hasUnicodeWord.js":"node_modules/lodash-es/_hasUnicodeWord.js","./toString.js":"node_modules/lodash-es/toString.js","./_unicodeWords.js":"node_modules/lodash-es/_unicodeWords.js"}],"node_modules/lodash-es/_createCompounder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayReduce = _interopRequireDefault(require("./_arrayReduce.js"));

var _deburr = _interopRequireDefault(require("./deburr.js"));

var _words = _interopRequireDefault(require("./words.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";
/** Used to match apostrophes. */

var reApos = RegExp(rsApos, 'g');
/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */

function createCompounder(callback) {
  return function (string) {
    return (0, _arrayReduce.default)((0, _words.default)((0, _deburr.default)(string).replace(reApos, '')), callback, '');
  };
}

var _default = createCompounder;
exports.default = _default;
},{"./_arrayReduce.js":"node_modules/lodash-es/_arrayReduce.js","./deburr.js":"node_modules/lodash-es/deburr.js","./words.js":"node_modules/lodash-es/words.js"}],"node_modules/lodash-es/camelCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _capitalize = _interopRequireDefault(require("./capitalize.js"));

var _createCompounder = _interopRequireDefault(require("./_createCompounder.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar--');
 * // => 'fooBar'
 *
 * _.camelCase('__FOO_BAR__');
 * // => 'fooBar'
 */
var camelCase = (0, _createCompounder.default)(function (result, word, index) {
  word = word.toLowerCase();
  return result + (index ? (0, _capitalize.default)(word) : word);
});
var _default = camelCase;
exports.default = _default;
},{"./capitalize.js":"node_modules/lodash-es/capitalize.js","./_createCompounder.js":"node_modules/lodash-es/_createCompounder.js"}],"node_modules/lodash-es/castArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Casts `value` as an array if it's not one.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Lang
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast array.
 * @example
 *
 * _.castArray(1);
 * // => [1]
 *
 * _.castArray({ 'a': 1 });
 * // => [{ 'a': 1 }]
 *
 * _.castArray('abc');
 * // => ['abc']
 *
 * _.castArray(null);
 * // => [null]
 *
 * _.castArray(undefined);
 * // => [undefined]
 *
 * _.castArray();
 * // => []
 *
 * var array = [1, 2, 3];
 * console.log(_.castArray(array) === array);
 * // => true
 */
function castArray() {
  if (!arguments.length) {
    return [];
  }

  var value = arguments[0];
  return (0, _isArray.default)(value) ? value : [value];
}

var _default = castArray;
exports.default = _default;
},{"./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_createRound.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = _root.default.isFinite,
    nativeMin = Math.min;
/**
 * Creates a function like `_.round`.
 *
 * @private
 * @param {string} methodName The name of the `Math` method to use when rounding.
 * @returns {Function} Returns the new round function.
 */

function createRound(methodName) {
  var func = Math[methodName];
  return function (number, precision) {
    number = (0, _toNumber.default)(number);
    precision = precision == null ? 0 : nativeMin((0, _toInteger.default)(precision), 292);

    if (precision && nativeIsFinite(number)) {
      // Shift with exponential notation to avoid floating-point issues.
      // See [MDN](https://mdn.io/round#Examples) for more details.
      var pair = ((0, _toString.default)(number) + 'e').split('e'),
          value = func(pair[0] + 'e' + (+pair[1] + precision));
      pair = ((0, _toString.default)(value) + 'e').split('e');
      return +(pair[0] + 'e' + (+pair[1] - precision));
    }

    return func(number);
  };
}

var _default = createRound;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toNumber.js":"node_modules/lodash-es/toNumber.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/ceil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRound = _interopRequireDefault(require("./_createRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes `number` rounded up to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round up.
 * @param {number} [precision=0] The precision to round up to.
 * @returns {number} Returns the rounded up number.
 * @example
 *
 * _.ceil(4.006);
 * // => 5
 *
 * _.ceil(6.004, 2);
 * // => 6.01
 *
 * _.ceil(6040, -2);
 * // => 6100
 */
var ceil = (0, _createRound.default)('ceil');
var _default = ceil;
exports.default = _default;
},{"./_createRound.js":"node_modules/lodash-es/_createRound.js"}],"node_modules/lodash-es/chain.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _wrapperLodash = _interopRequireDefault(require("./wrapperLodash.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a `lodash` wrapper instance that wraps `value` with explicit method
 * chain sequences enabled. The result of such sequences must be unwrapped
 * with `_#value`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Seq
 * @param {*} value The value to wrap.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36 },
 *   { 'user': 'fred',    'age': 40 },
 *   { 'user': 'pebbles', 'age': 1 }
 * ];
 *
 * var youngest = _
 *   .chain(users)
 *   .sortBy('age')
 *   .map(function(o) {
 *     return o.user + ' is ' + o.age;
 *   })
 *   .head()
 *   .value();
 * // => 'pebbles is 1'
 */
function chain(value) {
  var result = (0, _wrapperLodash.default)(value);
  result.__chain__ = true;
  return result;
}

var _default = chain;
exports.default = _default;
},{"./wrapperLodash.js":"node_modules/lodash-es/wrapperLodash.js"}],"node_modules/lodash-es/chunk.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;
/**
 * Creates an array of elements split into groups the length of `size`.
 * If `array` can't be split evenly, the final chunk will be the remaining
 * elements.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to process.
 * @param {number} [size=1] The length of each chunk
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the new array of chunks.
 * @example
 *
 * _.chunk(['a', 'b', 'c', 'd'], 2);
 * // => [['a', 'b'], ['c', 'd']]
 *
 * _.chunk(['a', 'b', 'c', 'd'], 3);
 * // => [['a', 'b', 'c'], ['d']]
 */

function chunk(array, size, guard) {
  if (guard ? (0, _isIterateeCall.default)(array, size, guard) : size === undefined) {
    size = 1;
  } else {
    size = nativeMax((0, _toInteger.default)(size), 0);
  }

  var length = array == null ? 0 : array.length;

  if (!length || size < 1) {
    return [];
  }

  var index = 0,
      resIndex = 0,
      result = Array(nativeCeil(length / size));

  while (index < length) {
    result[resIndex++] = (0, _baseSlice.default)(array, index, index += size);
  }

  return result;
}

var _default = chunk;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/_baseClamp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }

    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }

  return number;
}

var _default = baseClamp;
exports.default = _default;
},{}],"node_modules/lodash-es/clamp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }

  if (upper !== undefined) {
    upper = (0, _toNumber.default)(upper);
    upper = upper === upper ? upper : 0;
  }

  if (lower !== undefined) {
    lower = (0, _toNumber.default)(lower);
    lower = lower === lower ? lower : 0;
  }

  return (0, _baseClamp.default)((0, _toNumber.default)(number), lower, upper);
}

var _default = clamp;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./toNumber.js":"node_modules/lodash-es/toNumber.js"}],"node_modules/lodash-es/_stackClear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ListCache = _interopRequireDefault(require("./_ListCache.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache.default();
  this.size = 0;
}

var _default = stackClear;
exports.default = _default;
},{"./_ListCache.js":"node_modules/lodash-es/_ListCache.js"}],"node_modules/lodash-es/_stackDelete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);
  this.size = data.size;
  return result;
}

var _default = stackDelete;
exports.default = _default;
},{}],"node_modules/lodash-es/_stackGet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

var _default = stackGet;
exports.default = _default;
},{}],"node_modules/lodash-es/_stackHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

var _default = stackHas;
exports.default = _default;
},{}],"node_modules/lodash-es/_stackSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ListCache = _interopRequireDefault(require("./_ListCache.js"));

var _Map = _interopRequireDefault(require("./_Map.js"));

var _MapCache = _interopRequireDefault(require("./_MapCache.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;
/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */

function stackSet(key, value) {
  var data = this.__data__;

  if (data instanceof _ListCache.default) {
    var pairs = data.__data__;

    if (!_Map.default || pairs.length < LARGE_ARRAY_SIZE - 1) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }

    data = this.__data__ = new _MapCache.default(pairs);
  }

  data.set(key, value);
  this.size = data.size;
  return this;
}

var _default = stackSet;
exports.default = _default;
},{"./_ListCache.js":"node_modules/lodash-es/_ListCache.js","./_Map.js":"node_modules/lodash-es/_Map.js","./_MapCache.js":"node_modules/lodash-es/_MapCache.js"}],"node_modules/lodash-es/_Stack.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ListCache = _interopRequireDefault(require("./_ListCache.js"));

var _stackClear = _interopRequireDefault(require("./_stackClear.js"));

var _stackDelete = _interopRequireDefault(require("./_stackDelete.js"));

var _stackGet = _interopRequireDefault(require("./_stackGet.js"));

var _stackHas = _interopRequireDefault(require("./_stackHas.js"));

var _stackSet = _interopRequireDefault(require("./_stackSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache.default(entries);
  this.size = data.size;
} // Add methods to `Stack`.


Stack.prototype.clear = _stackClear.default;
Stack.prototype['delete'] = _stackDelete.default;
Stack.prototype.get = _stackGet.default;
Stack.prototype.has = _stackHas.default;
Stack.prototype.set = _stackSet.default;
var _default = Stack;
exports.default = _default;
},{"./_ListCache.js":"node_modules/lodash-es/_ListCache.js","./_stackClear.js":"node_modules/lodash-es/_stackClear.js","./_stackDelete.js":"node_modules/lodash-es/_stackDelete.js","./_stackGet.js":"node_modules/lodash-es/_stackGet.js","./_stackHas.js":"node_modules/lodash-es/_stackHas.js","./_stackSet.js":"node_modules/lodash-es/_stackSet.js"}],"node_modules/lodash-es/_baseAssign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && (0, _copyObject.default)(source, (0, _keys.default)(source), object);
}

var _default = baseAssign;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_baseAssignIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && (0, _copyObject.default)(source, (0, _keysIn.default)(source), object);
}

var _default = baseAssignIn;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/_cloneBuffer.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;
/** Detect free variable `module`. */

var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
/** Detect the popular CommonJS extension `module.exports`. */

var moduleExports = freeModule && freeModule.exports === freeExports;
/** Built-in value references. */

var Buffer = moduleExports ? _root.default.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;
/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */

function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }

  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result);
  return result;
}

var _default = cloneBuffer;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_arrayFilter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];

    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }

  return result;
}

var _default = arrayFilter;
exports.default = _default;
},{}],"node_modules/lodash-es/stubArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

var _default = stubArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_getSymbols.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _stubArray = _interopRequireDefault(require("./stubArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Built-in value references. */

var propertyIsEnumerable = objectProto.propertyIsEnumerable;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */

var getSymbols = !nativeGetSymbols ? _stubArray.default : function (object) {
  if (object == null) {
    return [];
  }

  object = Object(object);
  return (0, _arrayFilter.default)(nativeGetSymbols(object), function (symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};
var _default = getSymbols;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./stubArray.js":"node_modules/lodash-es/stubArray.js"}],"node_modules/lodash-es/_copySymbols.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _getSymbols = _interopRequireDefault(require("./_getSymbols.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return (0, _copyObject.default)(source, (0, _getSymbols.default)(source), object);
}

var _default = copySymbols;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_getSymbols.js":"node_modules/lodash-es/_getSymbols.js"}],"node_modules/lodash-es/_getSymbolsIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _getPrototype = _interopRequireDefault(require("./_getPrototype.js"));

var _getSymbols = _interopRequireDefault(require("./_getSymbols.js"));

var _stubArray = _interopRequireDefault(require("./stubArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;
/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */

var getSymbolsIn = !nativeGetSymbols ? _stubArray.default : function (object) {
  var result = [];

  while (object) {
    (0, _arrayPush.default)(result, (0, _getSymbols.default)(object));
    object = (0, _getPrototype.default)(object);
  }

  return result;
};
var _default = getSymbolsIn;
exports.default = _default;
},{"./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_getPrototype.js":"node_modules/lodash-es/_getPrototype.js","./_getSymbols.js":"node_modules/lodash-es/_getSymbols.js","./stubArray.js":"node_modules/lodash-es/stubArray.js"}],"node_modules/lodash-es/_copySymbolsIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _getSymbolsIn = _interopRequireDefault(require("./_getSymbolsIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return (0, _copyObject.default)(source, (0, _getSymbolsIn.default)(source), object);
}

var _default = copySymbolsIn;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_getSymbolsIn.js":"node_modules/lodash-es/_getSymbolsIn.js"}],"node_modules/lodash-es/_baseGetAllKeys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return (0, _isArray.default)(object) ? result : (0, _arrayPush.default)(result, symbolsFunc(object));
}

var _default = baseGetAllKeys;
exports.default = _default;
},{"./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_getAllKeys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetAllKeys = _interopRequireDefault(require("./_baseGetAllKeys.js"));

var _getSymbols = _interopRequireDefault(require("./_getSymbols.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return (0, _baseGetAllKeys.default)(object, _keys.default, _getSymbols.default);
}

var _default = getAllKeys;
exports.default = _default;
},{"./_baseGetAllKeys.js":"node_modules/lodash-es/_baseGetAllKeys.js","./_getSymbols.js":"node_modules/lodash-es/_getSymbols.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_getAllKeysIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetAllKeys = _interopRequireDefault(require("./_baseGetAllKeys.js"));

var _getSymbolsIn = _interopRequireDefault(require("./_getSymbolsIn.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return (0, _baseGetAllKeys.default)(object, _keysIn.default, _getSymbolsIn.default);
}

var _default = getAllKeysIn;
exports.default = _default;
},{"./_baseGetAllKeys.js":"node_modules/lodash-es/_baseGetAllKeys.js","./_getSymbolsIn.js":"node_modules/lodash-es/_getSymbolsIn.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/_DataView.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references that are verified to be native. */
var DataView = (0, _getNative.default)(_root.default, 'DataView');
var _default = DataView;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_Promise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references that are verified to be native. */
var Promise = (0, _getNative.default)(_root.default, 'Promise');
var _default = Promise;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_Set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getNative = _interopRequireDefault(require("./_getNative.js"));

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references that are verified to be native. */
var Set = (0, _getNative.default)(_root.default, 'Set');
var _default = Set;
exports.default = _default;
},{"./_getNative.js":"node_modules/lodash-es/_getNative.js","./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_getTag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _DataView = _interopRequireDefault(require("./_DataView.js"));

var _Map = _interopRequireDefault(require("./_Map.js"));

var _Promise = _interopRequireDefault(require("./_Promise.js"));

var _Set = _interopRequireDefault(require("./_Set.js"));

var _WeakMap = _interopRequireDefault(require("./_WeakMap.js"));

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _toSource = _interopRequireDefault(require("./_toSource.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';
var dataViewTag = '[object DataView]';
/** Used to detect maps, sets, and weakmaps. */

var dataViewCtorString = (0, _toSource.default)(_DataView.default),
    mapCtorString = (0, _toSource.default)(_Map.default),
    promiseCtorString = (0, _toSource.default)(_Promise.default),
    setCtorString = (0, _toSource.default)(_Set.default),
    weakMapCtorString = (0, _toSource.default)(_WeakMap.default);
/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */

var getTag = _baseGetTag.default; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.

if (_DataView.default && getTag(new _DataView.default(new ArrayBuffer(1))) != dataViewTag || _Map.default && getTag(new _Map.default()) != mapTag || _Promise.default && getTag(_Promise.default.resolve()) != promiseTag || _Set.default && getTag(new _Set.default()) != setTag || _WeakMap.default && getTag(new _WeakMap.default()) != weakMapTag) {
  getTag = function (value) {
    var result = (0, _baseGetTag.default)(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? (0, _toSource.default)(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag;

        case mapCtorString:
          return mapTag;

        case promiseCtorString:
          return promiseTag;

        case setCtorString:
          return setTag;

        case weakMapCtorString:
          return weakMapTag;
      }
    }

    return result;
  };
}

var _default = getTag;
exports.default = _default;
},{"./_DataView.js":"node_modules/lodash-es/_DataView.js","./_Map.js":"node_modules/lodash-es/_Map.js","./_Promise.js":"node_modules/lodash-es/_Promise.js","./_Set.js":"node_modules/lodash-es/_Set.js","./_WeakMap.js":"node_modules/lodash-es/_WeakMap.js","./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./_toSource.js":"node_modules/lodash-es/_toSource.js"}],"node_modules/lodash-es/_initCloneArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */

function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.

  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }

  return result;
}

var _default = initCloneArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_Uint8Array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Built-in value references. */
var Uint8Array = _root.default.Uint8Array;
var _default = Uint8Array;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/_cloneArrayBuffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Uint8Array = _interopRequireDefault(require("./_Uint8Array.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array.default(result).set(new _Uint8Array.default(arrayBuffer));
  return result;
}

var _default = cloneArrayBuffer;
exports.default = _default;
},{"./_Uint8Array.js":"node_modules/lodash-es/_Uint8Array.js"}],"node_modules/lodash-es/_cloneDataView.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cloneArrayBuffer = _interopRequireDefault(require("./_cloneArrayBuffer.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? (0, _cloneArrayBuffer.default)(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

var _default = cloneDataView;
exports.default = _default;
},{"./_cloneArrayBuffer.js":"node_modules/lodash-es/_cloneArrayBuffer.js"}],"node_modules/lodash-es/_cloneRegExp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;
/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */

function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

var _default = cloneRegExp;
exports.default = _default;
},{}],"node_modules/lodash-es/_cloneSymbol.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol.default ? _Symbol.default.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */

function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

var _default = cloneSymbol;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js"}],"node_modules/lodash-es/_cloneTypedArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cloneArrayBuffer = _interopRequireDefault(require("./_cloneArrayBuffer.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? (0, _cloneArrayBuffer.default)(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

var _default = cloneTypedArray;
exports.default = _default;
},{"./_cloneArrayBuffer.js":"node_modules/lodash-es/_cloneArrayBuffer.js"}],"node_modules/lodash-es/_initCloneByTag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cloneArrayBuffer = _interopRequireDefault(require("./_cloneArrayBuffer.js"));

var _cloneDataView = _interopRequireDefault(require("./_cloneDataView.js"));

var _cloneRegExp = _interopRequireDefault(require("./_cloneRegExp.js"));

var _cloneSymbol = _interopRequireDefault(require("./_cloneSymbol.js"));

var _cloneTypedArray = _interopRequireDefault(require("./_cloneTypedArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */

function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;

  switch (tag) {
    case arrayBufferTag:
      return (0, _cloneArrayBuffer.default)(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return (0, _cloneDataView.default)(object, isDeep);

    case float32Tag:
    case float64Tag:
    case int8Tag:
    case int16Tag:
    case int32Tag:
    case uint8Tag:
    case uint8ClampedTag:
    case uint16Tag:
    case uint32Tag:
      return (0, _cloneTypedArray.default)(object, isDeep);

    case mapTag:
      return new Ctor();

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return (0, _cloneRegExp.default)(object);

    case setTag:
      return new Ctor();

    case symbolTag:
      return (0, _cloneSymbol.default)(object);
  }
}

var _default = initCloneByTag;
exports.default = _default;
},{"./_cloneArrayBuffer.js":"node_modules/lodash-es/_cloneArrayBuffer.js","./_cloneDataView.js":"node_modules/lodash-es/_cloneDataView.js","./_cloneRegExp.js":"node_modules/lodash-es/_cloneRegExp.js","./_cloneSymbol.js":"node_modules/lodash-es/_cloneSymbol.js","./_cloneTypedArray.js":"node_modules/lodash-es/_cloneTypedArray.js"}],"node_modules/lodash-es/_initCloneObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseCreate = _interopRequireDefault(require("./_baseCreate.js"));

var _getPrototype = _interopRequireDefault(require("./_getPrototype.js"));

var _isPrototype = _interopRequireDefault(require("./_isPrototype.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return typeof object.constructor == 'function' && !(0, _isPrototype.default)(object) ? (0, _baseCreate.default)((0, _getPrototype.default)(object)) : {};
}

var _default = initCloneObject;
exports.default = _default;
},{"./_baseCreate.js":"node_modules/lodash-es/_baseCreate.js","./_getPrototype.js":"node_modules/lodash-es/_getPrototype.js","./_isPrototype.js":"node_modules/lodash-es/_isPrototype.js"}],"node_modules/lodash-es/_baseIsMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var mapTag = '[object Map]';
/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */

function baseIsMap(value) {
  return (0, _isObjectLike.default)(value) && (0, _getTag.default)(value) == mapTag;
}

var _default = baseIsMap;
exports.default = _default;
},{"./_getTag.js":"node_modules/lodash-es/_getTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsMap = _interopRequireDefault(require("./_baseIsMap.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _nodeUtil = _interopRequireDefault(require("./_nodeUtil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Node.js helper references. */
var nodeIsMap = _nodeUtil.default && _nodeUtil.default.isMap;
/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */

var isMap = nodeIsMap ? (0, _baseUnary.default)(nodeIsMap) : _baseIsMap.default;
var _default = isMap;
exports.default = _default;
},{"./_baseIsMap.js":"node_modules/lodash-es/_baseIsMap.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_nodeUtil.js":"node_modules/lodash-es/_nodeUtil.js"}],"node_modules/lodash-es/_baseIsSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var setTag = '[object Set]';
/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */

function baseIsSet(value) {
  return (0, _isObjectLike.default)(value) && (0, _getTag.default)(value) == setTag;
}

var _default = baseIsSet;
exports.default = _default;
},{"./_getTag.js":"node_modules/lodash-es/_getTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsSet = _interopRequireDefault(require("./_baseIsSet.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _nodeUtil = _interopRequireDefault(require("./_nodeUtil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Node.js helper references. */
var nodeIsSet = _nodeUtil.default && _nodeUtil.default.isSet;
/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */

var isSet = nodeIsSet ? (0, _baseUnary.default)(nodeIsSet) : _baseIsSet.default;
var _default = isSet;
exports.default = _default;
},{"./_baseIsSet.js":"node_modules/lodash-es/_baseIsSet.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_nodeUtil.js":"node_modules/lodash-es/_nodeUtil.js"}],"node_modules/lodash-es/_baseClone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Stack = _interopRequireDefault(require("./_Stack.js"));

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _assignValue = _interopRequireDefault(require("./_assignValue.js"));

var _baseAssign = _interopRequireDefault(require("./_baseAssign.js"));

var _baseAssignIn = _interopRequireDefault(require("./_baseAssignIn.js"));

var _cloneBuffer = _interopRequireDefault(require("./_cloneBuffer.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _copySymbols = _interopRequireDefault(require("./_copySymbols.js"));

var _copySymbolsIn = _interopRequireDefault(require("./_copySymbolsIn.js"));

var _getAllKeys = _interopRequireDefault(require("./_getAllKeys.js"));

var _getAllKeysIn = _interopRequireDefault(require("./_getAllKeysIn.js"));

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _initCloneArray = _interopRequireDefault(require("./_initCloneArray.js"));

var _initCloneByTag = _interopRequireDefault(require("./_initCloneByTag.js"));

var _initCloneObject = _interopRequireDefault(require("./_initCloneObject.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isMap = _interopRequireDefault(require("./isMap.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isSet = _interopRequireDefault(require("./isSet.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;
/** `Object#toString` result references. */

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';
/** Used to identify `toStringTag` values supported by `_.clone`. */

var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */

function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }

  if (result !== undefined) {
    return result;
  }

  if (!(0, _isObject.default)(value)) {
    return value;
  }

  var isArr = (0, _isArray.default)(value);

  if (isArr) {
    result = (0, _initCloneArray.default)(value);

    if (!isDeep) {
      return (0, _copyArray.default)(value, result);
    }
  } else {
    var tag = (0, _getTag.default)(value),
        isFunc = tag == funcTag || tag == genTag;

    if ((0, _isBuffer.default)(value)) {
      return (0, _cloneBuffer.default)(value, isDeep);
    }

    if (tag == objectTag || tag == argsTag || isFunc && !object) {
      result = isFlat || isFunc ? {} : (0, _initCloneObject.default)(value);

      if (!isDeep) {
        return isFlat ? (0, _copySymbolsIn.default)(value, (0, _baseAssignIn.default)(result, value)) : (0, _copySymbols.default)(value, (0, _baseAssign.default)(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }

      result = (0, _initCloneByTag.default)(value, tag, isDeep);
    }
  } // Check for circular references and return its corresponding clone.


  stack || (stack = new _Stack.default());
  var stacked = stack.get(value);

  if (stacked) {
    return stacked;
  }

  stack.set(value, result);

  if ((0, _isSet.default)(value)) {
    value.forEach(function (subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if ((0, _isMap.default)(value)) {
    value.forEach(function (subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull ? isFlat ? _getAllKeysIn.default : _getAllKeys.default : isFlat ? keysIn : _keys.default;
  var props = isArr ? undefined : keysFunc(value);
  (0, _arrayEach.default)(props || value, function (subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    } // Recursively populate clone (susceptible to call stack limits).


    (0, _assignValue.default)(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

var _default = baseClone;
exports.default = _default;
},{"./_Stack.js":"node_modules/lodash-es/_Stack.js","./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_assignValue.js":"node_modules/lodash-es/_assignValue.js","./_baseAssign.js":"node_modules/lodash-es/_baseAssign.js","./_baseAssignIn.js":"node_modules/lodash-es/_baseAssignIn.js","./_cloneBuffer.js":"node_modules/lodash-es/_cloneBuffer.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./_copySymbols.js":"node_modules/lodash-es/_copySymbols.js","./_copySymbolsIn.js":"node_modules/lodash-es/_copySymbolsIn.js","./_getAllKeys.js":"node_modules/lodash-es/_getAllKeys.js","./_getAllKeysIn.js":"node_modules/lodash-es/_getAllKeysIn.js","./_getTag.js":"node_modules/lodash-es/_getTag.js","./_initCloneArray.js":"node_modules/lodash-es/_initCloneArray.js","./_initCloneByTag.js":"node_modules/lodash-es/_initCloneByTag.js","./_initCloneObject.js":"node_modules/lodash-es/_initCloneObject.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isMap.js":"node_modules/lodash-es/isMap.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isSet.js":"node_modules/lodash-es/isSet.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/clone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;
/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */

function clone(value) {
  return (0, _baseClone.default)(value, CLONE_SYMBOLS_FLAG);
}

var _default = clone;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js"}],"node_modules/lodash-es/cloneDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;
/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */

function cloneDeep(value) {
  return (0, _baseClone.default)(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

var _default = cloneDeep;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js"}],"node_modules/lodash-es/cloneDeepWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;
/**
 * This method is like `_.cloneWith` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @param {Function} [customizer] The function to customize cloning.
 * @returns {*} Returns the deep cloned value.
 * @see _.cloneWith
 * @example
 *
 * function customizer(value) {
 *   if (_.isElement(value)) {
 *     return value.cloneNode(true);
 *   }
 * }
 *
 * var el = _.cloneDeepWith(document.body, customizer);
 *
 * console.log(el === document.body);
 * // => false
 * console.log(el.nodeName);
 * // => 'BODY'
 * console.log(el.childNodes.length);
 * // => 20
 */

function cloneDeepWith(value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return (0, _baseClone.default)(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
}

var _default = cloneDeepWith;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js"}],"node_modules/lodash-es/cloneWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;
/**
 * This method is like `_.clone` except that it accepts `customizer` which
 * is invoked to produce the cloned value. If `customizer` returns `undefined`,
 * cloning is handled by the method instead. The `customizer` is invoked with
 * up to four arguments; (value [, index|key, object, stack]).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to clone.
 * @param {Function} [customizer] The function to customize cloning.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeepWith
 * @example
 *
 * function customizer(value) {
 *   if (_.isElement(value)) {
 *     return value.cloneNode(false);
 *   }
 * }
 *
 * var el = _.cloneWith(document.body, customizer);
 *
 * console.log(el === document.body);
 * // => false
 * console.log(el.nodeName);
 * // => 'BODY'
 * console.log(el.childNodes.length);
 * // => 0
 */

function cloneWith(value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return (0, _baseClone.default)(value, CLONE_SYMBOLS_FLAG, customizer);
}

var _default = cloneWith;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js"}],"node_modules/lodash-es/commit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Executes the chain sequence and returns the wrapped result.
 *
 * @name commit
 * @memberOf _
 * @since 3.2.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var array = [1, 2];
 * var wrapped = _(array).push(3);
 *
 * console.log(array);
 * // => [1, 2]
 *
 * wrapped = wrapped.commit();
 * console.log(array);
 * // => [1, 2, 3]
 *
 * wrapped.last();
 * // => 3
 *
 * console.log(array);
 * // => [1, 2, 3]
 */
function wrapperCommit() {
  return new _LodashWrapper.default(this.value(), this.__chain__);
}

var _default = wrapperCommit;
exports.default = _default;
},{"./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js"}],"node_modules/lodash-es/compact.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Creates an array with all falsey values removed. The values `false`, `null`,
 * `0`, `""`, `undefined`, and `NaN` are falsey.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to compact.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.compact([0, 1, false, 2, '', 3]);
 * // => [1, 2, 3]
 */
function compact(array) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];

    if (value) {
      result[resIndex++] = value;
    }
  }

  return result;
}

var _default = compact;
exports.default = _default;
},{}],"node_modules/lodash-es/concat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a new array concatenating `array` with any additional arrays
 * and/or values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to concatenate.
 * @param {...*} [values] The values to concatenate.
 * @returns {Array} Returns the new concatenated array.
 * @example
 *
 * var array = [1];
 * var other = _.concat(array, 2, [3], [[4]]);
 *
 * console.log(other);
 * // => [1, 2, 3, [4]]
 *
 * console.log(array);
 * // => [1]
 */
function concat() {
  var length = arguments.length;

  if (!length) {
    return [];
  }

  var args = Array(length - 1),
      array = arguments[0],
      index = length;

  while (index--) {
    args[index - 1] = arguments[index];
  }

  return (0, _arrayPush.default)((0, _isArray.default)(array) ? (0, _copyArray.default)(array) : [array], (0, _baseFlatten.default)(args, 1));
}

var _default = concat;
exports.default = _default;
},{"./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_setCacheAdd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';
/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */

function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);

  return this;
}

var _default = setCacheAdd;
exports.default = _default;
},{}],"node_modules/lodash-es/_setCacheHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

var _default = setCacheHas;
exports.default = _default;
},{}],"node_modules/lodash-es/_SetCache.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _MapCache = _interopRequireDefault(require("./_MapCache.js"));

var _setCacheAdd = _interopRequireDefault(require("./_setCacheAdd.js"));

var _setCacheHas = _interopRequireDefault(require("./_setCacheHas.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;
  this.__data__ = new _MapCache.default();

  while (++index < length) {
    this.add(values[index]);
  }
} // Add methods to `SetCache`.


SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd.default;
SetCache.prototype.has = _setCacheHas.default;
var _default = SetCache;
exports.default = _default;
},{"./_MapCache.js":"node_modules/lodash-es/_MapCache.js","./_setCacheAdd.js":"node_modules/lodash-es/_setCacheAdd.js","./_setCacheHas.js":"node_modules/lodash-es/_setCacheHas.js"}],"node_modules/lodash-es/_arraySome.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }

  return false;
}

var _default = arraySome;
exports.default = _default;
},{}],"node_modules/lodash-es/_cacheHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

var _default = cacheHas;
exports.default = _default;
},{}],"node_modules/lodash-es/_equalArrays.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SetCache = _interopRequireDefault(require("./_SetCache.js"));

var _arraySome = _interopRequireDefault(require("./_arraySome.js"));

var _cacheHas = _interopRequireDefault(require("./_cacheHas.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */

function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  } // Assume cyclic values are equal.


  var stacked = stack.get(array);

  if (stacked && stack.get(other)) {
    return stacked == other;
  }

  var index = -1,
      result = true,
      seen = bitmask & COMPARE_UNORDERED_FLAG ? new _SetCache.default() : undefined;
  stack.set(array, other);
  stack.set(other, array); // Ignore non-index properties.

  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
    }

    if (compared !== undefined) {
      if (compared) {
        continue;
      }

      result = false;
      break;
    } // Recursively compare arrays (susceptible to call stack limits).


    if (seen) {
      if (!(0, _arraySome.default)(other, function (othValue, othIndex) {
        if (!(0, _cacheHas.default)(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }

  stack['delete'](array);
  stack['delete'](other);
  return result;
}

var _default = equalArrays;
exports.default = _default;
},{"./_SetCache.js":"node_modules/lodash-es/_SetCache.js","./_arraySome.js":"node_modules/lodash-es/_arraySome.js","./_cacheHas.js":"node_modules/lodash-es/_cacheHas.js"}],"node_modules/lodash-es/_mapToArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);
  map.forEach(function (value, key) {
    result[++index] = [key, value];
  });
  return result;
}

var _default = mapToArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_setToArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);
  set.forEach(function (value) {
    result[++index] = value;
  });
  return result;
}

var _default = setToArray;
exports.default = _default;
},{}],"node_modules/lodash-es/_equalByTag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

var _Uint8Array = _interopRequireDefault(require("./_Uint8Array.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

var _equalArrays = _interopRequireDefault(require("./_equalArrays.js"));

var _mapToArray = _interopRequireDefault(require("./_mapToArray.js"));

var _setToArray = _interopRequireDefault(require("./_setToArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/** `Object#toString` result references. */

var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';
var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';
/** Used to convert symbols to primitives and strings. */

var symbolProto = _Symbol.default ? _Symbol.default.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
        return false;
      }

      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if (object.byteLength != other.byteLength || !equalFunc(new _Uint8Array.default(object), new _Uint8Array.default(other))) {
        return false;
      }

      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return (0, _eq.default)(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == other + '';

    case mapTag:
      var convert = _mapToArray.default;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = _setToArray.default);

      if (object.size != other.size && !isPartial) {
        return false;
      } // Assume cyclic values are equal.


      var stacked = stack.get(object);

      if (stacked) {
        return stacked == other;
      }

      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).

      stack.set(object, other);
      var result = (0, _equalArrays.default)(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }

  }

  return false;
}

var _default = equalByTag;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js","./_Uint8Array.js":"node_modules/lodash-es/_Uint8Array.js","./eq.js":"node_modules/lodash-es/eq.js","./_equalArrays.js":"node_modules/lodash-es/_equalArrays.js","./_mapToArray.js":"node_modules/lodash-es/_mapToArray.js","./_setToArray.js":"node_modules/lodash-es/_setToArray.js"}],"node_modules/lodash-es/_equalObjects.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getAllKeys = _interopRequireDefault(require("./_getAllKeys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = (0, _getAllKeys.default)(object),
      objLength = objProps.length,
      othProps = (0, _getAllKeys.default)(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }

  var index = objLength;

  while (index--) {
    var key = objProps[index];

    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  } // Assume cyclic values are equal.


  var stacked = stack.get(object);

  if (stacked && stack.get(other)) {
    return stacked == other;
  }

  var result = true;
  stack.set(object, other);
  stack.set(other, object);
  var skipCtor = isPartial;

  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
    } // Recursively compare objects (susceptible to call stack limits).


    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }

    skipCtor || (skipCtor = key == 'constructor');
  }

  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.

    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }

  stack['delete'](object);
  stack['delete'](other);
  return result;
}

var _default = equalObjects;
exports.default = _default;
},{"./_getAllKeys.js":"node_modules/lodash-es/_getAllKeys.js"}],"node_modules/lodash-es/_baseIsEqualDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Stack = _interopRequireDefault(require("./_Stack.js"));

var _equalArrays = _interopRequireDefault(require("./_equalArrays.js"));

var _equalByTag = _interopRequireDefault(require("./_equalByTag.js"));

var _equalObjects = _interopRequireDefault(require("./_equalObjects.js"));

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;
/** `Object#toString` result references. */

var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */

function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = (0, _isArray.default)(object),
      othIsArr = (0, _isArray.default)(other),
      objTag = objIsArr ? arrayTag : (0, _getTag.default)(object),
      othTag = othIsArr ? arrayTag : (0, _getTag.default)(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && (0, _isBuffer.default)(object)) {
    if (!(0, _isBuffer.default)(other)) {
      return false;
    }

    objIsArr = true;
    objIsObj = false;
  }

  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack.default());
    return objIsArr || (0, _isTypedArray.default)(object) ? (0, _equalArrays.default)(object, other, bitmask, customizer, equalFunc, stack) : (0, _equalByTag.default)(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }

  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new _Stack.default());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }

  if (!isSameTag) {
    return false;
  }

  stack || (stack = new _Stack.default());
  return (0, _equalObjects.default)(object, other, bitmask, customizer, equalFunc, stack);
}

var _default = baseIsEqualDeep;
exports.default = _default;
},{"./_Stack.js":"node_modules/lodash-es/_Stack.js","./_equalArrays.js":"node_modules/lodash-es/_equalArrays.js","./_equalByTag.js":"node_modules/lodash-es/_equalByTag.js","./_equalObjects.js":"node_modules/lodash-es/_equalObjects.js","./_getTag.js":"node_modules/lodash-es/_getTag.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js"}],"node_modules/lodash-es/_baseIsEqual.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsEqualDeep = _interopRequireDefault(require("./_baseIsEqualDeep.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }

  if (value == null || other == null || !(0, _isObjectLike.default)(value) && !(0, _isObjectLike.default)(other)) {
    return value !== value && other !== other;
  }

  return (0, _baseIsEqualDeep.default)(value, other, bitmask, customizer, baseIsEqual, stack);
}

var _default = baseIsEqual;
exports.default = _default;
},{"./_baseIsEqualDeep.js":"node_modules/lodash-es/_baseIsEqualDeep.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/_baseIsMatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Stack = _interopRequireDefault(require("./_Stack.js"));

var _baseIsEqual = _interopRequireDefault(require("./_baseIsEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */

function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }

  object = Object(object);

  while (index--) {
    var data = matchData[index];

    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
      return false;
    }
  }

  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack.default();

      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }

      if (!(result === undefined ? (0, _baseIsEqual.default)(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
        return false;
      }
    }
  }

  return true;
}

var _default = baseIsMatch;
exports.default = _default;
},{"./_Stack.js":"node_modules/lodash-es/_Stack.js","./_baseIsEqual.js":"node_modules/lodash-es/_baseIsEqual.js"}],"node_modules/lodash-es/_isStrictComparable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !(0, _isObject.default)(value);
}

var _default = isStrictComparable;
exports.default = _default;
},{"./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/_getMatchData.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isStrictComparable = _interopRequireDefault(require("./_isStrictComparable.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = (0, _keys.default)(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];
    result[length] = [key, value, (0, _isStrictComparable.default)(value)];
  }

  return result;
}

var _default = getMatchData;
exports.default = _default;
},{"./_isStrictComparable.js":"node_modules/lodash-es/_isStrictComparable.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_matchesStrictComparable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function (object) {
    if (object == null) {
      return false;
    }

    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
  };
}

var _default = matchesStrictComparable;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseMatches.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsMatch = _interopRequireDefault(require("./_baseIsMatch.js"));

var _getMatchData = _interopRequireDefault(require("./_getMatchData.js"));

var _matchesStrictComparable = _interopRequireDefault(require("./_matchesStrictComparable.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = (0, _getMatchData.default)(source);

  if (matchData.length == 1 && matchData[0][2]) {
    return (0, _matchesStrictComparable.default)(matchData[0][0], matchData[0][1]);
  }

  return function (object) {
    return object === source || (0, _baseIsMatch.default)(object, source, matchData);
  };
}

var _default = baseMatches;
exports.default = _default;
},{"./_baseIsMatch.js":"node_modules/lodash-es/_baseIsMatch.js","./_getMatchData.js":"node_modules/lodash-es/_getMatchData.js","./_matchesStrictComparable.js":"node_modules/lodash-es/_matchesStrictComparable.js"}],"node_modules/lodash-es/_baseHasIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

var _default = baseHasIn;
exports.default = _default;
},{}],"node_modules/lodash-es/_hasPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

var _isLength = _interopRequireDefault(require("./isLength.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = (0, _castPath.default)(path, object);
  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = (0, _toKey.default)(path[index]);

    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }

    object = object[key];
  }

  if (result || ++index != length) {
    return result;
  }

  length = object == null ? 0 : object.length;
  return !!length && (0, _isLength.default)(length) && (0, _isIndex.default)(key, length) && ((0, _isArray.default)(object) || (0, _isArguments.default)(object));
}

var _default = hasPath;
exports.default = _default;
},{"./_castPath.js":"node_modules/lodash-es/_castPath.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js","./isLength.js":"node_modules/lodash-es/isLength.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/hasIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseHasIn = _interopRequireDefault(require("./_baseHasIn.js"));

var _hasPath = _interopRequireDefault(require("./_hasPath.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && (0, _hasPath.default)(object, path, _baseHasIn.default);
}

var _default = hasIn;
exports.default = _default;
},{"./_baseHasIn.js":"node_modules/lodash-es/_baseHasIn.js","./_hasPath.js":"node_modules/lodash-es/_hasPath.js"}],"node_modules/lodash-es/_baseMatchesProperty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsEqual = _interopRequireDefault(require("./_baseIsEqual.js"));

var _get = _interopRequireDefault(require("./get.js"));

var _hasIn = _interopRequireDefault(require("./hasIn.js"));

var _isKey = _interopRequireDefault(require("./_isKey.js"));

var _isStrictComparable = _interopRequireDefault(require("./_isStrictComparable.js"));

var _matchesStrictComparable = _interopRequireDefault(require("./_matchesStrictComparable.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;
/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */

function baseMatchesProperty(path, srcValue) {
  if ((0, _isKey.default)(path) && (0, _isStrictComparable.default)(srcValue)) {
    return (0, _matchesStrictComparable.default)((0, _toKey.default)(path), srcValue);
  }

  return function (object) {
    var objValue = (0, _get.default)(object, path);
    return objValue === undefined && objValue === srcValue ? (0, _hasIn.default)(object, path) : (0, _baseIsEqual.default)(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

var _default = baseMatchesProperty;
exports.default = _default;
},{"./_baseIsEqual.js":"node_modules/lodash-es/_baseIsEqual.js","./get.js":"node_modules/lodash-es/get.js","./hasIn.js":"node_modules/lodash-es/hasIn.js","./_isKey.js":"node_modules/lodash-es/_isKey.js","./_isStrictComparable.js":"node_modules/lodash-es/_isStrictComparable.js","./_matchesStrictComparable.js":"node_modules/lodash-es/_matchesStrictComparable.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/_baseProperty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function (object) {
    return object == null ? undefined : object[key];
  };
}

var _default = baseProperty;
exports.default = _default;
},{}],"node_modules/lodash-es/_basePropertyDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGet = _interopRequireDefault(require("./_baseGet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function (object) {
    return (0, _baseGet.default)(object, path);
  };
}

var _default = basePropertyDeep;
exports.default = _default;
},{"./_baseGet.js":"node_modules/lodash-es/_baseGet.js"}],"node_modules/lodash-es/property.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseProperty = _interopRequireDefault(require("./_baseProperty.js"));

var _basePropertyDeep = _interopRequireDefault(require("./_basePropertyDeep.js"));

var _isKey = _interopRequireDefault(require("./_isKey.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return (0, _isKey.default)(path) ? (0, _baseProperty.default)((0, _toKey.default)(path)) : (0, _basePropertyDeep.default)(path);
}

var _default = property;
exports.default = _default;
},{"./_baseProperty.js":"node_modules/lodash-es/_baseProperty.js","./_basePropertyDeep.js":"node_modules/lodash-es/_basePropertyDeep.js","./_isKey.js":"node_modules/lodash-es/_isKey.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/_baseIteratee.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseMatches = _interopRequireDefault(require("./_baseMatches.js"));

var _baseMatchesProperty = _interopRequireDefault(require("./_baseMatchesProperty.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _property = _interopRequireDefault(require("./property.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }

  if (value == null) {
    return _identity.default;
  }

  if (typeof value == 'object') {
    return (0, _isArray.default)(value) ? (0, _baseMatchesProperty.default)(value[0], value[1]) : (0, _baseMatches.default)(value);
  }

  return (0, _property.default)(value);
}

var _default = baseIteratee;
exports.default = _default;
},{"./_baseMatches.js":"node_modules/lodash-es/_baseMatches.js","./_baseMatchesProperty.js":"node_modules/lodash-es/_baseMatchesProperty.js","./identity.js":"node_modules/lodash-es/identity.js","./isArray.js":"node_modules/lodash-es/isArray.js","./property.js":"node_modules/lodash-es/property.js"}],"node_modules/lodash-es/cond.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that iterates over `pairs` and invokes the corresponding
 * function of the first predicate to return truthy. The predicate-function
 * pairs are invoked with the `this` binding and arguments of the created
 * function.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {Array} pairs The predicate-function pairs.
 * @returns {Function} Returns the new composite function.
 * @example
 *
 * var func = _.cond([
 *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
 *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
 *   [_.stubTrue,                      _.constant('no match')]
 * ]);
 *
 * func({ 'a': 1, 'b': 2 });
 * // => 'matches A'
 *
 * func({ 'a': 0, 'b': 1 });
 * // => 'matches B'
 *
 * func({ 'a': '1', 'b': '2' });
 * // => 'no match'
 */

function cond(pairs) {
  var length = pairs == null ? 0 : pairs.length,
      toIteratee = _baseIteratee.default;
  pairs = !length ? [] : (0, _arrayMap.default)(pairs, function (pair) {
    if (typeof pair[1] != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }

    return [toIteratee(pair[0]), pair[1]];
  });
  return (0, _baseRest.default)(function (args) {
    var index = -1;

    while (++index < length) {
      var pair = pairs[index];

      if ((0, _apply.default)(pair[0], this, args)) {
        return (0, _apply.default)(pair[1], this, args);
      }
    }
  });
}

var _default = cond;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js"}],"node_modules/lodash-es/_baseConformsTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.conformsTo` which accepts `props` to check.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property predicates to conform to.
 * @returns {boolean} Returns `true` if `object` conforms, else `false`.
 */
function baseConformsTo(object, source, props) {
  var length = props.length;

  if (object == null) {
    return !length;
  }

  object = Object(object);

  while (length--) {
    var key = props[length],
        predicate = source[key],
        value = object[key];

    if (value === undefined && !(key in object) || !predicate(value)) {
      return false;
    }
  }

  return true;
}

var _default = baseConformsTo;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseConforms.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseConformsTo = _interopRequireDefault(require("./_baseConformsTo.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.conforms` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 */
function baseConforms(source) {
  var props = (0, _keys.default)(source);
  return function (object) {
    return (0, _baseConformsTo.default)(object, source, props);
  };
}

var _default = baseConforms;
exports.default = _default;
},{"./_baseConformsTo.js":"node_modules/lodash-es/_baseConformsTo.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/conforms.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

var _baseConforms = _interopRequireDefault(require("./_baseConforms.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;
/**
 * Creates a function that invokes the predicate properties of `source` with
 * the corresponding property values of a given object, returning `true` if
 * all predicates return truthy, else `false`.
 *
 * **Note:** The created function is equivalent to `_.conformsTo` with
 * `source` partially applied.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {Object} source The object of property predicates to conform to.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 2, 'b': 1 },
 *   { 'a': 1, 'b': 2 }
 * ];
 *
 * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
 * // => [{ 'a': 1, 'b': 2 }]
 */

function conforms(source) {
  return (0, _baseConforms.default)((0, _baseClone.default)(source, CLONE_DEEP_FLAG));
}

var _default = conforms;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js","./_baseConforms.js":"node_modules/lodash-es/_baseConforms.js"}],"node_modules/lodash-es/conformsTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseConformsTo = _interopRequireDefault(require("./_baseConformsTo.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `object` conforms to `source` by invoking the predicate
 * properties of `source` with the corresponding property values of `object`.
 *
 * **Note:** This method is equivalent to `_.conforms` when `source` is
 * partially applied.
 *
 * @static
 * @memberOf _
 * @since 4.14.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property predicates to conform to.
 * @returns {boolean} Returns `true` if `object` conforms, else `false`.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 *
 * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
 * // => true
 *
 * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
 * // => false
 */
function conformsTo(object, source) {
  return source == null || (0, _baseConformsTo.default)(object, source, (0, _keys.default)(source));
}

var _default = conformsTo;
exports.default = _default;
},{"./_baseConformsTo.js":"node_modules/lodash-es/_baseConformsTo.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_arrayAggregator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }

  return accumulator;
}

var _default = arrayAggregator;
exports.default = _default;
},{}],"node_modules/lodash-es/_createBaseFor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function (object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];

      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }

    return object;
  };
}

var _default = createBaseFor;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseFor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createBaseFor = _interopRequireDefault(require("./_createBaseFor.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = (0, _createBaseFor.default)();
var _default = baseFor;
exports.default = _default;
},{"./_createBaseFor.js":"node_modules/lodash-es/_createBaseFor.js"}],"node_modules/lodash-es/_baseForOwn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFor = _interopRequireDefault(require("./_baseFor.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && (0, _baseFor.default)(object, iteratee, _keys.default);
}

var _default = baseForOwn;
exports.default = _default;
},{"./_baseFor.js":"node_modules/lodash-es/_baseFor.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_createBaseEach.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function (collection, iteratee) {
    if (collection == null) {
      return collection;
    }

    if (!(0, _isArrayLike.default)(collection)) {
      return eachFunc(collection, iteratee);
    }

    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while (fromRight ? index-- : ++index < length) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }

    return collection;
  };
}

var _default = createBaseEach;
exports.default = _default;
},{"./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js"}],"node_modules/lodash-es/_baseEach.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _createBaseEach = _interopRequireDefault(require("./_createBaseEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = (0, _createBaseEach.default)(_baseForOwn.default);
var _default = baseEach;
exports.default = _default;
},{"./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_createBaseEach.js":"node_modules/lodash-es/_createBaseEach.js"}],"node_modules/lodash-es/_baseAggregator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  (0, _baseEach.default)(collection, function (value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

var _default = baseAggregator;
exports.default = _default;
},{"./_baseEach.js":"node_modules/lodash-es/_baseEach.js"}],"node_modules/lodash-es/_createAggregator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayAggregator = _interopRequireDefault(require("./_arrayAggregator.js"));

var _baseAggregator = _interopRequireDefault(require("./_baseAggregator.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function (collection, iteratee) {
    var func = (0, _isArray.default)(collection) ? _arrayAggregator.default : _baseAggregator.default,
        accumulator = initializer ? initializer() : {};
    return func(collection, setter, (0, _baseIteratee.default)(iteratee, 2), accumulator);
  };
}

var _default = createAggregator;
exports.default = _default;
},{"./_arrayAggregator.js":"node_modules/lodash-es/_arrayAggregator.js","./_baseAggregator.js":"node_modules/lodash-es/_baseAggregator.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/countBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _createAggregator = _interopRequireDefault(require("./_createAggregator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the number of times the key was returned by `iteratee`. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.countBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': 1, '6': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.countBy(['one', 'two', 'three'], 'length');
 * // => { '3': 2, '5': 1 }
 */

var countBy = (0, _createAggregator.default)(function (result, value, key) {
  if (hasOwnProperty.call(result, key)) {
    ++result[key];
  } else {
    (0, _baseAssignValue.default)(result, key, 1);
  }
});
var _default = countBy;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./_createAggregator.js":"node_modules/lodash-es/_createAggregator.js"}],"node_modules/lodash-es/create.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssign = _interopRequireDefault(require("./_baseAssign.js"));

var _baseCreate = _interopRequireDefault(require("./_baseCreate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an object that inherits from the `prototype` object. If a
 * `properties` object is given, its own enumerable string keyed properties
 * are assigned to the created object.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Object
 * @param {Object} prototype The object to inherit from.
 * @param {Object} [properties] The properties to assign to the object.
 * @returns {Object} Returns the new object.
 * @example
 *
 * function Shape() {
 *   this.x = 0;
 *   this.y = 0;
 * }
 *
 * function Circle() {
 *   Shape.call(this);
 * }
 *
 * Circle.prototype = _.create(Shape.prototype, {
 *   'constructor': Circle
 * });
 *
 * var circle = new Circle;
 * circle instanceof Circle;
 * // => true
 *
 * circle instanceof Shape;
 * // => true
 */
function create(prototype, properties) {
  var result = (0, _baseCreate.default)(prototype);
  return properties == null ? result : (0, _baseAssign.default)(result, properties);
}

var _default = create;
exports.default = _default;
},{"./_baseAssign.js":"node_modules/lodash-es/_baseAssign.js","./_baseCreate.js":"node_modules/lodash-es/_baseCreate.js"}],"node_modules/lodash-es/curry.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8;
/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */

function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = (0, _createWrap.default)(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
} // Assign default placeholders.


curry.placeholder = {};
var _default = curry;
exports.default = _default;
},{"./_createWrap.js":"node_modules/lodash-es/_createWrap.js"}],"node_modules/lodash-es/curryRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_RIGHT_FLAG = 16;
/**
 * This method is like `_.curry` except that arguments are applied to `func`
 * in the manner of `_.partialRight` instead of `_.partial`.
 *
 * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curryRight(abc);
 *
 * curried(3)(2)(1);
 * // => [1, 2, 3]
 *
 * curried(2, 3)(1);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(3)(1, _)(2);
 * // => [1, 2, 3]
 */

function curryRight(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = (0, _createWrap.default)(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curryRight.placeholder;
  return result;
} // Assign default placeholders.


curryRight.placeholder = {};
var _default = curryRight;
exports.default = _default;
},{"./_createWrap.js":"node_modules/lodash-es/_createWrap.js"}],"node_modules/lodash-es/now.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function () {
  return _root.default.Date.now();
};

var _default = now;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/debounce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _now = _interopRequireDefault(require("./now.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */

function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  wait = (0, _toNumber.default)(wait) || 0;

  if ((0, _isObject.default)(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax((0, _toNumber.default)(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;
    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time; // Start the timer for the trailing edge.

    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.

    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.

    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }

  function timerExpired() {
    var time = (0, _now.default)();

    if (shouldInvoke(time)) {
      return trailingEdge(time);
    } // Restart the timer.


    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.

    if (trailing && lastArgs) {
      return invokeFunc(time);
    }

    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }

    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge((0, _now.default)());
  }

  function debounced() {
    var time = (0, _now.default)(),
        isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }

      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }

    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }

    return result;
  }

  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

var _default = debounce;
exports.default = _default;
},{"./isObject.js":"node_modules/lodash-es/isObject.js","./now.js":"node_modules/lodash-es/now.js","./toNumber.js":"node_modules/lodash-es/toNumber.js"}],"node_modules/lodash-es/defaultTo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks `value` to determine whether a default value should be returned in
 * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
 * or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.14.0
 * @category Util
 * @param {*} value The value to check.
 * @param {*} defaultValue The default value.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * _.defaultTo(1, 10);
 * // => 1
 *
 * _.defaultTo(undefined, 10);
 * // => 10
 */
function defaultTo(value, defaultValue) {
  return value == null || value !== value ? defaultValue : value;
}

var _default = defaultTo;
exports.default = _default;
},{}],"node_modules/lodash-es/defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Assigns own and inherited enumerable string keyed properties of source
 * objects to the destination object for all destination properties that
 * resolve to `undefined`. Source objects are applied from left to right.
 * Once a property is set, additional values of the same property are ignored.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaultsDeep
 * @example
 *
 * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */

var defaults = (0, _baseRest.default)(function (object, sources) {
  object = Object(object);
  var index = -1;
  var length = sources.length;
  var guard = length > 2 ? sources[2] : undefined;

  if (guard && (0, _isIterateeCall.default)(sources[0], sources[1], guard)) {
    length = 1;
  }

  while (++index < length) {
    var source = sources[index];
    var props = (0, _keysIn.default)(source);
    var propsIndex = -1;
    var propsLength = props.length;

    while (++propsIndex < propsLength) {
      var key = props[propsIndex];
      var value = object[key];

      if (value === undefined || (0, _eq.default)(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {
        object[key] = source[key];
      }
    }
  }

  return object;
});
var _default = defaults;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./eq.js":"node_modules/lodash-es/eq.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/_assignMergeValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if (value !== undefined && !(0, _eq.default)(object[key], value) || value === undefined && !(key in object)) {
    (0, _baseAssignValue.default)(object, key, value);
  }
}

var _default = assignMergeValue;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/isArrayLikeObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return (0, _isObjectLike.default)(value) && (0, _isArrayLike.default)(value);
}

var _default = isArrayLikeObject;
exports.default = _default;
},{"./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/_safeGet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

var _default = safeGet;
exports.default = _default;
},{}],"node_modules/lodash-es/toPlainObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return (0, _copyObject.default)(value, (0, _keysIn.default)(value));
}

var _default = toPlainObject;
exports.default = _default;
},{"./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/_baseMergeDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assignMergeValue = _interopRequireDefault(require("./_assignMergeValue.js"));

var _cloneBuffer = _interopRequireDefault(require("./_cloneBuffer.js"));

var _cloneTypedArray = _interopRequireDefault(require("./_cloneTypedArray.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _initCloneObject = _interopRequireDefault(require("./_initCloneObject.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

var _safeGet = _interopRequireDefault(require("./_safeGet.js"));

var _toPlainObject = _interopRequireDefault(require("./toPlainObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = (0, _safeGet.default)(object, key),
      srcValue = (0, _safeGet.default)(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    (0, _assignMergeValue.default)(object, key, stacked);
    return;
  }

  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;
  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = (0, _isArray.default)(srcValue),
        isBuff = !isArr && (0, _isBuffer.default)(srcValue),
        isTyped = !isArr && !isBuff && (0, _isTypedArray.default)(srcValue);
    newValue = srcValue;

    if (isArr || isBuff || isTyped) {
      if ((0, _isArray.default)(objValue)) {
        newValue = objValue;
      } else if ((0, _isArrayLikeObject.default)(objValue)) {
        newValue = (0, _copyArray.default)(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = (0, _cloneBuffer.default)(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = (0, _cloneTypedArray.default)(srcValue, true);
      } else {
        newValue = [];
      }
    } else if ((0, _isPlainObject.default)(srcValue) || (0, _isArguments.default)(srcValue)) {
      newValue = objValue;

      if ((0, _isArguments.default)(objValue)) {
        newValue = (0, _toPlainObject.default)(objValue);
      } else if (!(0, _isObject.default)(objValue) || (0, _isFunction.default)(objValue)) {
        newValue = (0, _initCloneObject.default)(srcValue);
      }
    } else {
      isCommon = false;
    }
  }

  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }

  (0, _assignMergeValue.default)(object, key, newValue);
}

var _default = baseMergeDeep;
exports.default = _default;
},{"./_assignMergeValue.js":"node_modules/lodash-es/_assignMergeValue.js","./_cloneBuffer.js":"node_modules/lodash-es/_cloneBuffer.js","./_cloneTypedArray.js":"node_modules/lodash-es/_cloneTypedArray.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./_initCloneObject.js":"node_modules/lodash-es/_initCloneObject.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js","./_safeGet.js":"node_modules/lodash-es/_safeGet.js","./toPlainObject.js":"node_modules/lodash-es/toPlainObject.js"}],"node_modules/lodash-es/_baseMerge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Stack = _interopRequireDefault(require("./_Stack.js"));

var _assignMergeValue = _interopRequireDefault(require("./_assignMergeValue.js"));

var _baseFor = _interopRequireDefault(require("./_baseFor.js"));

var _baseMergeDeep = _interopRequireDefault(require("./_baseMergeDeep.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

var _safeGet = _interopRequireDefault(require("./_safeGet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }

  (0, _baseFor.default)(source, function (srcValue, key) {
    stack || (stack = new _Stack.default());

    if ((0, _isObject.default)(srcValue)) {
      (0, _baseMergeDeep.default)(object, source, key, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer((0, _safeGet.default)(object, key), srcValue, key + '', object, source, stack) : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }

      (0, _assignMergeValue.default)(object, key, newValue);
    }
  }, _keysIn.default);
}

var _default = baseMerge;
exports.default = _default;
},{"./_Stack.js":"node_modules/lodash-es/_Stack.js","./_assignMergeValue.js":"node_modules/lodash-es/_assignMergeValue.js","./_baseFor.js":"node_modules/lodash-es/_baseFor.js","./_baseMergeDeep.js":"node_modules/lodash-es/_baseMergeDeep.js","./isObject.js":"node_modules/lodash-es/isObject.js","./keysIn.js":"node_modules/lodash-es/keysIn.js","./_safeGet.js":"node_modules/lodash-es/_safeGet.js"}],"node_modules/lodash-es/_customDefaultsMerge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseMerge = _interopRequireDefault(require("./_baseMerge.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
 * objects into destination objects that are passed thru.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to merge.
 * @param {Object} object The parent object of `objValue`.
 * @param {Object} source The parent object of `srcValue`.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 * @returns {*} Returns the value to assign.
 */
function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
  if ((0, _isObject.default)(objValue) && (0, _isObject.default)(srcValue)) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, objValue);
    (0, _baseMerge.default)(objValue, srcValue, undefined, customDefaultsMerge, stack);
    stack['delete'](srcValue);
  }

  return objValue;
}

var _default = customDefaultsMerge;
exports.default = _default;
},{"./_baseMerge.js":"node_modules/lodash-es/_baseMerge.js","./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/mergeWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseMerge = _interopRequireDefault(require("./_baseMerge.js"));

var _createAssigner = _interopRequireDefault(require("./_createAssigner.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.merge` except that it accepts `customizer` which
 * is invoked to produce the merged values of the destination and source
 * properties. If `customizer` returns `undefined`, merging is handled by the
 * method instead. The `customizer` is invoked with six arguments:
 * (objValue, srcValue, key, object, source, stack).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} sources The source objects.
 * @param {Function} customizer The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * function customizer(objValue, srcValue) {
 *   if (_.isArray(objValue)) {
 *     return objValue.concat(srcValue);
 *   }
 * }
 *
 * var object = { 'a': [1], 'b': [2] };
 * var other = { 'a': [3], 'b': [4] };
 *
 * _.mergeWith(object, other, customizer);
 * // => { 'a': [1, 3], 'b': [2, 4] }
 */
var mergeWith = (0, _createAssigner.default)(function (object, source, srcIndex, customizer) {
  (0, _baseMerge.default)(object, source, srcIndex, customizer);
});
var _default = mergeWith;
exports.default = _default;
},{"./_baseMerge.js":"node_modules/lodash-es/_baseMerge.js","./_createAssigner.js":"node_modules/lodash-es/_createAssigner.js"}],"node_modules/lodash-es/defaultsDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _customDefaultsMerge = _interopRequireDefault(require("./_customDefaultsMerge.js"));

var _mergeWith = _interopRequireDefault(require("./mergeWith.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.defaults` except that it recursively assigns
 * default properties.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.defaults
 * @example
 *
 * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
 * // => { 'a': { 'b': 2, 'c': 3 } }
 */
var defaultsDeep = (0, _baseRest.default)(function (args) {
  args.push(undefined, _customDefaultsMerge.default);
  return (0, _apply.default)(_mergeWith.default, undefined, args);
});
var _default = defaultsDeep;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_customDefaultsMerge.js":"node_modules/lodash-es/_customDefaultsMerge.js","./mergeWith.js":"node_modules/lodash-es/mergeWith.js"}],"node_modules/lodash-es/_baseDelay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * The base implementation of `_.delay` and `_.defer` which accepts `args`
 * to provide to `func`.
 *
 * @private
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {Array} args The arguments to provide to `func`.
 * @returns {number|Object} Returns the timer id or timeout object.
 */

function baseDelay(func, wait, args) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  return setTimeout(function () {
    func.apply(undefined, args);
  }, wait);
}

var _default = baseDelay;
exports.default = _default;
},{}],"node_modules/lodash-es/defer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDelay = _interopRequireDefault(require("./_baseDelay.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Defers invoking the `func` until the current call stack has cleared. Any
 * additional arguments are provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to defer.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.defer(function(text) {
 *   console.log(text);
 * }, 'deferred');
 * // => Logs 'deferred' after one millisecond.
 */
var defer = (0, _baseRest.default)(function (func, args) {
  return (0, _baseDelay.default)(func, 1, args);
});
var _default = defer;
exports.default = _default;
},{"./_baseDelay.js":"node_modules/lodash-es/_baseDelay.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js"}],"node_modules/lodash-es/delay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDelay = _interopRequireDefault(require("./_baseDelay.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Invokes `func` after `wait` milliseconds. Any additional arguments are
 * provided to `func` when it's invoked.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to delay.
 * @param {number} wait The number of milliseconds to delay invocation.
 * @param {...*} [args] The arguments to invoke `func` with.
 * @returns {number} Returns the timer id.
 * @example
 *
 * _.delay(function(text) {
 *   console.log(text);
 * }, 1000, 'later');
 * // => Logs 'later' after one second.
 */
var delay = (0, _baseRest.default)(function (func, wait, args) {
  return (0, _baseDelay.default)(func, (0, _toNumber.default)(wait) || 0, args);
});
var _default = delay;
exports.default = _default;
},{"./_baseDelay.js":"node_modules/lodash-es/_baseDelay.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./toNumber.js":"node_modules/lodash-es/toNumber.js"}],"node_modules/lodash-es/_arrayIncludesWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }

  return false;
}

var _default = arrayIncludesWith;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseDifference.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SetCache = _interopRequireDefault(require("./_SetCache.js"));

var _arrayIncludes = _interopRequireDefault(require("./_arrayIncludes.js"));

var _arrayIncludesWith = _interopRequireDefault(require("./_arrayIncludesWith.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _cacheHas = _interopRequireDefault(require("./_cacheHas.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;
/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */

function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes.default,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }

  if (iteratee) {
    values = (0, _arrayMap.default)(values, (0, _baseUnary.default)(iteratee));
  }

  if (comparator) {
    includes = _arrayIncludesWith.default;
    isCommon = false;
  } else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = _cacheHas.default;
    isCommon = false;
    values = new _SetCache.default(values);
  }

  outer: while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);
    value = comparator || value !== 0 ? value : 0;

    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;

      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }

      result.push(value);
    } else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }

  return result;
}

var _default = baseDifference;
exports.default = _default;
},{"./_SetCache.js":"node_modules/lodash-es/_SetCache.js","./_arrayIncludes.js":"node_modules/lodash-es/_arrayIncludes.js","./_arrayIncludesWith.js":"node_modules/lodash-es/_arrayIncludesWith.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_cacheHas.js":"node_modules/lodash-es/_cacheHas.js"}],"node_modules/lodash-es/difference.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDifference = _interopRequireDefault(require("./_baseDifference.js"));

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = (0, _baseRest.default)(function (array, values) {
  return (0, _isArrayLikeObject.default)(array) ? (0, _baseDifference.default)(array, (0, _baseFlatten.default)(values, 1, _isArrayLikeObject.default, true)) : [];
});
var _default = difference;
exports.default = _default;
},{"./_baseDifference.js":"node_modules/lodash-es/_baseDifference.js","./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js"}],"node_modules/lodash-es/last.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

var _default = last;
exports.default = _default;
},{}],"node_modules/lodash-es/differenceBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDifference = _interopRequireDefault(require("./_baseDifference.js"));

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.difference` except that it accepts `iteratee` which
 * is invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var differenceBy = (0, _baseRest.default)(function (array, values) {
  var iteratee = (0, _last.default)(values);

  if ((0, _isArrayLikeObject.default)(iteratee)) {
    iteratee = undefined;
  }

  return (0, _isArrayLikeObject.default)(array) ? (0, _baseDifference.default)(array, (0, _baseFlatten.default)(values, 1, _isArrayLikeObject.default, true), (0, _baseIteratee.default)(iteratee, 2)) : [];
});
var _default = differenceBy;
exports.default = _default;
},{"./_baseDifference.js":"node_modules/lodash-es/_baseDifference.js","./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/differenceWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDifference = _interopRequireDefault(require("./_baseDifference.js"));

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.difference` except that it accepts `comparator`
 * which is invoked to compare elements of `array` to `values`. The order and
 * references of result values are determined by the first array. The comparator
 * is invoked with two arguments: (arrVal, othVal).
 *
 * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 *
 * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
 * // => [{ 'x': 2, 'y': 1 }]
 */
var differenceWith = (0, _baseRest.default)(function (array, values) {
  var comparator = (0, _last.default)(values);

  if ((0, _isArrayLikeObject.default)(comparator)) {
    comparator = undefined;
  }

  return (0, _isArrayLikeObject.default)(array) ? (0, _baseDifference.default)(array, (0, _baseFlatten.default)(values, 1, _isArrayLikeObject.default, true), undefined, comparator) : [];
});
var _default = differenceWith;
exports.default = _default;
},{"./_baseDifference.js":"node_modules/lodash-es/_baseDifference.js","./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/divide.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createMathOperation = _interopRequireDefault(require("./_createMathOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Divide two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {number} dividend The first number in a division.
 * @param {number} divisor The second number in a division.
 * @returns {number} Returns the quotient.
 * @example
 *
 * _.divide(6, 4);
 * // => 1.5
 */
var divide = (0, _createMathOperation.default)(function (dividend, divisor) {
  return dividend / divisor;
}, 1);
var _default = divide;
exports.default = _default;
},{"./_createMathOperation.js":"node_modules/lodash-es/_createMathOperation.js"}],"node_modules/lodash-es/drop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` with `n` elements dropped from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.drop([1, 2, 3]);
 * // => [2, 3]
 *
 * _.drop([1, 2, 3], 2);
 * // => [3]
 *
 * _.drop([1, 2, 3], 5);
 * // => []
 *
 * _.drop([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function drop(array, n, guard) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  n = guard || n === undefined ? 1 : (0, _toInteger.default)(n);
  return (0, _baseSlice.default)(array, n < 0 ? 0 : n, length);
}

var _default = drop;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/dropRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` with `n` elements dropped from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.dropRight([1, 2, 3]);
 * // => [1, 2]
 *
 * _.dropRight([1, 2, 3], 2);
 * // => [1]
 *
 * _.dropRight([1, 2, 3], 5);
 * // => []
 *
 * _.dropRight([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  n = guard || n === undefined ? 1 : (0, _toInteger.default)(n);
  n = length - n;
  return (0, _baseSlice.default)(array, 0, n < 0 ? 0 : n);
}

var _default = dropRight;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/_baseWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
 * without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {Function} predicate The function invoked per iteration.
 * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the slice of `array`.
 */
function baseWhile(array, predicate, isDrop, fromRight) {
  var length = array.length,
      index = fromRight ? length : -1;

  while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}

  return isDrop ? (0, _baseSlice.default)(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : (0, _baseSlice.default)(array, fromRight ? index + 1 : 0, fromRight ? length : index);
}

var _default = baseWhile;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js"}],"node_modules/lodash-es/dropRightWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseWhile = _interopRequireDefault(require("./_baseWhile.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` excluding elements dropped from the end.
 * Elements are dropped until `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.dropRightWhile(users, function(o) { return !o.active; });
 * // => objects for ['barney']
 *
 * // The `_.matches` iteratee shorthand.
 * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
 * // => objects for ['barney', 'fred']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.dropRightWhile(users, ['active', false]);
 * // => objects for ['barney']
 *
 * // The `_.property` iteratee shorthand.
 * _.dropRightWhile(users, 'active');
 * // => objects for ['barney', 'fred', 'pebbles']
 */
function dropRightWhile(array, predicate) {
  return array && array.length ? (0, _baseWhile.default)(array, (0, _baseIteratee.default)(predicate, 3), true, true) : [];
}

var _default = dropRightWhile;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseWhile.js":"node_modules/lodash-es/_baseWhile.js"}],"node_modules/lodash-es/dropWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseWhile = _interopRequireDefault(require("./_baseWhile.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` excluding elements dropped from the beginning.
 * Elements are dropped until `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.dropWhile(users, function(o) { return !o.active; });
 * // => objects for ['pebbles']
 *
 * // The `_.matches` iteratee shorthand.
 * _.dropWhile(users, { 'user': 'barney', 'active': false });
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.dropWhile(users, ['active', false]);
 * // => objects for ['pebbles']
 *
 * // The `_.property` iteratee shorthand.
 * _.dropWhile(users, 'active');
 * // => objects for ['barney', 'fred', 'pebbles']
 */
function dropWhile(array, predicate) {
  return array && array.length ? (0, _baseWhile.default)(array, (0, _baseIteratee.default)(predicate, 3), true) : [];
}

var _default = dropWhile;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseWhile.js":"node_modules/lodash-es/_baseWhile.js"}],"node_modules/lodash-es/_castFunction.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : _identity.default;
}

var _default = castFunction;
exports.default = _default;
},{"./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/forEach.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = (0, _isArray.default)(collection) ? _arrayEach.default : _baseEach.default;
  return func(collection, (0, _castFunction.default)(iteratee));
}

var _default = forEach;
exports.default = _default;
},{"./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_baseEach.js":"node_modules/lodash-es/_baseEach.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/each.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _forEach.default;
  }
});

var _forEach = _interopRequireDefault(require("./forEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./forEach.js":"node_modules/lodash-es/forEach.js"}],"node_modules/lodash-es/_arrayEachRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.forEachRight` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEachRight(array, iteratee) {
  var length = array == null ? 0 : array.length;

  while (length--) {
    if (iteratee(array[length], length, array) === false) {
      break;
    }
  }

  return array;
}

var _default = arrayEachRight;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseForRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createBaseFor = _interopRequireDefault(require("./_createBaseFor.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This function is like `baseFor` except that it iterates over properties
 * in the opposite order.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseForRight = (0, _createBaseFor.default)(true);
var _default = baseForRight;
exports.default = _default;
},{"./_createBaseFor.js":"node_modules/lodash-es/_createBaseFor.js"}],"node_modules/lodash-es/_baseForOwnRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForRight = _interopRequireDefault(require("./_baseForRight.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwnRight(object, iteratee) {
  return object && (0, _baseForRight.default)(object, iteratee, _keys.default);
}

var _default = baseForOwnRight;
exports.default = _default;
},{"./_baseForRight.js":"node_modules/lodash-es/_baseForRight.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/_baseEachRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForOwnRight = _interopRequireDefault(require("./_baseForOwnRight.js"));

var _createBaseEach = _interopRequireDefault(require("./_createBaseEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.forEachRight` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEachRight = (0, _createBaseEach.default)(_baseForOwnRight.default, true);
var _default = baseEachRight;
exports.default = _default;
},{"./_baseForOwnRight.js":"node_modules/lodash-es/_baseForOwnRight.js","./_createBaseEach.js":"node_modules/lodash-es/_createBaseEach.js"}],"node_modules/lodash-es/forEachRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEachRight = _interopRequireDefault(require("./_arrayEachRight.js"));

var _baseEachRight = _interopRequireDefault(require("./_baseEachRight.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.forEach` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @alias eachRight
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEach
 * @example
 *
 * _.forEachRight([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `2` then `1`.
 */
function forEachRight(collection, iteratee) {
  var func = (0, _isArray.default)(collection) ? _arrayEachRight.default : _baseEachRight.default;
  return func(collection, (0, _castFunction.default)(iteratee));
}

var _default = forEachRight;
exports.default = _default;
},{"./_arrayEachRight.js":"node_modules/lodash-es/_arrayEachRight.js","./_baseEachRight.js":"node_modules/lodash-es/_baseEachRight.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/eachRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _forEachRight.default;
  }
});

var _forEachRight = _interopRequireDefault(require("./forEachRight.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./forEachRight.js":"node_modules/lodash-es/forEachRight.js"}],"node_modules/lodash-es/endsWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `string` ends with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=string.length] The position to search up to.
 * @returns {boolean} Returns `true` if `string` ends with `target`,
 *  else `false`.
 * @example
 *
 * _.endsWith('abc', 'c');
 * // => true
 *
 * _.endsWith('abc', 'b');
 * // => false
 *
 * _.endsWith('abc', 'b', 2);
 * // => true
 */
function endsWith(string, target, position) {
  string = (0, _toString.default)(string);
  target = (0, _baseToString.default)(target);
  var length = string.length;
  position = position === undefined ? length : (0, _baseClamp.default)((0, _toInteger.default)(position), 0, length);
  var end = position;
  position -= target.length;
  return position >= 0 && string.slice(position, end) == target;
}

var _default = endsWith;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/_baseToPairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
 * of key-value pairs for `object` corresponding to the property names of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the key-value pairs.
 */
function baseToPairs(object, props) {
  return (0, _arrayMap.default)(props, function (key) {
    return [key, object[key]];
  });
}

var _default = baseToPairs;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js"}],"node_modules/lodash-es/_setToPairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Converts `set` to its value-value pairs.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the value-value pairs.
 */
function setToPairs(set) {
  var index = -1,
      result = Array(set.size);
  set.forEach(function (value) {
    result[++index] = [value, value];
  });
  return result;
}

var _default = setToPairs;
exports.default = _default;
},{}],"node_modules/lodash-es/_createToPairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToPairs = _interopRequireDefault(require("./_baseToPairs.js"));

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _mapToArray = _interopRequireDefault(require("./_mapToArray.js"));

var _setToPairs = _interopRequireDefault(require("./_setToPairs.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';
/**
 * Creates a `_.toPairs` or `_.toPairsIn` function.
 *
 * @private
 * @param {Function} keysFunc The function to get the keys of a given object.
 * @returns {Function} Returns the new pairs function.
 */

function createToPairs(keysFunc) {
  return function (object) {
    var tag = (0, _getTag.default)(object);

    if (tag == mapTag) {
      return (0, _mapToArray.default)(object);
    }

    if (tag == setTag) {
      return (0, _setToPairs.default)(object);
    }

    return (0, _baseToPairs.default)(object, keysFunc(object));
  };
}

var _default = createToPairs;
exports.default = _default;
},{"./_baseToPairs.js":"node_modules/lodash-es/_baseToPairs.js","./_getTag.js":"node_modules/lodash-es/_getTag.js","./_mapToArray.js":"node_modules/lodash-es/_mapToArray.js","./_setToPairs.js":"node_modules/lodash-es/_setToPairs.js"}],"node_modules/lodash-es/toPairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createToPairs = _interopRequireDefault(require("./_createToPairs.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of own enumerable string keyed-value pairs for `object`
 * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
 * entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entries
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairs(new Foo);
 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
 */
var toPairs = (0, _createToPairs.default)(_keys.default);
var _default = toPairs;
exports.default = _default;
},{"./_createToPairs.js":"node_modules/lodash-es/_createToPairs.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/entries.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _toPairs.default;
  }
});

var _toPairs = _interopRequireDefault(require("./toPairs.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./toPairs.js":"node_modules/lodash-es/toPairs.js"}],"node_modules/lodash-es/toPairsIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createToPairs = _interopRequireDefault(require("./_createToPairs.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of own and inherited enumerable string keyed-value pairs
 * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
 * or set, its entries are returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @alias entriesIn
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the key-value pairs.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.toPairsIn(new Foo);
 * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
 */
var toPairsIn = (0, _createToPairs.default)(_keysIn.default);
var _default = toPairsIn;
exports.default = _default;
},{"./_createToPairs.js":"node_modules/lodash-es/_createToPairs.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/entriesIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _toPairsIn.default;
  }
});

var _toPairsIn = _interopRequireDefault(require("./toPairsIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./toPairsIn.js":"node_modules/lodash-es/toPairsIn.js"}],"node_modules/lodash-es/_escapeHtmlChar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePropertyOf = _interopRequireDefault(require("./_basePropertyOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to map characters to HTML entities. */
var htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};
/**
 * Used by `_.escape` to convert characters to HTML entities.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */

var escapeHtmlChar = (0, _basePropertyOf.default)(htmlEscapes);
var _default = escapeHtmlChar;
exports.default = _default;
},{"./_basePropertyOf.js":"node_modules/lodash-es/_basePropertyOf.js"}],"node_modules/lodash-es/escape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _escapeHtmlChar = _interopRequireDefault(require("./_escapeHtmlChar.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match HTML entities and HTML characters. */
var reUnescapedHtml = /[&<>"']/g,
    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
/**
 * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
 * corresponding HTML entities.
 *
 * **Note:** No other characters are escaped. To escape additional
 * characters use a third-party library like [_he_](https://mths.be/he).
 *
 * Though the ">" character is escaped for symmetry, characters like
 * ">" and "/" don't need escaping in HTML and have no special meaning
 * unless they're part of a tag or unquoted attribute value. See
 * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
 * (under "semi-related fun fact") for more details.
 *
 * When working with HTML you should always
 * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
 * XSS vectors.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escape('fred, barney, & pebbles');
 * // => 'fred, barney, &amp; pebbles'
 */

function escape(string) {
  string = (0, _toString.default)(string);
  return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, _escapeHtmlChar.default) : string;
}

var _default = escape;
exports.default = _default;
},{"./_escapeHtmlChar.js":"node_modules/lodash-es/_escapeHtmlChar.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/escapeRegExp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(reRegExpChar.source);
/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */

function escapeRegExp(string) {
  string = (0, _toString.default)(string);
  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\$&') : string;
}

var _default = escapeRegExp;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/_arrayEvery.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */
function arrayEvery(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }

  return true;
}

var _default = arrayEvery;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseEvery.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */
function baseEvery(collection, predicate) {
  var result = true;
  (0, _baseEach.default)(collection, function (value, index, collection) {
    result = !!predicate(value, index, collection);
    return result;
  });
  return result;
}

var _default = baseEvery;
exports.default = _default;
},{"./_baseEach.js":"node_modules/lodash-es/_baseEach.js"}],"node_modules/lodash-es/every.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEvery = _interopRequireDefault(require("./_arrayEvery.js"));

var _baseEvery = _interopRequireDefault(require("./_baseEvery.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */
function every(collection, predicate, guard) {
  var func = (0, _isArray.default)(collection) ? _arrayEvery.default : _baseEvery.default;

  if (guard && (0, _isIterateeCall.default)(collection, predicate, guard)) {
    predicate = undefined;
  }

  return func(collection, (0, _baseIteratee.default)(predicate, 3));
}

var _default = every;
exports.default = _default;
},{"./_arrayEvery.js":"node_modules/lodash-es/_arrayEvery.js","./_baseEvery.js":"node_modules/lodash-es/_baseEvery.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./isArray.js":"node_modules/lodash-es/isArray.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js"}],"node_modules/lodash-es/extend.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _assignIn.default;
  }
});

var _assignIn = _interopRequireDefault(require("./assignIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./assignIn.js":"node_modules/lodash-es/assignIn.js"}],"node_modules/lodash-es/extendWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _assignInWith.default;
  }
});

var _assignInWith = _interopRequireDefault(require("./assignInWith.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./assignInWith.js":"node_modules/lodash-es/assignInWith.js"}],"node_modules/lodash-es/toLength.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;
/**
 * Converts `value` to an integer suitable for use as the length of an
 * array-like object.
 *
 * **Note:** This method is based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toLength(3.2);
 * // => 3
 *
 * _.toLength(Number.MIN_VALUE);
 * // => 0
 *
 * _.toLength(Infinity);
 * // => 4294967295
 *
 * _.toLength('3.2');
 * // => 3
 */

function toLength(value) {
  return value ? (0, _baseClamp.default)((0, _toInteger.default)(value), 0, MAX_ARRAY_LENGTH) : 0;
}

var _default = toLength;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/_baseFill.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toLength = _interopRequireDefault(require("./toLength.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.fill` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to fill.
 * @param {*} value The value to fill `array` with.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns `array`.
 */
function baseFill(array, value, start, end) {
  var length = array.length;
  start = (0, _toInteger.default)(start);

  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }

  end = end === undefined || end > length ? length : (0, _toInteger.default)(end);

  if (end < 0) {
    end += length;
  }

  end = start > end ? 0 : (0, _toLength.default)(end);

  while (start < end) {
    array[start++] = value;
  }

  return array;
}

var _default = baseFill;
exports.default = _default;
},{"./toInteger.js":"node_modules/lodash-es/toInteger.js","./toLength.js":"node_modules/lodash-es/toLength.js"}],"node_modules/lodash-es/fill.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFill = _interopRequireDefault(require("./_baseFill.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Fills elements of `array` with `value` from `start` up to, but not
 * including, `end`.
 *
 * **Note:** This method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Array
 * @param {Array} array The array to fill.
 * @param {*} value The value to fill `array` with.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.fill(array, 'a');
 * console.log(array);
 * // => ['a', 'a', 'a']
 *
 * _.fill(Array(3), 2);
 * // => [2, 2, 2]
 *
 * _.fill([4, 6, 8, 10], '*', 1, 3);
 * // => [4, '*', '*', 10]
 */
function fill(array, value, start, end) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  if (start && typeof start != 'number' && (0, _isIterateeCall.default)(array, value, start)) {
    start = 0;
    end = length;
  }

  return (0, _baseFill.default)(array, value, start, end);
}

var _default = fill;
exports.default = _default;
},{"./_baseFill.js":"node_modules/lodash-es/_baseFill.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js"}],"node_modules/lodash-es/_baseFilter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  (0, _baseEach.default)(collection, function (value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

var _default = baseFilter;
exports.default = _default;
},{"./_baseEach.js":"node_modules/lodash-es/_baseEach.js"}],"node_modules/lodash-es/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _baseFilter = _interopRequireDefault(require("./_baseFilter.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 */
function filter(collection, predicate) {
  var func = (0, _isArray.default)(collection) ? _arrayFilter.default : _baseFilter.default;
  return func(collection, (0, _baseIteratee.default)(predicate, 3));
}

var _default = filter;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./_baseFilter.js":"node_modules/lodash-es/_baseFilter.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_createFind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function (collection, predicate, fromIndex) {
    var iterable = Object(collection);

    if (!(0, _isArrayLike.default)(collection)) {
      var iteratee = (0, _baseIteratee.default)(predicate, 3);
      collection = (0, _keys.default)(collection);

      predicate = function (key) {
        return iteratee(iterable[key], key, iterable);
      };
    }

    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

var _default = createFind;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/findIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFindIndex = _interopRequireDefault(require("./_baseFindIndex.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */

function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return -1;
  }

  var index = fromIndex == null ? 0 : (0, _toInteger.default)(fromIndex);

  if (index < 0) {
    index = nativeMax(length + index, 0);
  }

  return (0, _baseFindIndex.default)(array, (0, _baseIteratee.default)(predicate, 3), index);
}

var _default = findIndex;
exports.default = _default;
},{"./_baseFindIndex.js":"node_modules/lodash-es/_baseFindIndex.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/find.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createFind = _interopRequireDefault(require("./_createFind.js"));

var _findIndex = _interopRequireDefault(require("./findIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = (0, _createFind.default)(_findIndex.default);
var _default = find;
exports.default = _default;
},{"./_createFind.js":"node_modules/lodash-es/_createFind.js","./findIndex.js":"node_modules/lodash-es/findIndex.js"}],"node_modules/lodash-es/_baseFindKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of methods like `_.findKey` and `_.findLastKey`,
 * without support for iteratee shorthands, which iterates over `collection`
 * using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the found element or its key, else `undefined`.
 */
function baseFindKey(collection, predicate, eachFunc) {
  var result;
  eachFunc(collection, function (value, key, collection) {
    if (predicate(value, key, collection)) {
      result = key;
      return false;
    }
  });
  return result;
}

var _default = baseFindKey;
exports.default = _default;
},{}],"node_modules/lodash-es/findKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFindKey = _interopRequireDefault(require("./_baseFindKey.js"));

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.find` except that it returns the key of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findKey(users, function(o) { return o.age < 40; });
 * // => 'barney' (iteration order is not guaranteed)
 *
 * // The `_.matches` iteratee shorthand.
 * _.findKey(users, { 'age': 1, 'active': true });
 * // => 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findKey(users, 'active');
 * // => 'barney'
 */
function findKey(object, predicate) {
  return (0, _baseFindKey.default)(object, (0, _baseIteratee.default)(predicate, 3), _baseForOwn.default);
}

var _default = findKey;
exports.default = _default;
},{"./_baseFindKey.js":"node_modules/lodash-es/_baseFindKey.js","./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js"}],"node_modules/lodash-es/findLastIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFindIndex = _interopRequireDefault(require("./_baseFindIndex.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */

function findLastIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return -1;
  }

  var index = length - 1;

  if (fromIndex !== undefined) {
    index = (0, _toInteger.default)(fromIndex);
    index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
  }

  return (0, _baseFindIndex.default)(array, (0, _baseIteratee.default)(predicate, 3), index, true);
}

var _default = findLastIndex;
exports.default = _default;
},{"./_baseFindIndex.js":"node_modules/lodash-es/_baseFindIndex.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/findLast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createFind = _interopRequireDefault(require("./_createFind.js"));

var _findLastIndex = _interopRequireDefault(require("./findLastIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.find` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=collection.length-1] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * _.findLast([1, 2, 3, 4], function(n) {
 *   return n % 2 == 1;
 * });
 * // => 3
 */
var findLast = (0, _createFind.default)(_findLastIndex.default);
var _default = findLast;
exports.default = _default;
},{"./_createFind.js":"node_modules/lodash-es/_createFind.js","./findLastIndex.js":"node_modules/lodash-es/findLastIndex.js"}],"node_modules/lodash-es/findLastKey.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFindKey = _interopRequireDefault(require("./_baseFindKey.js"));

var _baseForOwnRight = _interopRequireDefault(require("./_baseForOwnRight.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.findKey` except that it iterates over elements of
 * a collection in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {string|undefined} Returns the key of the matched element,
 *  else `undefined`.
 * @example
 *
 * var users = {
 *   'barney':  { 'age': 36, 'active': true },
 *   'fred':    { 'age': 40, 'active': false },
 *   'pebbles': { 'age': 1,  'active': true }
 * };
 *
 * _.findLastKey(users, function(o) { return o.age < 40; });
 * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastKey(users, { 'age': 36, 'active': true });
 * // => 'barney'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastKey(users, ['active', false]);
 * // => 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastKey(users, 'active');
 * // => 'pebbles'
 */
function findLastKey(object, predicate) {
  return (0, _baseFindKey.default)(object, (0, _baseIteratee.default)(predicate, 3), _baseForOwnRight.default);
}

var _default = findLastKey;
exports.default = _default;
},{"./_baseFindKey.js":"node_modules/lodash-es/_baseFindKey.js","./_baseForOwnRight.js":"node_modules/lodash-es/_baseForOwnRight.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js"}],"node_modules/lodash-es/head.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return array && array.length ? array[0] : undefined;
}

var _default = head;
exports.default = _default;
},{}],"node_modules/lodash-es/first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _head.default;
  }
});

var _head = _interopRequireDefault(require("./head.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./head.js":"node_modules/lodash-es/head.js"}],"node_modules/lodash-es/_baseMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = (0, _isArrayLike.default)(collection) ? Array(collection.length) : [];
  (0, _baseEach.default)(collection, function (value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

var _default = baseMap;
exports.default = _default;
},{"./_baseEach.js":"node_modules/lodash-es/_baseEach.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js"}],"node_modules/lodash-es/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseMap = _interopRequireDefault(require("./_baseMap.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = (0, _isArray.default)(collection) ? _arrayMap.default : _baseMap.default;
  return func(collection, (0, _baseIteratee.default)(iteratee, 3));
}

var _default = map;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseMap.js":"node_modules/lodash-es/_baseMap.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/flatMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _map = _interopRequireDefault(require("./map.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a flattened array of values by running each element in `collection`
 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
 * with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [n, n];
 * }
 *
 * _.flatMap([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMap(collection, iteratee) {
  return (0, _baseFlatten.default)((0, _map.default)(collection, iteratee), 1);
}

var _default = flatMap;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./map.js":"node_modules/lodash-es/map.js"}],"node_modules/lodash-es/flatMapDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _map = _interopRequireDefault(require("./map.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;
/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDeep([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */

function flatMapDeep(collection, iteratee) {
  return (0, _baseFlatten.default)((0, _map.default)(collection, iteratee), INFINITY);
}

var _default = flatMapDeep;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./map.js":"node_modules/lodash-es/map.js"}],"node_modules/lodash-es/flatMapDepth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _map = _interopRequireDefault(require("./map.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDepth([1, 2], duplicate, 2);
 * // => [[1, 1], [2, 2]]
 */
function flatMapDepth(collection, iteratee, depth) {
  depth = depth === undefined ? 1 : (0, _toInteger.default)(depth);
  return (0, _baseFlatten.default)((0, _map.default)(collection, iteratee), depth);
}

var _default = flatMapDepth;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./map.js":"node_modules/lodash-es/map.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/flattenDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;
/**
 * Recursively flattens `array`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flattenDeep([1, [2, [3, [4]], 5]]);
 * // => [1, 2, 3, 4, 5]
 */

function flattenDeep(array) {
  var length = array == null ? 0 : array.length;
  return length ? (0, _baseFlatten.default)(array, INFINITY) : [];
}

var _default = flattenDeep;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js"}],"node_modules/lodash-es/flattenDepth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Recursively flatten `array` up to `depth` times.
 *
 * @static
 * @memberOf _
 * @since 4.4.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @param {number} [depth=1] The maximum recursion depth.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * var array = [1, [2, [3, [4]], 5]];
 *
 * _.flattenDepth(array, 1);
 * // => [1, 2, [3, [4]], 5]
 *
 * _.flattenDepth(array, 2);
 * // => [1, 2, 3, [4], 5]
 */
function flattenDepth(array, depth) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  depth = depth === undefined ? 1 : (0, _toInteger.default)(depth);
  return (0, _baseFlatten.default)(array, depth);
}

var _default = flattenDepth;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/flip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_FLIP_FLAG = 512;
/**
 * Creates a function that invokes `func` with arguments reversed.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to flip arguments for.
 * @returns {Function} Returns the new flipped function.
 * @example
 *
 * var flipped = _.flip(function() {
 *   return _.toArray(arguments);
 * });
 *
 * flipped('a', 'b', 'c', 'd');
 * // => ['d', 'c', 'b', 'a']
 */

function flip(func) {
  return (0, _createWrap.default)(func, WRAP_FLIP_FLAG);
}

var _default = flip;
exports.default = _default;
},{"./_createWrap.js":"node_modules/lodash-es/_createWrap.js"}],"node_modules/lodash-es/floor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRound = _interopRequireDefault(require("./_createRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes `number` rounded down to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round down.
 * @param {number} [precision=0] The precision to round down to.
 * @returns {number} Returns the rounded down number.
 * @example
 *
 * _.floor(4.006);
 * // => 4
 *
 * _.floor(0.046, 2);
 * // => 0.04
 *
 * _.floor(4060, -2);
 * // => 4000
 */
var floor = (0, _createRound.default)('floor');
var _default = floor;
exports.default = _default;
},{"./_createRound.js":"node_modules/lodash-es/_createRound.js"}],"node_modules/lodash-es/_createFlow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

var _getData = _interopRequireDefault(require("./_getData.js"));

var _getFuncName = _interopRequireDefault(require("./_getFuncName.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isLaziable = _interopRequireDefault(require("./_isLaziable.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/** Used to compose bitmasks for function metadata. */

var WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;
/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */

function createFlow(fromRight) {
  return (0, _flatRest.default)(function (funcs) {
    var length = funcs.length,
        index = length,
        prereq = _LodashWrapper.default.prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }

    while (index--) {
      var func = funcs[index];

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }

      if (prereq && !wrapper && (0, _getFuncName.default)(func) == 'wrapper') {
        var wrapper = new _LodashWrapper.default([], true);
      }
    }

    index = wrapper ? index : length;

    while (++index < length) {
      func = funcs[index];
      var funcName = (0, _getFuncName.default)(func),
          data = funcName == 'wrapper' ? (0, _getData.default)(func) : undefined;

      if (data && (0, _isLaziable.default)(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {
        wrapper = wrapper[(0, _getFuncName.default)(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = func.length == 1 && (0, _isLaziable.default)(func) ? wrapper[funcName]() : wrapper.thru(func);
      }
    }

    return function () {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && (0, _isArray.default)(value)) {
        return wrapper.plant(value).value();
      }

      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }

      return result;
    };
  });
}

var _default = createFlow;
exports.default = _default;
},{"./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js","./_getData.js":"node_modules/lodash-es/_getData.js","./_getFuncName.js":"node_modules/lodash-es/_getFuncName.js","./isArray.js":"node_modules/lodash-es/isArray.js","./_isLaziable.js":"node_modules/lodash-es/_isLaziable.js"}],"node_modules/lodash-es/flow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createFlow = _interopRequireDefault(require("./_createFlow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = (0, _createFlow.default)();
var _default = flow;
exports.default = _default;
},{"./_createFlow.js":"node_modules/lodash-es/_createFlow.js"}],"node_modules/lodash-es/flowRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createFlow = _interopRequireDefault(require("./_createFlow.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.flow` except that it creates a function that
 * invokes the given functions from right to left.
 *
 * @static
 * @since 3.0.0
 * @memberOf _
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flow
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flowRight([square, _.add]);
 * addSquare(1, 2);
 * // => 9
 */
var flowRight = (0, _createFlow.default)(true);
var _default = flowRight;
exports.default = _default;
},{"./_createFlow.js":"node_modules/lodash-es/_createFlow.js"}],"node_modules/lodash-es/forIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFor = _interopRequireDefault(require("./_baseFor.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Iterates over own and inherited enumerable string keyed properties of an
 * object and invokes `iteratee` for each property. The iteratee is invoked
 * with three arguments: (value, key, object). Iteratee functions may exit
 * iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forInRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forIn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
 */
function forIn(object, iteratee) {
  return object == null ? object : (0, _baseFor.default)(object, (0, _castFunction.default)(iteratee), _keysIn.default);
}

var _default = forIn;
exports.default = _default;
},{"./_baseFor.js":"node_modules/lodash-es/_baseFor.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/forInRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForRight = _interopRequireDefault(require("./_baseForRight.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.forIn` except that it iterates over properties of
 * `object` in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forInRight(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
 */
function forInRight(object, iteratee) {
  return object == null ? object : (0, _baseForRight.default)(object, (0, _castFunction.default)(iteratee), _keysIn.default);
}

var _default = forInRight;
exports.default = _default;
},{"./_baseForRight.js":"node_modules/lodash-es/_baseForRight.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/forOwn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Iterates over own enumerable string keyed properties of an object and
 * invokes `iteratee` for each property. The iteratee is invoked with three
 * arguments: (value, key, object). Iteratee functions may exit iteration
 * early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 0.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwnRight
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwn(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forOwn(object, iteratee) {
  return object && (0, _baseForOwn.default)(object, (0, _castFunction.default)(iteratee));
}

var _default = forOwn;
exports.default = _default;
},{"./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js"}],"node_modules/lodash-es/forOwnRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForOwnRight = _interopRequireDefault(require("./_baseForOwnRight.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.forOwn` except that it iterates over properties of
 * `object` in the opposite order.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns `object`.
 * @see _.forOwn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.forOwnRight(new Foo, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
 */
function forOwnRight(object, iteratee) {
  return object && (0, _baseForOwnRight.default)(object, (0, _castFunction.default)(iteratee));
}

var _default = forOwnRight;
exports.default = _default;
},{"./_baseForOwnRight.js":"node_modules/lodash-es/_baseForOwnRight.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js"}],"node_modules/lodash-es/fromPairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The inverse of `_.toPairs`; this method returns an object composed
 * from key-value `pairs`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} pairs The key-value pairs.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.fromPairs([['a', 1], ['b', 2]]);
 * // => { 'a': 1, 'b': 2 }
 */
function fromPairs(pairs) {
  var index = -1,
      length = pairs == null ? 0 : pairs.length,
      result = {};

  while (++index < length) {
    var pair = pairs[index];
    result[pair[0]] = pair[1];
  }

  return result;
}

var _default = fromPairs;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseFunctions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.functions` which creates an array of
 * `object` function property names filtered from `props`.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Array} props The property names to filter.
 * @returns {Array} Returns the function names.
 */
function baseFunctions(object, props) {
  return (0, _arrayFilter.default)(props, function (key) {
    return (0, _isFunction.default)(object[key]);
  });
}

var _default = baseFunctions;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./isFunction.js":"node_modules/lodash-es/isFunction.js"}],"node_modules/lodash-es/functions.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFunctions = _interopRequireDefault(require("./_baseFunctions.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of function property names from own enumerable properties
 * of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns the function names.
 * @see _.functionsIn
 * @example
 *
 * function Foo() {
 *   this.a = _.constant('a');
 *   this.b = _.constant('b');
 * }
 *
 * Foo.prototype.c = _.constant('c');
 *
 * _.functions(new Foo);
 * // => ['a', 'b']
 */
function functions(object) {
  return object == null ? [] : (0, _baseFunctions.default)(object, (0, _keys.default)(object));
}

var _default = functions;
exports.default = _default;
},{"./_baseFunctions.js":"node_modules/lodash-es/_baseFunctions.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/functionsIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFunctions = _interopRequireDefault(require("./_baseFunctions.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of function property names from own and inherited
 * enumerable properties of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to inspect.
 * @returns {Array} Returns the function names.
 * @see _.functions
 * @example
 *
 * function Foo() {
 *   this.a = _.constant('a');
 *   this.b = _.constant('b');
 * }
 *
 * Foo.prototype.c = _.constant('c');
 *
 * _.functionsIn(new Foo);
 * // => ['a', 'b', 'c']
 */
function functionsIn(object) {
  return object == null ? [] : (0, _baseFunctions.default)(object, (0, _keysIn.default)(object));
}

var _default = functionsIn;
exports.default = _default;
},{"./_baseFunctions.js":"node_modules/lodash-es/_baseFunctions.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/groupBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _createAggregator = _interopRequireDefault(require("./_createAggregator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The order of grouped values
 * is determined by the order they occur in `collection`. The corresponding
 * value of each key is an array of elements responsible for generating the
 * key. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': [4.2], '6': [6.1, 6.3] }
 *
 * // The `_.property` iteratee shorthand.
 * _.groupBy(['one', 'two', 'three'], 'length');
 * // => { '3': ['one', 'two'], '5': ['three'] }
 */

var groupBy = (0, _createAggregator.default)(function (result, value, key) {
  if (hasOwnProperty.call(result, key)) {
    result[key].push(value);
  } else {
    (0, _baseAssignValue.default)(result, key, [value]);
  }
});
var _default = groupBy;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./_createAggregator.js":"node_modules/lodash-es/_createAggregator.js"}],"node_modules/lodash-es/_baseGt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.gt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 */
function baseGt(value, other) {
  return value > other;
}

var _default = baseGt;
exports.default = _default;
},{}],"node_modules/lodash-es/_createRelationalOperation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that performs a relational operation on two values.
 *
 * @private
 * @param {Function} operator The function to perform the operation.
 * @returns {Function} Returns the new relational operation function.
 */
function createRelationalOperation(operator) {
  return function (value, other) {
    if (!(typeof value == 'string' && typeof other == 'string')) {
      value = (0, _toNumber.default)(value);
      other = (0, _toNumber.default)(other);
    }

    return operator(value, other);
  };
}

var _default = createRelationalOperation;
exports.default = _default;
},{"./toNumber.js":"node_modules/lodash-es/toNumber.js"}],"node_modules/lodash-es/gt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGt = _interopRequireDefault(require("./_baseGt.js"));

var _createRelationalOperation = _interopRequireDefault(require("./_createRelationalOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is greater than `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than `other`,
 *  else `false`.
 * @see _.lt
 * @example
 *
 * _.gt(3, 1);
 * // => true
 *
 * _.gt(3, 3);
 * // => false
 *
 * _.gt(1, 3);
 * // => false
 */
var gt = (0, _createRelationalOperation.default)(_baseGt.default);
var _default = gt;
exports.default = _default;
},{"./_baseGt.js":"node_modules/lodash-es/_baseGt.js","./_createRelationalOperation.js":"node_modules/lodash-es/_createRelationalOperation.js"}],"node_modules/lodash-es/gte.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRelationalOperation = _interopRequireDefault(require("./_createRelationalOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is greater than or equal to `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is greater than or equal to
 *  `other`, else `false`.
 * @see _.lte
 * @example
 *
 * _.gte(3, 1);
 * // => true
 *
 * _.gte(3, 3);
 * // => true
 *
 * _.gte(1, 3);
 * // => false
 */
var gte = (0, _createRelationalOperation.default)(function (value, other) {
  return value >= other;
});
var _default = gte;
exports.default = _default;
},{"./_createRelationalOperation.js":"node_modules/lodash-es/_createRelationalOperation.js"}],"node_modules/lodash-es/_baseHas.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */

function baseHas(object, key) {
  return object != null && hasOwnProperty.call(object, key);
}

var _default = baseHas;
exports.default = _default;
},{}],"node_modules/lodash-es/has.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseHas = _interopRequireDefault(require("./_baseHas.js"));

var _hasPath = _interopRequireDefault(require("./_hasPath.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has(object, path) {
  return object != null && (0, _hasPath.default)(object, path, _baseHas.default);
}

var _default = has;
exports.default = _default;
},{"./_baseHas.js":"node_modules/lodash-es/_baseHas.js","./_hasPath.js":"node_modules/lodash-es/_hasPath.js"}],"node_modules/lodash-es/_baseInRange.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * The base implementation of `_.inRange` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to check.
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 */

function baseInRange(number, start, end) {
  return number >= nativeMin(start, end) && number < nativeMax(start, end);
}

var _default = baseInRange;
exports.default = _default;
},{}],"node_modules/lodash-es/inRange.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseInRange = _interopRequireDefault(require("./_baseInRange.js"));

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `n` is between `start` and up to, but not including, `end`. If
 * `end` is not specified, it's set to `start` with `start` then set to `0`.
 * If `start` is greater than `end` the params are swapped to support
 * negative ranges.
 *
 * @static
 * @memberOf _
 * @since 3.3.0
 * @category Number
 * @param {number} number The number to check.
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 * @see _.range, _.rangeRight
 * @example
 *
 * _.inRange(3, 2, 4);
 * // => true
 *
 * _.inRange(4, 8);
 * // => true
 *
 * _.inRange(4, 2);
 * // => false
 *
 * _.inRange(2, 2);
 * // => false
 *
 * _.inRange(1.2, 2);
 * // => true
 *
 * _.inRange(5.2, 4);
 * // => false
 *
 * _.inRange(-3, -2, -6);
 * // => true
 */
function inRange(number, start, end) {
  start = (0, _toFinite.default)(start);

  if (end === undefined) {
    end = start;
    start = 0;
  } else {
    end = (0, _toFinite.default)(end);
  }

  number = (0, _toNumber.default)(number);
  return (0, _baseInRange.default)(number, start, end);
}

var _default = inRange;
exports.default = _default;
},{"./_baseInRange.js":"node_modules/lodash-es/_baseInRange.js","./toFinite.js":"node_modules/lodash-es/toFinite.js","./toNumber.js":"node_modules/lodash-es/toNumber.js"}],"node_modules/lodash-es/isString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var stringTag = '[object String]';
/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */

function isString(value) {
  return typeof value == 'string' || !(0, _isArray.default)(value) && (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == stringTag;
}

var _default = isString;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/_baseValues.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.values` and `_.valuesIn` which creates an
 * array of `object` property values corresponding to the property names
 * of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the array of property values.
 */
function baseValues(object, props) {
  return (0, _arrayMap.default)(props, function (key) {
    return object[key];
  });
}

var _default = baseValues;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js"}],"node_modules/lodash-es/values.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseValues = _interopRequireDefault(require("./_baseValues.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of the own enumerable string keyed property values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.values(new Foo);
 * // => [1, 2] (iteration order is not guaranteed)
 *
 * _.values('hi');
 * // => ['h', 'i']
 */
function values(object) {
  return object == null ? [] : (0, _baseValues.default)(object, (0, _keys.default)(object));
}

var _default = values;
exports.default = _default;
},{"./_baseValues.js":"node_modules/lodash-es/_baseValues.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/includes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIndexOf = _interopRequireDefault(require("./_baseIndexOf.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isString = _interopRequireDefault(require("./isString.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _values = _interopRequireDefault(require("./values.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * Checks if `value` is in `collection`. If `collection` is a string, it's
 * checked for a substring of `value`, otherwise
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * is used for equality comparisons. If `fromIndex` is negative, it's used as
 * the offset from the end of `collection`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {boolean} Returns `true` if `value` is found, else `false`.
 * @example
 *
 * _.includes([1, 2, 3], 1);
 * // => true
 *
 * _.includes([1, 2, 3], 1, 2);
 * // => false
 *
 * _.includes({ 'a': 1, 'b': 2 }, 1);
 * // => true
 *
 * _.includes('abcd', 'bc');
 * // => true
 */

function includes(collection, value, fromIndex, guard) {
  collection = (0, _isArrayLike.default)(collection) ? collection : (0, _values.default)(collection);
  fromIndex = fromIndex && !guard ? (0, _toInteger.default)(fromIndex) : 0;
  var length = collection.length;

  if (fromIndex < 0) {
    fromIndex = nativeMax(length + fromIndex, 0);
  }

  return (0, _isString.default)(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && (0, _baseIndexOf.default)(collection, value, fromIndex) > -1;
}

var _default = includes;
exports.default = _default;
},{"./_baseIndexOf.js":"node_modules/lodash-es/_baseIndexOf.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isString.js":"node_modules/lodash-es/isString.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./values.js":"node_modules/lodash-es/values.js"}],"node_modules/lodash-es/indexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIndexOf = _interopRequireDefault(require("./_baseIndexOf.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * Gets the index at which the first occurrence of `value` is found in `array`
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. If `fromIndex` is negative, it's used as the
 * offset from the end of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.indexOf([1, 2, 1, 2], 2);
 * // => 1
 *
 * // Search from the `fromIndex`.
 * _.indexOf([1, 2, 1, 2], 2, 2);
 * // => 3
 */

function indexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return -1;
  }

  var index = fromIndex == null ? 0 : (0, _toInteger.default)(fromIndex);

  if (index < 0) {
    index = nativeMax(length + index, 0);
  }

  return (0, _baseIndexOf.default)(array, value, index);
}

var _default = indexOf;
exports.default = _default;
},{"./_baseIndexOf.js":"node_modules/lodash-es/_baseIndexOf.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/initial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets all but the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.initial([1, 2, 3]);
 * // => [1, 2]
 */
function initial(array) {
  var length = array == null ? 0 : array.length;
  return length ? (0, _baseSlice.default)(array, 0, -1) : [];
}

var _default = initial;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js"}],"node_modules/lodash-es/_baseIntersection.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SetCache = _interopRequireDefault(require("./_SetCache.js"));

var _arrayIncludes = _interopRequireDefault(require("./_arrayIncludes.js"));

var _arrayIncludesWith = _interopRequireDefault(require("./_arrayIncludesWith.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _cacheHas = _interopRequireDefault(require("./_cacheHas.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;
/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */

function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? _arrayIncludesWith.default : _arrayIncludes.default,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];

    if (othIndex && iteratee) {
      array = (0, _arrayMap.default)(array, (0, _baseUnary.default)(iteratee));
    }

    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new _SetCache.default(othIndex && array) : undefined;
  }

  array = arrays[0];
  var index = -1,
      seen = caches[0];

  outer: while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;
    value = comparator || value !== 0 ? value : 0;

    if (!(seen ? (0, _cacheHas.default)(seen, computed) : includes(result, computed, comparator))) {
      othIndex = othLength;

      while (--othIndex) {
        var cache = caches[othIndex];

        if (!(cache ? (0, _cacheHas.default)(cache, computed) : includes(arrays[othIndex], computed, comparator))) {
          continue outer;
        }
      }

      if (seen) {
        seen.push(computed);
      }

      result.push(value);
    }
  }

  return result;
}

var _default = baseIntersection;
exports.default = _default;
},{"./_SetCache.js":"node_modules/lodash-es/_SetCache.js","./_arrayIncludes.js":"node_modules/lodash-es/_arrayIncludes.js","./_arrayIncludesWith.js":"node_modules/lodash-es/_arrayIncludesWith.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_cacheHas.js":"node_modules/lodash-es/_cacheHas.js"}],"node_modules/lodash-es/_castArrayLikeObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return (0, _isArrayLikeObject.default)(value) ? value : [];
}

var _default = castArrayLikeObject;
exports.default = _default;
},{"./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js"}],"node_modules/lodash-es/intersection.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIntersection = _interopRequireDefault(require("./_baseIntersection.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _castArrayLikeObject = _interopRequireDefault(require("./_castArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = (0, _baseRest.default)(function (arrays) {
  var mapped = (0, _arrayMap.default)(arrays, _castArrayLikeObject.default);
  return mapped.length && mapped[0] === arrays[0] ? (0, _baseIntersection.default)(mapped) : [];
});
var _default = intersection;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIntersection.js":"node_modules/lodash-es/_baseIntersection.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_castArrayLikeObject.js":"node_modules/lodash-es/_castArrayLikeObject.js"}],"node_modules/lodash-es/intersectionBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIntersection = _interopRequireDefault(require("./_baseIntersection.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _castArrayLikeObject = _interopRequireDefault(require("./_castArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.intersection` except that it accepts `iteratee`
 * which is invoked for each element of each `arrays` to generate the criterion
 * by which they're compared. The order and references of result values are
 * determined by the first array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [2.1]
 *
 * // The `_.property` iteratee shorthand.
 * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }]
 */
var intersectionBy = (0, _baseRest.default)(function (arrays) {
  var iteratee = (0, _last.default)(arrays),
      mapped = (0, _arrayMap.default)(arrays, _castArrayLikeObject.default);

  if (iteratee === (0, _last.default)(mapped)) {
    iteratee = undefined;
  } else {
    mapped.pop();
  }

  return mapped.length && mapped[0] === arrays[0] ? (0, _baseIntersection.default)(mapped, (0, _baseIteratee.default)(iteratee, 2)) : [];
});
var _default = intersectionBy;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIntersection.js":"node_modules/lodash-es/_baseIntersection.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_castArrayLikeObject.js":"node_modules/lodash-es/_castArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/intersectionWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIntersection = _interopRequireDefault(require("./_baseIntersection.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _castArrayLikeObject = _interopRequireDefault(require("./_castArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.intersection` except that it accepts `comparator`
 * which is invoked to compare elements of `arrays`. The order and references
 * of result values are determined by the first array. The comparator is
 * invoked with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.intersectionWith(objects, others, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }]
 */
var intersectionWith = (0, _baseRest.default)(function (arrays) {
  var comparator = (0, _last.default)(arrays),
      mapped = (0, _arrayMap.default)(arrays, _castArrayLikeObject.default);
  comparator = typeof comparator == 'function' ? comparator : undefined;

  if (comparator) {
    mapped.pop();
  }

  return mapped.length && mapped[0] === arrays[0] ? (0, _baseIntersection.default)(mapped, undefined, comparator) : [];
});
var _default = intersectionWith;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIntersection.js":"node_modules/lodash-es/_baseIntersection.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_castArrayLikeObject.js":"node_modules/lodash-es/_castArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/_baseInverter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.invert` and `_.invertBy` which inverts
 * `object` with values transformed by `iteratee` and set by `setter`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform values.
 * @param {Object} accumulator The initial inverted object.
 * @returns {Function} Returns `accumulator`.
 */
function baseInverter(object, setter, iteratee, accumulator) {
  (0, _baseForOwn.default)(object, function (value, key, object) {
    setter(accumulator, iteratee(value), key, object);
  });
  return accumulator;
}

var _default = baseInverter;
exports.default = _default;
},{"./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js"}],"node_modules/lodash-es/_createInverter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseInverter = _interopRequireDefault(require("./_baseInverter.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function like `_.invertBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} toIteratee The function to resolve iteratees.
 * @returns {Function} Returns the new inverter function.
 */
function createInverter(setter, toIteratee) {
  return function (object, iteratee) {
    return (0, _baseInverter.default)(object, setter, toIteratee(iteratee), {});
  };
}

var _default = createInverter;
exports.default = _default;
},{"./_baseInverter.js":"node_modules/lodash-es/_baseInverter.js"}],"node_modules/lodash-es/invert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constant = _interopRequireDefault(require("./constant.js"));

var _createInverter = _interopRequireDefault(require("./_createInverter.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/**
 * Creates an object composed of the inverted keys and values of `object`.
 * If `object` contains duplicate values, subsequent values overwrite
 * property assignments of previous values.
 *
 * @static
 * @memberOf _
 * @since 0.7.0
 * @category Object
 * @param {Object} object The object to invert.
 * @returns {Object} Returns the new inverted object.
 * @example
 *
 * var object = { 'a': 1, 'b': 2, 'c': 1 };
 *
 * _.invert(object);
 * // => { '1': 'c', '2': 'b' }
 */

var invert = (0, _createInverter.default)(function (result, value, key) {
  if (value != null && typeof value.toString != 'function') {
    value = nativeObjectToString.call(value);
  }

  result[value] = key;
}, (0, _constant.default)(_identity.default));
var _default = invert;
exports.default = _default;
},{"./constant.js":"node_modules/lodash-es/constant.js","./_createInverter.js":"node_modules/lodash-es/_createInverter.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/invertBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _createInverter = _interopRequireDefault(require("./_createInverter.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */

var nativeObjectToString = objectProto.toString;
/**
 * This method is like `_.invert` except that the inverted object is generated
 * from the results of running each element of `object` thru `iteratee`. The
 * corresponding inverted value of each inverted key is an array of keys
 * responsible for generating the inverted value. The iteratee is invoked
 * with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.1.0
 * @category Object
 * @param {Object} object The object to invert.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Object} Returns the new inverted object.
 * @example
 *
 * var object = { 'a': 1, 'b': 2, 'c': 1 };
 *
 * _.invertBy(object);
 * // => { '1': ['a', 'c'], '2': ['b'] }
 *
 * _.invertBy(object, function(value) {
 *   return 'group' + value;
 * });
 * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
 */

var invertBy = (0, _createInverter.default)(function (result, value, key) {
  if (value != null && typeof value.toString != 'function') {
    value = nativeObjectToString.call(value);
  }

  if (hasOwnProperty.call(result, value)) {
    result[value].push(key);
  } else {
    result[value] = [key];
  }
}, _baseIteratee.default);
var _default = invertBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_createInverter.js":"node_modules/lodash-es/_createInverter.js"}],"node_modules/lodash-es/_parent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGet = _interopRequireDefault(require("./_baseGet.js"));

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : (0, _baseGet.default)(object, (0, _baseSlice.default)(path, 0, -1));
}

var _default = parent;
exports.default = _default;
},{"./_baseGet.js":"node_modules/lodash-es/_baseGet.js","./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js"}],"node_modules/lodash-es/_baseInvoke.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _last = _interopRequireDefault(require("./last.js"));

var _parent = _interopRequireDefault(require("./_parent.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.invoke` without support for individual
 * method arguments.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {Array} args The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 */
function baseInvoke(object, path, args) {
  path = (0, _castPath.default)(path, object);
  object = (0, _parent.default)(object, path);
  var func = object == null ? object : object[(0, _toKey.default)((0, _last.default)(path))];
  return func == null ? undefined : (0, _apply.default)(func, object, args);
}

var _default = baseInvoke;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_castPath.js":"node_modules/lodash-es/_castPath.js","./last.js":"node_modules/lodash-es/last.js","./_parent.js":"node_modules/lodash-es/_parent.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/invoke.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseInvoke = _interopRequireDefault(require("./_baseInvoke.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Invokes the method at `path` of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
 *
 * _.invoke(object, 'a[0].b.c.slice', 1, 3);
 * // => [2, 3]
 */
var invoke = (0, _baseRest.default)(_baseInvoke.default);
var _default = invoke;
exports.default = _default;
},{"./_baseInvoke.js":"node_modules/lodash-es/_baseInvoke.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js"}],"node_modules/lodash-es/invokeMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

var _baseInvoke = _interopRequireDefault(require("./_baseInvoke.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Invokes the method at `path` of each element in `collection`, returning
 * an array of the results of each invoked method. Any additional arguments
 * are provided to each invoked method. If `path` is a function, it's invoked
 * for, and `this` bound to, each element in `collection`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array|Function|string} path The path of the method to invoke or
 *  the function invoked per iteration.
 * @param {...*} [args] The arguments to invoke each method with.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
 * // => [[1, 5, 7], [1, 2, 3]]
 *
 * _.invokeMap([123, 456], String.prototype.split, '');
 * // => [['1', '2', '3'], ['4', '5', '6']]
 */
var invokeMap = (0, _baseRest.default)(function (collection, path, args) {
  var index = -1,
      isFunc = typeof path == 'function',
      result = (0, _isArrayLike.default)(collection) ? Array(collection.length) : [];
  (0, _baseEach.default)(collection, function (value) {
    result[++index] = isFunc ? (0, _apply.default)(path, value, args) : (0, _baseInvoke.default)(value, path, args);
  });
  return result;
});
var _default = invokeMap;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_baseEach.js":"node_modules/lodash-es/_baseEach.js","./_baseInvoke.js":"node_modules/lodash-es/_baseInvoke.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js"}],"node_modules/lodash-es/_baseIsArrayBuffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var arrayBufferTag = '[object ArrayBuffer]';
/**
 * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
 */

function baseIsArrayBuffer(value) {
  return (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == arrayBufferTag;
}

var _default = baseIsArrayBuffer;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isArrayBuffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsArrayBuffer = _interopRequireDefault(require("./_baseIsArrayBuffer.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _nodeUtil = _interopRequireDefault(require("./_nodeUtil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Node.js helper references. */
var nodeIsArrayBuffer = _nodeUtil.default && _nodeUtil.default.isArrayBuffer;
/**
 * Checks if `value` is classified as an `ArrayBuffer` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
 * @example
 *
 * _.isArrayBuffer(new ArrayBuffer(2));
 * // => true
 *
 * _.isArrayBuffer(new Array(2));
 * // => false
 */

var isArrayBuffer = nodeIsArrayBuffer ? (0, _baseUnary.default)(nodeIsArrayBuffer) : _baseIsArrayBuffer.default;
var _default = isArrayBuffer;
exports.default = _default;
},{"./_baseIsArrayBuffer.js":"node_modules/lodash-es/_baseIsArrayBuffer.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_nodeUtil.js":"node_modules/lodash-es/_nodeUtil.js"}],"node_modules/lodash-es/isBoolean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var boolTag = '[object Boolean]';
/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */

function isBoolean(value) {
  return value === true || value === false || (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == boolTag;
}

var _default = isBoolean;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/_baseIsDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var dateTag = '[object Date]';
/**
 * The base implementation of `_.isDate` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 */

function baseIsDate(value) {
  return (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == dateTag;
}

var _default = baseIsDate;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isDate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsDate = _interopRequireDefault(require("./_baseIsDate.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _nodeUtil = _interopRequireDefault(require("./_nodeUtil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Node.js helper references. */
var nodeIsDate = _nodeUtil.default && _nodeUtil.default.isDate;
/**
 * Checks if `value` is classified as a `Date` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
 * @example
 *
 * _.isDate(new Date);
 * // => true
 *
 * _.isDate('Mon April 23 2012');
 * // => false
 */

var isDate = nodeIsDate ? (0, _baseUnary.default)(nodeIsDate) : _baseIsDate.default;
var _default = isDate;
exports.default = _default;
},{"./_baseIsDate.js":"node_modules/lodash-es/_baseIsDate.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_nodeUtil.js":"node_modules/lodash-es/_nodeUtil.js"}],"node_modules/lodash-es/isElement.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is likely a DOM element.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
 * @example
 *
 * _.isElement(document.body);
 * // => true
 *
 * _.isElement('<body>');
 * // => false
 */
function isElement(value) {
  return (0, _isObjectLike.default)(value) && value.nodeType === 1 && !(0, _isPlainObject.default)(value);
}

var _default = isElement;
exports.default = _default;
},{"./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js","./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js"}],"node_modules/lodash-es/isEmpty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseKeys = _interopRequireDefault(require("./_baseKeys.js"));

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isPrototype = _interopRequireDefault(require("./_isPrototype.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */

function isEmpty(value) {
  if (value == null) {
    return true;
  }

  if ((0, _isArrayLike.default)(value) && ((0, _isArray.default)(value) || typeof value == 'string' || typeof value.splice == 'function' || (0, _isBuffer.default)(value) || (0, _isTypedArray.default)(value) || (0, _isArguments.default)(value))) {
    return !value.length;
  }

  var tag = (0, _getTag.default)(value);

  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }

  if ((0, _isPrototype.default)(value)) {
    return !(0, _baseKeys.default)(value).length;
  }

  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }

  return true;
}

var _default = isEmpty;
exports.default = _default;
},{"./_baseKeys.js":"node_modules/lodash-es/_baseKeys.js","./_getTag.js":"node_modules/lodash-es/_getTag.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./_isPrototype.js":"node_modules/lodash-es/_isPrototype.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js"}],"node_modules/lodash-es/isEqual.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsEqual = _interopRequireDefault(require("./_baseIsEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return (0, _baseIsEqual.default)(value, other);
}

var _default = isEqual;
exports.default = _default;
},{"./_baseIsEqual.js":"node_modules/lodash-es/_baseIsEqual.js"}],"node_modules/lodash-es/isEqualWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsEqual = _interopRequireDefault(require("./_baseIsEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.isEqual` except that it accepts `customizer` which
 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
 * are handled by the method instead. The `customizer` is invoked with up to
 * six arguments: (objValue, othValue [, index|key, object, other, stack]).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, othValue) {
 *   if (isGreeting(objValue) && isGreeting(othValue)) {
 *     return true;
 *   }
 * }
 *
 * var array = ['hello', 'goodbye'];
 * var other = ['hi', 'goodbye'];
 *
 * _.isEqualWith(array, other, customizer);
 * // => true
 */
function isEqualWith(value, other, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  var result = customizer ? customizer(value, other) : undefined;
  return result === undefined ? (0, _baseIsEqual.default)(value, other, undefined, customizer) : !!result;
}

var _default = isEqualWith;
exports.default = _default;
},{"./_baseIsEqual.js":"node_modules/lodash-es/_baseIsEqual.js"}],"node_modules/lodash-es/isFinite.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsFinite = _root.default.isFinite;
/**
 * Checks if `value` is a finite primitive number.
 *
 * **Note:** This method is based on
 * [`Number.isFinite`](https://mdn.io/Number/isFinite).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
 * @example
 *
 * _.isFinite(3);
 * // => true
 *
 * _.isFinite(Number.MIN_VALUE);
 * // => true
 *
 * _.isFinite(Infinity);
 * // => false
 *
 * _.isFinite('3');
 * // => false
 */

function isFinite(value) {
  return typeof value == 'number' && nativeIsFinite(value);
}

var _default = isFinite;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js"}],"node_modules/lodash-es/isInteger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is an integer.
 *
 * **Note:** This method is based on
 * [`Number.isInteger`](https://mdn.io/Number/isInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
 * @example
 *
 * _.isInteger(3);
 * // => true
 *
 * _.isInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isInteger(Infinity);
 * // => false
 *
 * _.isInteger('3');
 * // => false
 */
function isInteger(value) {
  return typeof value == 'number' && value == (0, _toInteger.default)(value);
}

var _default = isInteger;
exports.default = _default;
},{"./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/isMatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsMatch = _interopRequireDefault(require("./_baseIsMatch.js"));

var _getMatchData = _interopRequireDefault(require("./_getMatchData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Performs a partial deep comparison between `object` and `source` to
 * determine if `object` contains equivalent property values.
 *
 * **Note:** This method is equivalent to `_.matches` when `source` is
 * partially applied.
 *
 * Partial comparisons will match empty array and empty object `source`
 * values against any array or object value, respectively. See `_.isEqual`
 * for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 *
 * _.isMatch(object, { 'b': 2 });
 * // => true
 *
 * _.isMatch(object, { 'b': 1 });
 * // => false
 */
function isMatch(object, source) {
  return object === source || (0, _baseIsMatch.default)(object, source, (0, _getMatchData.default)(source));
}

var _default = isMatch;
exports.default = _default;
},{"./_baseIsMatch.js":"node_modules/lodash-es/_baseIsMatch.js","./_getMatchData.js":"node_modules/lodash-es/_getMatchData.js"}],"node_modules/lodash-es/isMatchWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsMatch = _interopRequireDefault(require("./_baseIsMatch.js"));

var _getMatchData = _interopRequireDefault(require("./_getMatchData.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.isMatch` except that it accepts `customizer` which
 * is invoked to compare values. If `customizer` returns `undefined`, comparisons
 * are handled by the method instead. The `customizer` is invoked with five
 * arguments: (objValue, srcValue, index|key, object, source).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 * @example
 *
 * function isGreeting(value) {
 *   return /^h(?:i|ello)$/.test(value);
 * }
 *
 * function customizer(objValue, srcValue) {
 *   if (isGreeting(objValue) && isGreeting(srcValue)) {
 *     return true;
 *   }
 * }
 *
 * var object = { 'greeting': 'hello' };
 * var source = { 'greeting': 'hi' };
 *
 * _.isMatchWith(object, source, customizer);
 * // => true
 */
function isMatchWith(object, source, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return (0, _baseIsMatch.default)(object, source, (0, _getMatchData.default)(source), customizer);
}

var _default = isMatchWith;
exports.default = _default;
},{"./_baseIsMatch.js":"node_modules/lodash-es/_baseIsMatch.js","./_getMatchData.js":"node_modules/lodash-es/_getMatchData.js"}],"node_modules/lodash-es/isNumber.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var numberTag = '[object Number]';
/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */

function isNumber(value) {
  return typeof value == 'number' || (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == numberTag;
}

var _default = isNumber;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isNaN.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isNumber = _interopRequireDefault(require("./isNumber.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is `NaN`.
 *
 * **Note:** This method is based on
 * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
 * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
 * `undefined` and other non-number values.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 * @example
 *
 * _.isNaN(NaN);
 * // => true
 *
 * _.isNaN(new Number(NaN));
 * // => true
 *
 * isNaN(undefined);
 * // => true
 *
 * _.isNaN(undefined);
 * // => false
 */
function isNaN(value) {
  // An `NaN` primitive is the only value that is not equal to itself.
  // Perform the `toStringTag` check first to avoid errors with some
  // ActiveX objects in IE.
  return (0, _isNumber.default)(value) && value != +value;
}

var _default = isNaN;
exports.default = _default;
},{"./isNumber.js":"node_modules/lodash-es/isNumber.js"}],"node_modules/lodash-es/_isMaskable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _coreJsData = _interopRequireDefault(require("./_coreJsData.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _stubFalse = _interopRequireDefault(require("./stubFalse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `func` is capable of being masked.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
 */
var isMaskable = _coreJsData.default ? _isFunction.default : _stubFalse.default;
var _default = isMaskable;
exports.default = _default;
},{"./_coreJsData.js":"node_modules/lodash-es/_coreJsData.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./stubFalse.js":"node_modules/lodash-es/stubFalse.js"}],"node_modules/lodash-es/isNative.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsNative = _interopRequireDefault(require("./_baseIsNative.js"));

var _isMaskable = _interopRequireDefault(require("./_isMaskable.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.';
/**
 * Checks if `value` is a pristine native function.
 *
 * **Note:** This method can't reliably detect native functions in the presence
 * of the core-js package because core-js circumvents this kind of detection.
 * Despite multiple requests, the core-js maintainer has made it clear: any
 * attempt to fix the detection will be obstructed. As a result, we're left
 * with little choice but to throw an error. Unfortunately, this also affects
 * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
 * which rely on core-js.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */

function isNative(value) {
  if ((0, _isMaskable.default)(value)) {
    throw new Error(CORE_ERROR_TEXT);
  }

  return (0, _baseIsNative.default)(value);
}

var _default = isNative;
exports.default = _default;
},{"./_baseIsNative.js":"node_modules/lodash-es/_baseIsNative.js","./_isMaskable.js":"node_modules/lodash-es/_isMaskable.js"}],"node_modules/lodash-es/isNil.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

var _default = isNil;
exports.default = _default;
},{}],"node_modules/lodash-es/isNull.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is `null`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
 * @example
 *
 * _.isNull(null);
 * // => true
 *
 * _.isNull(void 0);
 * // => false
 */
function isNull(value) {
  return value === null;
}

var _default = isNull;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseIsRegExp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var regexpTag = '[object RegExp]';
/**
 * The base implementation of `_.isRegExp` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 */

function baseIsRegExp(value) {
  return (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == regexpTag;
}

var _default = baseIsRegExp;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isRegExp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIsRegExp = _interopRequireDefault(require("./_baseIsRegExp.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _nodeUtil = _interopRequireDefault(require("./_nodeUtil.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Node.js helper references. */
var nodeIsRegExp = _nodeUtil.default && _nodeUtil.default.isRegExp;
/**
 * Checks if `value` is classified as a `RegExp` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 * @example
 *
 * _.isRegExp(/abc/);
 * // => true
 *
 * _.isRegExp('/abc/');
 * // => false
 */

var isRegExp = nodeIsRegExp ? (0, _baseUnary.default)(nodeIsRegExp) : _baseIsRegExp.default;
var _default = isRegExp;
exports.default = _default;
},{"./_baseIsRegExp.js":"node_modules/lodash-es/_baseIsRegExp.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_nodeUtil.js":"node_modules/lodash-es/_nodeUtil.js"}],"node_modules/lodash-es/isSafeInteger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isInteger = _interopRequireDefault(require("./isInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
 * double precision number which isn't the result of a rounded unsafe integer.
 *
 * **Note:** This method is based on
 * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
 * @example
 *
 * _.isSafeInteger(3);
 * // => true
 *
 * _.isSafeInteger(Number.MIN_VALUE);
 * // => false
 *
 * _.isSafeInteger(Infinity);
 * // => false
 *
 * _.isSafeInteger('3');
 * // => false
 */

function isSafeInteger(value) {
  return (0, _isInteger.default)(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
}

var _default = isSafeInteger;
exports.default = _default;
},{"./isInteger.js":"node_modules/lodash-es/isInteger.js"}],"node_modules/lodash-es/isUndefined.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

var _default = isUndefined;
exports.default = _default;
},{}],"node_modules/lodash-es/isWeakMap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var weakMapTag = '[object WeakMap]';
/**
 * Checks if `value` is classified as a `WeakMap` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
 * @example
 *
 * _.isWeakMap(new WeakMap);
 * // => true
 *
 * _.isWeakMap(new Map);
 * // => false
 */

function isWeakMap(value) {
  return (0, _isObjectLike.default)(value) && (0, _getTag.default)(value) == weakMapTag;
}

var _default = isWeakMap;
exports.default = _default;
},{"./_getTag.js":"node_modules/lodash-es/_getTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/isWeakSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGetTag = _interopRequireDefault(require("./_baseGetTag.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var weakSetTag = '[object WeakSet]';
/**
 * Checks if `value` is classified as a `WeakSet` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
 * @example
 *
 * _.isWeakSet(new WeakSet);
 * // => true
 *
 * _.isWeakSet(new Set);
 * // => false
 */

function isWeakSet(value) {
  return (0, _isObjectLike.default)(value) && (0, _baseGetTag.default)(value) == weakSetTag;
}

var _default = isWeakSet;
exports.default = _default;
},{"./_baseGetTag.js":"node_modules/lodash-es/_baseGetTag.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js"}],"node_modules/lodash-es/iteratee.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;
/**
 * Creates a function that invokes `func` with the arguments of the created
 * function. If `func` is a property name, the created function returns the
 * property value for a given element. If `func` is an array or object, the
 * created function returns `true` for elements that contain the equivalent
 * source properties, otherwise it returns `false`.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Util
 * @param {*} [func=_.identity] The value to convert to a callback.
 * @returns {Function} Returns the callback.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, _.iteratee(['user', 'fred']));
 * // => [{ 'user': 'fred', 'age': 40 }]
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, _.iteratee('user'));
 * // => ['barney', 'fred']
 *
 * // Create custom iteratee shorthands.
 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
 *     return func.test(string);
 *   };
 * });
 *
 * _.filter(['abc', 'def'], /ef/);
 * // => ['def']
 */

function iteratee(func) {
  return (0, _baseIteratee.default)(typeof func == 'function' ? func : (0, _baseClone.default)(func, CLONE_DEEP_FLAG));
}

var _default = iteratee;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js"}],"node_modules/lodash-es/join.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var arrayProto = Array.prototype;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeJoin = arrayProto.join;
/**
 * Converts all elements in `array` into a string separated by `separator`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to convert.
 * @param {string} [separator=','] The element separator.
 * @returns {string} Returns the joined string.
 * @example
 *
 * _.join(['a', 'b', 'c'], '~');
 * // => 'a~b~c'
 */

function join(array, separator) {
  return array == null ? '' : nativeJoin.call(array, separator);
}

var _default = join;
exports.default = _default;
},{}],"node_modules/lodash-es/kebabCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCompounder = _interopRequireDefault(require("./_createCompounder.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string` to
 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the kebab cased string.
 * @example
 *
 * _.kebabCase('Foo Bar');
 * // => 'foo-bar'
 *
 * _.kebabCase('fooBar');
 * // => 'foo-bar'
 *
 * _.kebabCase('__FOO_BAR__');
 * // => 'foo-bar'
 */
var kebabCase = (0, _createCompounder.default)(function (result, word, index) {
  return result + (index ? '-' : '') + word.toLowerCase();
});
var _default = kebabCase;
exports.default = _default;
},{"./_createCompounder.js":"node_modules/lodash-es/_createCompounder.js"}],"node_modules/lodash-es/keyBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _createAggregator = _interopRequireDefault(require("./_createAggregator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the last element responsible for generating the key. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * var array = [
 *   { 'dir': 'left', 'code': 97 },
 *   { 'dir': 'right', 'code': 100 }
 * ];
 *
 * _.keyBy(array, function(o) {
 *   return String.fromCharCode(o.code);
 * });
 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
 *
 * _.keyBy(array, 'dir');
 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
 */
var keyBy = (0, _createAggregator.default)(function (result, value, key) {
  (0, _baseAssignValue.default)(result, key, value);
});
var _default = keyBy;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./_createAggregator.js":"node_modules/lodash-es/_createAggregator.js"}],"node_modules/lodash-es/_strictLastIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.lastIndexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictLastIndexOf(array, value, fromIndex) {
  var index = fromIndex + 1;

  while (index--) {
    if (array[index] === value) {
      return index;
    }
  }

  return index;
}

var _default = strictLastIndexOf;
exports.default = _default;
},{}],"node_modules/lodash-es/lastIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFindIndex = _interopRequireDefault(require("./_baseFindIndex.js"));

var _baseIsNaN = _interopRequireDefault(require("./_baseIsNaN.js"));

var _strictLastIndexOf = _interopRequireDefault(require("./_strictLastIndexOf.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * This method is like `_.indexOf` except that it iterates over elements of
 * `array` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.lastIndexOf([1, 2, 1, 2], 2);
 * // => 3
 *
 * // Search from the `fromIndex`.
 * _.lastIndexOf([1, 2, 1, 2], 2, 2);
 * // => 1
 */

function lastIndexOf(array, value, fromIndex) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return -1;
  }

  var index = length;

  if (fromIndex !== undefined) {
    index = (0, _toInteger.default)(fromIndex);
    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
  }

  return value === value ? (0, _strictLastIndexOf.default)(array, value, index) : (0, _baseFindIndex.default)(array, _baseIsNaN.default, index, true);
}

var _default = lastIndexOf;
exports.default = _default;
},{"./_baseFindIndex.js":"node_modules/lodash-es/_baseFindIndex.js","./_baseIsNaN.js":"node_modules/lodash-es/_baseIsNaN.js","./_strictLastIndexOf.js":"node_modules/lodash-es/_strictLastIndexOf.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/lowerCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCompounder = _interopRequireDefault(require("./_createCompounder.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string`, as space separated words, to lower case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the lower cased string.
 * @example
 *
 * _.lowerCase('--Foo-Bar--');
 * // => 'foo bar'
 *
 * _.lowerCase('fooBar');
 * // => 'foo bar'
 *
 * _.lowerCase('__FOO_BAR__');
 * // => 'foo bar'
 */
var lowerCase = (0, _createCompounder.default)(function (result, word, index) {
  return result + (index ? ' ' : '') + word.toLowerCase();
});
var _default = lowerCase;
exports.default = _default;
},{"./_createCompounder.js":"node_modules/lodash-es/_createCompounder.js"}],"node_modules/lodash-es/lowerFirst.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCaseFirst = _interopRequireDefault(require("./_createCaseFirst.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts the first character of `string` to lower case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.lowerFirst('Fred');
 * // => 'fred'
 *
 * _.lowerFirst('FRED');
 * // => 'fRED'
 */
var lowerFirst = (0, _createCaseFirst.default)('toLowerCase');
var _default = lowerFirst;
exports.default = _default;
},{"./_createCaseFirst.js":"node_modules/lodash-es/_createCaseFirst.js"}],"node_modules/lodash-es/_baseLt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */
function baseLt(value, other) {
  return value < other;
}

var _default = baseLt;
exports.default = _default;
},{}],"node_modules/lodash-es/lt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseLt = _interopRequireDefault(require("./_baseLt.js"));

var _createRelationalOperation = _interopRequireDefault(require("./_createRelationalOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is less than `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 * @see _.gt
 * @example
 *
 * _.lt(1, 3);
 * // => true
 *
 * _.lt(3, 3);
 * // => false
 *
 * _.lt(3, 1);
 * // => false
 */
var lt = (0, _createRelationalOperation.default)(_baseLt.default);
var _default = lt;
exports.default = _default;
},{"./_baseLt.js":"node_modules/lodash-es/_baseLt.js","./_createRelationalOperation.js":"node_modules/lodash-es/_createRelationalOperation.js"}],"node_modules/lodash-es/lte.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRelationalOperation = _interopRequireDefault(require("./_createRelationalOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `value` is less than or equal to `other`.
 *
 * @static
 * @memberOf _
 * @since 3.9.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than or equal to
 *  `other`, else `false`.
 * @see _.gte
 * @example
 *
 * _.lte(1, 3);
 * // => true
 *
 * _.lte(3, 3);
 * // => true
 *
 * _.lte(3, 1);
 * // => false
 */
var lte = (0, _createRelationalOperation.default)(function (value, other) {
  return value <= other;
});
var _default = lte;
exports.default = _default;
},{"./_createRelationalOperation.js":"node_modules/lodash-es/_createRelationalOperation.js"}],"node_modules/lodash-es/mapKeys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The opposite of `_.mapValues`; this method creates an object with the
 * same values as `object` and keys generated by running each own enumerable
 * string keyed property of `object` thru `iteratee`. The iteratee is invoked
 * with three arguments: (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapValues
 * @example
 *
 * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
 *   return key + value;
 * });
 * // => { 'a1': 1, 'b2': 2 }
 */
function mapKeys(object, iteratee) {
  var result = {};
  iteratee = (0, _baseIteratee.default)(iteratee, 3);
  (0, _baseForOwn.default)(object, function (value, key, object) {
    (0, _baseAssignValue.default)(result, iteratee(value, key, object), value);
  });
  return result;
}

var _default = mapKeys;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js"}],"node_modules/lodash-es/mapValues.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseAssignValue = _interopRequireDefault(require("./_baseAssignValue.js"));

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = (0, _baseIteratee.default)(iteratee, 3);
  (0, _baseForOwn.default)(object, function (value, key, object) {
    (0, _baseAssignValue.default)(result, key, iteratee(value, key, object));
  });
  return result;
}

var _default = mapValues;
exports.default = _default;
},{"./_baseAssignValue.js":"node_modules/lodash-es/_baseAssignValue.js","./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js"}],"node_modules/lodash-es/matches.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

var _baseMatches = _interopRequireDefault(require("./_baseMatches.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;
/**
 * Creates a function that performs a partial deep comparison between a given
 * object and `source`, returning `true` if the given object has equivalent
 * property values, else `false`.
 *
 * **Note:** The created function is equivalent to `_.isMatch` with `source`
 * partially applied.
 *
 * Partial comparisons will match empty array and empty object `source`
 * values against any array or object value, respectively. See `_.isEqual`
 * for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 1, 'b': 2, 'c': 3 },
 *   { 'a': 4, 'b': 5, 'c': 6 }
 * ];
 *
 * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
 * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
 */

function matches(source) {
  return (0, _baseMatches.default)((0, _baseClone.default)(source, CLONE_DEEP_FLAG));
}

var _default = matches;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js","./_baseMatches.js":"node_modules/lodash-es/_baseMatches.js"}],"node_modules/lodash-es/matchesProperty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

var _baseMatchesProperty = _interopRequireDefault(require("./_baseMatchesProperty.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;
/**
 * Creates a function that performs a partial deep comparison between the
 * value at `path` of a given object to `srcValue`, returning `true` if the
 * object value is equivalent, else `false`.
 *
 * **Note:** Partial comparisons will match empty array and empty object
 * `srcValue` values against any array or object value, respectively. See
 * `_.isEqual` for a list of supported value comparisons.
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 * @example
 *
 * var objects = [
 *   { 'a': 1, 'b': 2, 'c': 3 },
 *   { 'a': 4, 'b': 5, 'c': 6 }
 * ];
 *
 * _.find(objects, _.matchesProperty('a', 4));
 * // => { 'a': 4, 'b': 5, 'c': 6 }
 */

function matchesProperty(path, srcValue) {
  return (0, _baseMatchesProperty.default)(path, (0, _baseClone.default)(srcValue, CLONE_DEEP_FLAG));
}

var _default = matchesProperty;
exports.default = _default;
},{"./_baseClone.js":"node_modules/lodash-es/_baseClone.js","./_baseMatchesProperty.js":"node_modules/lodash-es/_baseMatchesProperty.js"}],"node_modules/lodash-es/_baseExtremum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined ? current === current && !(0, _isSymbol.default)(current) : comparator(current, computed))) {
      var computed = current,
          result = value;
    }
  }

  return result;
}

var _default = baseExtremum;
exports.default = _default;
},{"./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseExtremum = _interopRequireDefault(require("./_baseExtremum.js"));

var _baseGt = _interopRequireDefault(require("./_baseGt.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes the maximum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * _.max([4, 2, 8, 6]);
 * // => 8
 *
 * _.max([]);
 * // => undefined
 */
function max(array) {
  return array && array.length ? (0, _baseExtremum.default)(array, _identity.default, _baseGt.default) : undefined;
}

var _default = max;
exports.default = _default;
},{"./_baseExtremum.js":"node_modules/lodash-es/_baseExtremum.js","./_baseGt.js":"node_modules/lodash-es/_baseGt.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/maxBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseExtremum = _interopRequireDefault(require("./_baseExtremum.js"));

var _baseGt = _interopRequireDefault(require("./_baseGt.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.max` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the maximum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.maxBy(objects, function(o) { return o.n; });
 * // => { 'n': 2 }
 *
 * // The `_.property` iteratee shorthand.
 * _.maxBy(objects, 'n');
 * // => { 'n': 2 }
 */
function maxBy(array, iteratee) {
  return array && array.length ? (0, _baseExtremum.default)(array, (0, _baseIteratee.default)(iteratee, 2), _baseGt.default) : undefined;
}

var _default = maxBy;
exports.default = _default;
},{"./_baseExtremum.js":"node_modules/lodash-es/_baseExtremum.js","./_baseGt.js":"node_modules/lodash-es/_baseGt.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js"}],"node_modules/lodash-es/_baseSum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.sum` and `_.sumBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the sum.
 */
function baseSum(array, iteratee) {
  var result,
      index = -1,
      length = array.length;

  while (++index < length) {
    var current = iteratee(array[index]);

    if (current !== undefined) {
      result = result === undefined ? current : result + current;
    }
  }

  return result;
}

var _default = baseSum;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseMean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSum = _interopRequireDefault(require("./_baseSum.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;
/**
 * The base implementation of `_.mean` and `_.meanBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the mean.
 */

function baseMean(array, iteratee) {
  var length = array == null ? 0 : array.length;
  return length ? (0, _baseSum.default)(array, iteratee) / length : NAN;
}

var _default = baseMean;
exports.default = _default;
},{"./_baseSum.js":"node_modules/lodash-es/_baseSum.js"}],"node_modules/lodash-es/mean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseMean = _interopRequireDefault(require("./_baseMean.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes the mean of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the mean.
 * @example
 *
 * _.mean([4, 2, 8, 6]);
 * // => 5
 */
function mean(array) {
  return (0, _baseMean.default)(array, _identity.default);
}

var _default = mean;
exports.default = _default;
},{"./_baseMean.js":"node_modules/lodash-es/_baseMean.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/meanBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseMean = _interopRequireDefault(require("./_baseMean.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.mean` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be averaged.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the mean.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.meanBy(objects, function(o) { return o.n; });
 * // => 5
 *
 * // The `_.property` iteratee shorthand.
 * _.meanBy(objects, 'n');
 * // => 5
 */
function meanBy(array, iteratee) {
  return (0, _baseMean.default)(array, (0, _baseIteratee.default)(iteratee, 2));
}

var _default = meanBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseMean.js":"node_modules/lodash-es/_baseMean.js"}],"node_modules/lodash-es/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseMerge = _interopRequireDefault(require("./_baseMerge.js"));

var _createAssigner = _interopRequireDefault(require("./_createAssigner.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = (0, _createAssigner.default)(function (object, source, srcIndex) {
  (0, _baseMerge.default)(object, source, srcIndex);
});
var _default = merge;
exports.default = _default;
},{"./_baseMerge.js":"node_modules/lodash-es/_baseMerge.js","./_createAssigner.js":"node_modules/lodash-es/_createAssigner.js"}],"node_modules/lodash-es/method.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseInvoke = _interopRequireDefault(require("./_baseInvoke.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that invokes the method at `path` of a given object.
 * Any additional arguments are provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': _.constant(2) } },
 *   { 'a': { 'b': _.constant(1) } }
 * ];
 *
 * _.map(objects, _.method('a.b'));
 * // => [2, 1]
 *
 * _.map(objects, _.method(['a', 'b']));
 * // => [2, 1]
 */
var method = (0, _baseRest.default)(function (path, args) {
  return function (object) {
    return (0, _baseInvoke.default)(object, path, args);
  };
});
var _default = method;
exports.default = _default;
},{"./_baseInvoke.js":"node_modules/lodash-es/_baseInvoke.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js"}],"node_modules/lodash-es/methodOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseInvoke = _interopRequireDefault(require("./_baseInvoke.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The opposite of `_.method`; this method creates a function that invokes
 * the method at a given path of `object`. Any additional arguments are
 * provided to the invoked method.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Util
 * @param {Object} object The object to query.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {Function} Returns the new invoker function.
 * @example
 *
 * var array = _.times(3, _.constant),
 *     object = { 'a': array, 'b': array, 'c': array };
 *
 * _.map(['a[2]', 'c[0]'], _.methodOf(object));
 * // => [2, 0]
 *
 * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
 * // => [2, 0]
 */
var methodOf = (0, _baseRest.default)(function (object, args) {
  return function (path) {
    return (0, _baseInvoke.default)(object, path, args);
  };
});
var _default = methodOf;
exports.default = _default;
},{"./_baseInvoke.js":"node_modules/lodash-es/_baseInvoke.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js"}],"node_modules/lodash-es/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseExtremum = _interopRequireDefault(require("./_baseExtremum.js"));

var _baseLt = _interopRequireDefault(require("./_baseLt.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */
function min(array) {
  return array && array.length ? (0, _baseExtremum.default)(array, _identity.default, _baseLt.default) : undefined;
}

var _default = min;
exports.default = _default;
},{"./_baseExtremum.js":"node_modules/lodash-es/_baseExtremum.js","./_baseLt.js":"node_modules/lodash-es/_baseLt.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/minBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseExtremum = _interopRequireDefault(require("./_baseExtremum.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseLt = _interopRequireDefault(require("./_baseLt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.min` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * the value is ranked. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * var objects = [{ 'n': 1 }, { 'n': 2 }];
 *
 * _.minBy(objects, function(o) { return o.n; });
 * // => { 'n': 1 }
 *
 * // The `_.property` iteratee shorthand.
 * _.minBy(objects, 'n');
 * // => { 'n': 1 }
 */
function minBy(array, iteratee) {
  return array && array.length ? (0, _baseExtremum.default)(array, (0, _baseIteratee.default)(iteratee, 2), _baseLt.default) : undefined;
}

var _default = minBy;
exports.default = _default;
},{"./_baseExtremum.js":"node_modules/lodash-es/_baseExtremum.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseLt.js":"node_modules/lodash-es/_baseLt.js"}],"node_modules/lodash-es/mixin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _baseFunctions = _interopRequireDefault(require("./_baseFunctions.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Adds all own enumerable string keyed function properties of a source
 * object to the destination object. If `object` is a function, then methods
 * are added to its prototype as well.
 *
 * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
 * avoid conflicts caused by modifying the original.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {Function|Object} [object=lodash] The destination object.
 * @param {Object} source The object of functions to add.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
 * @returns {Function|Object} Returns `object`.
 * @example
 *
 * function vowels(string) {
 *   return _.filter(string, function(v) {
 *     return /[aeiou]/i.test(v);
 *   });
 * }
 *
 * _.mixin({ 'vowels': vowels });
 * _.vowels('fred');
 * // => ['e']
 *
 * _('fred').vowels().value();
 * // => ['e']
 *
 * _.mixin({ 'vowels': vowels }, { 'chain': false });
 * _('fred').vowels();
 * // => ['e']
 */
function mixin(object, source, options) {
  var props = (0, _keys.default)(source),
      methodNames = (0, _baseFunctions.default)(source, props);
  var chain = !((0, _isObject.default)(options) && 'chain' in options) || !!options.chain,
      isFunc = (0, _isFunction.default)(object);
  (0, _arrayEach.default)(methodNames, function (methodName) {
    var func = source[methodName];
    object[methodName] = func;

    if (isFunc) {
      object.prototype[methodName] = function () {
        var chainAll = this.__chain__;

        if (chain || chainAll) {
          var result = object(this.__wrapped__),
              actions = result.__actions__ = (0, _copyArray.default)(this.__actions__);
          actions.push({
            'func': func,
            'args': arguments,
            'thisArg': object
          });
          result.__chain__ = chainAll;
          return result;
        }

        return func.apply(object, (0, _arrayPush.default)([this.value()], arguments));
      };
    }
  });
  return object;
}

var _default = mixin;
exports.default = _default;
},{"./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_baseFunctions.js":"node_modules/lodash-es/_baseFunctions.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./isObject.js":"node_modules/lodash-es/isObject.js","./keys.js":"node_modules/lodash-es/keys.js"}],"node_modules/lodash-es/multiply.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createMathOperation = _interopRequireDefault(require("./_createMathOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Multiply two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Math
 * @param {number} multiplier The first number in a multiplication.
 * @param {number} multiplicand The second number in a multiplication.
 * @returns {number} Returns the product.
 * @example
 *
 * _.multiply(6, 4);
 * // => 24
 */
var multiply = (0, _createMathOperation.default)(function (multiplier, multiplicand) {
  return multiplier * multiplicand;
}, 1);
var _default = multiply;
exports.default = _default;
},{"./_createMathOperation.js":"node_modules/lodash-es/_createMathOperation.js"}],"node_modules/lodash-es/negate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that negates the result of the predicate `func`. The
 * `func` predicate is invoked with the `this` binding and arguments of the
 * created function.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} predicate The predicate to negate.
 * @returns {Function} Returns the new negated function.
 * @example
 *
 * function isEven(n) {
 *   return n % 2 == 0;
 * }
 *
 * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
 * // => [1, 3, 5]
 */

function negate(predicate) {
  if (typeof predicate != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  return function () {
    var args = arguments;

    switch (args.length) {
      case 0:
        return !predicate.call(this);

      case 1:
        return !predicate.call(this, args[0]);

      case 2:
        return !predicate.call(this, args[0], args[1]);

      case 3:
        return !predicate.call(this, args[0], args[1], args[2]);
    }

    return !predicate.apply(this, args);
  };
}

var _default = negate;
exports.default = _default;
},{}],"node_modules/lodash-es/_iteratorToArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Converts `iterator` to an array.
 *
 * @private
 * @param {Object} iterator The iterator to convert.
 * @returns {Array} Returns the converted array.
 */
function iteratorToArray(iterator) {
  var data,
      result = [];

  while (!(data = iterator.next()).done) {
    result.push(data.value);
  }

  return result;
}

var _default = iteratorToArray;
exports.default = _default;
},{}],"node_modules/lodash-es/toArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isString = _interopRequireDefault(require("./isString.js"));

var _iteratorToArray = _interopRequireDefault(require("./_iteratorToArray.js"));

var _mapToArray = _interopRequireDefault(require("./_mapToArray.js"));

var _setToArray = _interopRequireDefault(require("./_setToArray.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _values = _interopRequireDefault(require("./values.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';
/** Built-in value references. */

var symIterator = _Symbol.default ? _Symbol.default.iterator : undefined;
/**
 * Converts `value` to an array.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Array} Returns the converted array.
 * @example
 *
 * _.toArray({ 'a': 1, 'b': 2 });
 * // => [1, 2]
 *
 * _.toArray('abc');
 * // => ['a', 'b', 'c']
 *
 * _.toArray(1);
 * // => []
 *
 * _.toArray(null);
 * // => []
 */

function toArray(value) {
  if (!value) {
    return [];
  }

  if ((0, _isArrayLike.default)(value)) {
    return (0, _isString.default)(value) ? (0, _stringToArray.default)(value) : (0, _copyArray.default)(value);
  }

  if (symIterator && value[symIterator]) {
    return (0, _iteratorToArray.default)(value[symIterator]());
  }

  var tag = (0, _getTag.default)(value),
      func = tag == mapTag ? _mapToArray.default : tag == setTag ? _setToArray.default : _values.default;
  return func(value);
}

var _default = toArray;
exports.default = _default;
},{"./_Symbol.js":"node_modules/lodash-es/_Symbol.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./_getTag.js":"node_modules/lodash-es/_getTag.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isString.js":"node_modules/lodash-es/isString.js","./_iteratorToArray.js":"node_modules/lodash-es/_iteratorToArray.js","./_mapToArray.js":"node_modules/lodash-es/_mapToArray.js","./_setToArray.js":"node_modules/lodash-es/_setToArray.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./values.js":"node_modules/lodash-es/values.js"}],"node_modules/lodash-es/next.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toArray = _interopRequireDefault(require("./toArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the next value on a wrapped object following the
 * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
 *
 * @name next
 * @memberOf _
 * @since 4.0.0
 * @category Seq
 * @returns {Object} Returns the next iterator value.
 * @example
 *
 * var wrapped = _([1, 2]);
 *
 * wrapped.next();
 * // => { 'done': false, 'value': 1 }
 *
 * wrapped.next();
 * // => { 'done': false, 'value': 2 }
 *
 * wrapped.next();
 * // => { 'done': true, 'value': undefined }
 */
function wrapperNext() {
  if (this.__values__ === undefined) {
    this.__values__ = (0, _toArray.default)(this.value());
  }

  var done = this.__index__ >= this.__values__.length,
      value = done ? undefined : this.__values__[this.__index__++];
  return {
    'done': done,
    'value': value
  };
}

var _default = wrapperNext;
exports.default = _default;
},{"./toArray.js":"node_modules/lodash-es/toArray.js"}],"node_modules/lodash-es/_baseNth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.nth` which doesn't coerce arguments.
 *
 * @private
 * @param {Array} array The array to query.
 * @param {number} n The index of the element to return.
 * @returns {*} Returns the nth element of `array`.
 */
function baseNth(array, n) {
  var length = array.length;

  if (!length) {
    return;
  }

  n += n < 0 ? length : 0;
  return (0, _isIndex.default)(n, length) ? array[n] : undefined;
}

var _default = baseNth;
exports.default = _default;
},{"./_isIndex.js":"node_modules/lodash-es/_isIndex.js"}],"node_modules/lodash-es/nth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseNth = _interopRequireDefault(require("./_baseNth.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the element at index `n` of `array`. If `n` is negative, the nth
 * element from the end is returned.
 *
 * @static
 * @memberOf _
 * @since 4.11.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=0] The index of the element to return.
 * @returns {*} Returns the nth element of `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'd'];
 *
 * _.nth(array, 1);
 * // => 'b'
 *
 * _.nth(array, -2);
 * // => 'c';
 */
function nth(array, n) {
  return array && array.length ? (0, _baseNth.default)(array, (0, _toInteger.default)(n)) : undefined;
}

var _default = nth;
exports.default = _default;
},{"./_baseNth.js":"node_modules/lodash-es/_baseNth.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/nthArg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseNth = _interopRequireDefault(require("./_baseNth.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that gets the argument at index `n`. If `n` is negative,
 * the nth argument from the end is returned.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {number} [n=0] The index of the argument to return.
 * @returns {Function} Returns the new pass-thru function.
 * @example
 *
 * var func = _.nthArg(1);
 * func('a', 'b', 'c', 'd');
 * // => 'b'
 *
 * var func = _.nthArg(-2);
 * func('a', 'b', 'c', 'd');
 * // => 'c'
 */
function nthArg(n) {
  n = (0, _toInteger.default)(n);
  return (0, _baseRest.default)(function (args) {
    return (0, _baseNth.default)(args, n);
  });
}

var _default = nthArg;
exports.default = _default;
},{"./_baseNth.js":"node_modules/lodash-es/_baseNth.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/_baseUnset.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _last = _interopRequireDefault(require("./last.js"));

var _parent = _interopRequireDefault(require("./_parent.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.unset`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The property path to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 */
function baseUnset(object, path) {
  path = (0, _castPath.default)(path, object);
  object = (0, _parent.default)(object, path);
  return object == null || delete object[(0, _toKey.default)((0, _last.default)(path))];
}

var _default = baseUnset;
exports.default = _default;
},{"./_castPath.js":"node_modules/lodash-es/_castPath.js","./last.js":"node_modules/lodash-es/last.js","./_parent.js":"node_modules/lodash-es/_parent.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/_customOmitClone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
 * objects.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {string} key The key of the property to inspect.
 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
 */
function customOmitClone(value) {
  return (0, _isPlainObject.default)(value) ? undefined : value;
}

var _default = customOmitClone;
exports.default = _default;
},{"./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js"}],"node_modules/lodash-es/omit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseClone = _interopRequireDefault(require("./_baseClone.js"));

var _baseUnset = _interopRequireDefault(require("./_baseUnset.js"));

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _copyObject = _interopRequireDefault(require("./_copyObject.js"));

var _customOmitClone = _interopRequireDefault(require("./_customOmitClone.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

var _getAllKeysIn = _interopRequireDefault(require("./_getAllKeysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;
/**
 * The opposite of `_.pick`; this method creates an object composed of the
 * own and inherited enumerable property paths of `object` that are not omitted.
 *
 * **Note:** This method is considerably slower than `_.pick`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to omit.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omit(object, ['a', 'c']);
 * // => { 'b': '2' }
 */

var omit = (0, _flatRest.default)(function (object, paths) {
  var result = {};

  if (object == null) {
    return result;
  }

  var isDeep = false;
  paths = (0, _arrayMap.default)(paths, function (path) {
    path = (0, _castPath.default)(path, object);
    isDeep || (isDeep = path.length > 1);
    return path;
  });
  (0, _copyObject.default)(object, (0, _getAllKeysIn.default)(object), result);

  if (isDeep) {
    result = (0, _baseClone.default)(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, _customOmitClone.default);
  }

  var length = paths.length;

  while (length--) {
    (0, _baseUnset.default)(result, paths[length]);
  }

  return result;
});
var _default = omit;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseClone.js":"node_modules/lodash-es/_baseClone.js","./_baseUnset.js":"node_modules/lodash-es/_baseUnset.js","./_castPath.js":"node_modules/lodash-es/_castPath.js","./_copyObject.js":"node_modules/lodash-es/_copyObject.js","./_customOmitClone.js":"node_modules/lodash-es/_customOmitClone.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js","./_getAllKeysIn.js":"node_modules/lodash-es/_getAllKeysIn.js"}],"node_modules/lodash-es/_baseSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assignValue = _interopRequireDefault(require("./_assignValue.js"));

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!(0, _isObject.default)(object)) {
    return object;
  }

  path = (0, _castPath.default)(path, object);
  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = (0, _toKey.default)(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;

      if (newValue === undefined) {
        newValue = (0, _isObject.default)(objValue) ? objValue : (0, _isIndex.default)(path[index + 1]) ? [] : {};
      }
    }

    (0, _assignValue.default)(nested, key, newValue);
    nested = nested[key];
  }

  return object;
}

var _default = baseSet;
exports.default = _default;
},{"./_assignValue.js":"node_modules/lodash-es/_assignValue.js","./_castPath.js":"node_modules/lodash-es/_castPath.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js","./isObject.js":"node_modules/lodash-es/isObject.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/_basePickBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGet = _interopRequireDefault(require("./_baseGet.js"));

var _baseSet = _interopRequireDefault(require("./_baseSet.js"));

var _castPath = _interopRequireDefault(require("./_castPath.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = (0, _baseGet.default)(object, path);

    if (predicate(value, path)) {
      (0, _baseSet.default)(result, (0, _castPath.default)(path, object), value);
    }
  }

  return result;
}

var _default = basePickBy;
exports.default = _default;
},{"./_baseGet.js":"node_modules/lodash-es/_baseGet.js","./_baseSet.js":"node_modules/lodash-es/_baseSet.js","./_castPath.js":"node_modules/lodash-es/_castPath.js"}],"node_modules/lodash-es/pickBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _basePickBy = _interopRequireDefault(require("./_basePickBy.js"));

var _getAllKeysIn = _interopRequireDefault(require("./_getAllKeysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }

  var props = (0, _arrayMap.default)((0, _getAllKeysIn.default)(object), function (prop) {
    return [prop];
  });
  predicate = (0, _baseIteratee.default)(predicate);
  return (0, _basePickBy.default)(object, props, function (value, path) {
    return predicate(value, path[0]);
  });
}

var _default = pickBy;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_basePickBy.js":"node_modules/lodash-es/_basePickBy.js","./_getAllKeysIn.js":"node_modules/lodash-es/_getAllKeysIn.js"}],"node_modules/lodash-es/omitBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _negate = _interopRequireDefault(require("./negate.js"));

var _pickBy = _interopRequireDefault(require("./pickBy.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The opposite of `_.pickBy`; this method creates an object composed of
 * the own and inherited enumerable string keyed properties of `object` that
 * `predicate` doesn't return truthy for. The predicate is invoked with two
 * arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.omitBy(object, _.isNumber);
 * // => { 'b': '2' }
 */
function omitBy(object, predicate) {
  return (0, _pickBy.default)(object, (0, _negate.default)((0, _baseIteratee.default)(predicate)));
}

var _default = omitBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./negate.js":"node_modules/lodash-es/negate.js","./pickBy.js":"node_modules/lodash-es/pickBy.js"}],"node_modules/lodash-es/once.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _before = _interopRequireDefault(require("./before.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that is restricted to invoking `func` once. Repeat calls
 * to the function return the value of the first invocation. The `func` is
 * invoked with the `this` binding and arguments of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new restricted function.
 * @example
 *
 * var initialize = _.once(createApplication);
 * initialize();
 * initialize();
 * // => `createApplication` is invoked once
 */
function once(func) {
  return (0, _before.default)(2, func);
}

var _default = once;
exports.default = _default;
},{"./before.js":"node_modules/lodash-es/before.js"}],"node_modules/lodash-es/_baseSortBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;
  array.sort(comparer);

  while (length--) {
    array[length] = array[length].value;
  }

  return array;
}

var _default = baseSortBy;
exports.default = _default;
},{}],"node_modules/lodash-es/_compareAscending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = (0, _isSymbol.default)(value);
    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = (0, _isSymbol.default)(other);

    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
      return 1;
    }

    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
      return -1;
    }
  }

  return 0;
}

var _default = compareAscending;
exports.default = _default;
},{"./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/_compareMultiple.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _compareAscending = _interopRequireDefault(require("./_compareAscending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = (0, _compareAscending.default)(objCriteria[index], othCriteria[index]);

    if (result) {
      if (index >= ordersLength) {
        return result;
      }

      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  } // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.


  return object.index - other.index;
}

var _default = compareMultiple;
exports.default = _default;
},{"./_compareAscending.js":"node_modules/lodash-es/_compareAscending.js"}],"node_modules/lodash-es/_baseOrderBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseMap = _interopRequireDefault(require("./_baseMap.js"));

var _baseSortBy = _interopRequireDefault(require("./_baseSortBy.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _compareMultiple = _interopRequireDefault(require("./_compareMultiple.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  var index = -1;
  iteratees = (0, _arrayMap.default)(iteratees.length ? iteratees : [_identity.default], (0, _baseUnary.default)(_baseIteratee.default));
  var result = (0, _baseMap.default)(collection, function (value, key, collection) {
    var criteria = (0, _arrayMap.default)(iteratees, function (iteratee) {
      return iteratee(value);
    });
    return {
      'criteria': criteria,
      'index': ++index,
      'value': value
    };
  });
  return (0, _baseSortBy.default)(result, function (object, other) {
    return (0, _compareMultiple.default)(object, other, orders);
  });
}

var _default = baseOrderBy;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseMap.js":"node_modules/lodash-es/_baseMap.js","./_baseSortBy.js":"node_modules/lodash-es/_baseSortBy.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_compareMultiple.js":"node_modules/lodash-es/_compareMultiple.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/orderBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseOrderBy = _interopRequireDefault(require("./_baseOrderBy.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.sortBy` except that it allows specifying the sort
 * orders of the iteratees to sort by. If `orders` is unspecified, all values
 * are sorted in ascending order. Otherwise, specify an order of "desc" for
 * descending or "asc" for ascending sort order of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @param {string[]} [orders] The sort orders of `iteratees`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 34 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 36 }
 * ];
 *
 * // Sort by `user` in ascending order and by `age` in descending order.
 * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 */
function orderBy(collection, iteratees, orders, guard) {
  if (collection == null) {
    return [];
  }

  if (!(0, _isArray.default)(iteratees)) {
    iteratees = iteratees == null ? [] : [iteratees];
  }

  orders = guard ? undefined : orders;

  if (!(0, _isArray.default)(orders)) {
    orders = orders == null ? [] : [orders];
  }

  return (0, _baseOrderBy.default)(collection, iteratees, orders);
}

var _default = orderBy;
exports.default = _default;
},{"./_baseOrderBy.js":"node_modules/lodash-es/_baseOrderBy.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_createOver.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function like `_.over`.
 *
 * @private
 * @param {Function} arrayFunc The function to iterate over iteratees.
 * @returns {Function} Returns the new over function.
 */
function createOver(arrayFunc) {
  return (0, _flatRest.default)(function (iteratees) {
    iteratees = (0, _arrayMap.default)(iteratees, (0, _baseUnary.default)(_baseIteratee.default));
    return (0, _baseRest.default)(function (args) {
      var thisArg = this;
      return arrayFunc(iteratees, function (iteratee) {
        return (0, _apply.default)(iteratee, thisArg, args);
      });
    });
  });
}

var _default = createOver;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js"}],"node_modules/lodash-es/over.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _createOver = _interopRequireDefault(require("./_createOver.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that invokes `iteratees` with the arguments it receives
 * and returns their results.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to invoke.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.over([Math.max, Math.min]);
 *
 * func(1, 2, 3, 4);
 * // => [4, 1]
 */
var over = (0, _createOver.default)(_arrayMap.default);
var _default = over;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_createOver.js":"node_modules/lodash-es/_createOver.js"}],"node_modules/lodash-es/_castRest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A `baseRest` alias which can be replaced with `identity` by module
 * replacement plugins.
 *
 * @private
 * @type {Function}
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
var castRest = _baseRest.default;
var _default = castRest;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js"}],"node_modules/lodash-es/overArgs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _castRest = _interopRequireDefault(require("./_castRest.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;
/**
 * Creates a function that invokes `func` with its arguments transformed.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Function
 * @param {Function} func The function to wrap.
 * @param {...(Function|Function[])} [transforms=[_.identity]]
 *  The argument transforms.
 * @returns {Function} Returns the new function.
 * @example
 *
 * function doubled(n) {
 *   return n * 2;
 * }
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var func = _.overArgs(function(x, y) {
 *   return [x, y];
 * }, [square, doubled]);
 *
 * func(9, 3);
 * // => [81, 6]
 *
 * func(10, 5);
 * // => [100, 10]
 */

var overArgs = (0, _castRest.default)(function (func, transforms) {
  transforms = transforms.length == 1 && (0, _isArray.default)(transforms[0]) ? (0, _arrayMap.default)(transforms[0], (0, _baseUnary.default)(_baseIteratee.default)) : (0, _arrayMap.default)((0, _baseFlatten.default)(transforms, 1), (0, _baseUnary.default)(_baseIteratee.default));
  var funcsLength = transforms.length;
  return (0, _baseRest.default)(function (args) {
    var index = -1,
        length = nativeMin(args.length, funcsLength);

    while (++index < length) {
      args[index] = transforms[index].call(this, args[index]);
    }

    return (0, _apply.default)(func, this, args);
  });
});
var _default = overArgs;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_castRest.js":"node_modules/lodash-es/_castRest.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/overEvery.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEvery = _interopRequireDefault(require("./_arrayEvery.js"));

var _createOver = _interopRequireDefault(require("./_createOver.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that checks if **all** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [predicates=[_.identity]]
 *  The predicates to check.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.overEvery([Boolean, isFinite]);
 *
 * func('1');
 * // => true
 *
 * func(null);
 * // => false
 *
 * func(NaN);
 * // => false
 */
var overEvery = (0, _createOver.default)(_arrayEvery.default);
var _default = overEvery;
exports.default = _default;
},{"./_arrayEvery.js":"node_modules/lodash-es/_arrayEvery.js","./_createOver.js":"node_modules/lodash-es/_createOver.js"}],"node_modules/lodash-es/overSome.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arraySome = _interopRequireDefault(require("./_arraySome.js"));

var _createOver = _interopRequireDefault(require("./_createOver.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that checks if **any** of the `predicates` return
 * truthy when invoked with the arguments it receives.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {...(Function|Function[])} [predicates=[_.identity]]
 *  The predicates to check.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var func = _.overSome([Boolean, isFinite]);
 *
 * func('1');
 * // => true
 *
 * func(null);
 * // => true
 *
 * func(NaN);
 * // => false
 */
var overSome = (0, _createOver.default)(_arraySome.default);
var _default = overSome;
exports.default = _default;
},{"./_arraySome.js":"node_modules/lodash-es/_arraySome.js","./_createOver.js":"node_modules/lodash-es/_createOver.js"}],"node_modules/lodash-es/_baseRepeat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeFloor = Math.floor;
/**
 * The base implementation of `_.repeat` which doesn't coerce arguments.
 *
 * @private
 * @param {string} string The string to repeat.
 * @param {number} n The number of times to repeat the string.
 * @returns {string} Returns the repeated string.
 */

function baseRepeat(string, n) {
  var result = '';

  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
    return result;
  } // Leverage the exponentiation by squaring algorithm for a faster repeat.
  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.


  do {
    if (n % 2) {
      result += string;
    }

    n = nativeFloor(n / 2);

    if (n) {
      string += string;
    }
  } while (n);

  return result;
}

var _default = baseRepeat;
exports.default = _default;
},{}],"node_modules/lodash-es/_asciiSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseProperty = _interopRequireDefault(require("./_baseProperty.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the size of an ASCII `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
var asciiSize = (0, _baseProperty.default)('length');
var _default = asciiSize;
exports.default = _default;
},{"./_baseProperty.js":"node_modules/lodash-es/_baseProperty.js"}],"node_modules/lodash-es/_unicodeSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';
/** Used to compose unicode capture groups. */

var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';
/** Used to compose unicode regexes. */

var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';
/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */

var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');
/**
 * Gets the size of a Unicode `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */

function unicodeSize(string) {
  var result = reUnicode.lastIndex = 0;

  while (reUnicode.test(string)) {
    ++result;
  }

  return result;
}

var _default = unicodeSize;
exports.default = _default;
},{}],"node_modules/lodash-es/_stringSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _asciiSize = _interopRequireDefault(require("./_asciiSize.js"));

var _hasUnicode = _interopRequireDefault(require("./_hasUnicode.js"));

var _unicodeSize = _interopRequireDefault(require("./_unicodeSize.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets the number of symbols in `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the string size.
 */
function stringSize(string) {
  return (0, _hasUnicode.default)(string) ? (0, _unicodeSize.default)(string) : (0, _asciiSize.default)(string);
}

var _default = stringSize;
exports.default = _default;
},{"./_asciiSize.js":"node_modules/lodash-es/_asciiSize.js","./_hasUnicode.js":"node_modules/lodash-es/_hasUnicode.js","./_unicodeSize.js":"node_modules/lodash-es/_unicodeSize.js"}],"node_modules/lodash-es/_createPadding.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRepeat = _interopRequireDefault(require("./_baseRepeat.js"));

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _hasUnicode = _interopRequireDefault(require("./_hasUnicode.js"));

var _stringSize = _interopRequireDefault(require("./_stringSize.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil;
/**
 * Creates the padding for `string` based on `length`. The `chars` string
 * is truncated if the number of characters exceeds `length`.
 *
 * @private
 * @param {number} length The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padding for `string`.
 */

function createPadding(length, chars) {
  chars = chars === undefined ? ' ' : (0, _baseToString.default)(chars);
  var charsLength = chars.length;

  if (charsLength < 2) {
    return charsLength ? (0, _baseRepeat.default)(chars, length) : chars;
  }

  var result = (0, _baseRepeat.default)(chars, nativeCeil(length / (0, _stringSize.default)(chars)));
  return (0, _hasUnicode.default)(chars) ? (0, _castSlice.default)((0, _stringToArray.default)(result), 0, length).join('') : result.slice(0, length);
}

var _default = createPadding;
exports.default = _default;
},{"./_baseRepeat.js":"node_modules/lodash-es/_baseRepeat.js","./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_hasUnicode.js":"node_modules/lodash-es/_hasUnicode.js","./_stringSize.js":"node_modules/lodash-es/_stringSize.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js"}],"node_modules/lodash-es/pad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createPadding = _interopRequireDefault(require("./_createPadding.js"));

var _stringSize = _interopRequireDefault(require("./_stringSize.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeFloor = Math.floor;
/**
 * Pads `string` on the left and right sides if it's shorter than `length`.
 * Padding characters are truncated if they can't be evenly divided by `length`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.pad('abc', 8);
 * // => '  abc   '
 *
 * _.pad('abc', 8, '_-');
 * // => '_-abc_-_'
 *
 * _.pad('abc', 3);
 * // => 'abc'
 */

function pad(string, length, chars) {
  string = (0, _toString.default)(string);
  length = (0, _toInteger.default)(length);
  var strLength = length ? (0, _stringSize.default)(string) : 0;

  if (!length || strLength >= length) {
    return string;
  }

  var mid = (length - strLength) / 2;
  return (0, _createPadding.default)(nativeFloor(mid), chars) + string + (0, _createPadding.default)(nativeCeil(mid), chars);
}

var _default = pad;
exports.default = _default;
},{"./_createPadding.js":"node_modules/lodash-es/_createPadding.js","./_stringSize.js":"node_modules/lodash-es/_stringSize.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/padEnd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createPadding = _interopRequireDefault(require("./_createPadding.js"));

var _stringSize = _interopRequireDefault(require("./_stringSize.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Pads `string` on the right side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.padEnd('abc', 6);
 * // => 'abc   '
 *
 * _.padEnd('abc', 6, '_-');
 * // => 'abc_-_'
 *
 * _.padEnd('abc', 3);
 * // => 'abc'
 */
function padEnd(string, length, chars) {
  string = (0, _toString.default)(string);
  length = (0, _toInteger.default)(length);
  var strLength = length ? (0, _stringSize.default)(string) : 0;
  return length && strLength < length ? string + (0, _createPadding.default)(length - strLength, chars) : string;
}

var _default = padEnd;
exports.default = _default;
},{"./_createPadding.js":"node_modules/lodash-es/_createPadding.js","./_stringSize.js":"node_modules/lodash-es/_stringSize.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/padStart.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createPadding = _interopRequireDefault(require("./_createPadding.js"));

var _stringSize = _interopRequireDefault(require("./_stringSize.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Pads `string` on the left side if it's shorter than `length`. Padding
 * characters are truncated if they exceed `length`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to pad.
 * @param {number} [length=0] The padding length.
 * @param {string} [chars=' '] The string used as padding.
 * @returns {string} Returns the padded string.
 * @example
 *
 * _.padStart('abc', 6);
 * // => '   abc'
 *
 * _.padStart('abc', 6, '_-');
 * // => '_-_abc'
 *
 * _.padStart('abc', 3);
 * // => 'abc'
 */
function padStart(string, length, chars) {
  string = (0, _toString.default)(string);
  length = (0, _toInteger.default)(length);
  var strLength = length ? (0, _stringSize.default)(string) : 0;
  return length && strLength < length ? (0, _createPadding.default)(length - strLength, chars) + string : string;
}

var _default = padStart;
exports.default = _default;
},{"./_createPadding.js":"node_modules/lodash-es/_createPadding.js","./_stringSize.js":"node_modules/lodash-es/_stringSize.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/parseInt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _root = _interopRequireDefault(require("./_root.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match leading and trailing whitespace. */
var reTrimStart = /^\s+/;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeParseInt = _root.default.parseInt;
/**
 * Converts `string` to an integer of the specified radix. If `radix` is
 * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
 * hexadecimal, in which case a `radix` of `16` is used.
 *
 * **Note:** This method aligns with the
 * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category String
 * @param {string} string The string to convert.
 * @param {number} [radix=10] The radix to interpret `value` by.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.parseInt('08');
 * // => 8
 *
 * _.map(['6', '08', '10'], _.parseInt);
 * // => [6, 8, 10]
 */

function parseInt(string, radix, guard) {
  if (guard || radix == null) {
    radix = 0;
  } else if (radix) {
    radix = +radix;
  }

  return nativeParseInt((0, _toString.default)(string).replace(reTrimStart, ''), radix || 0);
}

var _default = parseInt;
exports.default = _default;
},{"./_root.js":"node_modules/lodash-es/_root.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/partial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

var _getHolder = _interopRequireDefault(require("./_getHolder.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_FLAG = 32;
/**
 * Creates a function that invokes `func` with `partials` prepended to the
 * arguments it receives. This method is like `_.bind` except it does **not**
 * alter the `this` binding.
 *
 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 0.2.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var sayHelloTo = _.partial(greet, 'hello');
 * sayHelloTo('fred');
 * // => 'hello fred'
 *
 * // Partially applied with placeholders.
 * var greetFred = _.partial(greet, _, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 */

var partial = (0, _baseRest.default)(function (func, partials) {
  var holders = (0, _replaceHolders.default)(partials, (0, _getHolder.default)(partial));
  return (0, _createWrap.default)(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
}); // Assign default placeholders.

partial.placeholder = {};
var _default = partial;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_createWrap.js":"node_modules/lodash-es/_createWrap.js","./_getHolder.js":"node_modules/lodash-es/_getHolder.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js"}],"node_modules/lodash-es/partialRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

var _getHolder = _interopRequireDefault(require("./_getHolder.js"));

var _replaceHolders = _interopRequireDefault(require("./_replaceHolders.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_RIGHT_FLAG = 64;
/**
 * This method is like `_.partial` except that partially applied arguments
 * are appended to the arguments it receives.
 *
 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var greetFred = _.partialRight(greet, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 *
 * // Partially applied with placeholders.
 * var sayHelloTo = _.partialRight(greet, 'hello', _);
 * sayHelloTo('fred');
 * // => 'hello fred'
 */

var partialRight = (0, _baseRest.default)(function (func, partials) {
  var holders = (0, _replaceHolders.default)(partials, (0, _getHolder.default)(partialRight));
  return (0, _createWrap.default)(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
}); // Assign default placeholders.

partialRight.placeholder = {};
var _default = partialRight;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_createWrap.js":"node_modules/lodash-es/_createWrap.js","./_getHolder.js":"node_modules/lodash-es/_getHolder.js","./_replaceHolders.js":"node_modules/lodash-es/_replaceHolders.js"}],"node_modules/lodash-es/partition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createAggregator = _interopRequireDefault(require("./_createAggregator.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of elements split into two groups, the first of which
 * contains elements `predicate` returns truthy for, the second of which
 * contains elements `predicate` returns falsey for. The predicate is
 * invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of grouped elements.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': false },
 *   { 'user': 'fred',    'age': 40, 'active': true },
 *   { 'user': 'pebbles', 'age': 1,  'active': false }
 * ];
 *
 * _.partition(users, function(o) { return o.active; });
 * // => objects for [['fred'], ['barney', 'pebbles']]
 *
 * // The `_.matches` iteratee shorthand.
 * _.partition(users, { 'age': 1, 'active': false });
 * // => objects for [['pebbles'], ['barney', 'fred']]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.partition(users, ['active', false]);
 * // => objects for [['barney', 'pebbles'], ['fred']]
 *
 * // The `_.property` iteratee shorthand.
 * _.partition(users, 'active');
 * // => objects for [['fred'], ['barney', 'pebbles']]
 */
var partition = (0, _createAggregator.default)(function (result, value, key) {
  result[key ? 0 : 1].push(value);
}, function () {
  return [[], []];
});
var _default = partition;
exports.default = _default;
},{"./_createAggregator.js":"node_modules/lodash-es/_createAggregator.js"}],"node_modules/lodash-es/_basePick.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePickBy = _interopRequireDefault(require("./_basePickBy.js"));

var _hasIn = _interopRequireDefault(require("./hasIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return (0, _basePickBy.default)(object, paths, function (value, path) {
    return (0, _hasIn.default)(object, path);
  });
}

var _default = basePick;
exports.default = _default;
},{"./_basePickBy.js":"node_modules/lodash-es/_basePickBy.js","./hasIn.js":"node_modules/lodash-es/hasIn.js"}],"node_modules/lodash-es/pick.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePick = _interopRequireDefault(require("./_basePick.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = (0, _flatRest.default)(function (object, paths) {
  return object == null ? {} : (0, _basePick.default)(object, paths);
});
var _default = pick;
exports.default = _default;
},{"./_basePick.js":"node_modules/lodash-es/_basePick.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js"}],"node_modules/lodash-es/plant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseLodash = _interopRequireDefault(require("./_baseLodash.js"));

var _wrapperClone = _interopRequireDefault(require("./_wrapperClone.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a clone of the chain sequence planting `value` as the wrapped value.
 *
 * @name plant
 * @memberOf _
 * @since 3.2.0
 * @category Seq
 * @param {*} value The value to plant.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2]).map(square);
 * var other = wrapped.plant([3, 4]);
 *
 * other.value();
 * // => [9, 16]
 *
 * wrapped.value();
 * // => [1, 4]
 */
function wrapperPlant(value) {
  var result,
      parent = this;

  while (parent instanceof _baseLodash.default) {
    var clone = (0, _wrapperClone.default)(parent);
    clone.__index__ = 0;
    clone.__values__ = undefined;

    if (result) {
      previous.__wrapped__ = clone;
    } else {
      result = clone;
    }

    var previous = clone;
    parent = parent.__wrapped__;
  }

  previous.__wrapped__ = value;
  return result;
}

var _default = wrapperPlant;
exports.default = _default;
},{"./_baseLodash.js":"node_modules/lodash-es/_baseLodash.js","./_wrapperClone.js":"node_modules/lodash-es/_wrapperClone.js"}],"node_modules/lodash-es/propertyOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGet = _interopRequireDefault(require("./_baseGet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The opposite of `_.property`; this method creates a function that returns
 * the value at a given path of `object`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var array = [0, 1, 2],
 *     object = { 'a': array, 'b': array, 'c': array };
 *
 * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
 * // => [2, 0]
 *
 * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
 * // => [2, 0]
 */
function propertyOf(object) {
  return function (path) {
    return object == null ? undefined : (0, _baseGet.default)(object, path);
  };
}

var _default = propertyOf;
exports.default = _default;
},{"./_baseGet.js":"node_modules/lodash-es/_baseGet.js"}],"node_modules/lodash-es/_baseIndexOfWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This function is like `baseIndexOf` except that it accepts a comparator.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOfWith(array, value, fromIndex, comparator) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (comparator(array[index], value)) {
      return index;
    }
  }

  return -1;
}

var _default = baseIndexOfWith;
exports.default = _default;
},{}],"node_modules/lodash-es/_basePullAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseIndexOf = _interopRequireDefault(require("./_baseIndexOf.js"));

var _baseIndexOfWith = _interopRequireDefault(require("./_baseIndexOfWith.js"));

var _baseUnary = _interopRequireDefault(require("./_baseUnary.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * The base implementation of `_.pullAllBy` without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 */

function basePullAll(array, values, iteratee, comparator) {
  var indexOf = comparator ? _baseIndexOfWith.default : _baseIndexOf.default,
      index = -1,
      length = values.length,
      seen = array;

  if (array === values) {
    values = (0, _copyArray.default)(values);
  }

  if (iteratee) {
    seen = (0, _arrayMap.default)(array, (0, _baseUnary.default)(iteratee));
  }

  while (++index < length) {
    var fromIndex = 0,
        value = values[index],
        computed = iteratee ? iteratee(value) : value;

    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
      if (seen !== array) {
        splice.call(seen, fromIndex, 1);
      }

      splice.call(array, fromIndex, 1);
    }
  }

  return array;
}

var _default = basePullAll;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseIndexOf.js":"node_modules/lodash-es/_baseIndexOf.js","./_baseIndexOfWith.js":"node_modules/lodash-es/_baseIndexOfWith.js","./_baseUnary.js":"node_modules/lodash-es/_baseUnary.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js"}],"node_modules/lodash-es/pullAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePullAll = _interopRequireDefault(require("./_basePullAll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.pull` except that it accepts an array of values to remove.
 *
 * **Note:** Unlike `_.difference`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pullAll(array, ['a', 'c']);
 * console.log(array);
 * // => ['b', 'b']
 */
function pullAll(array, values) {
  return array && array.length && values && values.length ? (0, _basePullAll.default)(array, values) : array;
}

var _default = pullAll;
exports.default = _default;
},{"./_basePullAll.js":"node_modules/lodash-es/_basePullAll.js"}],"node_modules/lodash-es/pull.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _pullAll = _interopRequireDefault(require("./pullAll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes all given values from `array` using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
 * to remove elements from an array by predicate.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...*} [values] The values to remove.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
 *
 * _.pull(array, 'a', 'c');
 * console.log(array);
 * // => ['b', 'b']
 */
var pull = (0, _baseRest.default)(_pullAll.default);
var _default = pull;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./pullAll.js":"node_modules/lodash-es/pullAll.js"}],"node_modules/lodash-es/pullAllBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _basePullAll = _interopRequireDefault(require("./_basePullAll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.pullAll` except that it accepts `iteratee` which is
 * invoked for each element of `array` and `values` to generate the criterion
 * by which they're compared. The iteratee is invoked with one argument: (value).
 *
 * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
 *
 * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
 * console.log(array);
 * // => [{ 'x': 2 }]
 */
function pullAllBy(array, values, iteratee) {
  return array && array.length && values && values.length ? (0, _basePullAll.default)(array, values, (0, _baseIteratee.default)(iteratee, 2)) : array;
}

var _default = pullAllBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_basePullAll.js":"node_modules/lodash-es/_basePullAll.js"}],"node_modules/lodash-es/pullAllWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePullAll = _interopRequireDefault(require("./_basePullAll.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.pullAll` except that it accepts `comparator` which
 * is invoked to compare elements of `array` to `values`. The comparator is
 * invoked with two arguments: (arrVal, othVal).
 *
 * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Array} values The values to remove.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
 *
 * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
 * console.log(array);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
 */
function pullAllWith(array, values, comparator) {
  return array && array.length && values && values.length ? (0, _basePullAll.default)(array, values, undefined, comparator) : array;
}

var _default = pullAllWith;
exports.default = _default;
},{"./_basePullAll.js":"node_modules/lodash-es/_basePullAll.js"}],"node_modules/lodash-es/_basePullAt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseUnset = _interopRequireDefault(require("./_baseUnset.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var arrayProto = Array.prototype;
/** Built-in value references. */

var splice = arrayProto.splice;
/**
 * The base implementation of `_.pullAt` without support for individual
 * indexes or capturing the removed elements.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {number[]} indexes The indexes of elements to remove.
 * @returns {Array} Returns `array`.
 */

function basePullAt(array, indexes) {
  var length = array ? indexes.length : 0,
      lastIndex = length - 1;

  while (length--) {
    var index = indexes[length];

    if (length == lastIndex || index !== previous) {
      var previous = index;

      if ((0, _isIndex.default)(index)) {
        splice.call(array, index, 1);
      } else {
        (0, _baseUnset.default)(array, index);
      }
    }
  }

  return array;
}

var _default = basePullAt;
exports.default = _default;
},{"./_baseUnset.js":"node_modules/lodash-es/_baseUnset.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js"}],"node_modules/lodash-es/pullAt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseAt = _interopRequireDefault(require("./_baseAt.js"));

var _basePullAt = _interopRequireDefault(require("./_basePullAt.js"));

var _compareAscending = _interopRequireDefault(require("./_compareAscending.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes elements from `array` corresponding to `indexes` and returns an
 * array of removed elements.
 *
 * **Note:** Unlike `_.at`, this method mutates `array`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {...(number|number[])} [indexes] The indexes of elements to remove.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = ['a', 'b', 'c', 'd'];
 * var pulled = _.pullAt(array, [1, 3]);
 *
 * console.log(array);
 * // => ['a', 'c']
 *
 * console.log(pulled);
 * // => ['b', 'd']
 */
var pullAt = (0, _flatRest.default)(function (array, indexes) {
  var length = array == null ? 0 : array.length,
      result = (0, _baseAt.default)(array, indexes);
  (0, _basePullAt.default)(array, (0, _arrayMap.default)(indexes, function (index) {
    return (0, _isIndex.default)(index, length) ? +index : index;
  }).sort(_compareAscending.default));
  return result;
});
var _default = pullAt;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseAt.js":"node_modules/lodash-es/_baseAt.js","./_basePullAt.js":"node_modules/lodash-es/_basePullAt.js","./_compareAscending.js":"node_modules/lodash-es/_compareAscending.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js"}],"node_modules/lodash-es/_baseRandom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeFloor = Math.floor,
    nativeRandom = Math.random;
/**
 * The base implementation of `_.random` without support for returning
 * floating-point numbers.
 *
 * @private
 * @param {number} lower The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the random number.
 */

function baseRandom(lower, upper) {
  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
}

var _default = baseRandom;
exports.default = _default;
},{}],"node_modules/lodash-es/random.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRandom = _interopRequireDefault(require("./_baseRandom.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Built-in method references without a dependency on `root`. */
var freeParseFloat = parseFloat;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMin = Math.min,
    nativeRandom = Math.random;
/**
 * Produces a random number between the inclusive `lower` and `upper` bounds.
 * If only one argument is provided a number between `0` and the given number
 * is returned. If `floating` is `true`, or either `lower` or `upper` are
 * floats, a floating-point number is returned instead of an integer.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @memberOf _
 * @since 0.7.0
 * @category Number
 * @param {number} [lower=0] The lower bound.
 * @param {number} [upper=1] The upper bound.
 * @param {boolean} [floating] Specify returning a floating-point number.
 * @returns {number} Returns the random number.
 * @example
 *
 * _.random(0, 5);
 * // => an integer between 0 and 5
 *
 * _.random(5);
 * // => also an integer between 0 and 5
 *
 * _.random(5, true);
 * // => a floating-point number between 0 and 5
 *
 * _.random(1.2, 5.2);
 * // => a floating-point number between 1.2 and 5.2
 */

function random(lower, upper, floating) {
  if (floating && typeof floating != 'boolean' && (0, _isIterateeCall.default)(lower, upper, floating)) {
    upper = floating = undefined;
  }

  if (floating === undefined) {
    if (typeof upper == 'boolean') {
      floating = upper;
      upper = undefined;
    } else if (typeof lower == 'boolean') {
      floating = lower;
      lower = undefined;
    }
  }

  if (lower === undefined && upper === undefined) {
    lower = 0;
    upper = 1;
  } else {
    lower = (0, _toFinite.default)(lower);

    if (upper === undefined) {
      upper = lower;
      lower = 0;
    } else {
      upper = (0, _toFinite.default)(upper);
    }
  }

  if (lower > upper) {
    var temp = lower;
    lower = upper;
    upper = temp;
  }

  if (floating || lower % 1 || upper % 1) {
    var rand = nativeRandom();
    return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);
  }

  return (0, _baseRandom.default)(lower, upper);
}

var _default = random;
exports.default = _default;
},{"./_baseRandom.js":"node_modules/lodash-es/_baseRandom.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./toFinite.js":"node_modules/lodash-es/toFinite.js"}],"node_modules/lodash-es/_baseRange.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;
/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */

function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }

  return result;
}

var _default = baseRange;
exports.default = _default;
},{}],"node_modules/lodash-es/_createRange.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRange = _interopRequireDefault(require("./_baseRange.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */
function createRange(fromRight) {
  return function (start, end, step) {
    if (step && typeof step != 'number' && (0, _isIterateeCall.default)(start, end, step)) {
      end = step = undefined;
    } // Ensure the sign of `-0` is preserved.


    start = (0, _toFinite.default)(start);

    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = (0, _toFinite.default)(end);
    }

    step = step === undefined ? start < end ? 1 : -1 : (0, _toFinite.default)(step);
    return (0, _baseRange.default)(start, end, step, fromRight);
  };
}

var _default = createRange;
exports.default = _default;
},{"./_baseRange.js":"node_modules/lodash-es/_baseRange.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./toFinite.js":"node_modules/lodash-es/toFinite.js"}],"node_modules/lodash-es/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRange = _interopRequireDefault(require("./_createRange.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */
var range = (0, _createRange.default)();
var _default = range;
exports.default = _default;
},{"./_createRange.js":"node_modules/lodash-es/_createRange.js"}],"node_modules/lodash-es/rangeRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRange = _interopRequireDefault(require("./_createRange.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.range` except that it populates values in
 * descending order.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.range
 * @example
 *
 * _.rangeRight(4);
 * // => [3, 2, 1, 0]
 *
 * _.rangeRight(-4);
 * // => [-3, -2, -1, 0]
 *
 * _.rangeRight(1, 5);
 * // => [4, 3, 2, 1]
 *
 * _.rangeRight(0, 20, 5);
 * // => [15, 10, 5, 0]
 *
 * _.rangeRight(0, -4, -1);
 * // => [-3, -2, -1, 0]
 *
 * _.rangeRight(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.rangeRight(0);
 * // => []
 */
var rangeRight = (0, _createRange.default)(true);
var _default = rangeRight;
exports.default = _default;
},{"./_createRange.js":"node_modules/lodash-es/_createRange.js"}],"node_modules/lodash-es/rearg.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createWrap = _interopRequireDefault(require("./_createWrap.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to compose bitmasks for function metadata. */
var WRAP_REARG_FLAG = 256;
/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */

var rearg = (0, _flatRest.default)(function (func, indexes) {
  return (0, _createWrap.default)(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});
var _default = rearg;
exports.default = _default;
},{"./_createWrap.js":"node_modules/lodash-es/_createWrap.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js"}],"node_modules/lodash-es/_baseReduce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function (value, index, collection) {
    accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
  });
  return accumulator;
}

var _default = baseReduce;
exports.default = _default;
},{}],"node_modules/lodash-es/reduce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayReduce = _interopRequireDefault(require("./_arrayReduce.js"));

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseReduce = _interopRequireDefault(require("./_baseReduce.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce([1, 2], function(sum, n) {
 *   return sum + n;
 * }, 0);
 * // => 3
 *
 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */
function reduce(collection, iteratee, accumulator) {
  var func = (0, _isArray.default)(collection) ? _arrayReduce.default : _baseReduce.default,
      initAccum = arguments.length < 3;
  return func(collection, (0, _baseIteratee.default)(iteratee, 4), accumulator, initAccum, _baseEach.default);
}

var _default = reduce;
exports.default = _default;
},{"./_arrayReduce.js":"node_modules/lodash-es/_arrayReduce.js","./_baseEach.js":"node_modules/lodash-es/_baseEach.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseReduce.js":"node_modules/lodash-es/_baseReduce.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_arrayReduceRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * A specialized version of `_.reduceRight` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the last element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduceRight(array, iteratee, accumulator, initAccum) {
  var length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[--length];
  }

  while (length--) {
    accumulator = iteratee(accumulator, array[length], length, array);
  }

  return accumulator;
}

var _default = arrayReduceRight;
exports.default = _default;
},{}],"node_modules/lodash-es/reduceRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayReduceRight = _interopRequireDefault(require("./_arrayReduceRight.js"));

var _baseEachRight = _interopRequireDefault(require("./_baseEachRight.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseReduce = _interopRequireDefault(require("./_baseReduce.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.reduce` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduce
 * @example
 *
 * var array = [[0, 1], [2, 3], [4, 5]];
 *
 * _.reduceRight(array, function(flattened, other) {
 *   return flattened.concat(other);
 * }, []);
 * // => [4, 5, 2, 3, 0, 1]
 */
function reduceRight(collection, iteratee, accumulator) {
  var func = (0, _isArray.default)(collection) ? _arrayReduceRight.default : _baseReduce.default,
      initAccum = arguments.length < 3;
  return func(collection, (0, _baseIteratee.default)(iteratee, 4), accumulator, initAccum, _baseEachRight.default);
}

var _default = reduceRight;
exports.default = _default;
},{"./_arrayReduceRight.js":"node_modules/lodash-es/_arrayReduceRight.js","./_baseEachRight.js":"node_modules/lodash-es/_baseEachRight.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseReduce.js":"node_modules/lodash-es/_baseReduce.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/reject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _baseFilter = _interopRequireDefault(require("./_baseFilter.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _negate = _interopRequireDefault(require("./negate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The opposite of `_.filter`; this method returns the elements of `collection`
 * that `predicate` does **not** return truthy for.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.filter
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': true }
 * ];
 *
 * _.reject(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.reject(users, { 'age': 40, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.reject(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.reject(users, 'active');
 * // => objects for ['barney']
 */
function reject(collection, predicate) {
  var func = (0, _isArray.default)(collection) ? _arrayFilter.default : _baseFilter.default;
  return func(collection, (0, _negate.default)((0, _baseIteratee.default)(predicate, 3)));
}

var _default = reject;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./_baseFilter.js":"node_modules/lodash-es/_baseFilter.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./isArray.js":"node_modules/lodash-es/isArray.js","./negate.js":"node_modules/lodash-es/negate.js"}],"node_modules/lodash-es/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _basePullAt = _interopRequireDefault(require("./_basePullAt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes all elements from `array` that `predicate` returns truthy for
 * and returns an array of the removed elements. The predicate is invoked
 * with three arguments: (value, index, array).
 *
 * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
 * to pull elements from an array by value.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new array of removed elements.
 * @example
 *
 * var array = [1, 2, 3, 4];
 * var evens = _.remove(array, function(n) {
 *   return n % 2 == 0;
 * });
 *
 * console.log(array);
 * // => [1, 3]
 *
 * console.log(evens);
 * // => [2, 4]
 */
function remove(array, predicate) {
  var result = [];

  if (!(array && array.length)) {
    return result;
  }

  var index = -1,
      indexes = [],
      length = array.length;
  predicate = (0, _baseIteratee.default)(predicate, 3);

  while (++index < length) {
    var value = array[index];

    if (predicate(value, index, array)) {
      result.push(value);
      indexes.push(index);
    }
  }

  (0, _basePullAt.default)(array, indexes);
  return result;
}

var _default = remove;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_basePullAt.js":"node_modules/lodash-es/_basePullAt.js"}],"node_modules/lodash-es/repeat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRepeat = _interopRequireDefault(require("./_baseRepeat.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Repeats the given string `n` times.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to repeat.
 * @param {number} [n=1] The number of times to repeat the string.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the repeated string.
 * @example
 *
 * _.repeat('*', 3);
 * // => '***'
 *
 * _.repeat('abc', 2);
 * // => 'abcabc'
 *
 * _.repeat('abc', 0);
 * // => ''
 */
function repeat(string, n, guard) {
  if (guard ? (0, _isIterateeCall.default)(string, n, guard) : n === undefined) {
    n = 1;
  } else {
    n = (0, _toInteger.default)(n);
  }

  return (0, _baseRepeat.default)((0, _toString.default)(string), n);
}

var _default = repeat;
exports.default = _default;
},{"./_baseRepeat.js":"node_modules/lodash-es/_baseRepeat.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/replace.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Replaces matches for `pattern` in `string` with `replacement`.
 *
 * **Note:** This method is based on
 * [`String#replace`](https://mdn.io/String/replace).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to modify.
 * @param {RegExp|string} pattern The pattern to replace.
 * @param {Function|string} replacement The match replacement.
 * @returns {string} Returns the modified string.
 * @example
 *
 * _.replace('Hi Fred', 'Fred', 'Barney');
 * // => 'Hi Barney'
 */
function replace() {
  var args = arguments,
      string = (0, _toString.default)(args[0]);
  return args.length < 3 ? string : string.replace(args[1], args[2]);
}

var _default = replace;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/rest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a function that invokes `func` with the `this` binding of the
 * created function and arguments from `start` and beyond provided as
 * an array.
 *
 * **Note:** This method is based on the
 * [rest parameter](https://mdn.io/rest_parameters).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.rest(function(what, names) {
 *   return what + ' ' + _.initial(names).join(', ') +
 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
 * });
 *
 * say('hello', 'fred', 'barney', 'pebbles');
 * // => 'hello fred, barney, & pebbles'
 */

function rest(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  start = start === undefined ? start : (0, _toInteger.default)(start);
  return (0, _baseRest.default)(func, start);
}

var _default = rest;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/result.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castPath = _interopRequireDefault(require("./_castPath.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.get` except that if the resolved value is a
 * function it's invoked with the `this` binding of its parent object and
 * its result is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to resolve.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
 *
 * _.result(object, 'a[0].b.c1');
 * // => 3
 *
 * _.result(object, 'a[0].b.c2');
 * // => 4
 *
 * _.result(object, 'a[0].b.c3', 'default');
 * // => 'default'
 *
 * _.result(object, 'a[0].b.c3', _.constant('default'));
 * // => 'default'
 */
function result(object, path, defaultValue) {
  path = (0, _castPath.default)(path, object);
  var index = -1,
      length = path.length; // Ensure the loop is entered when path is empty.

  if (!length) {
    length = 1;
    object = undefined;
  }

  while (++index < length) {
    var value = object == null ? undefined : object[(0, _toKey.default)(path[index])];

    if (value === undefined) {
      index = length;
      value = defaultValue;
    }

    object = (0, _isFunction.default)(value) ? value.call(object) : value;
  }

  return object;
}

var _default = result;
exports.default = _default;
},{"./_castPath.js":"node_modules/lodash-es/_castPath.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./_toKey.js":"node_modules/lodash-es/_toKey.js"}],"node_modules/lodash-es/reverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used for built-in method references. */
var arrayProto = Array.prototype;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeReverse = arrayProto.reverse;
/**
 * Reverses `array` so that the first element becomes the last, the second
 * element becomes the second to last, and so on.
 *
 * **Note:** This method mutates `array` and is based on
 * [`Array#reverse`](https://mdn.io/Array/reverse).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to modify.
 * @returns {Array} Returns `array`.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _.reverse(array);
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */

function reverse(array) {
  return array == null ? array : nativeReverse.call(array);
}

var _default = reverse;
exports.default = _default;
},{}],"node_modules/lodash-es/round.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createRound = _interopRequireDefault(require("./_createRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes `number` rounded to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round.
 * @param {number} [precision=0] The precision to round to.
 * @returns {number} Returns the rounded number.
 * @example
 *
 * _.round(4.006);
 * // => 4
 *
 * _.round(4.006, 2);
 * // => 4.01
 *
 * _.round(4060, -2);
 * // => 4100
 */
var round = (0, _createRound.default)('round');
var _default = round;
exports.default = _default;
},{"./_createRound.js":"node_modules/lodash-es/_createRound.js"}],"node_modules/lodash-es/_arraySample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRandom = _interopRequireDefault(require("./_baseRandom.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `_.sample` for arrays.
 *
 * @private
 * @param {Array} array The array to sample.
 * @returns {*} Returns the random element.
 */
function arraySample(array) {
  var length = array.length;
  return length ? array[(0, _baseRandom.default)(0, length - 1)] : undefined;
}

var _default = arraySample;
exports.default = _default;
},{"./_baseRandom.js":"node_modules/lodash-es/_baseRandom.js"}],"node_modules/lodash-es/_baseSample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arraySample = _interopRequireDefault(require("./_arraySample.js"));

var _values = _interopRequireDefault(require("./values.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.sample`.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @returns {*} Returns the random element.
 */
function baseSample(collection) {
  return (0, _arraySample.default)((0, _values.default)(collection));
}

var _default = baseSample;
exports.default = _default;
},{"./_arraySample.js":"node_modules/lodash-es/_arraySample.js","./values.js":"node_modules/lodash-es/values.js"}],"node_modules/lodash-es/sample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arraySample = _interopRequireDefault(require("./_arraySample.js"));

var _baseSample = _interopRequireDefault(require("./_baseSample.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets a random element from `collection`.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to sample.
 * @returns {*} Returns the random element.
 * @example
 *
 * _.sample([1, 2, 3, 4]);
 * // => 2
 */
function sample(collection) {
  var func = (0, _isArray.default)(collection) ? _arraySample.default : _baseSample.default;
  return func(collection);
}

var _default = sample;
exports.default = _default;
},{"./_arraySample.js":"node_modules/lodash-es/_arraySample.js","./_baseSample.js":"node_modules/lodash-es/_baseSample.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/_shuffleSelf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRandom = _interopRequireDefault(require("./_baseRandom.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
 *
 * @private
 * @param {Array} array The array to shuffle.
 * @param {number} [size=array.length] The size of `array`.
 * @returns {Array} Returns `array`.
 */
function shuffleSelf(array, size) {
  var index = -1,
      length = array.length,
      lastIndex = length - 1;
  size = size === undefined ? length : size;

  while (++index < size) {
    var rand = (0, _baseRandom.default)(index, lastIndex),
        value = array[rand];
    array[rand] = array[index];
    array[index] = value;
  }

  array.length = size;
  return array;
}

var _default = shuffleSelf;
exports.default = _default;
},{"./_baseRandom.js":"node_modules/lodash-es/_baseRandom.js"}],"node_modules/lodash-es/_arraySampleSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _shuffleSelf = _interopRequireDefault(require("./_shuffleSelf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `_.sampleSize` for arrays.
 *
 * @private
 * @param {Array} array The array to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function arraySampleSize(array, n) {
  return (0, _shuffleSelf.default)((0, _copyArray.default)(array), (0, _baseClamp.default)(n, 0, array.length));
}

var _default = arraySampleSize;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./_shuffleSelf.js":"node_modules/lodash-es/_shuffleSelf.js"}],"node_modules/lodash-es/_baseSampleSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _shuffleSelf = _interopRequireDefault(require("./_shuffleSelf.js"));

var _values = _interopRequireDefault(require("./values.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.sampleSize` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to sample.
 * @param {number} n The number of elements to sample.
 * @returns {Array} Returns the random elements.
 */
function baseSampleSize(collection, n) {
  var array = (0, _values.default)(collection);
  return (0, _shuffleSelf.default)(array, (0, _baseClamp.default)(n, 0, array.length));
}

var _default = baseSampleSize;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./_shuffleSelf.js":"node_modules/lodash-es/_shuffleSelf.js","./values.js":"node_modules/lodash-es/values.js"}],"node_modules/lodash-es/sampleSize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arraySampleSize = _interopRequireDefault(require("./_arraySampleSize.js"));

var _baseSampleSize = _interopRequireDefault(require("./_baseSampleSize.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets `n` random elements at unique keys from `collection` up to the
 * size of `collection`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to sample.
 * @param {number} [n=1] The number of elements to sample.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the random elements.
 * @example
 *
 * _.sampleSize([1, 2, 3], 2);
 * // => [3, 1]
 *
 * _.sampleSize([1, 2, 3], 4);
 * // => [2, 3, 1]
 */
function sampleSize(collection, n, guard) {
  if (guard ? (0, _isIterateeCall.default)(collection, n, guard) : n === undefined) {
    n = 1;
  } else {
    n = (0, _toInteger.default)(n);
  }

  var func = (0, _isArray.default)(collection) ? _arraySampleSize.default : _baseSampleSize.default;
  return func(collection, n);
}

var _default = sampleSize;
exports.default = _default;
},{"./_arraySampleSize.js":"node_modules/lodash-es/_arraySampleSize.js","./_baseSampleSize.js":"node_modules/lodash-es/_baseSampleSize.js","./isArray.js":"node_modules/lodash-es/isArray.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSet = _interopRequireDefault(require("./_baseSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
  return object == null ? object : (0, _baseSet.default)(object, path, value);
}

var _default = set;
exports.default = _default;
},{"./_baseSet.js":"node_modules/lodash-es/_baseSet.js"}],"node_modules/lodash-es/setWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSet = _interopRequireDefault(require("./_baseSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.set` except that it accepts `customizer` which is
 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
 * path creation is handled by the method instead. The `customizer` is invoked
 * with three arguments: (nsValue, key, nsObject).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {};
 *
 * _.setWith(object, '[0][1]', 'a', Object);
 * // => { '0': { '1': 'a' } }
 */
function setWith(object, path, value, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return object == null ? object : (0, _baseSet.default)(object, path, value, customizer);
}

var _default = setWith;
exports.default = _default;
},{"./_baseSet.js":"node_modules/lodash-es/_baseSet.js"}],"node_modules/lodash-es/_arrayShuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _shuffleSelf = _interopRequireDefault(require("./_shuffleSelf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * A specialized version of `_.shuffle` for arrays.
 *
 * @private
 * @param {Array} array The array to shuffle.
 * @returns {Array} Returns the new shuffled array.
 */
function arrayShuffle(array) {
  return (0, _shuffleSelf.default)((0, _copyArray.default)(array));
}

var _default = arrayShuffle;
exports.default = _default;
},{"./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./_shuffleSelf.js":"node_modules/lodash-es/_shuffleSelf.js"}],"node_modules/lodash-es/_baseShuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _shuffleSelf = _interopRequireDefault(require("./_shuffleSelf.js"));

var _values = _interopRequireDefault(require("./values.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.shuffle`.
 *
 * @private
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 */
function baseShuffle(collection) {
  return (0, _shuffleSelf.default)((0, _values.default)(collection));
}

var _default = baseShuffle;
exports.default = _default;
},{"./_shuffleSelf.js":"node_modules/lodash-es/_shuffleSelf.js","./values.js":"node_modules/lodash-es/values.js"}],"node_modules/lodash-es/shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayShuffle = _interopRequireDefault(require("./_arrayShuffle.js"));

var _baseShuffle = _interopRequireDefault(require("./_baseShuffle.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of shuffled values, using a version of the
 * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to shuffle.
 * @returns {Array} Returns the new shuffled array.
 * @example
 *
 * _.shuffle([1, 2, 3, 4]);
 * // => [4, 1, 3, 2]
 */
function shuffle(collection) {
  var func = (0, _isArray.default)(collection) ? _arrayShuffle.default : _baseShuffle.default;
  return func(collection);
}

var _default = shuffle;
exports.default = _default;
},{"./_arrayShuffle.js":"node_modules/lodash-es/_arrayShuffle.js","./_baseShuffle.js":"node_modules/lodash-es/_baseShuffle.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/size.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseKeys = _interopRequireDefault(require("./_baseKeys.js"));

var _getTag = _interopRequireDefault(require("./_getTag.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isString = _interopRequireDefault(require("./isString.js"));

var _stringSize = _interopRequireDefault(require("./_stringSize.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';
/**
 * Gets the size of `collection` by returning its length for array-like
 * values or the number of own enumerable string keyed properties for objects.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @returns {number} Returns the collection size.
 * @example
 *
 * _.size([1, 2, 3]);
 * // => 3
 *
 * _.size({ 'a': 1, 'b': 2 });
 * // => 2
 *
 * _.size('pebbles');
 * // => 7
 */

function size(collection) {
  if (collection == null) {
    return 0;
  }

  if ((0, _isArrayLike.default)(collection)) {
    return (0, _isString.default)(collection) ? (0, _stringSize.default)(collection) : collection.length;
  }

  var tag = (0, _getTag.default)(collection);

  if (tag == mapTag || tag == setTag) {
    return collection.size;
  }

  return (0, _baseKeys.default)(collection).length;
}

var _default = size;
exports.default = _default;
},{"./_baseKeys.js":"node_modules/lodash-es/_baseKeys.js","./_getTag.js":"node_modules/lodash-es/_getTag.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isString.js":"node_modules/lodash-es/isString.js","./_stringSize.js":"node_modules/lodash-es/_stringSize.js"}],"node_modules/lodash-es/slice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` from `start` up to, but not including, `end`.
 *
 * **Note:** This method is used instead of
 * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
 * returned.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function slice(array, start, end) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  if (end && typeof end != 'number' && (0, _isIterateeCall.default)(array, start, end)) {
    start = 0;
    end = length;
  } else {
    start = start == null ? 0 : (0, _toInteger.default)(start);
    end = end === undefined ? length : (0, _toInteger.default)(end);
  }

  return (0, _baseSlice.default)(array, start, end);
}

var _default = slice;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/snakeCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCompounder = _interopRequireDefault(require("./_createCompounder.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string` to
 * [snake case](https://en.wikipedia.org/wiki/Snake_case).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the snake cased string.
 * @example
 *
 * _.snakeCase('Foo Bar');
 * // => 'foo_bar'
 *
 * _.snakeCase('fooBar');
 * // => 'foo_bar'
 *
 * _.snakeCase('--FOO-BAR--');
 * // => 'foo_bar'
 */
var snakeCase = (0, _createCompounder.default)(function (result, word, index) {
  return result + (index ? '_' : '') + word.toLowerCase();
});
var _default = snakeCase;
exports.default = _default;
},{"./_createCompounder.js":"node_modules/lodash-es/_createCompounder.js"}],"node_modules/lodash-es/_baseSome.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseEach = _interopRequireDefault(require("./_baseEach.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function baseSome(collection, predicate) {
  var result;
  (0, _baseEach.default)(collection, function (value, index, collection) {
    result = predicate(value, index, collection);
    return !result;
  });
  return !!result;
}

var _default = baseSome;
exports.default = _default;
},{"./_baseEach.js":"node_modules/lodash-es/_baseEach.js"}],"node_modules/lodash-es/some.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arraySome = _interopRequireDefault(require("./_arraySome.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseSome = _interopRequireDefault(require("./_baseSome.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */
function some(collection, predicate, guard) {
  var func = (0, _isArray.default)(collection) ? _arraySome.default : _baseSome.default;

  if (guard && (0, _isIterateeCall.default)(collection, predicate, guard)) {
    predicate = undefined;
  }

  return func(collection, (0, _baseIteratee.default)(predicate, 3));
}

var _default = some;
exports.default = _default;
},{"./_arraySome.js":"node_modules/lodash-es/_arraySome.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseSome.js":"node_modules/lodash-es/_baseSome.js","./isArray.js":"node_modules/lodash-es/isArray.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js"}],"node_modules/lodash-es/sortBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseOrderBy = _interopRequireDefault(require("./_baseOrderBy.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
 */
var sortBy = (0, _baseRest.default)(function (collection, iteratees) {
  if (collection == null) {
    return [];
  }

  var length = iteratees.length;

  if (length > 1 && (0, _isIterateeCall.default)(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && (0, _isIterateeCall.default)(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }

  return (0, _baseOrderBy.default)(collection, (0, _baseFlatten.default)(iteratees, 1), []);
});
var _default = sortBy;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseOrderBy.js":"node_modules/lodash-es/_baseOrderBy.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js"}],"node_modules/lodash-es/_baseSortedIndexBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295,
    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeFloor = Math.floor,
    nativeMin = Math.min;
/**
 * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
 * which invokes `iteratee` for `value` and each element of `array` to compute
 * their sort ranking. The iteratee is invoked with one argument; (value).
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} iteratee The iteratee invoked per element.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */

function baseSortedIndexBy(array, value, iteratee, retHighest) {
  value = iteratee(value);
  var low = 0,
      high = array == null ? 0 : array.length,
      valIsNaN = value !== value,
      valIsNull = value === null,
      valIsSymbol = (0, _isSymbol.default)(value),
      valIsUndefined = value === undefined;

  while (low < high) {
    var mid = nativeFloor((low + high) / 2),
        computed = iteratee(array[mid]),
        othIsDefined = computed !== undefined,
        othIsNull = computed === null,
        othIsReflexive = computed === computed,
        othIsSymbol = (0, _isSymbol.default)(computed);

    if (valIsNaN) {
      var setLow = retHighest || othIsReflexive;
    } else if (valIsUndefined) {
      setLow = othIsReflexive && (retHighest || othIsDefined);
    } else if (valIsNull) {
      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
    } else if (valIsSymbol) {
      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
    } else if (othIsNull || othIsSymbol) {
      setLow = false;
    } else {
      setLow = retHighest ? computed <= value : computed < value;
    }

    if (setLow) {
      low = mid + 1;
    } else {
      high = mid;
    }
  }

  return nativeMin(high, MAX_ARRAY_INDEX);
}

var _default = baseSortedIndexBy;
exports.default = _default;
},{"./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/_baseSortedIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSortedIndexBy = _interopRequireDefault(require("./_baseSortedIndexBy.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295,
    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
/**
 * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
 * performs a binary search of `array` to determine the index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @private
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {boolean} [retHighest] Specify returning the highest qualified index.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 */

function baseSortedIndex(array, value, retHighest) {
  var low = 0,
      high = array == null ? low : array.length;

  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
    while (low < high) {
      var mid = low + high >>> 1,
          computed = array[mid];

      if (computed !== null && !(0, _isSymbol.default)(computed) && (retHighest ? computed <= value : computed < value)) {
        low = mid + 1;
      } else {
        high = mid;
      }
    }

    return high;
  }

  return (0, _baseSortedIndexBy.default)(array, value, _identity.default, retHighest);
}

var _default = baseSortedIndex;
exports.default = _default;
},{"./_baseSortedIndexBy.js":"node_modules/lodash-es/_baseSortedIndexBy.js","./identity.js":"node_modules/lodash-es/identity.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js"}],"node_modules/lodash-es/sortedIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSortedIndex = _interopRequireDefault(require("./_baseSortedIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Uses a binary search to determine the lowest index at which `value`
 * should be inserted into `array` in order to maintain its sort order.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * _.sortedIndex([30, 50], 40);
 * // => 1
 */
function sortedIndex(array, value) {
  return (0, _baseSortedIndex.default)(array, value);
}

var _default = sortedIndex;
exports.default = _default;
},{"./_baseSortedIndex.js":"node_modules/lodash-es/_baseSortedIndex.js"}],"node_modules/lodash-es/sortedIndexBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseSortedIndexBy = _interopRequireDefault(require("./_baseSortedIndexBy.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.sortedIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
 * // => 0
 */
function sortedIndexBy(array, value, iteratee) {
  return (0, _baseSortedIndexBy.default)(array, value, (0, _baseIteratee.default)(iteratee, 2));
}

var _default = sortedIndexBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseSortedIndexBy.js":"node_modules/lodash-es/_baseSortedIndexBy.js"}],"node_modules/lodash-es/sortedIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSortedIndex = _interopRequireDefault(require("./_baseSortedIndex.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.indexOf` except that it performs a binary
 * search on a sorted `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
 * // => 1
 */
function sortedIndexOf(array, value) {
  var length = array == null ? 0 : array.length;

  if (length) {
    var index = (0, _baseSortedIndex.default)(array, value);

    if (index < length && (0, _eq.default)(array[index], value)) {
      return index;
    }
  }

  return -1;
}

var _default = sortedIndexOf;
exports.default = _default;
},{"./_baseSortedIndex.js":"node_modules/lodash-es/_baseSortedIndex.js","./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/sortedLastIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSortedIndex = _interopRequireDefault(require("./_baseSortedIndex.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.sortedIndex` except that it returns the highest
 * index at which `value` should be inserted into `array` in order to
 * maintain its sort order.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
 * // => 4
 */
function sortedLastIndex(array, value) {
  return (0, _baseSortedIndex.default)(array, value, true);
}

var _default = sortedLastIndex;
exports.default = _default;
},{"./_baseSortedIndex.js":"node_modules/lodash-es/_baseSortedIndex.js"}],"node_modules/lodash-es/sortedLastIndexBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseSortedIndexBy = _interopRequireDefault(require("./_baseSortedIndexBy.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
 * which is invoked for `value` and each element of `array` to compute their
 * sort ranking. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The sorted array to inspect.
 * @param {*} value The value to evaluate.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the index at which `value` should be inserted
 *  into `array`.
 * @example
 *
 * var objects = [{ 'x': 4 }, { 'x': 5 }];
 *
 * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
 * // => 1
 *
 * // The `_.property` iteratee shorthand.
 * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
 * // => 1
 */
function sortedLastIndexBy(array, value, iteratee) {
  return (0, _baseSortedIndexBy.default)(array, value, (0, _baseIteratee.default)(iteratee, 2), true);
}

var _default = sortedLastIndexBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseSortedIndexBy.js":"node_modules/lodash-es/_baseSortedIndexBy.js"}],"node_modules/lodash-es/sortedLastIndexOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSortedIndex = _interopRequireDefault(require("./_baseSortedIndex.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.lastIndexOf` except that it performs a binary
 * search on a sorted `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 * @example
 *
 * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
 * // => 3
 */
function sortedLastIndexOf(array, value) {
  var length = array == null ? 0 : array.length;

  if (length) {
    var index = (0, _baseSortedIndex.default)(array, value, true) - 1;

    if ((0, _eq.default)(array[index], value)) {
      return index;
    }
  }

  return -1;
}

var _default = sortedLastIndexOf;
exports.default = _default;
},{"./_baseSortedIndex.js":"node_modules/lodash-es/_baseSortedIndex.js","./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/_baseSortedUniq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseSortedUniq(array, iteratee) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    if (!index || !(0, _eq.default)(computed, seen)) {
      var seen = computed;
      result[resIndex++] = value === 0 ? 0 : value;
    }
  }

  return result;
}

var _default = baseSortedUniq;
exports.default = _default;
},{"./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/sortedUniq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSortedUniq = _interopRequireDefault(require("./_baseSortedUniq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.uniq` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniq([1, 1, 2]);
 * // => [1, 2]
 */
function sortedUniq(array) {
  return array && array.length ? (0, _baseSortedUniq.default)(array) : [];
}

var _default = sortedUniq;
exports.default = _default;
},{"./_baseSortedUniq.js":"node_modules/lodash-es/_baseSortedUniq.js"}],"node_modules/lodash-es/sortedUniqBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseSortedUniq = _interopRequireDefault(require("./_baseSortedUniq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.uniqBy` except that it's designed and optimized
 * for sorted arrays.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
 * // => [1.1, 2.3]
 */
function sortedUniqBy(array, iteratee) {
  return array && array.length ? (0, _baseSortedUniq.default)(array, (0, _baseIteratee.default)(iteratee, 2)) : [];
}

var _default = sortedUniqBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseSortedUniq.js":"node_modules/lodash-es/_baseSortedUniq.js"}],"node_modules/lodash-es/split.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _hasUnicode = _interopRequireDefault(require("./_hasUnicode.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _isRegExp = _interopRequireDefault(require("./isRegExp.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;
/**
 * Splits `string` by `separator`.
 *
 * **Note:** This method is based on
 * [`String#split`](https://mdn.io/String/split).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to split.
 * @param {RegExp|string} separator The separator pattern to split by.
 * @param {number} [limit] The length to truncate results to.
 * @returns {Array} Returns the string segments.
 * @example
 *
 * _.split('a-b-c', '-', 2);
 * // => ['a', 'b']
 */

function split(string, separator, limit) {
  if (limit && typeof limit != 'number' && (0, _isIterateeCall.default)(string, separator, limit)) {
    separator = limit = undefined;
  }

  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;

  if (!limit) {
    return [];
  }

  string = (0, _toString.default)(string);

  if (string && (typeof separator == 'string' || separator != null && !(0, _isRegExp.default)(separator))) {
    separator = (0, _baseToString.default)(separator);

    if (!separator && (0, _hasUnicode.default)(string)) {
      return (0, _castSlice.default)((0, _stringToArray.default)(string), 0, limit);
    }
  }

  return string.split(separator, limit);
}

var _default = split;
exports.default = _default;
},{"./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_hasUnicode.js":"node_modules/lodash-es/_hasUnicode.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./isRegExp.js":"node_modules/lodash-es/isRegExp.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/spread.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax = Math.max;
/**
 * Creates a function that invokes `func` with the `this` binding of the
 * create function and an array of arguments much like
 * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
 *
 * **Note:** This method is based on the
 * [spread operator](https://mdn.io/spread_operator).
 *
 * @static
 * @memberOf _
 * @since 3.2.0
 * @category Function
 * @param {Function} func The function to spread arguments over.
 * @param {number} [start=0] The start position of the spread.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.spread(function(who, what) {
 *   return who + ' says ' + what;
 * });
 *
 * say(['fred', 'hello']);
 * // => 'fred says hello'
 *
 * var numbers = Promise.all([
 *   Promise.resolve(40),
 *   Promise.resolve(36)
 * ]);
 *
 * numbers.then(_.spread(function(x, y) {
 *   return x + y;
 * }));
 * // => a Promise of 76
 */

function spread(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  start = start == null ? 0 : nativeMax((0, _toInteger.default)(start), 0);
  return (0, _baseRest.default)(function (args) {
    var array = args[start],
        otherArgs = (0, _castSlice.default)(args, 0, start);

    if (array) {
      (0, _arrayPush.default)(otherArgs, array);
    }

    return (0, _apply.default)(func, this, otherArgs);
  });
}

var _default = spread;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/startCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCompounder = _interopRequireDefault(require("./_createCompounder.js"));

var _upperFirst = _interopRequireDefault(require("./upperFirst.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string` to
 * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
 *
 * @static
 * @memberOf _
 * @since 3.1.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the start cased string.
 * @example
 *
 * _.startCase('--foo-bar--');
 * // => 'Foo Bar'
 *
 * _.startCase('fooBar');
 * // => 'Foo Bar'
 *
 * _.startCase('__FOO_BAR__');
 * // => 'FOO BAR'
 */
var startCase = (0, _createCompounder.default)(function (result, word, index) {
  return result + (index ? ' ' : '') + (0, _upperFirst.default)(word);
});
var _default = startCase;
exports.default = _default;
},{"./_createCompounder.js":"node_modules/lodash-es/_createCompounder.js","./upperFirst.js":"node_modules/lodash-es/upperFirst.js"}],"node_modules/lodash-es/startsWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if `string` starts with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=0] The position to search from.
 * @returns {boolean} Returns `true` if `string` starts with `target`,
 *  else `false`.
 * @example
 *
 * _.startsWith('abc', 'a');
 * // => true
 *
 * _.startsWith('abc', 'b');
 * // => false
 *
 * _.startsWith('abc', 'b', 1);
 * // => true
 */
function startsWith(string, target, position) {
  string = (0, _toString.default)(string);
  position = position == null ? 0 : (0, _baseClamp.default)((0, _toInteger.default)(position), 0, string.length);
  target = (0, _baseToString.default)(target);
  return string.slice(position, position + target.length) == target;
}

var _default = startsWith;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/stubObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns a new empty object.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Object} Returns the new empty object.
 * @example
 *
 * var objects = _.times(2, _.stubObject);
 *
 * console.log(objects);
 * // => [{}, {}]
 *
 * console.log(objects[0] === objects[1]);
 * // => false
 */
function stubObject() {
  return {};
}

var _default = stubObject;
exports.default = _default;
},{}],"node_modules/lodash-es/stubString.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns an empty string.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {string} Returns the empty string.
 * @example
 *
 * _.times(2, _.stubString);
 * // => ['', '']
 */
function stubString() {
  return '';
}

var _default = stubString;
exports.default = _default;
},{}],"node_modules/lodash-es/stubTrue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method returns `true`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `true`.
 * @example
 *
 * _.times(2, _.stubTrue);
 * // => [true, true]
 */
function stubTrue() {
  return true;
}

var _default = stubTrue;
exports.default = _default;
},{}],"node_modules/lodash-es/subtract.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createMathOperation = _interopRequireDefault(require("./_createMathOperation.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Subtract two numbers.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {number} minuend The first number in a subtraction.
 * @param {number} subtrahend The second number in a subtraction.
 * @returns {number} Returns the difference.
 * @example
 *
 * _.subtract(6, 4);
 * // => 2
 */
var subtract = (0, _createMathOperation.default)(function (minuend, subtrahend) {
  return minuend - subtrahend;
}, 0);
var _default = subtract;
exports.default = _default;
},{"./_createMathOperation.js":"node_modules/lodash-es/_createMathOperation.js"}],"node_modules/lodash-es/sum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSum = _interopRequireDefault(require("./_baseSum.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Computes the sum of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the sum.
 * @example
 *
 * _.sum([4, 2, 8, 6]);
 * // => 20
 */
function sum(array) {
  return array && array.length ? (0, _baseSum.default)(array, _identity.default) : 0;
}

var _default = sum;
exports.default = _default;
},{"./_baseSum.js":"node_modules/lodash-es/_baseSum.js","./identity.js":"node_modules/lodash-es/identity.js"}],"node_modules/lodash-es/sumBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseSum = _interopRequireDefault(require("./_baseSum.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.sum` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the value to be summed.
 * The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {number} Returns the sum.
 * @example
 *
 * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
 *
 * _.sumBy(objects, function(o) { return o.n; });
 * // => 20
 *
 * // The `_.property` iteratee shorthand.
 * _.sumBy(objects, 'n');
 * // => 20
 */
function sumBy(array, iteratee) {
  return array && array.length ? (0, _baseSum.default)(array, (0, _baseIteratee.default)(iteratee, 2)) : 0;
}

var _default = sumBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseSum.js":"node_modules/lodash-es/_baseSum.js"}],"node_modules/lodash-es/tail.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Gets all but the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.tail([1, 2, 3]);
 * // => [2, 3]
 */
function tail(array) {
  var length = array == null ? 0 : array.length;
  return length ? (0, _baseSlice.default)(array, 1, length) : [];
}

var _default = tail;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js"}],"node_modules/lodash-es/take.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` with `n` elements taken from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.take([1, 2, 3]);
 * // => [1]
 *
 * _.take([1, 2, 3], 2);
 * // => [1, 2]
 *
 * _.take([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.take([1, 2, 3], 0);
 * // => []
 */
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }

  n = guard || n === undefined ? 1 : (0, _toInteger.default)(n);
  return (0, _baseSlice.default)(array, 0, n < 0 ? 0 : n);
}

var _default = take;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/takeRight.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSlice = _interopRequireDefault(require("./_baseSlice.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` with `n` elements taken from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.takeRight([1, 2, 3]);
 * // => [3]
 *
 * _.takeRight([1, 2, 3], 2);
 * // => [2, 3]
 *
 * _.takeRight([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.takeRight([1, 2, 3], 0);
 * // => []
 */
function takeRight(array, n, guard) {
  var length = array == null ? 0 : array.length;

  if (!length) {
    return [];
  }

  n = guard || n === undefined ? 1 : (0, _toInteger.default)(n);
  n = length - n;
  return (0, _baseSlice.default)(array, n < 0 ? 0 : n, length);
}

var _default = takeRight;
exports.default = _default;
},{"./_baseSlice.js":"node_modules/lodash-es/_baseSlice.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/takeRightWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseWhile = _interopRequireDefault(require("./_baseWhile.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` with elements taken from the end. Elements are
 * taken until `predicate` returns falsey. The predicate is invoked with
 * three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.takeRightWhile(users, function(o) { return !o.active; });
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.matches` iteratee shorthand.
 * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
 * // => objects for ['pebbles']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.takeRightWhile(users, ['active', false]);
 * // => objects for ['fred', 'pebbles']
 *
 * // The `_.property` iteratee shorthand.
 * _.takeRightWhile(users, 'active');
 * // => []
 */
function takeRightWhile(array, predicate) {
  return array && array.length ? (0, _baseWhile.default)(array, (0, _baseIteratee.default)(predicate, 3), false, true) : [];
}

var _default = takeRightWhile;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseWhile.js":"node_modules/lodash-es/_baseWhile.js"}],"node_modules/lodash-es/takeWhile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseWhile = _interopRequireDefault(require("./_baseWhile.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a slice of `array` with elements taken from the beginning. Elements
 * are taken until `predicate` returns falsey. The predicate is invoked with
 * three arguments: (value, index, array).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.takeWhile(users, function(o) { return !o.active; });
 * // => objects for ['barney', 'fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.takeWhile(users, { 'user': 'barney', 'active': false });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.takeWhile(users, ['active', false]);
 * // => objects for ['barney', 'fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.takeWhile(users, 'active');
 * // => []
 */
function takeWhile(array, predicate) {
  return array && array.length ? (0, _baseWhile.default)(array, (0, _baseIteratee.default)(predicate, 3)) : [];
}

var _default = takeWhile;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseWhile.js":"node_modules/lodash-es/_baseWhile.js"}],"node_modules/lodash-es/tap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method invokes `interceptor` and returns `value`. The interceptor
 * is invoked with one argument; (value). The purpose of this method is to
 * "tap into" a method chain sequence in order to modify intermediate results.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @param {*} value The value to provide to `interceptor`.
 * @param {Function} interceptor The function to invoke.
 * @returns {*} Returns `value`.
 * @example
 *
 * _([1, 2, 3])
 *  .tap(function(array) {
 *    // Mutate input array.
 *    array.pop();
 *  })
 *  .reverse()
 *  .value();
 * // => [2, 1]
 */
function tap(value, interceptor) {
  interceptor(value);
  return value;
}

var _default = tap;
exports.default = _default;
},{}],"node_modules/lodash-es/_customDefaultsAssignIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _eq = _interopRequireDefault(require("./eq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used for built-in method references. */
var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
 * of source objects to the destination object for all destination properties
 * that resolve to `undefined`.
 *
 * @private
 * @param {*} objValue The destination value.
 * @param {*} srcValue The source value.
 * @param {string} key The key of the property to assign.
 * @param {Object} object The parent object of `objValue`.
 * @returns {*} Returns the value to assign.
 */

function customDefaultsAssignIn(objValue, srcValue, key, object) {
  if (objValue === undefined || (0, _eq.default)(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {
    return srcValue;
  }

  return objValue;
}

var _default = customDefaultsAssignIn;
exports.default = _default;
},{"./eq.js":"node_modules/lodash-es/eq.js"}],"node_modules/lodash-es/_escapeStringChar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to escape characters for inclusion in compiled string literals. */
var stringEscapes = {
  '\\': '\\',
  "'": "'",
  '\n': 'n',
  '\r': 'r',
  '\u2028': 'u2028',
  '\u2029': 'u2029'
};
/**
 * Used by `_.template` to escape characters for inclusion in compiled string literals.
 *
 * @private
 * @param {string} chr The matched character to escape.
 * @returns {string} Returns the escaped character.
 */

function escapeStringChar(chr) {
  return '\\' + stringEscapes[chr];
}

var _default = escapeStringChar;
exports.default = _default;
},{}],"node_modules/lodash-es/_reInterpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match template delimiters. */
var reInterpolate = /<%=([\s\S]+?)%>/g;
var _default = reInterpolate;
exports.default = _default;
},{}],"node_modules/lodash-es/_reEscape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match template delimiters. */
var reEscape = /<%-([\s\S]+?)%>/g;
var _default = reEscape;
exports.default = _default;
},{}],"node_modules/lodash-es/_reEvaluate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/** Used to match template delimiters. */
var reEvaluate = /<%([\s\S]+?)%>/g;
var _default = reEvaluate;
exports.default = _default;
},{}],"node_modules/lodash-es/templateSettings.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _escape = _interopRequireDefault(require("./escape.js"));

var _reEscape = _interopRequireDefault(require("./_reEscape.js"));

var _reEvaluate = _interopRequireDefault(require("./_reEvaluate.js"));

var _reInterpolate = _interopRequireDefault(require("./_reInterpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * By default, the template delimiters used by lodash are like those in
 * embedded Ruby (ERB) as well as ES2015 template strings. Change the
 * following template settings to use alternative delimiters.
 *
 * @static
 * @memberOf _
 * @type {Object}
 */
var templateSettings = {
  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'escape': _reEscape.default,

  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'evaluate': _reEvaluate.default,

  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  'interpolate': _reInterpolate.default,

  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  'variable': '',

  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  'imports': {
    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    '_': {
      'escape': _escape.default
    }
  }
};
var _default = templateSettings;
exports.default = _default;
},{"./escape.js":"node_modules/lodash-es/escape.js","./_reEscape.js":"node_modules/lodash-es/_reEscape.js","./_reEvaluate.js":"node_modules/lodash-es/_reEvaluate.js","./_reInterpolate.js":"node_modules/lodash-es/_reInterpolate.js"}],"node_modules/lodash-es/template.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assignInWith = _interopRequireDefault(require("./assignInWith.js"));

var _attempt = _interopRequireDefault(require("./attempt.js"));

var _baseValues = _interopRequireDefault(require("./_baseValues.js"));

var _customDefaultsAssignIn = _interopRequireDefault(require("./_customDefaultsAssignIn.js"));

var _escapeStringChar = _interopRequireDefault(require("./_escapeStringChar.js"));

var _isError = _interopRequireDefault(require("./isError.js"));

var _isIterateeCall = _interopRequireDefault(require("./_isIterateeCall.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

var _reInterpolate = _interopRequireDefault(require("./_reInterpolate.js"));

var _templateSettings = _interopRequireDefault(require("./templateSettings.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match empty string literals in compiled template source. */
var reEmptyStringLeading = /\b__p \+= '';/g,
    reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
    reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
/**
 * Used to match
 * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
 */

var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
/** Used to ensure capturing order of template delimiters. */

var reNoMatch = /($^)/;
/** Used to match unescaped characters in compiled string literals. */

var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
/** Used for built-in method references. */

var objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Creates a compiled template function that can interpolate data properties
 * in "interpolate" delimiters, HTML-escape interpolated data properties in
 * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
 * properties may be accessed as free variables in the template. If a setting
 * object is given, it takes precedence over `_.templateSettings` values.
 *
 * **Note:** In the development build `_.template` utilizes
 * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
 * for easier debugging.
 *
 * For more information on precompiling templates see
 * [lodash's custom builds documentation](https://lodash.com/custom-builds).
 *
 * For more information on Chrome extension sandboxes see
 * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category String
 * @param {string} [string=''] The template string.
 * @param {Object} [options={}] The options object.
 * @param {RegExp} [options.escape=_.templateSettings.escape]
 *  The HTML "escape" delimiter.
 * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
 *  The "evaluate" delimiter.
 * @param {Object} [options.imports=_.templateSettings.imports]
 *  An object to import into the template as free variables.
 * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
 *  The "interpolate" delimiter.
 * @param {string} [options.sourceURL='templateSources[n]']
 *  The sourceURL of the compiled template.
 * @param {string} [options.variable='obj']
 *  The data object variable name.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the compiled template function.
 * @example
 *
 * // Use the "interpolate" delimiter to create a compiled template.
 * var compiled = _.template('hello <%= user %>!');
 * compiled({ 'user': 'fred' });
 * // => 'hello fred!'
 *
 * // Use the HTML "escape" delimiter to escape data property values.
 * var compiled = _.template('<b><%- value %></b>');
 * compiled({ 'value': '<script>' });
 * // => '<b>&lt;script&gt;</b>'
 *
 * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
 * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
 * compiled({ 'users': ['fred', 'barney'] });
 * // => '<li>fred</li><li>barney</li>'
 *
 * // Use the internal `print` function in "evaluate" delimiters.
 * var compiled = _.template('<% print("hello " + user); %>!');
 * compiled({ 'user': 'barney' });
 * // => 'hello barney!'
 *
 * // Use the ES template literal delimiter as an "interpolate" delimiter.
 * // Disable support by replacing the "interpolate" delimiter.
 * var compiled = _.template('hello ${ user }!');
 * compiled({ 'user': 'pebbles' });
 * // => 'hello pebbles!'
 *
 * // Use backslashes to treat delimiters as plain text.
 * var compiled = _.template('<%= "\\<%- value %\\>" %>');
 * compiled({ 'value': 'ignored' });
 * // => '<%- value %>'
 *
 * // Use the `imports` option to import `jQuery` as `jq`.
 * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
 * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
 * compiled({ 'users': ['fred', 'barney'] });
 * // => '<li>fred</li><li>barney</li>'
 *
 * // Use the `sourceURL` option to specify a custom sourceURL for the template.
 * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
 * compiled(data);
 * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
 *
 * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
 * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
 * compiled.source;
 * // => function(data) {
 * //   var __t, __p = '';
 * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
 * //   return __p;
 * // }
 *
 * // Use custom template delimiters.
 * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
 * var compiled = _.template('hello {{ user }}!');
 * compiled({ 'user': 'mustache' });
 * // => 'hello mustache!'
 *
 * // Use the `source` property to inline compiled templates for meaningful
 * // line numbers in error messages and stack traces.
 * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
 *   var JST = {\
 *     "main": ' + _.template(mainText).source + '\
 *   };\
 * ');
 */

function template(string, options, guard) {
  // Based on John Resig's `tmpl` implementation
  // (http://ejohn.org/blog/javascript-micro-templating/)
  // and Laura Doktorova's doT.js (https://github.com/olado/doT).
  var settings = _templateSettings.default.imports._.templateSettings || _templateSettings.default;

  if (guard && (0, _isIterateeCall.default)(string, options, guard)) {
    options = undefined;
  }

  string = (0, _toString.default)(string);
  options = (0, _assignInWith.default)({}, options, settings, _customDefaultsAssignIn.default);
  var imports = (0, _assignInWith.default)({}, options.imports, settings.imports, _customDefaultsAssignIn.default),
      importsKeys = (0, _keys.default)(imports),
      importsValues = (0, _baseValues.default)(imports, importsKeys);
  var isEscaping,
      isEvaluating,
      index = 0,
      interpolate = options.interpolate || reNoMatch,
      source = "__p += '"; // Compile the regexp to match each delimiter.

  var reDelimiters = RegExp((options.escape || reNoMatch).source + '|' + interpolate.source + '|' + (interpolate === _reInterpolate.default ? reEsTemplate : reNoMatch).source + '|' + (options.evaluate || reNoMatch).source + '|$', 'g'); // Use a sourceURL for easier debugging.
  // The sourceURL gets injected into the source that's eval-ed, so be careful
  // with lookup (in case of e.g. prototype pollution), and strip newlines if any.
  // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.

  var sourceURL = hasOwnProperty.call(options, 'sourceURL') ? '//# sourceURL=' + (options.sourceURL + '').replace(/[\r\n]/g, ' ') + '\n' : '';
  string.replace(reDelimiters, function (match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
    interpolateValue || (interpolateValue = esTemplateValue); // Escape characters that can't be included in string literals.

    source += string.slice(index, offset).replace(reUnescapedString, _escapeStringChar.default); // Replace delimiters with snippets.

    if (escapeValue) {
      isEscaping = true;
      source += "' +\n__e(" + escapeValue + ") +\n'";
    }

    if (evaluateValue) {
      isEvaluating = true;
      source += "';\n" + evaluateValue + ";\n__p += '";
    }

    if (interpolateValue) {
      source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
    }

    index = offset + match.length; // The JS engine embedded in Adobe products needs `match` returned in
    // order to produce the correct `offset` value.

    return match;
  });
  source += "';\n"; // If `variable` is not specified wrap a with-statement around the generated
  // code to add the data object to the top of the scope chain.
  // Like with sourceURL, we take care to not check the option's prototype,
  // as this configuration is a code injection vector.

  var variable = hasOwnProperty.call(options, 'variable') && options.variable;

  if (!variable) {
    source = 'with (obj) {\n' + source + '\n}\n';
  } // Cleanup code by stripping empty strings.


  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source).replace(reEmptyStringMiddle, '$1').replace(reEmptyStringTrailing, '$1;'); // Frame code as the function body.

  source = 'function(' + (variable || 'obj') + ') {\n' + (variable ? '' : 'obj || (obj = {});\n') + "var __t, __p = ''" + (isEscaping ? ', __e = _.escape' : '') + (isEvaluating ? ', __j = Array.prototype.join;\n' + "function print() { __p += __j.call(arguments, '') }\n" : ';\n') + source + 'return __p\n}';
  var result = (0, _attempt.default)(function () {
    return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);
  }); // Provide the compiled function's source by its `toString` method or
  // the `source` property as a convenience for inlining compiled templates.

  result.source = source;

  if ((0, _isError.default)(result)) {
    throw result;
  }

  return result;
}

var _default = template;
exports.default = _default;
},{"./assignInWith.js":"node_modules/lodash-es/assignInWith.js","./attempt.js":"node_modules/lodash-es/attempt.js","./_baseValues.js":"node_modules/lodash-es/_baseValues.js","./_customDefaultsAssignIn.js":"node_modules/lodash-es/_customDefaultsAssignIn.js","./_escapeStringChar.js":"node_modules/lodash-es/_escapeStringChar.js","./isError.js":"node_modules/lodash-es/isError.js","./_isIterateeCall.js":"node_modules/lodash-es/_isIterateeCall.js","./keys.js":"node_modules/lodash-es/keys.js","./_reInterpolate.js":"node_modules/lodash-es/_reInterpolate.js","./templateSettings.js":"node_modules/lodash-es/templateSettings.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/throttle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _debounce = _interopRequireDefault(require("./debounce.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';
/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */

function throttle(func, wait, options) {
  var leading = true,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }

  if ((0, _isObject.default)(options)) {
    leading = 'leading' in options ? !!options.leading : leading;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  return (0, _debounce.default)(func, wait, {
    'leading': leading,
    'maxWait': wait,
    'trailing': trailing
  });
}

var _default = throttle;
exports.default = _default;
},{"./debounce.js":"node_modules/lodash-es/debounce.js","./isObject.js":"node_modules/lodash-es/isObject.js"}],"node_modules/lodash-es/thru.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This method is like `_.tap` except that it returns the result of `interceptor`.
 * The purpose of this method is to "pass thru" values replacing intermediate
 * results in a method chain sequence.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Seq
 * @param {*} value The value to provide to `interceptor`.
 * @param {Function} interceptor The function to invoke.
 * @returns {*} Returns the result of `interceptor`.
 * @example
 *
 * _('  abc  ')
 *  .chain()
 *  .trim()
 *  .thru(function(value) {
 *    return [value];
 *  })
 *  .value();
 * // => ['abc']
 */
function thru(value, interceptor) {
  return interceptor(value);
}

var _default = thru;
exports.default = _default;
},{}],"node_modules/lodash-es/times.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseTimes = _interopRequireDefault(require("./_baseTimes.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/** Used as references for the maximum length and index of an array. */

var MAX_ARRAY_LENGTH = 4294967295;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMin = Math.min;
/**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */

function times(n, iteratee) {
  n = (0, _toInteger.default)(n);

  if (n < 1 || n > MAX_SAFE_INTEGER) {
    return [];
  }

  var index = MAX_ARRAY_LENGTH,
      length = nativeMin(n, MAX_ARRAY_LENGTH);
  iteratee = (0, _castFunction.default)(iteratee);
  n -= MAX_ARRAY_LENGTH;
  var result = (0, _baseTimes.default)(length, iteratee);

  while (++index < n) {
    iteratee(index);
  }

  return result;
}

var _default = times;
exports.default = _default;
},{"./_baseTimes.js":"node_modules/lodash-es/_baseTimes.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/toIterator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Enables the wrapper to be iterable.
 *
 * @name Symbol.iterator
 * @memberOf _
 * @since 4.0.0
 * @category Seq
 * @returns {Object} Returns the wrapper object.
 * @example
 *
 * var wrapped = _([1, 2]);
 *
 * wrapped[Symbol.iterator]() === wrapped;
 * // => true
 *
 * Array.from(wrapped);
 * // => [1, 2]
 */
function wrapperToIterator() {
  return this;
}

var _default = wrapperToIterator;
exports.default = _default;
},{}],"node_modules/lodash-es/_baseWrapperValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _arrayReduce = _interopRequireDefault(require("./_arrayReduce.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `wrapperValue` which returns the result of
 * performing a sequence of actions on the unwrapped `value`, where each
 * successive action is supplied the return value of the previous.
 *
 * @private
 * @param {*} value The unwrapped value.
 * @param {Array} actions Actions to perform to resolve the unwrapped value.
 * @returns {*} Returns the resolved value.
 */
function baseWrapperValue(value, actions) {
  var result = value;

  if (result instanceof _LazyWrapper.default) {
    result = result.value();
  }

  return (0, _arrayReduce.default)(actions, function (result, action) {
    return action.func.apply(action.thisArg, (0, _arrayPush.default)([result], action.args));
  }, result);
}

var _default = baseWrapperValue;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_arrayReduce.js":"node_modules/lodash-es/_arrayReduce.js"}],"node_modules/lodash-es/wrapperValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseWrapperValue = _interopRequireDefault(require("./_baseWrapperValue.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Executes the chain sequence to resolve the unwrapped value.
 *
 * @name value
 * @memberOf _
 * @since 0.1.0
 * @alias toJSON, valueOf
 * @category Seq
 * @returns {*} Returns the resolved unwrapped value.
 * @example
 *
 * _([1, 2, 3]).value();
 * // => [1, 2, 3]
 */
function wrapperValue() {
  return (0, _baseWrapperValue.default)(this.__wrapped__, this.__actions__);
}

var _default = wrapperValue;
exports.default = _default;
},{"./_baseWrapperValue.js":"node_modules/lodash-es/_baseWrapperValue.js"}],"node_modules/lodash-es/toJSON.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _wrapperValue.default;
  }
});

var _wrapperValue = _interopRequireDefault(require("./wrapperValue.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./wrapperValue.js":"node_modules/lodash-es/wrapperValue.js"}],"node_modules/lodash-es/toLower.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string`, as a whole, to lower case just like
 * [String#toLowerCase](https://mdn.io/toLowerCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the lower cased string.
 * @example
 *
 * _.toLower('--Foo-Bar--');
 * // => '--foo-bar--'
 *
 * _.toLower('fooBar');
 * // => 'foobar'
 *
 * _.toLower('__FOO_BAR__');
 * // => '__foo_bar__'
 */
function toLower(value) {
  return (0, _toString.default)(value).toLowerCase();
}

var _default = toLower;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/toPath.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

var _stringToPath = _interopRequireDefault(require("./_stringToPath.js"));

var _toKey = _interopRequireDefault(require("./_toKey.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `value` to a property path array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {*} value The value to convert.
 * @returns {Array} Returns the new property path array.
 * @example
 *
 * _.toPath('a.b.c');
 * // => ['a', 'b', 'c']
 *
 * _.toPath('a[0].b.c');
 * // => ['a', '0', 'b', 'c']
 */
function toPath(value) {
  if ((0, _isArray.default)(value)) {
    return (0, _arrayMap.default)(value, _toKey.default);
  }

  return (0, _isSymbol.default)(value) ? [value] : (0, _copyArray.default)((0, _stringToPath.default)((0, _toString.default)(value)));
}

var _default = toPath;
exports.default = _default;
},{"./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js","./_stringToPath.js":"node_modules/lodash-es/_stringToPath.js","./_toKey.js":"node_modules/lodash-es/_toKey.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/toSafeInteger.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseClamp = _interopRequireDefault(require("./_baseClamp.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Converts `value` to a safe integer. A safe integer can be compared and
 * represented correctly.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toSafeInteger(3.2);
 * // => 3
 *
 * _.toSafeInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toSafeInteger(Infinity);
 * // => 9007199254740991
 *
 * _.toSafeInteger('3.2');
 * // => 3
 */

function toSafeInteger(value) {
  return value ? (0, _baseClamp.default)((0, _toInteger.default)(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;
}

var _default = toSafeInteger;
exports.default = _default;
},{"./_baseClamp.js":"node_modules/lodash-es/_baseClamp.js","./toInteger.js":"node_modules/lodash-es/toInteger.js"}],"node_modules/lodash-es/toUpper.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string`, as a whole, to upper case just like
 * [String#toUpperCase](https://mdn.io/toUpperCase).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.toUpper('--foo-bar--');
 * // => '--FOO-BAR--'
 *
 * _.toUpper('fooBar');
 * // => 'FOOBAR'
 *
 * _.toUpper('__foo_bar__');
 * // => '__FOO_BAR__'
 */
function toUpper(value) {
  return (0, _toString.default)(value).toUpperCase();
}

var _default = toUpper;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _baseCreate = _interopRequireDefault(require("./_baseCreate.js"));

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _getPrototype = _interopRequireDefault(require("./_getPrototype.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * An alternative to `_.reduce`; this method transforms `object` to a new
 * `accumulator` object which is the result of running each of its own
 * enumerable string keyed properties thru `iteratee`, with each invocation
 * potentially mutating the `accumulator` object. If `accumulator` is not
 * provided, a new object with the same `[[Prototype]]` will be used. The
 * iteratee is invoked with four arguments: (accumulator, value, key, object).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The custom accumulator value.
 * @returns {*} Returns the accumulated value.
 * @example
 *
 * _.transform([2, 3, 4], function(result, n) {
 *   result.push(n *= n);
 *   return n % 2 == 0;
 * }, []);
 * // => [4, 9]
 *
 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] }
 */
function transform(object, iteratee, accumulator) {
  var isArr = (0, _isArray.default)(object),
      isArrLike = isArr || (0, _isBuffer.default)(object) || (0, _isTypedArray.default)(object);
  iteratee = (0, _baseIteratee.default)(iteratee, 4);

  if (accumulator == null) {
    var Ctor = object && object.constructor;

    if (isArrLike) {
      accumulator = isArr ? new Ctor() : [];
    } else if ((0, _isObject.default)(object)) {
      accumulator = (0, _isFunction.default)(Ctor) ? (0, _baseCreate.default)((0, _getPrototype.default)(object)) : {};
    } else {
      accumulator = {};
    }
  }

  (isArrLike ? _arrayEach.default : _baseForOwn.default)(object, function (value, index, object) {
    return iteratee(accumulator, value, index, object);
  });
  return accumulator;
}

var _default = transform;
exports.default = _default;
},{"./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_baseCreate.js":"node_modules/lodash-es/_baseCreate.js","./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_getPrototype.js":"node_modules/lodash-es/_getPrototype.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js"}],"node_modules/lodash-es/_charsEndIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIndexOf = _interopRequireDefault(require("./_baseIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && (0, _baseIndexOf.default)(chrSymbols, strSymbols[index], 0) > -1) {}

  return index;
}

var _default = charsEndIndex;
exports.default = _default;
},{"./_baseIndexOf.js":"node_modules/lodash-es/_baseIndexOf.js"}],"node_modules/lodash-es/_charsStartIndex.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIndexOf = _interopRequireDefault(require("./_baseIndexOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the first unmatched string symbol.
 */
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1,
      length = strSymbols.length;

  while (++index < length && (0, _baseIndexOf.default)(chrSymbols, strSymbols[index], 0) > -1) {}

  return index;
}

var _default = charsStartIndex;
exports.default = _default;
},{"./_baseIndexOf.js":"node_modules/lodash-es/_baseIndexOf.js"}],"node_modules/lodash-es/trim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _charsEndIndex = _interopRequireDefault(require("./_charsEndIndex.js"));

var _charsStartIndex = _interopRequireDefault(require("./_charsStartIndex.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;
/**
 * Removes leading and trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trim('  abc  ');
 * // => 'abc'
 *
 * _.trim('-_-abc-_-', '_-');
 * // => 'abc'
 *
 * _.map(['  foo  ', '  bar  '], _.trim);
 * // => ['foo', 'bar']
 */

function trim(string, chars, guard) {
  string = (0, _toString.default)(string);

  if (string && (guard || chars === undefined)) {
    return string.replace(reTrim, '');
  }

  if (!string || !(chars = (0, _baseToString.default)(chars))) {
    return string;
  }

  var strSymbols = (0, _stringToArray.default)(string),
      chrSymbols = (0, _stringToArray.default)(chars),
      start = (0, _charsStartIndex.default)(strSymbols, chrSymbols),
      end = (0, _charsEndIndex.default)(strSymbols, chrSymbols) + 1;
  return (0, _castSlice.default)(strSymbols, start, end).join('');
}

var _default = trim;
exports.default = _default;
},{"./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_charsEndIndex.js":"node_modules/lodash-es/_charsEndIndex.js","./_charsStartIndex.js":"node_modules/lodash-es/_charsStartIndex.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/trimEnd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _charsEndIndex = _interopRequireDefault(require("./_charsEndIndex.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match leading and trailing whitespace. */
var reTrimEnd = /\s+$/;
/**
 * Removes trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimEnd('  abc  ');
 * // => '  abc'
 *
 * _.trimEnd('-_-abc-_-', '_-');
 * // => '-_-abc'
 */

function trimEnd(string, chars, guard) {
  string = (0, _toString.default)(string);

  if (string && (guard || chars === undefined)) {
    return string.replace(reTrimEnd, '');
  }

  if (!string || !(chars = (0, _baseToString.default)(chars))) {
    return string;
  }

  var strSymbols = (0, _stringToArray.default)(string),
      end = (0, _charsEndIndex.default)(strSymbols, (0, _stringToArray.default)(chars)) + 1;
  return (0, _castSlice.default)(strSymbols, 0, end).join('');
}

var _default = trimEnd;
exports.default = _default;
},{"./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_charsEndIndex.js":"node_modules/lodash-es/_charsEndIndex.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/trimStart.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _charsStartIndex = _interopRequireDefault(require("./_charsStartIndex.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match leading and trailing whitespace. */
var reTrimStart = /^\s+/;
/**
 * Removes leading whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trimStart('  abc  ');
 * // => 'abc  '
 *
 * _.trimStart('-_-abc-_-', '_-');
 * // => 'abc-_-'
 */

function trimStart(string, chars, guard) {
  string = (0, _toString.default)(string);

  if (string && (guard || chars === undefined)) {
    return string.replace(reTrimStart, '');
  }

  if (!string || !(chars = (0, _baseToString.default)(chars))) {
    return string;
  }

  var strSymbols = (0, _stringToArray.default)(string),
      start = (0, _charsStartIndex.default)(strSymbols, (0, _stringToArray.default)(chars));
  return (0, _castSlice.default)(strSymbols, start).join('');
}

var _default = trimStart;
exports.default = _default;
},{"./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_charsStartIndex.js":"node_modules/lodash-es/_charsStartIndex.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/truncate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseToString = _interopRequireDefault(require("./_baseToString.js"));

var _castSlice = _interopRequireDefault(require("./_castSlice.js"));

var _hasUnicode = _interopRequireDefault(require("./_hasUnicode.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isRegExp = _interopRequireDefault(require("./isRegExp.js"));

var _stringSize = _interopRequireDefault(require("./_stringSize.js"));

var _stringToArray = _interopRequireDefault(require("./_stringToArray.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as default options for `_.truncate`. */
var DEFAULT_TRUNC_LENGTH = 30,
    DEFAULT_TRUNC_OMISSION = '...';
/** Used to match `RegExp` flags from their coerced string values. */

var reFlags = /\w*$/;
/**
 * Truncates `string` if it's longer than the given maximum string length.
 * The last characters of the truncated string are replaced with the omission
 * string which defaults to "...".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to truncate.
 * @param {Object} [options={}] The options object.
 * @param {number} [options.length=30] The maximum string length.
 * @param {string} [options.omission='...'] The string to indicate text is omitted.
 * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
 * @returns {string} Returns the truncated string.
 * @example
 *
 * _.truncate('hi-diddly-ho there, neighborino');
 * // => 'hi-diddly-ho there, neighbo...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': ' '
 * });
 * // => 'hi-diddly-ho there,...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'length': 24,
 *   'separator': /,? +/
 * });
 * // => 'hi-diddly-ho there...'
 *
 * _.truncate('hi-diddly-ho there, neighborino', {
 *   'omission': ' [...]'
 * });
 * // => 'hi-diddly-ho there, neig [...]'
 */

function truncate(string, options) {
  var length = DEFAULT_TRUNC_LENGTH,
      omission = DEFAULT_TRUNC_OMISSION;

  if ((0, _isObject.default)(options)) {
    var separator = 'separator' in options ? options.separator : separator;
    length = 'length' in options ? (0, _toInteger.default)(options.length) : length;
    omission = 'omission' in options ? (0, _baseToString.default)(options.omission) : omission;
  }

  string = (0, _toString.default)(string);
  var strLength = string.length;

  if ((0, _hasUnicode.default)(string)) {
    var strSymbols = (0, _stringToArray.default)(string);
    strLength = strSymbols.length;
  }

  if (length >= strLength) {
    return string;
  }

  var end = length - (0, _stringSize.default)(omission);

  if (end < 1) {
    return omission;
  }

  var result = strSymbols ? (0, _castSlice.default)(strSymbols, 0, end).join('') : string.slice(0, end);

  if (separator === undefined) {
    return result + omission;
  }

  if (strSymbols) {
    end += result.length - end;
  }

  if ((0, _isRegExp.default)(separator)) {
    if (string.slice(end).search(separator)) {
      var match,
          substring = result;

      if (!separator.global) {
        separator = RegExp(separator.source, (0, _toString.default)(reFlags.exec(separator)) + 'g');
      }

      separator.lastIndex = 0;

      while (match = separator.exec(substring)) {
        var newEnd = match.index;
      }

      result = result.slice(0, newEnd === undefined ? end : newEnd);
    }
  } else if (string.indexOf((0, _baseToString.default)(separator), end) != end) {
    var index = result.lastIndexOf(separator);

    if (index > -1) {
      result = result.slice(0, index);
    }
  }

  return result + omission;
}

var _default = truncate;
exports.default = _default;
},{"./_baseToString.js":"node_modules/lodash-es/_baseToString.js","./_castSlice.js":"node_modules/lodash-es/_castSlice.js","./_hasUnicode.js":"node_modules/lodash-es/_hasUnicode.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isRegExp.js":"node_modules/lodash-es/isRegExp.js","./_stringSize.js":"node_modules/lodash-es/_stringSize.js","./_stringToArray.js":"node_modules/lodash-es/_stringToArray.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/unary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ary = _interopRequireDefault(require("./ary.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that accepts up to one argument, ignoring any
 * additional arguments.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.unary(parseInt));
 * // => [6, 8, 10]
 */
function unary(func) {
  return (0, _ary.default)(func, 1);
}

var _default = unary;
exports.default = _default;
},{"./ary.js":"node_modules/lodash-es/ary.js"}],"node_modules/lodash-es/_unescapeHtmlChar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basePropertyOf = _interopRequireDefault(require("./_basePropertyOf.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to map HTML entities to characters. */
var htmlUnescapes = {
  '&amp;': '&',
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&#39;': "'"
};
/**
 * Used by `_.unescape` to convert HTML entities to characters.
 *
 * @private
 * @param {string} chr The matched character to unescape.
 * @returns {string} Returns the unescaped character.
 */

var unescapeHtmlChar = (0, _basePropertyOf.default)(htmlUnescapes);
var _default = unescapeHtmlChar;
exports.default = _default;
},{"./_basePropertyOf.js":"node_modules/lodash-es/_basePropertyOf.js"}],"node_modules/lodash-es/unescape.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

var _unescapeHtmlChar = _interopRequireDefault(require("./_unescapeHtmlChar.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to match HTML entities and HTML characters. */
var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
    reHasEscapedHtml = RegExp(reEscapedHtml.source);
/**
 * The inverse of `_.escape`; this method converts the HTML entities
 * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
 * their corresponding characters.
 *
 * **Note:** No other HTML entities are unescaped. To unescape additional
 * HTML entities use a third-party library like [_he_](https://mths.be/he).
 *
 * @static
 * @memberOf _
 * @since 0.6.0
 * @category String
 * @param {string} [string=''] The string to unescape.
 * @returns {string} Returns the unescaped string.
 * @example
 *
 * _.unescape('fred, barney, &amp; pebbles');
 * // => 'fred, barney, & pebbles'
 */

function unescape(string) {
  string = (0, _toString.default)(string);
  return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, _unescapeHtmlChar.default) : string;
}

var _default = unescape;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js","./_unescapeHtmlChar.js":"node_modules/lodash-es/_unescapeHtmlChar.js"}],"node_modules/lodash-es/_createSet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Set = _interopRequireDefault(require("./_Set.js"));

var _noop = _interopRequireDefault(require("./noop.js"));

var _setToArray = _interopRequireDefault(require("./_setToArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;
/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */

var createSet = !(_Set.default && 1 / (0, _setToArray.default)(new _Set.default([, -0]))[1] == INFINITY) ? _noop.default : function (values) {
  return new _Set.default(values);
};
var _default = createSet;
exports.default = _default;
},{"./_Set.js":"node_modules/lodash-es/_Set.js","./noop.js":"node_modules/lodash-es/noop.js","./_setToArray.js":"node_modules/lodash-es/_setToArray.js"}],"node_modules/lodash-es/_baseUniq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SetCache = _interopRequireDefault(require("./_SetCache.js"));

var _arrayIncludes = _interopRequireDefault(require("./_arrayIncludes.js"));

var _arrayIncludesWith = _interopRequireDefault(require("./_arrayIncludesWith.js"));

var _cacheHas = _interopRequireDefault(require("./_cacheHas.js"));

var _createSet = _interopRequireDefault(require("./_createSet.js"));

var _setToArray = _interopRequireDefault(require("./_setToArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;
/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */

function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes.default,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = _arrayIncludesWith.default;
  } else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : (0, _createSet.default)(array);

    if (set) {
      return (0, _setToArray.default)(set);
    }

    isCommon = false;
    includes = _cacheHas.default;
    seen = new _SetCache.default();
  } else {
    seen = iteratee ? [] : result;
  }

  outer: while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;
    value = comparator || value !== 0 ? value : 0;

    if (isCommon && computed === computed) {
      var seenIndex = seen.length;

      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }

      if (iteratee) {
        seen.push(computed);
      }

      result.push(value);
    } else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }

      result.push(value);
    }
  }

  return result;
}

var _default = baseUniq;
exports.default = _default;
},{"./_SetCache.js":"node_modules/lodash-es/_SetCache.js","./_arrayIncludes.js":"node_modules/lodash-es/_arrayIncludes.js","./_arrayIncludesWith.js":"node_modules/lodash-es/_arrayIncludesWith.js","./_cacheHas.js":"node_modules/lodash-es/_cacheHas.js","./_createSet.js":"node_modules/lodash-es/_createSet.js","./_setToArray.js":"node_modules/lodash-es/_setToArray.js"}],"node_modules/lodash-es/union.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of unique values, in order, from all given arrays using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.union([2], [1, 2]);
 * // => [2, 1]
 */
var union = (0, _baseRest.default)(function (arrays) {
  return (0, _baseUniq.default)((0, _baseFlatten.default)(arrays, 1, _isArrayLikeObject.default, true));
});
var _default = union;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js"}],"node_modules/lodash-es/unionBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.union` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which uniqueness is computed. Result values are chosen from the first
 * array in which the value occurs. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.unionBy([2.1], [1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
var unionBy = (0, _baseRest.default)(function (arrays) {
  var iteratee = (0, _last.default)(arrays);

  if ((0, _isArrayLikeObject.default)(iteratee)) {
    iteratee = undefined;
  }

  return (0, _baseUniq.default)((0, _baseFlatten.default)(arrays, 1, _isArrayLikeObject.default, true), (0, _baseIteratee.default)(iteratee, 2));
});
var _default = unionBy;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/unionWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.union` except that it accepts `comparator` which
 * is invoked to compare elements of `arrays`. Result values are chosen from
 * the first array in which the value occurs. The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.unionWith(objects, others, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
 */
var unionWith = (0, _baseRest.default)(function (arrays) {
  var comparator = (0, _last.default)(arrays);
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return (0, _baseUniq.default)((0, _baseFlatten.default)(arrays, 1, _isArrayLikeObject.default, true), undefined, comparator);
});
var _default = unionWith;
exports.default = _default;
},{"./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/uniq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return array && array.length ? (0, _baseUniq.default)(array) : [];
}

var _default = uniq;
exports.default = _default;
},{"./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js"}],"node_modules/lodash-es/uniqBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return array && array.length ? (0, _baseUniq.default)(array, (0, _baseIteratee.default)(iteratee, 2)) : [];
}

var _default = uniqBy;
exports.default = _default;
},{"./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js"}],"node_modules/lodash-es/uniqWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.uniq` except that it accepts `comparator` which
 * is invoked to compare elements of `array`. The order of result values is
 * determined by the order they occur in the array.The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.uniqWith(objects, _.isEqual);
 * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
 */
function uniqWith(array, comparator) {
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return array && array.length ? (0, _baseUniq.default)(array, undefined, comparator) : [];
}

var _default = uniqWith;
exports.default = _default;
},{"./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js"}],"node_modules/lodash-es/uniqueId.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to generate unique IDs. */
var idCounter = 0;
/**
 * Generates a unique ID. If `prefix` is given, the ID is appended to it.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {string} [prefix=''] The value to prefix the ID with.
 * @returns {string} Returns the unique ID.
 * @example
 *
 * _.uniqueId('contact_');
 * // => 'contact_104'
 *
 * _.uniqueId();
 * // => '105'
 */

function uniqueId(prefix) {
  var id = ++idCounter;
  return (0, _toString.default)(prefix) + id;
}

var _default = uniqueId;
exports.default = _default;
},{"./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/unset.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseUnset = _interopRequireDefault(require("./_baseUnset.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Removes the property at `path` of `object`.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to unset.
 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 7 } }] };
 * _.unset(object, 'a[0].b.c');
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 *
 * _.unset(object, ['a', '0', 'b', 'c']);
 * // => true
 *
 * console.log(object);
 * // => { 'a': [{ 'b': {} }] };
 */
function unset(object, path) {
  return object == null ? true : (0, _baseUnset.default)(object, path);
}

var _default = unset;
exports.default = _default;
},{"./_baseUnset.js":"node_modules/lodash-es/_baseUnset.js"}],"node_modules/lodash-es/unzip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _baseProperty = _interopRequireDefault(require("./_baseProperty.js"));

var _baseTimes = _interopRequireDefault(require("./_baseTimes.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;
/**
 * This method is like `_.zip` except that it accepts an array of grouped
 * elements and creates an array regrouping the elements to their pre-zip
 * configuration.
 *
 * @static
 * @memberOf _
 * @since 1.2.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 *
 * _.unzip(zipped);
 * // => [['a', 'b'], [1, 2], [true, false]]
 */

function unzip(array) {
  if (!(array && array.length)) {
    return [];
  }

  var length = 0;
  array = (0, _arrayFilter.default)(array, function (group) {
    if ((0, _isArrayLikeObject.default)(group)) {
      length = nativeMax(group.length, length);
      return true;
    }
  });
  return (0, _baseTimes.default)(length, function (index) {
    return (0, _arrayMap.default)(array, (0, _baseProperty.default)(index));
  });
}

var _default = unzip;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./_baseProperty.js":"node_modules/lodash-es/_baseProperty.js","./_baseTimes.js":"node_modules/lodash-es/_baseTimes.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js"}],"node_modules/lodash-es/unzipWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _apply = _interopRequireDefault(require("./_apply.js"));

var _arrayMap = _interopRequireDefault(require("./_arrayMap.js"));

var _unzip = _interopRequireDefault(require("./unzip.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.unzip` except that it accepts `iteratee` to specify
 * how regrouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {Array} array The array of grouped elements to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  regrouped values.
 * @returns {Array} Returns the new array of regrouped elements.
 * @example
 *
 * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
 * // => [[1, 10, 100], [2, 20, 200]]
 *
 * _.unzipWith(zipped, _.add);
 * // => [3, 30, 300]
 */
function unzipWith(array, iteratee) {
  if (!(array && array.length)) {
    return [];
  }

  var result = (0, _unzip.default)(array);

  if (iteratee == null) {
    return result;
  }

  return (0, _arrayMap.default)(result, function (group) {
    return (0, _apply.default)(iteratee, undefined, group);
  });
}

var _default = unzipWith;
exports.default = _default;
},{"./_apply.js":"node_modules/lodash-es/_apply.js","./_arrayMap.js":"node_modules/lodash-es/_arrayMap.js","./unzip.js":"node_modules/lodash-es/unzip.js"}],"node_modules/lodash-es/_baseUpdate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseGet = _interopRequireDefault(require("./_baseGet.js"));

var _baseSet = _interopRequireDefault(require("./_baseSet.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of `_.update`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to update.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseUpdate(object, path, updater, customizer) {
  return (0, _baseSet.default)(object, path, updater((0, _baseGet.default)(object, path)), customizer);
}

var _default = baseUpdate;
exports.default = _default;
},{"./_baseGet.js":"node_modules/lodash-es/_baseGet.js","./_baseSet.js":"node_modules/lodash-es/_baseSet.js"}],"node_modules/lodash-es/update.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseUpdate = _interopRequireDefault(require("./_baseUpdate.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.set` except that accepts `updater` to produce the
 * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
 * is invoked with one argument: (value).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {Function} updater The function to produce the updated value.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.update(object, 'a[0].b.c', function(n) { return n * n; });
 * console.log(object.a[0].b.c);
 * // => 9
 *
 * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
 * console.log(object.x[0].y.z);
 * // => 0
 */
function update(object, path, updater) {
  return object == null ? object : (0, _baseUpdate.default)(object, path, (0, _castFunction.default)(updater));
}

var _default = update;
exports.default = _default;
},{"./_baseUpdate.js":"node_modules/lodash-es/_baseUpdate.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js"}],"node_modules/lodash-es/updateWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseUpdate = _interopRequireDefault(require("./_baseUpdate.js"));

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.update` except that it accepts `customizer` which is
 * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
 * path creation is handled by the method instead. The `customizer` is invoked
 * with three arguments: (nsValue, key, nsObject).
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 4.6.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {Function} updater The function to produce the updated value.
 * @param {Function} [customizer] The function to customize assigned values.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {};
 *
 * _.updateWith(object, '[0][1]', _.constant('a'), Object);
 * // => { '0': { '1': 'a' } }
 */
function updateWith(object, path, updater, customizer) {
  customizer = typeof customizer == 'function' ? customizer : undefined;
  return object == null ? object : (0, _baseUpdate.default)(object, path, (0, _castFunction.default)(updater), customizer);
}

var _default = updateWith;
exports.default = _default;
},{"./_baseUpdate.js":"node_modules/lodash-es/_baseUpdate.js","./_castFunction.js":"node_modules/lodash-es/_castFunction.js"}],"node_modules/lodash-es/upperCase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _createCompounder = _interopRequireDefault(require("./_createCompounder.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts `string`, as space separated words, to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the upper cased string.
 * @example
 *
 * _.upperCase('--foo-bar');
 * // => 'FOO BAR'
 *
 * _.upperCase('fooBar');
 * // => 'FOO BAR'
 *
 * _.upperCase('__foo_bar__');
 * // => 'FOO BAR'
 */
var upperCase = (0, _createCompounder.default)(function (result, word, index) {
  return result + (index ? ' ' : '') + word.toUpperCase();
});
var _default = upperCase;
exports.default = _default;
},{"./_createCompounder.js":"node_modules/lodash-es/_createCompounder.js"}],"node_modules/lodash-es/value.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _wrapperValue.default;
  }
});

var _wrapperValue = _interopRequireDefault(require("./wrapperValue.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./wrapperValue.js":"node_modules/lodash-es/wrapperValue.js"}],"node_modules/lodash-es/valueOf.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _wrapperValue.default;
  }
});

var _wrapperValue = _interopRequireDefault(require("./wrapperValue.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./wrapperValue.js":"node_modules/lodash-es/wrapperValue.js"}],"node_modules/lodash-es/valuesIn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseValues = _interopRequireDefault(require("./_baseValues.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of the own and inherited enumerable string keyed property
 * values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.valuesIn(new Foo);
 * // => [1, 2, 3] (iteration order is not guaranteed)
 */
function valuesIn(object) {
  return object == null ? [] : (0, _baseValues.default)(object, (0, _keysIn.default)(object));
}

var _default = valuesIn;
exports.default = _default;
},{"./_baseValues.js":"node_modules/lodash-es/_baseValues.js","./keysIn.js":"node_modules/lodash-es/keysIn.js"}],"node_modules/lodash-es/without.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDifference = _interopRequireDefault(require("./_baseDifference.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = (0, _baseRest.default)(function (array, values) {
  return (0, _isArrayLikeObject.default)(array) ? (0, _baseDifference.default)(array, values) : [];
});
var _default = without;
exports.default = _default;
},{"./_baseDifference.js":"node_modules/lodash-es/_baseDifference.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js"}],"node_modules/lodash-es/wrap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castFunction = _interopRequireDefault(require("./_castFunction.js"));

var _partial = _interopRequireDefault(require("./partial.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a function that provides `value` to `wrapper` as its first
 * argument. Any additional arguments provided to the function are appended
 * to those provided to the `wrapper`. The wrapper is invoked with the `this`
 * binding of the created function.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {*} value The value to wrap.
 * @param {Function} [wrapper=identity] The wrapper function.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var p = _.wrap(_.escape, function(func, text) {
 *   return '<p>' + func(text) + '</p>';
 * });
 *
 * p('fred, barney, & pebbles');
 * // => '<p>fred, barney, &amp; pebbles</p>'
 */
function wrap(value, wrapper) {
  return (0, _partial.default)((0, _castFunction.default)(wrapper), value);
}

var _default = wrap;
exports.default = _default;
},{"./_castFunction.js":"node_modules/lodash-es/_castFunction.js","./partial.js":"node_modules/lodash-es/partial.js"}],"node_modules/lodash-es/wrapperAt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

var _baseAt = _interopRequireDefault(require("./_baseAt.js"));

var _flatRest = _interopRequireDefault(require("./_flatRest.js"));

var _isIndex = _interopRequireDefault(require("./_isIndex.js"));

var _thru = _interopRequireDefault(require("./thru.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is the wrapper version of `_.at`.
 *
 * @name at
 * @memberOf _
 * @since 1.0.0
 * @category Seq
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
 *
 * _(object).at(['a[0].b.c', 'a[1]']).value();
 * // => [3, 4]
 */
var wrapperAt = (0, _flatRest.default)(function (paths) {
  var length = paths.length,
      start = length ? paths[0] : 0,
      value = this.__wrapped__,
      interceptor = function (object) {
    return (0, _baseAt.default)(object, paths);
  };

  if (length > 1 || this.__actions__.length || !(value instanceof _LazyWrapper.default) || !(0, _isIndex.default)(start)) {
    return this.thru(interceptor);
  }

  value = value.slice(start, +start + (length ? 1 : 0));

  value.__actions__.push({
    'func': _thru.default,
    'args': [interceptor],
    'thisArg': undefined
  });

  return new _LodashWrapper.default(value, this.__chain__).thru(function (array) {
    if (length && !array.length) {
      array.push(undefined);
    }

    return array;
  });
});
var _default = wrapperAt;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js","./_baseAt.js":"node_modules/lodash-es/_baseAt.js","./_flatRest.js":"node_modules/lodash-es/_flatRest.js","./_isIndex.js":"node_modules/lodash-es/_isIndex.js","./thru.js":"node_modules/lodash-es/thru.js"}],"node_modules/lodash-es/wrapperChain.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chain = _interopRequireDefault(require("./chain.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
 *
 * @name chain
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 }
 * ];
 *
 * // A sequence without explicit chaining.
 * _(users).head();
 * // => { 'user': 'barney', 'age': 36 }
 *
 * // A sequence with explicit chaining.
 * _(users)
 *   .chain()
 *   .head()
 *   .pick('user')
 *   .value();
 * // => { 'user': 'barney' }
 */
function wrapperChain() {
  return (0, _chain.default)(this);
}

var _default = wrapperChain;
exports.default = _default;
},{"./chain.js":"node_modules/lodash-es/chain.js"}],"node_modules/lodash-es/wrapperReverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

var _reverse = _interopRequireDefault(require("./reverse.js"));

var _thru = _interopRequireDefault(require("./thru.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is the wrapper version of `_.reverse`.
 *
 * **Note:** This method mutates the wrapped array.
 *
 * @name reverse
 * @memberOf _
 * @since 0.1.0
 * @category Seq
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * var array = [1, 2, 3];
 *
 * _(array).reverse().value()
 * // => [3, 2, 1]
 *
 * console.log(array);
 * // => [3, 2, 1]
 */
function wrapperReverse() {
  var value = this.__wrapped__;

  if (value instanceof _LazyWrapper.default) {
    var wrapped = value;

    if (this.__actions__.length) {
      wrapped = new _LazyWrapper.default(this);
    }

    wrapped = wrapped.reverse();

    wrapped.__actions__.push({
      'func': _thru.default,
      'args': [_reverse.default],
      'thisArg': undefined
    });

    return new _LodashWrapper.default(wrapped, this.__chain__);
  }

  return this.thru(_reverse.default);
}

var _default = wrapperReverse;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js","./reverse.js":"node_modules/lodash-es/reverse.js","./thru.js":"node_modules/lodash-es/thru.js"}],"node_modules/lodash-es/_baseXor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseDifference = _interopRequireDefault(require("./_baseDifference.js"));

var _baseFlatten = _interopRequireDefault(require("./_baseFlatten.js"));

var _baseUniq = _interopRequireDefault(require("./_baseUniq.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The base implementation of methods like `_.xor`, without support for
 * iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of values.
 */
function baseXor(arrays, iteratee, comparator) {
  var length = arrays.length;

  if (length < 2) {
    return length ? (0, _baseUniq.default)(arrays[0]) : [];
  }

  var index = -1,
      result = Array(length);

  while (++index < length) {
    var array = arrays[index],
        othIndex = -1;

    while (++othIndex < length) {
      if (othIndex != index) {
        result[index] = (0, _baseDifference.default)(result[index] || array, arrays[othIndex], iteratee, comparator);
      }
    }
  }

  return (0, _baseUniq.default)((0, _baseFlatten.default)(result, 1), iteratee, comparator);
}

var _default = baseXor;
exports.default = _default;
},{"./_baseDifference.js":"node_modules/lodash-es/_baseDifference.js","./_baseFlatten.js":"node_modules/lodash-es/_baseFlatten.js","./_baseUniq.js":"node_modules/lodash-es/_baseUniq.js"}],"node_modules/lodash-es/xor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseXor = _interopRequireDefault(require("./_baseXor.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of unique values that is the
 * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
 * of the given arrays. The order of result values is determined by the order
 * they occur in the arrays.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.without
 * @example
 *
 * _.xor([2, 1], [2, 3]);
 * // => [1, 3]
 */
var xor = (0, _baseRest.default)(function (arrays) {
  return (0, _baseXor.default)((0, _arrayFilter.default)(arrays, _isArrayLikeObject.default));
});
var _default = xor;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseXor.js":"node_modules/lodash-es/_baseXor.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js"}],"node_modules/lodash-es/xorBy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseXor = _interopRequireDefault(require("./_baseXor.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.xor` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which by which they're compared. The order of result values is determined
 * by the order they occur in the arrays. The iteratee is invoked with one
 * argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
 * // => [1.2, 3.4]
 *
 * // The `_.property` iteratee shorthand.
 * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 2 }]
 */
var xorBy = (0, _baseRest.default)(function (arrays) {
  var iteratee = (0, _last.default)(arrays);

  if ((0, _isArrayLikeObject.default)(iteratee)) {
    iteratee = undefined;
  }

  return (0, _baseXor.default)((0, _arrayFilter.default)(arrays, _isArrayLikeObject.default), (0, _baseIteratee.default)(iteratee, 2));
});
var _default = xorBy;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseXor.js":"node_modules/lodash-es/_baseXor.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/xorWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _arrayFilter = _interopRequireDefault(require("./_arrayFilter.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _baseXor = _interopRequireDefault(require("./_baseXor.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _last = _interopRequireDefault(require("./last.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.xor` except that it accepts `comparator` which is
 * invoked to compare elements of `arrays`. The order of result values is
 * determined by the order they occur in the arrays. The comparator is invoked
 * with two arguments: (arrVal, othVal).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
 * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
 *
 * _.xorWith(objects, others, _.isEqual);
 * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
 */
var xorWith = (0, _baseRest.default)(function (arrays) {
  var comparator = (0, _last.default)(arrays);
  comparator = typeof comparator == 'function' ? comparator : undefined;
  return (0, _baseXor.default)((0, _arrayFilter.default)(arrays, _isArrayLikeObject.default), undefined, comparator);
});
var _default = xorWith;
exports.default = _default;
},{"./_arrayFilter.js":"node_modules/lodash-es/_arrayFilter.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_baseXor.js":"node_modules/lodash-es/_baseXor.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./last.js":"node_modules/lodash-es/last.js"}],"node_modules/lodash-es/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _unzip = _interopRequireDefault(require("./unzip.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates an array of grouped elements, the first of which contains the
 * first elements of the given arrays, the second of which contains the
 * second elements of the given arrays, and so on.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zip(['a', 'b'], [1, 2], [true, false]);
 * // => [['a', 1, true], ['b', 2, false]]
 */
var zip = (0, _baseRest.default)(_unzip.default);
var _default = zip;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./unzip.js":"node_modules/lodash-es/unzip.js"}],"node_modules/lodash-es/_baseZipObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
 *
 * @private
 * @param {Array} props The property identifiers.
 * @param {Array} values The property values.
 * @param {Function} assignFunc The function to assign values.
 * @returns {Object} Returns the new object.
 */
function baseZipObject(props, values, assignFunc) {
  var index = -1,
      length = props.length,
      valsLength = values.length,
      result = {};

  while (++index < length) {
    var value = index < valsLength ? values[index] : undefined;
    assignFunc(result, props[index], value);
  }

  return result;
}

var _default = baseZipObject;
exports.default = _default;
},{}],"node_modules/lodash-es/zipObject.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assignValue = _interopRequireDefault(require("./_assignValue.js"));

var _baseZipObject = _interopRequireDefault(require("./_baseZipObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.fromPairs` except that it accepts two arrays,
 * one of property identifiers and one of corresponding values.
 *
 * @static
 * @memberOf _
 * @since 0.4.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObject(['a', 'b'], [1, 2]);
 * // => { 'a': 1, 'b': 2 }
 */
function zipObject(props, values) {
  return (0, _baseZipObject.default)(props || [], values || [], _assignValue.default);
}

var _default = zipObject;
exports.default = _default;
},{"./_assignValue.js":"node_modules/lodash-es/_assignValue.js","./_baseZipObject.js":"node_modules/lodash-es/_baseZipObject.js"}],"node_modules/lodash-es/zipObjectDeep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseSet = _interopRequireDefault(require("./_baseSet.js"));

var _baseZipObject = _interopRequireDefault(require("./_baseZipObject.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.zipObject` except that it supports property paths.
 *
 * @static
 * @memberOf _
 * @since 4.1.0
 * @category Array
 * @param {Array} [props=[]] The property identifiers.
 * @param {Array} [values=[]] The property values.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
 * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
 */
function zipObjectDeep(props, values) {
  return (0, _baseZipObject.default)(props || [], values || [], _baseSet.default);
}

var _default = zipObjectDeep;
exports.default = _default;
},{"./_baseSet.js":"node_modules/lodash-es/_baseSet.js","./_baseZipObject.js":"node_modules/lodash-es/_baseZipObject.js"}],"node_modules/lodash-es/zipWith.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _unzipWith = _interopRequireDefault(require("./unzipWith.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * This method is like `_.zip` except that it accepts `iteratee` to specify
 * how grouped values should be combined. The iteratee is invoked with the
 * elements of each group: (...group).
 *
 * @static
 * @memberOf _
 * @since 3.8.0
 * @category Array
 * @param {...Array} [arrays] The arrays to process.
 * @param {Function} [iteratee=_.identity] The function to combine
 *  grouped values.
 * @returns {Array} Returns the new array of grouped elements.
 * @example
 *
 * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
 *   return a + b + c;
 * });
 * // => [111, 222]
 */
var zipWith = (0, _baseRest.default)(function (arrays) {
  var length = arrays.length,
      iteratee = length > 1 ? arrays[length - 1] : undefined;
  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
  return (0, _unzipWith.default)(arrays, iteratee);
});
var _default = zipWith;
exports.default = _default;
},{"./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./unzipWith.js":"node_modules/lodash-es/unzipWith.js"}],"node_modules/lodash-es/array.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _chunk = _interopRequireDefault(require("./chunk.js"));

var _compact = _interopRequireDefault(require("./compact.js"));

var _concat = _interopRequireDefault(require("./concat.js"));

var _difference = _interopRequireDefault(require("./difference.js"));

var _differenceBy = _interopRequireDefault(require("./differenceBy.js"));

var _differenceWith = _interopRequireDefault(require("./differenceWith.js"));

var _drop = _interopRequireDefault(require("./drop.js"));

var _dropRight = _interopRequireDefault(require("./dropRight.js"));

var _dropRightWhile = _interopRequireDefault(require("./dropRightWhile.js"));

var _dropWhile = _interopRequireDefault(require("./dropWhile.js"));

var _fill = _interopRequireDefault(require("./fill.js"));

var _findIndex = _interopRequireDefault(require("./findIndex.js"));

var _findLastIndex = _interopRequireDefault(require("./findLastIndex.js"));

var _first = _interopRequireDefault(require("./first.js"));

var _flatten = _interopRequireDefault(require("./flatten.js"));

var _flattenDeep = _interopRequireDefault(require("./flattenDeep.js"));

var _flattenDepth = _interopRequireDefault(require("./flattenDepth.js"));

var _fromPairs = _interopRequireDefault(require("./fromPairs.js"));

var _head = _interopRequireDefault(require("./head.js"));

var _indexOf = _interopRequireDefault(require("./indexOf.js"));

var _initial = _interopRequireDefault(require("./initial.js"));

var _intersection = _interopRequireDefault(require("./intersection.js"));

var _intersectionBy = _interopRequireDefault(require("./intersectionBy.js"));

var _intersectionWith = _interopRequireDefault(require("./intersectionWith.js"));

var _join = _interopRequireDefault(require("./join.js"));

var _last = _interopRequireDefault(require("./last.js"));

var _lastIndexOf = _interopRequireDefault(require("./lastIndexOf.js"));

var _nth = _interopRequireDefault(require("./nth.js"));

var _pull = _interopRequireDefault(require("./pull.js"));

var _pullAll = _interopRequireDefault(require("./pullAll.js"));

var _pullAllBy = _interopRequireDefault(require("./pullAllBy.js"));

var _pullAllWith = _interopRequireDefault(require("./pullAllWith.js"));

var _pullAt = _interopRequireDefault(require("./pullAt.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _reverse = _interopRequireDefault(require("./reverse.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _sortedIndex = _interopRequireDefault(require("./sortedIndex.js"));

var _sortedIndexBy = _interopRequireDefault(require("./sortedIndexBy.js"));

var _sortedIndexOf = _interopRequireDefault(require("./sortedIndexOf.js"));

var _sortedLastIndex = _interopRequireDefault(require("./sortedLastIndex.js"));

var _sortedLastIndexBy = _interopRequireDefault(require("./sortedLastIndexBy.js"));

var _sortedLastIndexOf = _interopRequireDefault(require("./sortedLastIndexOf.js"));

var _sortedUniq = _interopRequireDefault(require("./sortedUniq.js"));

var _sortedUniqBy = _interopRequireDefault(require("./sortedUniqBy.js"));

var _tail = _interopRequireDefault(require("./tail.js"));

var _take = _interopRequireDefault(require("./take.js"));

var _takeRight = _interopRequireDefault(require("./takeRight.js"));

var _takeRightWhile = _interopRequireDefault(require("./takeRightWhile.js"));

var _takeWhile = _interopRequireDefault(require("./takeWhile.js"));

var _union = _interopRequireDefault(require("./union.js"));

var _unionBy = _interopRequireDefault(require("./unionBy.js"));

var _unionWith = _interopRequireDefault(require("./unionWith.js"));

var _uniq = _interopRequireDefault(require("./uniq.js"));

var _uniqBy = _interopRequireDefault(require("./uniqBy.js"));

var _uniqWith = _interopRequireDefault(require("./uniqWith.js"));

var _unzip = _interopRequireDefault(require("./unzip.js"));

var _unzipWith = _interopRequireDefault(require("./unzipWith.js"));

var _without = _interopRequireDefault(require("./without.js"));

var _xor = _interopRequireDefault(require("./xor.js"));

var _xorBy = _interopRequireDefault(require("./xorBy.js"));

var _xorWith = _interopRequireDefault(require("./xorWith.js"));

var _zip = _interopRequireDefault(require("./zip.js"));

var _zipObject = _interopRequireDefault(require("./zipObject.js"));

var _zipObjectDeep = _interopRequireDefault(require("./zipObjectDeep.js"));

var _zipWith = _interopRequireDefault(require("./zipWith.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  chunk: _chunk.default,
  compact: _compact.default,
  concat: _concat.default,
  difference: _difference.default,
  differenceBy: _differenceBy.default,
  differenceWith: _differenceWith.default,
  drop: _drop.default,
  dropRight: _dropRight.default,
  dropRightWhile: _dropRightWhile.default,
  dropWhile: _dropWhile.default,
  fill: _fill.default,
  findIndex: _findIndex.default,
  findLastIndex: _findLastIndex.default,
  first: _first.default,
  flatten: _flatten.default,
  flattenDeep: _flattenDeep.default,
  flattenDepth: _flattenDepth.default,
  fromPairs: _fromPairs.default,
  head: _head.default,
  indexOf: _indexOf.default,
  initial: _initial.default,
  intersection: _intersection.default,
  intersectionBy: _intersectionBy.default,
  intersectionWith: _intersectionWith.default,
  join: _join.default,
  last: _last.default,
  lastIndexOf: _lastIndexOf.default,
  nth: _nth.default,
  pull: _pull.default,
  pullAll: _pullAll.default,
  pullAllBy: _pullAllBy.default,
  pullAllWith: _pullAllWith.default,
  pullAt: _pullAt.default,
  remove: _remove.default,
  reverse: _reverse.default,
  slice: _slice.default,
  sortedIndex: _sortedIndex.default,
  sortedIndexBy: _sortedIndexBy.default,
  sortedIndexOf: _sortedIndexOf.default,
  sortedLastIndex: _sortedLastIndex.default,
  sortedLastIndexBy: _sortedLastIndexBy.default,
  sortedLastIndexOf: _sortedLastIndexOf.default,
  sortedUniq: _sortedUniq.default,
  sortedUniqBy: _sortedUniqBy.default,
  tail: _tail.default,
  take: _take.default,
  takeRight: _takeRight.default,
  takeRightWhile: _takeRightWhile.default,
  takeWhile: _takeWhile.default,
  union: _union.default,
  unionBy: _unionBy.default,
  unionWith: _unionWith.default,
  uniq: _uniq.default,
  uniqBy: _uniqBy.default,
  uniqWith: _uniqWith.default,
  unzip: _unzip.default,
  unzipWith: _unzipWith.default,
  without: _without.default,
  xor: _xor.default,
  xorBy: _xorBy.default,
  xorWith: _xorWith.default,
  zip: _zip.default,
  zipObject: _zipObject.default,
  zipObjectDeep: _zipObjectDeep.default,
  zipWith: _zipWith.default
};
exports.default = _default;
},{"./chunk.js":"node_modules/lodash-es/chunk.js","./compact.js":"node_modules/lodash-es/compact.js","./concat.js":"node_modules/lodash-es/concat.js","./difference.js":"node_modules/lodash-es/difference.js","./differenceBy.js":"node_modules/lodash-es/differenceBy.js","./differenceWith.js":"node_modules/lodash-es/differenceWith.js","./drop.js":"node_modules/lodash-es/drop.js","./dropRight.js":"node_modules/lodash-es/dropRight.js","./dropRightWhile.js":"node_modules/lodash-es/dropRightWhile.js","./dropWhile.js":"node_modules/lodash-es/dropWhile.js","./fill.js":"node_modules/lodash-es/fill.js","./findIndex.js":"node_modules/lodash-es/findIndex.js","./findLastIndex.js":"node_modules/lodash-es/findLastIndex.js","./first.js":"node_modules/lodash-es/first.js","./flatten.js":"node_modules/lodash-es/flatten.js","./flattenDeep.js":"node_modules/lodash-es/flattenDeep.js","./flattenDepth.js":"node_modules/lodash-es/flattenDepth.js","./fromPairs.js":"node_modules/lodash-es/fromPairs.js","./head.js":"node_modules/lodash-es/head.js","./indexOf.js":"node_modules/lodash-es/indexOf.js","./initial.js":"node_modules/lodash-es/initial.js","./intersection.js":"node_modules/lodash-es/intersection.js","./intersectionBy.js":"node_modules/lodash-es/intersectionBy.js","./intersectionWith.js":"node_modules/lodash-es/intersectionWith.js","./join.js":"node_modules/lodash-es/join.js","./last.js":"node_modules/lodash-es/last.js","./lastIndexOf.js":"node_modules/lodash-es/lastIndexOf.js","./nth.js":"node_modules/lodash-es/nth.js","./pull.js":"node_modules/lodash-es/pull.js","./pullAll.js":"node_modules/lodash-es/pullAll.js","./pullAllBy.js":"node_modules/lodash-es/pullAllBy.js","./pullAllWith.js":"node_modules/lodash-es/pullAllWith.js","./pullAt.js":"node_modules/lodash-es/pullAt.js","./remove.js":"node_modules/lodash-es/remove.js","./reverse.js":"node_modules/lodash-es/reverse.js","./slice.js":"node_modules/lodash-es/slice.js","./sortedIndex.js":"node_modules/lodash-es/sortedIndex.js","./sortedIndexBy.js":"node_modules/lodash-es/sortedIndexBy.js","./sortedIndexOf.js":"node_modules/lodash-es/sortedIndexOf.js","./sortedLastIndex.js":"node_modules/lodash-es/sortedLastIndex.js","./sortedLastIndexBy.js":"node_modules/lodash-es/sortedLastIndexBy.js","./sortedLastIndexOf.js":"node_modules/lodash-es/sortedLastIndexOf.js","./sortedUniq.js":"node_modules/lodash-es/sortedUniq.js","./sortedUniqBy.js":"node_modules/lodash-es/sortedUniqBy.js","./tail.js":"node_modules/lodash-es/tail.js","./take.js":"node_modules/lodash-es/take.js","./takeRight.js":"node_modules/lodash-es/takeRight.js","./takeRightWhile.js":"node_modules/lodash-es/takeRightWhile.js","./takeWhile.js":"node_modules/lodash-es/takeWhile.js","./union.js":"node_modules/lodash-es/union.js","./unionBy.js":"node_modules/lodash-es/unionBy.js","./unionWith.js":"node_modules/lodash-es/unionWith.js","./uniq.js":"node_modules/lodash-es/uniq.js","./uniqBy.js":"node_modules/lodash-es/uniqBy.js","./uniqWith.js":"node_modules/lodash-es/uniqWith.js","./unzip.js":"node_modules/lodash-es/unzip.js","./unzipWith.js":"node_modules/lodash-es/unzipWith.js","./without.js":"node_modules/lodash-es/without.js","./xor.js":"node_modules/lodash-es/xor.js","./xorBy.js":"node_modules/lodash-es/xorBy.js","./xorWith.js":"node_modules/lodash-es/xorWith.js","./zip.js":"node_modules/lodash-es/zip.js","./zipObject.js":"node_modules/lodash-es/zipObject.js","./zipObjectDeep.js":"node_modules/lodash-es/zipObjectDeep.js","./zipWith.js":"node_modules/lodash-es/zipWith.js"}],"node_modules/lodash-es/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chunk", {
  enumerable: true,
  get: function () {
    return _chunk.default;
  }
});
Object.defineProperty(exports, "compact", {
  enumerable: true,
  get: function () {
    return _compact.default;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function () {
    return _concat.default;
  }
});
Object.defineProperty(exports, "difference", {
  enumerable: true,
  get: function () {
    return _difference.default;
  }
});
Object.defineProperty(exports, "differenceBy", {
  enumerable: true,
  get: function () {
    return _differenceBy.default;
  }
});
Object.defineProperty(exports, "differenceWith", {
  enumerable: true,
  get: function () {
    return _differenceWith.default;
  }
});
Object.defineProperty(exports, "drop", {
  enumerable: true,
  get: function () {
    return _drop.default;
  }
});
Object.defineProperty(exports, "dropRight", {
  enumerable: true,
  get: function () {
    return _dropRight.default;
  }
});
Object.defineProperty(exports, "dropRightWhile", {
  enumerable: true,
  get: function () {
    return _dropRightWhile.default;
  }
});
Object.defineProperty(exports, "dropWhile", {
  enumerable: true,
  get: function () {
    return _dropWhile.default;
  }
});
Object.defineProperty(exports, "fill", {
  enumerable: true,
  get: function () {
    return _fill.default;
  }
});
Object.defineProperty(exports, "findIndex", {
  enumerable: true,
  get: function () {
    return _findIndex.default;
  }
});
Object.defineProperty(exports, "findLastIndex", {
  enumerable: true,
  get: function () {
    return _findLastIndex.default;
  }
});
Object.defineProperty(exports, "first", {
  enumerable: true,
  get: function () {
    return _first.default;
  }
});
Object.defineProperty(exports, "flatten", {
  enumerable: true,
  get: function () {
    return _flatten.default;
  }
});
Object.defineProperty(exports, "flattenDeep", {
  enumerable: true,
  get: function () {
    return _flattenDeep.default;
  }
});
Object.defineProperty(exports, "flattenDepth", {
  enumerable: true,
  get: function () {
    return _flattenDepth.default;
  }
});
Object.defineProperty(exports, "fromPairs", {
  enumerable: true,
  get: function () {
    return _fromPairs.default;
  }
});
Object.defineProperty(exports, "head", {
  enumerable: true,
  get: function () {
    return _head.default;
  }
});
Object.defineProperty(exports, "indexOf", {
  enumerable: true,
  get: function () {
    return _indexOf.default;
  }
});
Object.defineProperty(exports, "initial", {
  enumerable: true,
  get: function () {
    return _initial.default;
  }
});
Object.defineProperty(exports, "intersection", {
  enumerable: true,
  get: function () {
    return _intersection.default;
  }
});
Object.defineProperty(exports, "intersectionBy", {
  enumerable: true,
  get: function () {
    return _intersectionBy.default;
  }
});
Object.defineProperty(exports, "intersectionWith", {
  enumerable: true,
  get: function () {
    return _intersectionWith.default;
  }
});
Object.defineProperty(exports, "join", {
  enumerable: true,
  get: function () {
    return _join.default;
  }
});
Object.defineProperty(exports, "last", {
  enumerable: true,
  get: function () {
    return _last.default;
  }
});
Object.defineProperty(exports, "lastIndexOf", {
  enumerable: true,
  get: function () {
    return _lastIndexOf.default;
  }
});
Object.defineProperty(exports, "nth", {
  enumerable: true,
  get: function () {
    return _nth.default;
  }
});
Object.defineProperty(exports, "pull", {
  enumerable: true,
  get: function () {
    return _pull.default;
  }
});
Object.defineProperty(exports, "pullAll", {
  enumerable: true,
  get: function () {
    return _pullAll.default;
  }
});
Object.defineProperty(exports, "pullAllBy", {
  enumerable: true,
  get: function () {
    return _pullAllBy.default;
  }
});
Object.defineProperty(exports, "pullAllWith", {
  enumerable: true,
  get: function () {
    return _pullAllWith.default;
  }
});
Object.defineProperty(exports, "pullAt", {
  enumerable: true,
  get: function () {
    return _pullAt.default;
  }
});
Object.defineProperty(exports, "remove", {
  enumerable: true,
  get: function () {
    return _remove.default;
  }
});
Object.defineProperty(exports, "reverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});
Object.defineProperty(exports, "slice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "sortedIndex", {
  enumerable: true,
  get: function () {
    return _sortedIndex.default;
  }
});
Object.defineProperty(exports, "sortedIndexBy", {
  enumerable: true,
  get: function () {
    return _sortedIndexBy.default;
  }
});
Object.defineProperty(exports, "sortedIndexOf", {
  enumerable: true,
  get: function () {
    return _sortedIndexOf.default;
  }
});
Object.defineProperty(exports, "sortedLastIndex", {
  enumerable: true,
  get: function () {
    return _sortedLastIndex.default;
  }
});
Object.defineProperty(exports, "sortedLastIndexBy", {
  enumerable: true,
  get: function () {
    return _sortedLastIndexBy.default;
  }
});
Object.defineProperty(exports, "sortedLastIndexOf", {
  enumerable: true,
  get: function () {
    return _sortedLastIndexOf.default;
  }
});
Object.defineProperty(exports, "sortedUniq", {
  enumerable: true,
  get: function () {
    return _sortedUniq.default;
  }
});
Object.defineProperty(exports, "sortedUniqBy", {
  enumerable: true,
  get: function () {
    return _sortedUniqBy.default;
  }
});
Object.defineProperty(exports, "tail", {
  enumerable: true,
  get: function () {
    return _tail.default;
  }
});
Object.defineProperty(exports, "take", {
  enumerable: true,
  get: function () {
    return _take.default;
  }
});
Object.defineProperty(exports, "takeRight", {
  enumerable: true,
  get: function () {
    return _takeRight.default;
  }
});
Object.defineProperty(exports, "takeRightWhile", {
  enumerable: true,
  get: function () {
    return _takeRightWhile.default;
  }
});
Object.defineProperty(exports, "takeWhile", {
  enumerable: true,
  get: function () {
    return _takeWhile.default;
  }
});
Object.defineProperty(exports, "union", {
  enumerable: true,
  get: function () {
    return _union.default;
  }
});
Object.defineProperty(exports, "unionBy", {
  enumerable: true,
  get: function () {
    return _unionBy.default;
  }
});
Object.defineProperty(exports, "unionWith", {
  enumerable: true,
  get: function () {
    return _unionWith.default;
  }
});
Object.defineProperty(exports, "uniq", {
  enumerable: true,
  get: function () {
    return _uniq.default;
  }
});
Object.defineProperty(exports, "uniqBy", {
  enumerable: true,
  get: function () {
    return _uniqBy.default;
  }
});
Object.defineProperty(exports, "uniqWith", {
  enumerable: true,
  get: function () {
    return _uniqWith.default;
  }
});
Object.defineProperty(exports, "unzip", {
  enumerable: true,
  get: function () {
    return _unzip.default;
  }
});
Object.defineProperty(exports, "unzipWith", {
  enumerable: true,
  get: function () {
    return _unzipWith.default;
  }
});
Object.defineProperty(exports, "without", {
  enumerable: true,
  get: function () {
    return _without.default;
  }
});
Object.defineProperty(exports, "xor", {
  enumerable: true,
  get: function () {
    return _xor.default;
  }
});
Object.defineProperty(exports, "xorBy", {
  enumerable: true,
  get: function () {
    return _xorBy.default;
  }
});
Object.defineProperty(exports, "xorWith", {
  enumerable: true,
  get: function () {
    return _xorWith.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});
Object.defineProperty(exports, "zipObject", {
  enumerable: true,
  get: function () {
    return _zipObject.default;
  }
});
Object.defineProperty(exports, "zipObjectDeep", {
  enumerable: true,
  get: function () {
    return _zipObjectDeep.default;
  }
});
Object.defineProperty(exports, "zipWith", {
  enumerable: true,
  get: function () {
    return _zipWith.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _arrayDefault.default;
  }
});

var _chunk = _interopRequireDefault(require("./chunk.js"));

var _compact = _interopRequireDefault(require("./compact.js"));

var _concat = _interopRequireDefault(require("./concat.js"));

var _difference = _interopRequireDefault(require("./difference.js"));

var _differenceBy = _interopRequireDefault(require("./differenceBy.js"));

var _differenceWith = _interopRequireDefault(require("./differenceWith.js"));

var _drop = _interopRequireDefault(require("./drop.js"));

var _dropRight = _interopRequireDefault(require("./dropRight.js"));

var _dropRightWhile = _interopRequireDefault(require("./dropRightWhile.js"));

var _dropWhile = _interopRequireDefault(require("./dropWhile.js"));

var _fill = _interopRequireDefault(require("./fill.js"));

var _findIndex = _interopRequireDefault(require("./findIndex.js"));

var _findLastIndex = _interopRequireDefault(require("./findLastIndex.js"));

var _first = _interopRequireDefault(require("./first.js"));

var _flatten = _interopRequireDefault(require("./flatten.js"));

var _flattenDeep = _interopRequireDefault(require("./flattenDeep.js"));

var _flattenDepth = _interopRequireDefault(require("./flattenDepth.js"));

var _fromPairs = _interopRequireDefault(require("./fromPairs.js"));

var _head = _interopRequireDefault(require("./head.js"));

var _indexOf = _interopRequireDefault(require("./indexOf.js"));

var _initial = _interopRequireDefault(require("./initial.js"));

var _intersection = _interopRequireDefault(require("./intersection.js"));

var _intersectionBy = _interopRequireDefault(require("./intersectionBy.js"));

var _intersectionWith = _interopRequireDefault(require("./intersectionWith.js"));

var _join = _interopRequireDefault(require("./join.js"));

var _last = _interopRequireDefault(require("./last.js"));

var _lastIndexOf = _interopRequireDefault(require("./lastIndexOf.js"));

var _nth = _interopRequireDefault(require("./nth.js"));

var _pull = _interopRequireDefault(require("./pull.js"));

var _pullAll = _interopRequireDefault(require("./pullAll.js"));

var _pullAllBy = _interopRequireDefault(require("./pullAllBy.js"));

var _pullAllWith = _interopRequireDefault(require("./pullAllWith.js"));

var _pullAt = _interopRequireDefault(require("./pullAt.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _reverse = _interopRequireDefault(require("./reverse.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _sortedIndex = _interopRequireDefault(require("./sortedIndex.js"));

var _sortedIndexBy = _interopRequireDefault(require("./sortedIndexBy.js"));

var _sortedIndexOf = _interopRequireDefault(require("./sortedIndexOf.js"));

var _sortedLastIndex = _interopRequireDefault(require("./sortedLastIndex.js"));

var _sortedLastIndexBy = _interopRequireDefault(require("./sortedLastIndexBy.js"));

var _sortedLastIndexOf = _interopRequireDefault(require("./sortedLastIndexOf.js"));

var _sortedUniq = _interopRequireDefault(require("./sortedUniq.js"));

var _sortedUniqBy = _interopRequireDefault(require("./sortedUniqBy.js"));

var _tail = _interopRequireDefault(require("./tail.js"));

var _take = _interopRequireDefault(require("./take.js"));

var _takeRight = _interopRequireDefault(require("./takeRight.js"));

var _takeRightWhile = _interopRequireDefault(require("./takeRightWhile.js"));

var _takeWhile = _interopRequireDefault(require("./takeWhile.js"));

var _union = _interopRequireDefault(require("./union.js"));

var _unionBy = _interopRequireDefault(require("./unionBy.js"));

var _unionWith = _interopRequireDefault(require("./unionWith.js"));

var _uniq = _interopRequireDefault(require("./uniq.js"));

var _uniqBy = _interopRequireDefault(require("./uniqBy.js"));

var _uniqWith = _interopRequireDefault(require("./uniqWith.js"));

var _unzip = _interopRequireDefault(require("./unzip.js"));

var _unzipWith = _interopRequireDefault(require("./unzipWith.js"));

var _without = _interopRequireDefault(require("./without.js"));

var _xor = _interopRequireDefault(require("./xor.js"));

var _xorBy = _interopRequireDefault(require("./xorBy.js"));

var _xorWith = _interopRequireDefault(require("./xorWith.js"));

var _zip = _interopRequireDefault(require("./zip.js"));

var _zipObject = _interopRequireDefault(require("./zipObject.js"));

var _zipObjectDeep = _interopRequireDefault(require("./zipObjectDeep.js"));

var _zipWith = _interopRequireDefault(require("./zipWith.js"));

var _arrayDefault = _interopRequireDefault(require("./array.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./chunk.js":"node_modules/lodash-es/chunk.js","./compact.js":"node_modules/lodash-es/compact.js","./concat.js":"node_modules/lodash-es/concat.js","./difference.js":"node_modules/lodash-es/difference.js","./differenceBy.js":"node_modules/lodash-es/differenceBy.js","./differenceWith.js":"node_modules/lodash-es/differenceWith.js","./drop.js":"node_modules/lodash-es/drop.js","./dropRight.js":"node_modules/lodash-es/dropRight.js","./dropRightWhile.js":"node_modules/lodash-es/dropRightWhile.js","./dropWhile.js":"node_modules/lodash-es/dropWhile.js","./fill.js":"node_modules/lodash-es/fill.js","./findIndex.js":"node_modules/lodash-es/findIndex.js","./findLastIndex.js":"node_modules/lodash-es/findLastIndex.js","./first.js":"node_modules/lodash-es/first.js","./flatten.js":"node_modules/lodash-es/flatten.js","./flattenDeep.js":"node_modules/lodash-es/flattenDeep.js","./flattenDepth.js":"node_modules/lodash-es/flattenDepth.js","./fromPairs.js":"node_modules/lodash-es/fromPairs.js","./head.js":"node_modules/lodash-es/head.js","./indexOf.js":"node_modules/lodash-es/indexOf.js","./initial.js":"node_modules/lodash-es/initial.js","./intersection.js":"node_modules/lodash-es/intersection.js","./intersectionBy.js":"node_modules/lodash-es/intersectionBy.js","./intersectionWith.js":"node_modules/lodash-es/intersectionWith.js","./join.js":"node_modules/lodash-es/join.js","./last.js":"node_modules/lodash-es/last.js","./lastIndexOf.js":"node_modules/lodash-es/lastIndexOf.js","./nth.js":"node_modules/lodash-es/nth.js","./pull.js":"node_modules/lodash-es/pull.js","./pullAll.js":"node_modules/lodash-es/pullAll.js","./pullAllBy.js":"node_modules/lodash-es/pullAllBy.js","./pullAllWith.js":"node_modules/lodash-es/pullAllWith.js","./pullAt.js":"node_modules/lodash-es/pullAt.js","./remove.js":"node_modules/lodash-es/remove.js","./reverse.js":"node_modules/lodash-es/reverse.js","./slice.js":"node_modules/lodash-es/slice.js","./sortedIndex.js":"node_modules/lodash-es/sortedIndex.js","./sortedIndexBy.js":"node_modules/lodash-es/sortedIndexBy.js","./sortedIndexOf.js":"node_modules/lodash-es/sortedIndexOf.js","./sortedLastIndex.js":"node_modules/lodash-es/sortedLastIndex.js","./sortedLastIndexBy.js":"node_modules/lodash-es/sortedLastIndexBy.js","./sortedLastIndexOf.js":"node_modules/lodash-es/sortedLastIndexOf.js","./sortedUniq.js":"node_modules/lodash-es/sortedUniq.js","./sortedUniqBy.js":"node_modules/lodash-es/sortedUniqBy.js","./tail.js":"node_modules/lodash-es/tail.js","./take.js":"node_modules/lodash-es/take.js","./takeRight.js":"node_modules/lodash-es/takeRight.js","./takeRightWhile.js":"node_modules/lodash-es/takeRightWhile.js","./takeWhile.js":"node_modules/lodash-es/takeWhile.js","./union.js":"node_modules/lodash-es/union.js","./unionBy.js":"node_modules/lodash-es/unionBy.js","./unionWith.js":"node_modules/lodash-es/unionWith.js","./uniq.js":"node_modules/lodash-es/uniq.js","./uniqBy.js":"node_modules/lodash-es/uniqBy.js","./uniqWith.js":"node_modules/lodash-es/uniqWith.js","./unzip.js":"node_modules/lodash-es/unzip.js","./unzipWith.js":"node_modules/lodash-es/unzipWith.js","./without.js":"node_modules/lodash-es/without.js","./xor.js":"node_modules/lodash-es/xor.js","./xorBy.js":"node_modules/lodash-es/xorBy.js","./xorWith.js":"node_modules/lodash-es/xorWith.js","./zip.js":"node_modules/lodash-es/zip.js","./zipObject.js":"node_modules/lodash-es/zipObject.js","./zipObjectDeep.js":"node_modules/lodash-es/zipObjectDeep.js","./zipWith.js":"node_modules/lodash-es/zipWith.js","./array.default.js":"node_modules/lodash-es/array.default.js"}],"node_modules/lodash-es/collection.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _countBy = _interopRequireDefault(require("./countBy.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachRight = _interopRequireDefault(require("./eachRight.js"));

var _every = _interopRequireDefault(require("./every.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _findLast = _interopRequireDefault(require("./findLast.js"));

var _flatMap = _interopRequireDefault(require("./flatMap.js"));

var _flatMapDeep = _interopRequireDefault(require("./flatMapDeep.js"));

var _flatMapDepth = _interopRequireDefault(require("./flatMapDepth.js"));

var _forEach = _interopRequireDefault(require("./forEach.js"));

var _forEachRight = _interopRequireDefault(require("./forEachRight.js"));

var _groupBy = _interopRequireDefault(require("./groupBy.js"));

var _includes = _interopRequireDefault(require("./includes.js"));

var _invokeMap = _interopRequireDefault(require("./invokeMap.js"));

var _keyBy = _interopRequireDefault(require("./keyBy.js"));

var _map = _interopRequireDefault(require("./map.js"));

var _orderBy = _interopRequireDefault(require("./orderBy.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _reduce = _interopRequireDefault(require("./reduce.js"));

var _reduceRight = _interopRequireDefault(require("./reduceRight.js"));

var _reject = _interopRequireDefault(require("./reject.js"));

var _sample = _interopRequireDefault(require("./sample.js"));

var _sampleSize = _interopRequireDefault(require("./sampleSize.js"));

var _shuffle = _interopRequireDefault(require("./shuffle.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _some = _interopRequireDefault(require("./some.js"));

var _sortBy = _interopRequireDefault(require("./sortBy.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  countBy: _countBy.default,
  each: _each.default,
  eachRight: _eachRight.default,
  every: _every.default,
  filter: _filter.default,
  find: _find.default,
  findLast: _findLast.default,
  flatMap: _flatMap.default,
  flatMapDeep: _flatMapDeep.default,
  flatMapDepth: _flatMapDepth.default,
  forEach: _forEach.default,
  forEachRight: _forEachRight.default,
  groupBy: _groupBy.default,
  includes: _includes.default,
  invokeMap: _invokeMap.default,
  keyBy: _keyBy.default,
  map: _map.default,
  orderBy: _orderBy.default,
  partition: _partition.default,
  reduce: _reduce.default,
  reduceRight: _reduceRight.default,
  reject: _reject.default,
  sample: _sample.default,
  sampleSize: _sampleSize.default,
  shuffle: _shuffle.default,
  size: _size.default,
  some: _some.default,
  sortBy: _sortBy.default
};
exports.default = _default;
},{"./countBy.js":"node_modules/lodash-es/countBy.js","./each.js":"node_modules/lodash-es/each.js","./eachRight.js":"node_modules/lodash-es/eachRight.js","./every.js":"node_modules/lodash-es/every.js","./filter.js":"node_modules/lodash-es/filter.js","./find.js":"node_modules/lodash-es/find.js","./findLast.js":"node_modules/lodash-es/findLast.js","./flatMap.js":"node_modules/lodash-es/flatMap.js","./flatMapDeep.js":"node_modules/lodash-es/flatMapDeep.js","./flatMapDepth.js":"node_modules/lodash-es/flatMapDepth.js","./forEach.js":"node_modules/lodash-es/forEach.js","./forEachRight.js":"node_modules/lodash-es/forEachRight.js","./groupBy.js":"node_modules/lodash-es/groupBy.js","./includes.js":"node_modules/lodash-es/includes.js","./invokeMap.js":"node_modules/lodash-es/invokeMap.js","./keyBy.js":"node_modules/lodash-es/keyBy.js","./map.js":"node_modules/lodash-es/map.js","./orderBy.js":"node_modules/lodash-es/orderBy.js","./partition.js":"node_modules/lodash-es/partition.js","./reduce.js":"node_modules/lodash-es/reduce.js","./reduceRight.js":"node_modules/lodash-es/reduceRight.js","./reject.js":"node_modules/lodash-es/reject.js","./sample.js":"node_modules/lodash-es/sample.js","./sampleSize.js":"node_modules/lodash-es/sampleSize.js","./shuffle.js":"node_modules/lodash-es/shuffle.js","./size.js":"node_modules/lodash-es/size.js","./some.js":"node_modules/lodash-es/some.js","./sortBy.js":"node_modules/lodash-es/sortBy.js"}],"node_modules/lodash-es/collection.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "countBy", {
  enumerable: true,
  get: function () {
    return _countBy.default;
  }
});
Object.defineProperty(exports, "each", {
  enumerable: true,
  get: function () {
    return _each.default;
  }
});
Object.defineProperty(exports, "eachRight", {
  enumerable: true,
  get: function () {
    return _eachRight.default;
  }
});
Object.defineProperty(exports, "every", {
  enumerable: true,
  get: function () {
    return _every.default;
  }
});
Object.defineProperty(exports, "filter", {
  enumerable: true,
  get: function () {
    return _filter.default;
  }
});
Object.defineProperty(exports, "find", {
  enumerable: true,
  get: function () {
    return _find.default;
  }
});
Object.defineProperty(exports, "findLast", {
  enumerable: true,
  get: function () {
    return _findLast.default;
  }
});
Object.defineProperty(exports, "flatMap", {
  enumerable: true,
  get: function () {
    return _flatMap.default;
  }
});
Object.defineProperty(exports, "flatMapDeep", {
  enumerable: true,
  get: function () {
    return _flatMapDeep.default;
  }
});
Object.defineProperty(exports, "flatMapDepth", {
  enumerable: true,
  get: function () {
    return _flatMapDepth.default;
  }
});
Object.defineProperty(exports, "forEach", {
  enumerable: true,
  get: function () {
    return _forEach.default;
  }
});
Object.defineProperty(exports, "forEachRight", {
  enumerable: true,
  get: function () {
    return _forEachRight.default;
  }
});
Object.defineProperty(exports, "groupBy", {
  enumerable: true,
  get: function () {
    return _groupBy.default;
  }
});
Object.defineProperty(exports, "includes", {
  enumerable: true,
  get: function () {
    return _includes.default;
  }
});
Object.defineProperty(exports, "invokeMap", {
  enumerable: true,
  get: function () {
    return _invokeMap.default;
  }
});
Object.defineProperty(exports, "keyBy", {
  enumerable: true,
  get: function () {
    return _keyBy.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "orderBy", {
  enumerable: true,
  get: function () {
    return _orderBy.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "reduce", {
  enumerable: true,
  get: function () {
    return _reduce.default;
  }
});
Object.defineProperty(exports, "reduceRight", {
  enumerable: true,
  get: function () {
    return _reduceRight.default;
  }
});
Object.defineProperty(exports, "reject", {
  enumerable: true,
  get: function () {
    return _reject.default;
  }
});
Object.defineProperty(exports, "sample", {
  enumerable: true,
  get: function () {
    return _sample.default;
  }
});
Object.defineProperty(exports, "sampleSize", {
  enumerable: true,
  get: function () {
    return _sampleSize.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "size", {
  enumerable: true,
  get: function () {
    return _size.default;
  }
});
Object.defineProperty(exports, "some", {
  enumerable: true,
  get: function () {
    return _some.default;
  }
});
Object.defineProperty(exports, "sortBy", {
  enumerable: true,
  get: function () {
    return _sortBy.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _collectionDefault.default;
  }
});

var _countBy = _interopRequireDefault(require("./countBy.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachRight = _interopRequireDefault(require("./eachRight.js"));

var _every = _interopRequireDefault(require("./every.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _findLast = _interopRequireDefault(require("./findLast.js"));

var _flatMap = _interopRequireDefault(require("./flatMap.js"));

var _flatMapDeep = _interopRequireDefault(require("./flatMapDeep.js"));

var _flatMapDepth = _interopRequireDefault(require("./flatMapDepth.js"));

var _forEach = _interopRequireDefault(require("./forEach.js"));

var _forEachRight = _interopRequireDefault(require("./forEachRight.js"));

var _groupBy = _interopRequireDefault(require("./groupBy.js"));

var _includes = _interopRequireDefault(require("./includes.js"));

var _invokeMap = _interopRequireDefault(require("./invokeMap.js"));

var _keyBy = _interopRequireDefault(require("./keyBy.js"));

var _map = _interopRequireDefault(require("./map.js"));

var _orderBy = _interopRequireDefault(require("./orderBy.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _reduce = _interopRequireDefault(require("./reduce.js"));

var _reduceRight = _interopRequireDefault(require("./reduceRight.js"));

var _reject = _interopRequireDefault(require("./reject.js"));

var _sample = _interopRequireDefault(require("./sample.js"));

var _sampleSize = _interopRequireDefault(require("./sampleSize.js"));

var _shuffle = _interopRequireDefault(require("./shuffle.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _some = _interopRequireDefault(require("./some.js"));

var _sortBy = _interopRequireDefault(require("./sortBy.js"));

var _collectionDefault = _interopRequireDefault(require("./collection.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./countBy.js":"node_modules/lodash-es/countBy.js","./each.js":"node_modules/lodash-es/each.js","./eachRight.js":"node_modules/lodash-es/eachRight.js","./every.js":"node_modules/lodash-es/every.js","./filter.js":"node_modules/lodash-es/filter.js","./find.js":"node_modules/lodash-es/find.js","./findLast.js":"node_modules/lodash-es/findLast.js","./flatMap.js":"node_modules/lodash-es/flatMap.js","./flatMapDeep.js":"node_modules/lodash-es/flatMapDeep.js","./flatMapDepth.js":"node_modules/lodash-es/flatMapDepth.js","./forEach.js":"node_modules/lodash-es/forEach.js","./forEachRight.js":"node_modules/lodash-es/forEachRight.js","./groupBy.js":"node_modules/lodash-es/groupBy.js","./includes.js":"node_modules/lodash-es/includes.js","./invokeMap.js":"node_modules/lodash-es/invokeMap.js","./keyBy.js":"node_modules/lodash-es/keyBy.js","./map.js":"node_modules/lodash-es/map.js","./orderBy.js":"node_modules/lodash-es/orderBy.js","./partition.js":"node_modules/lodash-es/partition.js","./reduce.js":"node_modules/lodash-es/reduce.js","./reduceRight.js":"node_modules/lodash-es/reduceRight.js","./reject.js":"node_modules/lodash-es/reject.js","./sample.js":"node_modules/lodash-es/sample.js","./sampleSize.js":"node_modules/lodash-es/sampleSize.js","./shuffle.js":"node_modules/lodash-es/shuffle.js","./size.js":"node_modules/lodash-es/size.js","./some.js":"node_modules/lodash-es/some.js","./sortBy.js":"node_modules/lodash-es/sortBy.js","./collection.default.js":"node_modules/lodash-es/collection.default.js"}],"node_modules/lodash-es/date.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _now = _interopRequireDefault(require("./now.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  now: _now.default
};
exports.default = _default;
},{"./now.js":"node_modules/lodash-es/now.js"}],"node_modules/lodash-es/date.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _now.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _dateDefault.default;
  }
});

var _now = _interopRequireDefault(require("./now.js"));

var _dateDefault = _interopRequireDefault(require("./date.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./now.js":"node_modules/lodash-es/now.js","./date.default.js":"node_modules/lodash-es/date.default.js"}],"node_modules/lodash-es/function.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _after = _interopRequireDefault(require("./after.js"));

var _ary = _interopRequireDefault(require("./ary.js"));

var _before = _interopRequireDefault(require("./before.js"));

var _bind = _interopRequireDefault(require("./bind.js"));

var _bindKey = _interopRequireDefault(require("./bindKey.js"));

var _curry = _interopRequireDefault(require("./curry.js"));

var _curryRight = _interopRequireDefault(require("./curryRight.js"));

var _debounce = _interopRequireDefault(require("./debounce.js"));

var _defer = _interopRequireDefault(require("./defer.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _flip = _interopRequireDefault(require("./flip.js"));

var _memoize = _interopRequireDefault(require("./memoize.js"));

var _negate = _interopRequireDefault(require("./negate.js"));

var _once = _interopRequireDefault(require("./once.js"));

var _overArgs = _interopRequireDefault(require("./overArgs.js"));

var _partial = _interopRequireDefault(require("./partial.js"));

var _partialRight = _interopRequireDefault(require("./partialRight.js"));

var _rearg = _interopRequireDefault(require("./rearg.js"));

var _rest = _interopRequireDefault(require("./rest.js"));

var _spread = _interopRequireDefault(require("./spread.js"));

var _throttle = _interopRequireDefault(require("./throttle.js"));

var _unary = _interopRequireDefault(require("./unary.js"));

var _wrap = _interopRequireDefault(require("./wrap.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  after: _after.default,
  ary: _ary.default,
  before: _before.default,
  bind: _bind.default,
  bindKey: _bindKey.default,
  curry: _curry.default,
  curryRight: _curryRight.default,
  debounce: _debounce.default,
  defer: _defer.default,
  delay: _delay.default,
  flip: _flip.default,
  memoize: _memoize.default,
  negate: _negate.default,
  once: _once.default,
  overArgs: _overArgs.default,
  partial: _partial.default,
  partialRight: _partialRight.default,
  rearg: _rearg.default,
  rest: _rest.default,
  spread: _spread.default,
  throttle: _throttle.default,
  unary: _unary.default,
  wrap: _wrap.default
};
exports.default = _default;
},{"./after.js":"node_modules/lodash-es/after.js","./ary.js":"node_modules/lodash-es/ary.js","./before.js":"node_modules/lodash-es/before.js","./bind.js":"node_modules/lodash-es/bind.js","./bindKey.js":"node_modules/lodash-es/bindKey.js","./curry.js":"node_modules/lodash-es/curry.js","./curryRight.js":"node_modules/lodash-es/curryRight.js","./debounce.js":"node_modules/lodash-es/debounce.js","./defer.js":"node_modules/lodash-es/defer.js","./delay.js":"node_modules/lodash-es/delay.js","./flip.js":"node_modules/lodash-es/flip.js","./memoize.js":"node_modules/lodash-es/memoize.js","./negate.js":"node_modules/lodash-es/negate.js","./once.js":"node_modules/lodash-es/once.js","./overArgs.js":"node_modules/lodash-es/overArgs.js","./partial.js":"node_modules/lodash-es/partial.js","./partialRight.js":"node_modules/lodash-es/partialRight.js","./rearg.js":"node_modules/lodash-es/rearg.js","./rest.js":"node_modules/lodash-es/rest.js","./spread.js":"node_modules/lodash-es/spread.js","./throttle.js":"node_modules/lodash-es/throttle.js","./unary.js":"node_modules/lodash-es/unary.js","./wrap.js":"node_modules/lodash-es/wrap.js"}],"node_modules/lodash-es/function.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "after", {
  enumerable: true,
  get: function () {
    return _after.default;
  }
});
Object.defineProperty(exports, "ary", {
  enumerable: true,
  get: function () {
    return _ary.default;
  }
});
Object.defineProperty(exports, "before", {
  enumerable: true,
  get: function () {
    return _before.default;
  }
});
Object.defineProperty(exports, "bind", {
  enumerable: true,
  get: function () {
    return _bind.default;
  }
});
Object.defineProperty(exports, "bindKey", {
  enumerable: true,
  get: function () {
    return _bindKey.default;
  }
});
Object.defineProperty(exports, "curry", {
  enumerable: true,
  get: function () {
    return _curry.default;
  }
});
Object.defineProperty(exports, "curryRight", {
  enumerable: true,
  get: function () {
    return _curryRight.default;
  }
});
Object.defineProperty(exports, "debounce", {
  enumerable: true,
  get: function () {
    return _debounce.default;
  }
});
Object.defineProperty(exports, "defer", {
  enumerable: true,
  get: function () {
    return _defer.default;
  }
});
Object.defineProperty(exports, "delay", {
  enumerable: true,
  get: function () {
    return _delay.default;
  }
});
Object.defineProperty(exports, "flip", {
  enumerable: true,
  get: function () {
    return _flip.default;
  }
});
Object.defineProperty(exports, "memoize", {
  enumerable: true,
  get: function () {
    return _memoize.default;
  }
});
Object.defineProperty(exports, "negate", {
  enumerable: true,
  get: function () {
    return _negate.default;
  }
});
Object.defineProperty(exports, "once", {
  enumerable: true,
  get: function () {
    return _once.default;
  }
});
Object.defineProperty(exports, "overArgs", {
  enumerable: true,
  get: function () {
    return _overArgs.default;
  }
});
Object.defineProperty(exports, "partial", {
  enumerable: true,
  get: function () {
    return _partial.default;
  }
});
Object.defineProperty(exports, "partialRight", {
  enumerable: true,
  get: function () {
    return _partialRight.default;
  }
});
Object.defineProperty(exports, "rearg", {
  enumerable: true,
  get: function () {
    return _rearg.default;
  }
});
Object.defineProperty(exports, "rest", {
  enumerable: true,
  get: function () {
    return _rest.default;
  }
});
Object.defineProperty(exports, "spread", {
  enumerable: true,
  get: function () {
    return _spread.default;
  }
});
Object.defineProperty(exports, "throttle", {
  enumerable: true,
  get: function () {
    return _throttle.default;
  }
});
Object.defineProperty(exports, "unary", {
  enumerable: true,
  get: function () {
    return _unary.default;
  }
});
Object.defineProperty(exports, "wrap", {
  enumerable: true,
  get: function () {
    return _wrap.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _functionDefault.default;
  }
});

var _after = _interopRequireDefault(require("./after.js"));

var _ary = _interopRequireDefault(require("./ary.js"));

var _before = _interopRequireDefault(require("./before.js"));

var _bind = _interopRequireDefault(require("./bind.js"));

var _bindKey = _interopRequireDefault(require("./bindKey.js"));

var _curry = _interopRequireDefault(require("./curry.js"));

var _curryRight = _interopRequireDefault(require("./curryRight.js"));

var _debounce = _interopRequireDefault(require("./debounce.js"));

var _defer = _interopRequireDefault(require("./defer.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _flip = _interopRequireDefault(require("./flip.js"));

var _memoize = _interopRequireDefault(require("./memoize.js"));

var _negate = _interopRequireDefault(require("./negate.js"));

var _once = _interopRequireDefault(require("./once.js"));

var _overArgs = _interopRequireDefault(require("./overArgs.js"));

var _partial = _interopRequireDefault(require("./partial.js"));

var _partialRight = _interopRequireDefault(require("./partialRight.js"));

var _rearg = _interopRequireDefault(require("./rearg.js"));

var _rest = _interopRequireDefault(require("./rest.js"));

var _spread = _interopRequireDefault(require("./spread.js"));

var _throttle = _interopRequireDefault(require("./throttle.js"));

var _unary = _interopRequireDefault(require("./unary.js"));

var _wrap = _interopRequireDefault(require("./wrap.js"));

var _functionDefault = _interopRequireDefault(require("./function.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./after.js":"node_modules/lodash-es/after.js","./ary.js":"node_modules/lodash-es/ary.js","./before.js":"node_modules/lodash-es/before.js","./bind.js":"node_modules/lodash-es/bind.js","./bindKey.js":"node_modules/lodash-es/bindKey.js","./curry.js":"node_modules/lodash-es/curry.js","./curryRight.js":"node_modules/lodash-es/curryRight.js","./debounce.js":"node_modules/lodash-es/debounce.js","./defer.js":"node_modules/lodash-es/defer.js","./delay.js":"node_modules/lodash-es/delay.js","./flip.js":"node_modules/lodash-es/flip.js","./memoize.js":"node_modules/lodash-es/memoize.js","./negate.js":"node_modules/lodash-es/negate.js","./once.js":"node_modules/lodash-es/once.js","./overArgs.js":"node_modules/lodash-es/overArgs.js","./partial.js":"node_modules/lodash-es/partial.js","./partialRight.js":"node_modules/lodash-es/partialRight.js","./rearg.js":"node_modules/lodash-es/rearg.js","./rest.js":"node_modules/lodash-es/rest.js","./spread.js":"node_modules/lodash-es/spread.js","./throttle.js":"node_modules/lodash-es/throttle.js","./unary.js":"node_modules/lodash-es/unary.js","./wrap.js":"node_modules/lodash-es/wrap.js","./function.default.js":"node_modules/lodash-es/function.default.js"}],"node_modules/lodash-es/lang.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _castArray = _interopRequireDefault(require("./castArray.js"));

var _clone = _interopRequireDefault(require("./clone.js"));

var _cloneDeep = _interopRequireDefault(require("./cloneDeep.js"));

var _cloneDeepWith = _interopRequireDefault(require("./cloneDeepWith.js"));

var _cloneWith = _interopRequireDefault(require("./cloneWith.js"));

var _conformsTo = _interopRequireDefault(require("./conformsTo.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

var _gt = _interopRequireDefault(require("./gt.js"));

var _gte = _interopRequireDefault(require("./gte.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isArrayBuffer = _interopRequireDefault(require("./isArrayBuffer.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _isBoolean = _interopRequireDefault(require("./isBoolean.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isDate = _interopRequireDefault(require("./isDate.js"));

var _isElement = _interopRequireDefault(require("./isElement.js"));

var _isEmpty = _interopRequireDefault(require("./isEmpty.js"));

var _isEqual = _interopRequireDefault(require("./isEqual.js"));

var _isEqualWith = _interopRequireDefault(require("./isEqualWith.js"));

var _isError = _interopRequireDefault(require("./isError.js"));

var _isFinite = _interopRequireDefault(require("./isFinite.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isInteger = _interopRequireDefault(require("./isInteger.js"));

var _isLength = _interopRequireDefault(require("./isLength.js"));

var _isMap = _interopRequireDefault(require("./isMap.js"));

var _isMatch = _interopRequireDefault(require("./isMatch.js"));

var _isMatchWith = _interopRequireDefault(require("./isMatchWith.js"));

var _isNaN = _interopRequireDefault(require("./isNaN.js"));

var _isNative = _interopRequireDefault(require("./isNative.js"));

var _isNil = _interopRequireDefault(require("./isNil.js"));

var _isNull = _interopRequireDefault(require("./isNull.js"));

var _isNumber = _interopRequireDefault(require("./isNumber.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

var _isRegExp = _interopRequireDefault(require("./isRegExp.js"));

var _isSafeInteger = _interopRequireDefault(require("./isSafeInteger.js"));

var _isSet = _interopRequireDefault(require("./isSet.js"));

var _isString = _interopRequireDefault(require("./isString.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

var _isUndefined = _interopRequireDefault(require("./isUndefined.js"));

var _isWeakMap = _interopRequireDefault(require("./isWeakMap.js"));

var _isWeakSet = _interopRequireDefault(require("./isWeakSet.js"));

var _lt = _interopRequireDefault(require("./lt.js"));

var _lte = _interopRequireDefault(require("./lte.js"));

var _toArray = _interopRequireDefault(require("./toArray.js"));

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toLength = _interopRequireDefault(require("./toLength.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

var _toPlainObject = _interopRequireDefault(require("./toPlainObject.js"));

var _toSafeInteger = _interopRequireDefault(require("./toSafeInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  castArray: _castArray.default,
  clone: _clone.default,
  cloneDeep: _cloneDeep.default,
  cloneDeepWith: _cloneDeepWith.default,
  cloneWith: _cloneWith.default,
  conformsTo: _conformsTo.default,
  eq: _eq.default,
  gt: _gt.default,
  gte: _gte.default,
  isArguments: _isArguments.default,
  isArray: _isArray.default,
  isArrayBuffer: _isArrayBuffer.default,
  isArrayLike: _isArrayLike.default,
  isArrayLikeObject: _isArrayLikeObject.default,
  isBoolean: _isBoolean.default,
  isBuffer: _isBuffer.default,
  isDate: _isDate.default,
  isElement: _isElement.default,
  isEmpty: _isEmpty.default,
  isEqual: _isEqual.default,
  isEqualWith: _isEqualWith.default,
  isError: _isError.default,
  isFinite: _isFinite.default,
  isFunction: _isFunction.default,
  isInteger: _isInteger.default,
  isLength: _isLength.default,
  isMap: _isMap.default,
  isMatch: _isMatch.default,
  isMatchWith: _isMatchWith.default,
  isNaN: _isNaN.default,
  isNative: _isNative.default,
  isNil: _isNil.default,
  isNull: _isNull.default,
  isNumber: _isNumber.default,
  isObject: _isObject.default,
  isObjectLike: _isObjectLike.default,
  isPlainObject: _isPlainObject.default,
  isRegExp: _isRegExp.default,
  isSafeInteger: _isSafeInteger.default,
  isSet: _isSet.default,
  isString: _isString.default,
  isSymbol: _isSymbol.default,
  isTypedArray: _isTypedArray.default,
  isUndefined: _isUndefined.default,
  isWeakMap: _isWeakMap.default,
  isWeakSet: _isWeakSet.default,
  lt: _lt.default,
  lte: _lte.default,
  toArray: _toArray.default,
  toFinite: _toFinite.default,
  toInteger: _toInteger.default,
  toLength: _toLength.default,
  toNumber: _toNumber.default,
  toPlainObject: _toPlainObject.default,
  toSafeInteger: _toSafeInteger.default,
  toString: _toString.default
};
exports.default = _default;
},{"./castArray.js":"node_modules/lodash-es/castArray.js","./clone.js":"node_modules/lodash-es/clone.js","./cloneDeep.js":"node_modules/lodash-es/cloneDeep.js","./cloneDeepWith.js":"node_modules/lodash-es/cloneDeepWith.js","./cloneWith.js":"node_modules/lodash-es/cloneWith.js","./conformsTo.js":"node_modules/lodash-es/conformsTo.js","./eq.js":"node_modules/lodash-es/eq.js","./gt.js":"node_modules/lodash-es/gt.js","./gte.js":"node_modules/lodash-es/gte.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isArrayBuffer.js":"node_modules/lodash-es/isArrayBuffer.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./isBoolean.js":"node_modules/lodash-es/isBoolean.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isDate.js":"node_modules/lodash-es/isDate.js","./isElement.js":"node_modules/lodash-es/isElement.js","./isEmpty.js":"node_modules/lodash-es/isEmpty.js","./isEqual.js":"node_modules/lodash-es/isEqual.js","./isEqualWith.js":"node_modules/lodash-es/isEqualWith.js","./isError.js":"node_modules/lodash-es/isError.js","./isFinite.js":"node_modules/lodash-es/isFinite.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./isInteger.js":"node_modules/lodash-es/isInteger.js","./isLength.js":"node_modules/lodash-es/isLength.js","./isMap.js":"node_modules/lodash-es/isMap.js","./isMatch.js":"node_modules/lodash-es/isMatch.js","./isMatchWith.js":"node_modules/lodash-es/isMatchWith.js","./isNaN.js":"node_modules/lodash-es/isNaN.js","./isNative.js":"node_modules/lodash-es/isNative.js","./isNil.js":"node_modules/lodash-es/isNil.js","./isNull.js":"node_modules/lodash-es/isNull.js","./isNumber.js":"node_modules/lodash-es/isNumber.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js","./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js","./isRegExp.js":"node_modules/lodash-es/isRegExp.js","./isSafeInteger.js":"node_modules/lodash-es/isSafeInteger.js","./isSet.js":"node_modules/lodash-es/isSet.js","./isString.js":"node_modules/lodash-es/isString.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js","./isUndefined.js":"node_modules/lodash-es/isUndefined.js","./isWeakMap.js":"node_modules/lodash-es/isWeakMap.js","./isWeakSet.js":"node_modules/lodash-es/isWeakSet.js","./lt.js":"node_modules/lodash-es/lt.js","./lte.js":"node_modules/lodash-es/lte.js","./toArray.js":"node_modules/lodash-es/toArray.js","./toFinite.js":"node_modules/lodash-es/toFinite.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toLength.js":"node_modules/lodash-es/toLength.js","./toNumber.js":"node_modules/lodash-es/toNumber.js","./toPlainObject.js":"node_modules/lodash-es/toPlainObject.js","./toSafeInteger.js":"node_modules/lodash-es/toSafeInteger.js","./toString.js":"node_modules/lodash-es/toString.js"}],"node_modules/lodash-es/lang.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "castArray", {
  enumerable: true,
  get: function () {
    return _castArray.default;
  }
});
Object.defineProperty(exports, "clone", {
  enumerable: true,
  get: function () {
    return _clone.default;
  }
});
Object.defineProperty(exports, "cloneDeep", {
  enumerable: true,
  get: function () {
    return _cloneDeep.default;
  }
});
Object.defineProperty(exports, "cloneDeepWith", {
  enumerable: true,
  get: function () {
    return _cloneDeepWith.default;
  }
});
Object.defineProperty(exports, "cloneWith", {
  enumerable: true,
  get: function () {
    return _cloneWith.default;
  }
});
Object.defineProperty(exports, "conformsTo", {
  enumerable: true,
  get: function () {
    return _conformsTo.default;
  }
});
Object.defineProperty(exports, "eq", {
  enumerable: true,
  get: function () {
    return _eq.default;
  }
});
Object.defineProperty(exports, "gt", {
  enumerable: true,
  get: function () {
    return _gt.default;
  }
});
Object.defineProperty(exports, "gte", {
  enumerable: true,
  get: function () {
    return _gte.default;
  }
});
Object.defineProperty(exports, "isArguments", {
  enumerable: true,
  get: function () {
    return _isArguments.default;
  }
});
Object.defineProperty(exports, "isArray", {
  enumerable: true,
  get: function () {
    return _isArray.default;
  }
});
Object.defineProperty(exports, "isArrayBuffer", {
  enumerable: true,
  get: function () {
    return _isArrayBuffer.default;
  }
});
Object.defineProperty(exports, "isArrayLike", {
  enumerable: true,
  get: function () {
    return _isArrayLike.default;
  }
});
Object.defineProperty(exports, "isArrayLikeObject", {
  enumerable: true,
  get: function () {
    return _isArrayLikeObject.default;
  }
});
Object.defineProperty(exports, "isBoolean", {
  enumerable: true,
  get: function () {
    return _isBoolean.default;
  }
});
Object.defineProperty(exports, "isBuffer", {
  enumerable: true,
  get: function () {
    return _isBuffer.default;
  }
});
Object.defineProperty(exports, "isDate", {
  enumerable: true,
  get: function () {
    return _isDate.default;
  }
});
Object.defineProperty(exports, "isElement", {
  enumerable: true,
  get: function () {
    return _isElement.default;
  }
});
Object.defineProperty(exports, "isEmpty", {
  enumerable: true,
  get: function () {
    return _isEmpty.default;
  }
});
Object.defineProperty(exports, "isEqual", {
  enumerable: true,
  get: function () {
    return _isEqual.default;
  }
});
Object.defineProperty(exports, "isEqualWith", {
  enumerable: true,
  get: function () {
    return _isEqualWith.default;
  }
});
Object.defineProperty(exports, "isError", {
  enumerable: true,
  get: function () {
    return _isError.default;
  }
});
Object.defineProperty(exports, "isFinite", {
  enumerable: true,
  get: function () {
    return _isFinite.default;
  }
});
Object.defineProperty(exports, "isFunction", {
  enumerable: true,
  get: function () {
    return _isFunction.default;
  }
});
Object.defineProperty(exports, "isInteger", {
  enumerable: true,
  get: function () {
    return _isInteger.default;
  }
});
Object.defineProperty(exports, "isLength", {
  enumerable: true,
  get: function () {
    return _isLength.default;
  }
});
Object.defineProperty(exports, "isMap", {
  enumerable: true,
  get: function () {
    return _isMap.default;
  }
});
Object.defineProperty(exports, "isMatch", {
  enumerable: true,
  get: function () {
    return _isMatch.default;
  }
});
Object.defineProperty(exports, "isMatchWith", {
  enumerable: true,
  get: function () {
    return _isMatchWith.default;
  }
});
Object.defineProperty(exports, "isNaN", {
  enumerable: true,
  get: function () {
    return _isNaN.default;
  }
});
Object.defineProperty(exports, "isNative", {
  enumerable: true,
  get: function () {
    return _isNative.default;
  }
});
Object.defineProperty(exports, "isNil", {
  enumerable: true,
  get: function () {
    return _isNil.default;
  }
});
Object.defineProperty(exports, "isNull", {
  enumerable: true,
  get: function () {
    return _isNull.default;
  }
});
Object.defineProperty(exports, "isNumber", {
  enumerable: true,
  get: function () {
    return _isNumber.default;
  }
});
Object.defineProperty(exports, "isObject", {
  enumerable: true,
  get: function () {
    return _isObject.default;
  }
});
Object.defineProperty(exports, "isObjectLike", {
  enumerable: true,
  get: function () {
    return _isObjectLike.default;
  }
});
Object.defineProperty(exports, "isPlainObject", {
  enumerable: true,
  get: function () {
    return _isPlainObject.default;
  }
});
Object.defineProperty(exports, "isRegExp", {
  enumerable: true,
  get: function () {
    return _isRegExp.default;
  }
});
Object.defineProperty(exports, "isSafeInteger", {
  enumerable: true,
  get: function () {
    return _isSafeInteger.default;
  }
});
Object.defineProperty(exports, "isSet", {
  enumerable: true,
  get: function () {
    return _isSet.default;
  }
});
Object.defineProperty(exports, "isString", {
  enumerable: true,
  get: function () {
    return _isString.default;
  }
});
Object.defineProperty(exports, "isSymbol", {
  enumerable: true,
  get: function () {
    return _isSymbol.default;
  }
});
Object.defineProperty(exports, "isTypedArray", {
  enumerable: true,
  get: function () {
    return _isTypedArray.default;
  }
});
Object.defineProperty(exports, "isUndefined", {
  enumerable: true,
  get: function () {
    return _isUndefined.default;
  }
});
Object.defineProperty(exports, "isWeakMap", {
  enumerable: true,
  get: function () {
    return _isWeakMap.default;
  }
});
Object.defineProperty(exports, "isWeakSet", {
  enumerable: true,
  get: function () {
    return _isWeakSet.default;
  }
});
Object.defineProperty(exports, "lt", {
  enumerable: true,
  get: function () {
    return _lt.default;
  }
});
Object.defineProperty(exports, "lte", {
  enumerable: true,
  get: function () {
    return _lte.default;
  }
});
Object.defineProperty(exports, "toArray", {
  enumerable: true,
  get: function () {
    return _toArray.default;
  }
});
Object.defineProperty(exports, "toFinite", {
  enumerable: true,
  get: function () {
    return _toFinite.default;
  }
});
Object.defineProperty(exports, "toInteger", {
  enumerable: true,
  get: function () {
    return _toInteger.default;
  }
});
Object.defineProperty(exports, "toLength", {
  enumerable: true,
  get: function () {
    return _toLength.default;
  }
});
Object.defineProperty(exports, "toNumber", {
  enumerable: true,
  get: function () {
    return _toNumber.default;
  }
});
Object.defineProperty(exports, "toPlainObject", {
  enumerable: true,
  get: function () {
    return _toPlainObject.default;
  }
});
Object.defineProperty(exports, "toSafeInteger", {
  enumerable: true,
  get: function () {
    return _toSafeInteger.default;
  }
});
Object.defineProperty(exports, "toString", {
  enumerable: true,
  get: function () {
    return _toString.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _langDefault.default;
  }
});

var _castArray = _interopRequireDefault(require("./castArray.js"));

var _clone = _interopRequireDefault(require("./clone.js"));

var _cloneDeep = _interopRequireDefault(require("./cloneDeep.js"));

var _cloneDeepWith = _interopRequireDefault(require("./cloneDeepWith.js"));

var _cloneWith = _interopRequireDefault(require("./cloneWith.js"));

var _conformsTo = _interopRequireDefault(require("./conformsTo.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

var _gt = _interopRequireDefault(require("./gt.js"));

var _gte = _interopRequireDefault(require("./gte.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isArrayBuffer = _interopRequireDefault(require("./isArrayBuffer.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _isBoolean = _interopRequireDefault(require("./isBoolean.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isDate = _interopRequireDefault(require("./isDate.js"));

var _isElement = _interopRequireDefault(require("./isElement.js"));

var _isEmpty = _interopRequireDefault(require("./isEmpty.js"));

var _isEqual = _interopRequireDefault(require("./isEqual.js"));

var _isEqualWith = _interopRequireDefault(require("./isEqualWith.js"));

var _isError = _interopRequireDefault(require("./isError.js"));

var _isFinite = _interopRequireDefault(require("./isFinite.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isInteger = _interopRequireDefault(require("./isInteger.js"));

var _isLength = _interopRequireDefault(require("./isLength.js"));

var _isMap = _interopRequireDefault(require("./isMap.js"));

var _isMatch = _interopRequireDefault(require("./isMatch.js"));

var _isMatchWith = _interopRequireDefault(require("./isMatchWith.js"));

var _isNaN = _interopRequireDefault(require("./isNaN.js"));

var _isNative = _interopRequireDefault(require("./isNative.js"));

var _isNil = _interopRequireDefault(require("./isNil.js"));

var _isNull = _interopRequireDefault(require("./isNull.js"));

var _isNumber = _interopRequireDefault(require("./isNumber.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

var _isRegExp = _interopRequireDefault(require("./isRegExp.js"));

var _isSafeInteger = _interopRequireDefault(require("./isSafeInteger.js"));

var _isSet = _interopRequireDefault(require("./isSet.js"));

var _isString = _interopRequireDefault(require("./isString.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

var _isUndefined = _interopRequireDefault(require("./isUndefined.js"));

var _isWeakMap = _interopRequireDefault(require("./isWeakMap.js"));

var _isWeakSet = _interopRequireDefault(require("./isWeakSet.js"));

var _lt = _interopRequireDefault(require("./lt.js"));

var _lte = _interopRequireDefault(require("./lte.js"));

var _toArray = _interopRequireDefault(require("./toArray.js"));

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toLength = _interopRequireDefault(require("./toLength.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

var _toPlainObject = _interopRequireDefault(require("./toPlainObject.js"));

var _toSafeInteger = _interopRequireDefault(require("./toSafeInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

var _langDefault = _interopRequireDefault(require("./lang.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./castArray.js":"node_modules/lodash-es/castArray.js","./clone.js":"node_modules/lodash-es/clone.js","./cloneDeep.js":"node_modules/lodash-es/cloneDeep.js","./cloneDeepWith.js":"node_modules/lodash-es/cloneDeepWith.js","./cloneWith.js":"node_modules/lodash-es/cloneWith.js","./conformsTo.js":"node_modules/lodash-es/conformsTo.js","./eq.js":"node_modules/lodash-es/eq.js","./gt.js":"node_modules/lodash-es/gt.js","./gte.js":"node_modules/lodash-es/gte.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isArrayBuffer.js":"node_modules/lodash-es/isArrayBuffer.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./isBoolean.js":"node_modules/lodash-es/isBoolean.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isDate.js":"node_modules/lodash-es/isDate.js","./isElement.js":"node_modules/lodash-es/isElement.js","./isEmpty.js":"node_modules/lodash-es/isEmpty.js","./isEqual.js":"node_modules/lodash-es/isEqual.js","./isEqualWith.js":"node_modules/lodash-es/isEqualWith.js","./isError.js":"node_modules/lodash-es/isError.js","./isFinite.js":"node_modules/lodash-es/isFinite.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./isInteger.js":"node_modules/lodash-es/isInteger.js","./isLength.js":"node_modules/lodash-es/isLength.js","./isMap.js":"node_modules/lodash-es/isMap.js","./isMatch.js":"node_modules/lodash-es/isMatch.js","./isMatchWith.js":"node_modules/lodash-es/isMatchWith.js","./isNaN.js":"node_modules/lodash-es/isNaN.js","./isNative.js":"node_modules/lodash-es/isNative.js","./isNil.js":"node_modules/lodash-es/isNil.js","./isNull.js":"node_modules/lodash-es/isNull.js","./isNumber.js":"node_modules/lodash-es/isNumber.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js","./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js","./isRegExp.js":"node_modules/lodash-es/isRegExp.js","./isSafeInteger.js":"node_modules/lodash-es/isSafeInteger.js","./isSet.js":"node_modules/lodash-es/isSet.js","./isString.js":"node_modules/lodash-es/isString.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js","./isUndefined.js":"node_modules/lodash-es/isUndefined.js","./isWeakMap.js":"node_modules/lodash-es/isWeakMap.js","./isWeakSet.js":"node_modules/lodash-es/isWeakSet.js","./lt.js":"node_modules/lodash-es/lt.js","./lte.js":"node_modules/lodash-es/lte.js","./toArray.js":"node_modules/lodash-es/toArray.js","./toFinite.js":"node_modules/lodash-es/toFinite.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toLength.js":"node_modules/lodash-es/toLength.js","./toNumber.js":"node_modules/lodash-es/toNumber.js","./toPlainObject.js":"node_modules/lodash-es/toPlainObject.js","./toSafeInteger.js":"node_modules/lodash-es/toSafeInteger.js","./toString.js":"node_modules/lodash-es/toString.js","./lang.default.js":"node_modules/lodash-es/lang.default.js"}],"node_modules/lodash-es/math.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _add = _interopRequireDefault(require("./add.js"));

var _ceil = _interopRequireDefault(require("./ceil.js"));

var _divide = _interopRequireDefault(require("./divide.js"));

var _floor = _interopRequireDefault(require("./floor.js"));

var _max = _interopRequireDefault(require("./max.js"));

var _maxBy = _interopRequireDefault(require("./maxBy.js"));

var _mean = _interopRequireDefault(require("./mean.js"));

var _meanBy = _interopRequireDefault(require("./meanBy.js"));

var _min = _interopRequireDefault(require("./min.js"));

var _minBy = _interopRequireDefault(require("./minBy.js"));

var _multiply = _interopRequireDefault(require("./multiply.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _subtract = _interopRequireDefault(require("./subtract.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sumBy = _interopRequireDefault(require("./sumBy.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  add: _add.default,
  ceil: _ceil.default,
  divide: _divide.default,
  floor: _floor.default,
  max: _max.default,
  maxBy: _maxBy.default,
  mean: _mean.default,
  meanBy: _meanBy.default,
  min: _min.default,
  minBy: _minBy.default,
  multiply: _multiply.default,
  round: _round.default,
  subtract: _subtract.default,
  sum: _sum.default,
  sumBy: _sumBy.default
};
exports.default = _default;
},{"./add.js":"node_modules/lodash-es/add.js","./ceil.js":"node_modules/lodash-es/ceil.js","./divide.js":"node_modules/lodash-es/divide.js","./floor.js":"node_modules/lodash-es/floor.js","./max.js":"node_modules/lodash-es/max.js","./maxBy.js":"node_modules/lodash-es/maxBy.js","./mean.js":"node_modules/lodash-es/mean.js","./meanBy.js":"node_modules/lodash-es/meanBy.js","./min.js":"node_modules/lodash-es/min.js","./minBy.js":"node_modules/lodash-es/minBy.js","./multiply.js":"node_modules/lodash-es/multiply.js","./round.js":"node_modules/lodash-es/round.js","./subtract.js":"node_modules/lodash-es/subtract.js","./sum.js":"node_modules/lodash-es/sum.js","./sumBy.js":"node_modules/lodash-es/sumBy.js"}],"node_modules/lodash-es/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "add", {
  enumerable: true,
  get: function () {
    return _add.default;
  }
});
Object.defineProperty(exports, "ceil", {
  enumerable: true,
  get: function () {
    return _ceil.default;
  }
});
Object.defineProperty(exports, "divide", {
  enumerable: true,
  get: function () {
    return _divide.default;
  }
});
Object.defineProperty(exports, "floor", {
  enumerable: true,
  get: function () {
    return _floor.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "maxBy", {
  enumerable: true,
  get: function () {
    return _maxBy.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "meanBy", {
  enumerable: true,
  get: function () {
    return _meanBy.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "minBy", {
  enumerable: true,
  get: function () {
    return _minBy.default;
  }
});
Object.defineProperty(exports, "multiply", {
  enumerable: true,
  get: function () {
    return _multiply.default;
  }
});
Object.defineProperty(exports, "round", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "subtract", {
  enumerable: true,
  get: function () {
    return _subtract.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "sumBy", {
  enumerable: true,
  get: function () {
    return _sumBy.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _mathDefault.default;
  }
});

var _add = _interopRequireDefault(require("./add.js"));

var _ceil = _interopRequireDefault(require("./ceil.js"));

var _divide = _interopRequireDefault(require("./divide.js"));

var _floor = _interopRequireDefault(require("./floor.js"));

var _max = _interopRequireDefault(require("./max.js"));

var _maxBy = _interopRequireDefault(require("./maxBy.js"));

var _mean = _interopRequireDefault(require("./mean.js"));

var _meanBy = _interopRequireDefault(require("./meanBy.js"));

var _min = _interopRequireDefault(require("./min.js"));

var _minBy = _interopRequireDefault(require("./minBy.js"));

var _multiply = _interopRequireDefault(require("./multiply.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _subtract = _interopRequireDefault(require("./subtract.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sumBy = _interopRequireDefault(require("./sumBy.js"));

var _mathDefault = _interopRequireDefault(require("./math.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./add.js":"node_modules/lodash-es/add.js","./ceil.js":"node_modules/lodash-es/ceil.js","./divide.js":"node_modules/lodash-es/divide.js","./floor.js":"node_modules/lodash-es/floor.js","./max.js":"node_modules/lodash-es/max.js","./maxBy.js":"node_modules/lodash-es/maxBy.js","./mean.js":"node_modules/lodash-es/mean.js","./meanBy.js":"node_modules/lodash-es/meanBy.js","./min.js":"node_modules/lodash-es/min.js","./minBy.js":"node_modules/lodash-es/minBy.js","./multiply.js":"node_modules/lodash-es/multiply.js","./round.js":"node_modules/lodash-es/round.js","./subtract.js":"node_modules/lodash-es/subtract.js","./sum.js":"node_modules/lodash-es/sum.js","./sumBy.js":"node_modules/lodash-es/sumBy.js","./math.default.js":"node_modules/lodash-es/math.default.js"}],"node_modules/lodash-es/number.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _clamp = _interopRequireDefault(require("./clamp.js"));

var _inRange = _interopRequireDefault(require("./inRange.js"));

var _random = _interopRequireDefault(require("./random.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  clamp: _clamp.default,
  inRange: _inRange.default,
  random: _random.default
};
exports.default = _default;
},{"./clamp.js":"node_modules/lodash-es/clamp.js","./inRange.js":"node_modules/lodash-es/inRange.js","./random.js":"node_modules/lodash-es/random.js"}],"node_modules/lodash-es/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "clamp", {
  enumerable: true,
  get: function () {
    return _clamp.default;
  }
});
Object.defineProperty(exports, "inRange", {
  enumerable: true,
  get: function () {
    return _inRange.default;
  }
});
Object.defineProperty(exports, "random", {
  enumerable: true,
  get: function () {
    return _random.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _numberDefault.default;
  }
});

var _clamp = _interopRequireDefault(require("./clamp.js"));

var _inRange = _interopRequireDefault(require("./inRange.js"));

var _random = _interopRequireDefault(require("./random.js"));

var _numberDefault = _interopRequireDefault(require("./number.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./clamp.js":"node_modules/lodash-es/clamp.js","./inRange.js":"node_modules/lodash-es/inRange.js","./random.js":"node_modules/lodash-es/random.js","./number.default.js":"node_modules/lodash-es/number.default.js"}],"node_modules/lodash-es/object.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assign = _interopRequireDefault(require("./assign.js"));

var _assignIn = _interopRequireDefault(require("./assignIn.js"));

var _assignInWith = _interopRequireDefault(require("./assignInWith.js"));

var _assignWith = _interopRequireDefault(require("./assignWith.js"));

var _at = _interopRequireDefault(require("./at.js"));

var _create = _interopRequireDefault(require("./create.js"));

var _defaults = _interopRequireDefault(require("./defaults.js"));

var _defaultsDeep = _interopRequireDefault(require("./defaultsDeep.js"));

var _entries = _interopRequireDefault(require("./entries.js"));

var _entriesIn = _interopRequireDefault(require("./entriesIn.js"));

var _extend = _interopRequireDefault(require("./extend.js"));

var _extendWith = _interopRequireDefault(require("./extendWith.js"));

var _findKey = _interopRequireDefault(require("./findKey.js"));

var _findLastKey = _interopRequireDefault(require("./findLastKey.js"));

var _forIn = _interopRequireDefault(require("./forIn.js"));

var _forInRight = _interopRequireDefault(require("./forInRight.js"));

var _forOwn = _interopRequireDefault(require("./forOwn.js"));

var _forOwnRight = _interopRequireDefault(require("./forOwnRight.js"));

var _functions = _interopRequireDefault(require("./functions.js"));

var _functionsIn = _interopRequireDefault(require("./functionsIn.js"));

var _get = _interopRequireDefault(require("./get.js"));

var _has = _interopRequireDefault(require("./has.js"));

var _hasIn = _interopRequireDefault(require("./hasIn.js"));

var _invert = _interopRequireDefault(require("./invert.js"));

var _invertBy = _interopRequireDefault(require("./invertBy.js"));

var _invoke = _interopRequireDefault(require("./invoke.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

var _mapKeys = _interopRequireDefault(require("./mapKeys.js"));

var _mapValues = _interopRequireDefault(require("./mapValues.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _mergeWith = _interopRequireDefault(require("./mergeWith.js"));

var _omit = _interopRequireDefault(require("./omit.js"));

var _omitBy = _interopRequireDefault(require("./omitBy.js"));

var _pick = _interopRequireDefault(require("./pick.js"));

var _pickBy = _interopRequireDefault(require("./pickBy.js"));

var _result = _interopRequireDefault(require("./result.js"));

var _set = _interopRequireDefault(require("./set.js"));

var _setWith = _interopRequireDefault(require("./setWith.js"));

var _toPairs = _interopRequireDefault(require("./toPairs.js"));

var _toPairsIn = _interopRequireDefault(require("./toPairsIn.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

var _unset = _interopRequireDefault(require("./unset.js"));

var _update = _interopRequireDefault(require("./update.js"));

var _updateWith = _interopRequireDefault(require("./updateWith.js"));

var _values = _interopRequireDefault(require("./values.js"));

var _valuesIn = _interopRequireDefault(require("./valuesIn.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  assign: _assign.default,
  assignIn: _assignIn.default,
  assignInWith: _assignInWith.default,
  assignWith: _assignWith.default,
  at: _at.default,
  create: _create.default,
  defaults: _defaults.default,
  defaultsDeep: _defaultsDeep.default,
  entries: _entries.default,
  entriesIn: _entriesIn.default,
  extend: _extend.default,
  extendWith: _extendWith.default,
  findKey: _findKey.default,
  findLastKey: _findLastKey.default,
  forIn: _forIn.default,
  forInRight: _forInRight.default,
  forOwn: _forOwn.default,
  forOwnRight: _forOwnRight.default,
  functions: _functions.default,
  functionsIn: _functionsIn.default,
  get: _get.default,
  has: _has.default,
  hasIn: _hasIn.default,
  invert: _invert.default,
  invertBy: _invertBy.default,
  invoke: _invoke.default,
  keys: _keys.default,
  keysIn: _keysIn.default,
  mapKeys: _mapKeys.default,
  mapValues: _mapValues.default,
  merge: _merge.default,
  mergeWith: _mergeWith.default,
  omit: _omit.default,
  omitBy: _omitBy.default,
  pick: _pick.default,
  pickBy: _pickBy.default,
  result: _result.default,
  set: _set.default,
  setWith: _setWith.default,
  toPairs: _toPairs.default,
  toPairsIn: _toPairsIn.default,
  transform: _transform.default,
  unset: _unset.default,
  update: _update.default,
  updateWith: _updateWith.default,
  values: _values.default,
  valuesIn: _valuesIn.default
};
exports.default = _default;
},{"./assign.js":"node_modules/lodash-es/assign.js","./assignIn.js":"node_modules/lodash-es/assignIn.js","./assignInWith.js":"node_modules/lodash-es/assignInWith.js","./assignWith.js":"node_modules/lodash-es/assignWith.js","./at.js":"node_modules/lodash-es/at.js","./create.js":"node_modules/lodash-es/create.js","./defaults.js":"node_modules/lodash-es/defaults.js","./defaultsDeep.js":"node_modules/lodash-es/defaultsDeep.js","./entries.js":"node_modules/lodash-es/entries.js","./entriesIn.js":"node_modules/lodash-es/entriesIn.js","./extend.js":"node_modules/lodash-es/extend.js","./extendWith.js":"node_modules/lodash-es/extendWith.js","./findKey.js":"node_modules/lodash-es/findKey.js","./findLastKey.js":"node_modules/lodash-es/findLastKey.js","./forIn.js":"node_modules/lodash-es/forIn.js","./forInRight.js":"node_modules/lodash-es/forInRight.js","./forOwn.js":"node_modules/lodash-es/forOwn.js","./forOwnRight.js":"node_modules/lodash-es/forOwnRight.js","./functions.js":"node_modules/lodash-es/functions.js","./functionsIn.js":"node_modules/lodash-es/functionsIn.js","./get.js":"node_modules/lodash-es/get.js","./has.js":"node_modules/lodash-es/has.js","./hasIn.js":"node_modules/lodash-es/hasIn.js","./invert.js":"node_modules/lodash-es/invert.js","./invertBy.js":"node_modules/lodash-es/invertBy.js","./invoke.js":"node_modules/lodash-es/invoke.js","./keys.js":"node_modules/lodash-es/keys.js","./keysIn.js":"node_modules/lodash-es/keysIn.js","./mapKeys.js":"node_modules/lodash-es/mapKeys.js","./mapValues.js":"node_modules/lodash-es/mapValues.js","./merge.js":"node_modules/lodash-es/merge.js","./mergeWith.js":"node_modules/lodash-es/mergeWith.js","./omit.js":"node_modules/lodash-es/omit.js","./omitBy.js":"node_modules/lodash-es/omitBy.js","./pick.js":"node_modules/lodash-es/pick.js","./pickBy.js":"node_modules/lodash-es/pickBy.js","./result.js":"node_modules/lodash-es/result.js","./set.js":"node_modules/lodash-es/set.js","./setWith.js":"node_modules/lodash-es/setWith.js","./toPairs.js":"node_modules/lodash-es/toPairs.js","./toPairsIn.js":"node_modules/lodash-es/toPairsIn.js","./transform.js":"node_modules/lodash-es/transform.js","./unset.js":"node_modules/lodash-es/unset.js","./update.js":"node_modules/lodash-es/update.js","./updateWith.js":"node_modules/lodash-es/updateWith.js","./values.js":"node_modules/lodash-es/values.js","./valuesIn.js":"node_modules/lodash-es/valuesIn.js"}],"node_modules/lodash-es/object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "assign", {
  enumerable: true,
  get: function () {
    return _assign.default;
  }
});
Object.defineProperty(exports, "assignIn", {
  enumerable: true,
  get: function () {
    return _assignIn.default;
  }
});
Object.defineProperty(exports, "assignInWith", {
  enumerable: true,
  get: function () {
    return _assignInWith.default;
  }
});
Object.defineProperty(exports, "assignWith", {
  enumerable: true,
  get: function () {
    return _assignWith.default;
  }
});
Object.defineProperty(exports, "at", {
  enumerable: true,
  get: function () {
    return _at.default;
  }
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "defaults", {
  enumerable: true,
  get: function () {
    return _defaults.default;
  }
});
Object.defineProperty(exports, "defaultsDeep", {
  enumerable: true,
  get: function () {
    return _defaultsDeep.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});
Object.defineProperty(exports, "entriesIn", {
  enumerable: true,
  get: function () {
    return _entriesIn.default;
  }
});
Object.defineProperty(exports, "extend", {
  enumerable: true,
  get: function () {
    return _extend.default;
  }
});
Object.defineProperty(exports, "extendWith", {
  enumerable: true,
  get: function () {
    return _extendWith.default;
  }
});
Object.defineProperty(exports, "findKey", {
  enumerable: true,
  get: function () {
    return _findKey.default;
  }
});
Object.defineProperty(exports, "findLastKey", {
  enumerable: true,
  get: function () {
    return _findLastKey.default;
  }
});
Object.defineProperty(exports, "forIn", {
  enumerable: true,
  get: function () {
    return _forIn.default;
  }
});
Object.defineProperty(exports, "forInRight", {
  enumerable: true,
  get: function () {
    return _forInRight.default;
  }
});
Object.defineProperty(exports, "forOwn", {
  enumerable: true,
  get: function () {
    return _forOwn.default;
  }
});
Object.defineProperty(exports, "forOwnRight", {
  enumerable: true,
  get: function () {
    return _forOwnRight.default;
  }
});
Object.defineProperty(exports, "functions", {
  enumerable: true,
  get: function () {
    return _functions.default;
  }
});
Object.defineProperty(exports, "functionsIn", {
  enumerable: true,
  get: function () {
    return _functionsIn.default;
  }
});
Object.defineProperty(exports, "get", {
  enumerable: true,
  get: function () {
    return _get.default;
  }
});
Object.defineProperty(exports, "has", {
  enumerable: true,
  get: function () {
    return _has.default;
  }
});
Object.defineProperty(exports, "hasIn", {
  enumerable: true,
  get: function () {
    return _hasIn.default;
  }
});
Object.defineProperty(exports, "invert", {
  enumerable: true,
  get: function () {
    return _invert.default;
  }
});
Object.defineProperty(exports, "invertBy", {
  enumerable: true,
  get: function () {
    return _invertBy.default;
  }
});
Object.defineProperty(exports, "invoke", {
  enumerable: true,
  get: function () {
    return _invoke.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "keysIn", {
  enumerable: true,
  get: function () {
    return _keysIn.default;
  }
});
Object.defineProperty(exports, "mapKeys", {
  enumerable: true,
  get: function () {
    return _mapKeys.default;
  }
});
Object.defineProperty(exports, "mapValues", {
  enumerable: true,
  get: function () {
    return _mapValues.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "mergeWith", {
  enumerable: true,
  get: function () {
    return _mergeWith.default;
  }
});
Object.defineProperty(exports, "omit", {
  enumerable: true,
  get: function () {
    return _omit.default;
  }
});
Object.defineProperty(exports, "omitBy", {
  enumerable: true,
  get: function () {
    return _omitBy.default;
  }
});
Object.defineProperty(exports, "pick", {
  enumerable: true,
  get: function () {
    return _pick.default;
  }
});
Object.defineProperty(exports, "pickBy", {
  enumerable: true,
  get: function () {
    return _pickBy.default;
  }
});
Object.defineProperty(exports, "result", {
  enumerable: true,
  get: function () {
    return _result.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "setWith", {
  enumerable: true,
  get: function () {
    return _setWith.default;
  }
});
Object.defineProperty(exports, "toPairs", {
  enumerable: true,
  get: function () {
    return _toPairs.default;
  }
});
Object.defineProperty(exports, "toPairsIn", {
  enumerable: true,
  get: function () {
    return _toPairsIn.default;
  }
});
Object.defineProperty(exports, "transform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "unset", {
  enumerable: true,
  get: function () {
    return _unset.default;
  }
});
Object.defineProperty(exports, "update", {
  enumerable: true,
  get: function () {
    return _update.default;
  }
});
Object.defineProperty(exports, "updateWith", {
  enumerable: true,
  get: function () {
    return _updateWith.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "valuesIn", {
  enumerable: true,
  get: function () {
    return _valuesIn.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _objectDefault.default;
  }
});

var _assign = _interopRequireDefault(require("./assign.js"));

var _assignIn = _interopRequireDefault(require("./assignIn.js"));

var _assignInWith = _interopRequireDefault(require("./assignInWith.js"));

var _assignWith = _interopRequireDefault(require("./assignWith.js"));

var _at = _interopRequireDefault(require("./at.js"));

var _create = _interopRequireDefault(require("./create.js"));

var _defaults = _interopRequireDefault(require("./defaults.js"));

var _defaultsDeep = _interopRequireDefault(require("./defaultsDeep.js"));

var _entries = _interopRequireDefault(require("./entries.js"));

var _entriesIn = _interopRequireDefault(require("./entriesIn.js"));

var _extend = _interopRequireDefault(require("./extend.js"));

var _extendWith = _interopRequireDefault(require("./extendWith.js"));

var _findKey = _interopRequireDefault(require("./findKey.js"));

var _findLastKey = _interopRequireDefault(require("./findLastKey.js"));

var _forIn = _interopRequireDefault(require("./forIn.js"));

var _forInRight = _interopRequireDefault(require("./forInRight.js"));

var _forOwn = _interopRequireDefault(require("./forOwn.js"));

var _forOwnRight = _interopRequireDefault(require("./forOwnRight.js"));

var _functions = _interopRequireDefault(require("./functions.js"));

var _functionsIn = _interopRequireDefault(require("./functionsIn.js"));

var _get = _interopRequireDefault(require("./get.js"));

var _has = _interopRequireDefault(require("./has.js"));

var _hasIn = _interopRequireDefault(require("./hasIn.js"));

var _invert = _interopRequireDefault(require("./invert.js"));

var _invertBy = _interopRequireDefault(require("./invertBy.js"));

var _invoke = _interopRequireDefault(require("./invoke.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

var _mapKeys = _interopRequireDefault(require("./mapKeys.js"));

var _mapValues = _interopRequireDefault(require("./mapValues.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _mergeWith = _interopRequireDefault(require("./mergeWith.js"));

var _omit = _interopRequireDefault(require("./omit.js"));

var _omitBy = _interopRequireDefault(require("./omitBy.js"));

var _pick = _interopRequireDefault(require("./pick.js"));

var _pickBy = _interopRequireDefault(require("./pickBy.js"));

var _result = _interopRequireDefault(require("./result.js"));

var _set = _interopRequireDefault(require("./set.js"));

var _setWith = _interopRequireDefault(require("./setWith.js"));

var _toPairs = _interopRequireDefault(require("./toPairs.js"));

var _toPairsIn = _interopRequireDefault(require("./toPairsIn.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

var _unset = _interopRequireDefault(require("./unset.js"));

var _update = _interopRequireDefault(require("./update.js"));

var _updateWith = _interopRequireDefault(require("./updateWith.js"));

var _values = _interopRequireDefault(require("./values.js"));

var _valuesIn = _interopRequireDefault(require("./valuesIn.js"));

var _objectDefault = _interopRequireDefault(require("./object.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./assign.js":"node_modules/lodash-es/assign.js","./assignIn.js":"node_modules/lodash-es/assignIn.js","./assignInWith.js":"node_modules/lodash-es/assignInWith.js","./assignWith.js":"node_modules/lodash-es/assignWith.js","./at.js":"node_modules/lodash-es/at.js","./create.js":"node_modules/lodash-es/create.js","./defaults.js":"node_modules/lodash-es/defaults.js","./defaultsDeep.js":"node_modules/lodash-es/defaultsDeep.js","./entries.js":"node_modules/lodash-es/entries.js","./entriesIn.js":"node_modules/lodash-es/entriesIn.js","./extend.js":"node_modules/lodash-es/extend.js","./extendWith.js":"node_modules/lodash-es/extendWith.js","./findKey.js":"node_modules/lodash-es/findKey.js","./findLastKey.js":"node_modules/lodash-es/findLastKey.js","./forIn.js":"node_modules/lodash-es/forIn.js","./forInRight.js":"node_modules/lodash-es/forInRight.js","./forOwn.js":"node_modules/lodash-es/forOwn.js","./forOwnRight.js":"node_modules/lodash-es/forOwnRight.js","./functions.js":"node_modules/lodash-es/functions.js","./functionsIn.js":"node_modules/lodash-es/functionsIn.js","./get.js":"node_modules/lodash-es/get.js","./has.js":"node_modules/lodash-es/has.js","./hasIn.js":"node_modules/lodash-es/hasIn.js","./invert.js":"node_modules/lodash-es/invert.js","./invertBy.js":"node_modules/lodash-es/invertBy.js","./invoke.js":"node_modules/lodash-es/invoke.js","./keys.js":"node_modules/lodash-es/keys.js","./keysIn.js":"node_modules/lodash-es/keysIn.js","./mapKeys.js":"node_modules/lodash-es/mapKeys.js","./mapValues.js":"node_modules/lodash-es/mapValues.js","./merge.js":"node_modules/lodash-es/merge.js","./mergeWith.js":"node_modules/lodash-es/mergeWith.js","./omit.js":"node_modules/lodash-es/omit.js","./omitBy.js":"node_modules/lodash-es/omitBy.js","./pick.js":"node_modules/lodash-es/pick.js","./pickBy.js":"node_modules/lodash-es/pickBy.js","./result.js":"node_modules/lodash-es/result.js","./set.js":"node_modules/lodash-es/set.js","./setWith.js":"node_modules/lodash-es/setWith.js","./toPairs.js":"node_modules/lodash-es/toPairs.js","./toPairsIn.js":"node_modules/lodash-es/toPairsIn.js","./transform.js":"node_modules/lodash-es/transform.js","./unset.js":"node_modules/lodash-es/unset.js","./update.js":"node_modules/lodash-es/update.js","./updateWith.js":"node_modules/lodash-es/updateWith.js","./values.js":"node_modules/lodash-es/values.js","./valuesIn.js":"node_modules/lodash-es/valuesIn.js","./object.default.js":"node_modules/lodash-es/object.default.js"}],"node_modules/lodash-es/seq.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _wrapperAt = _interopRequireDefault(require("./wrapperAt.js"));

var _chain = _interopRequireDefault(require("./chain.js"));

var _commit = _interopRequireDefault(require("./commit.js"));

var _wrapperLodash = _interopRequireDefault(require("./wrapperLodash.js"));

var _next = _interopRequireDefault(require("./next.js"));

var _plant = _interopRequireDefault(require("./plant.js"));

var _wrapperReverse = _interopRequireDefault(require("./wrapperReverse.js"));

var _tap = _interopRequireDefault(require("./tap.js"));

var _thru = _interopRequireDefault(require("./thru.js"));

var _toIterator = _interopRequireDefault(require("./toIterator.js"));

var _toJSON = _interopRequireDefault(require("./toJSON.js"));

var _wrapperValue = _interopRequireDefault(require("./wrapperValue.js"));

var _valueOf = _interopRequireDefault(require("./valueOf.js"));

var _wrapperChain = _interopRequireDefault(require("./wrapperChain.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  at: _wrapperAt.default,
  chain: _chain.default,
  commit: _commit.default,
  lodash: _wrapperLodash.default,
  next: _next.default,
  plant: _plant.default,
  reverse: _wrapperReverse.default,
  tap: _tap.default,
  thru: _thru.default,
  toIterator: _toIterator.default,
  toJSON: _toJSON.default,
  value: _wrapperValue.default,
  valueOf: _valueOf.default,
  wrapperChain: _wrapperChain.default
};
exports.default = _default;
},{"./wrapperAt.js":"node_modules/lodash-es/wrapperAt.js","./chain.js":"node_modules/lodash-es/chain.js","./commit.js":"node_modules/lodash-es/commit.js","./wrapperLodash.js":"node_modules/lodash-es/wrapperLodash.js","./next.js":"node_modules/lodash-es/next.js","./plant.js":"node_modules/lodash-es/plant.js","./wrapperReverse.js":"node_modules/lodash-es/wrapperReverse.js","./tap.js":"node_modules/lodash-es/tap.js","./thru.js":"node_modules/lodash-es/thru.js","./toIterator.js":"node_modules/lodash-es/toIterator.js","./toJSON.js":"node_modules/lodash-es/toJSON.js","./wrapperValue.js":"node_modules/lodash-es/wrapperValue.js","./valueOf.js":"node_modules/lodash-es/valueOf.js","./wrapperChain.js":"node_modules/lodash-es/wrapperChain.js"}],"node_modules/lodash-es/seq.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "at", {
  enumerable: true,
  get: function () {
    return _wrapperAt.default;
  }
});
Object.defineProperty(exports, "chain", {
  enumerable: true,
  get: function () {
    return _chain.default;
  }
});
Object.defineProperty(exports, "commit", {
  enumerable: true,
  get: function () {
    return _commit.default;
  }
});
Object.defineProperty(exports, "lodash", {
  enumerable: true,
  get: function () {
    return _wrapperLodash.default;
  }
});
Object.defineProperty(exports, "next", {
  enumerable: true,
  get: function () {
    return _next.default;
  }
});
Object.defineProperty(exports, "plant", {
  enumerable: true,
  get: function () {
    return _plant.default;
  }
});
Object.defineProperty(exports, "reverse", {
  enumerable: true,
  get: function () {
    return _wrapperReverse.default;
  }
});
Object.defineProperty(exports, "tap", {
  enumerable: true,
  get: function () {
    return _tap.default;
  }
});
Object.defineProperty(exports, "thru", {
  enumerable: true,
  get: function () {
    return _thru.default;
  }
});
Object.defineProperty(exports, "toIterator", {
  enumerable: true,
  get: function () {
    return _toIterator.default;
  }
});
Object.defineProperty(exports, "toJSON", {
  enumerable: true,
  get: function () {
    return _toJSON.default;
  }
});
Object.defineProperty(exports, "value", {
  enumerable: true,
  get: function () {
    return _wrapperValue.default;
  }
});
Object.defineProperty(exports, "valueOf", {
  enumerable: true,
  get: function () {
    return _valueOf.default;
  }
});
Object.defineProperty(exports, "wrapperChain", {
  enumerable: true,
  get: function () {
    return _wrapperChain.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _seqDefault.default;
  }
});

var _wrapperAt = _interopRequireDefault(require("./wrapperAt.js"));

var _chain = _interopRequireDefault(require("./chain.js"));

var _commit = _interopRequireDefault(require("./commit.js"));

var _wrapperLodash = _interopRequireDefault(require("./wrapperLodash.js"));

var _next = _interopRequireDefault(require("./next.js"));

var _plant = _interopRequireDefault(require("./plant.js"));

var _wrapperReverse = _interopRequireDefault(require("./wrapperReverse.js"));

var _tap = _interopRequireDefault(require("./tap.js"));

var _thru = _interopRequireDefault(require("./thru.js"));

var _toIterator = _interopRequireDefault(require("./toIterator.js"));

var _toJSON = _interopRequireDefault(require("./toJSON.js"));

var _wrapperValue = _interopRequireDefault(require("./wrapperValue.js"));

var _valueOf = _interopRequireDefault(require("./valueOf.js"));

var _wrapperChain = _interopRequireDefault(require("./wrapperChain.js"));

var _seqDefault = _interopRequireDefault(require("./seq.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./wrapperAt.js":"node_modules/lodash-es/wrapperAt.js","./chain.js":"node_modules/lodash-es/chain.js","./commit.js":"node_modules/lodash-es/commit.js","./wrapperLodash.js":"node_modules/lodash-es/wrapperLodash.js","./next.js":"node_modules/lodash-es/next.js","./plant.js":"node_modules/lodash-es/plant.js","./wrapperReverse.js":"node_modules/lodash-es/wrapperReverse.js","./tap.js":"node_modules/lodash-es/tap.js","./thru.js":"node_modules/lodash-es/thru.js","./toIterator.js":"node_modules/lodash-es/toIterator.js","./toJSON.js":"node_modules/lodash-es/toJSON.js","./wrapperValue.js":"node_modules/lodash-es/wrapperValue.js","./valueOf.js":"node_modules/lodash-es/valueOf.js","./wrapperChain.js":"node_modules/lodash-es/wrapperChain.js","./seq.default.js":"node_modules/lodash-es/seq.default.js"}],"node_modules/lodash-es/string.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _camelCase = _interopRequireDefault(require("./camelCase.js"));

var _capitalize = _interopRequireDefault(require("./capitalize.js"));

var _deburr = _interopRequireDefault(require("./deburr.js"));

var _endsWith = _interopRequireDefault(require("./endsWith.js"));

var _escape = _interopRequireDefault(require("./escape.js"));

var _escapeRegExp = _interopRequireDefault(require("./escapeRegExp.js"));

var _kebabCase = _interopRequireDefault(require("./kebabCase.js"));

var _lowerCase = _interopRequireDefault(require("./lowerCase.js"));

var _lowerFirst = _interopRequireDefault(require("./lowerFirst.js"));

var _pad = _interopRequireDefault(require("./pad.js"));

var _padEnd = _interopRequireDefault(require("./padEnd.js"));

var _padStart = _interopRequireDefault(require("./padStart.js"));

var _parseInt = _interopRequireDefault(require("./parseInt.js"));

var _repeat = _interopRequireDefault(require("./repeat.js"));

var _replace = _interopRequireDefault(require("./replace.js"));

var _snakeCase = _interopRequireDefault(require("./snakeCase.js"));

var _split = _interopRequireDefault(require("./split.js"));

var _startCase = _interopRequireDefault(require("./startCase.js"));

var _startsWith = _interopRequireDefault(require("./startsWith.js"));

var _template = _interopRequireDefault(require("./template.js"));

var _templateSettings = _interopRequireDefault(require("./templateSettings.js"));

var _toLower = _interopRequireDefault(require("./toLower.js"));

var _toUpper = _interopRequireDefault(require("./toUpper.js"));

var _trim = _interopRequireDefault(require("./trim.js"));

var _trimEnd = _interopRequireDefault(require("./trimEnd.js"));

var _trimStart = _interopRequireDefault(require("./trimStart.js"));

var _truncate = _interopRequireDefault(require("./truncate.js"));

var _unescape = _interopRequireDefault(require("./unescape.js"));

var _upperCase = _interopRequireDefault(require("./upperCase.js"));

var _upperFirst = _interopRequireDefault(require("./upperFirst.js"));

var _words = _interopRequireDefault(require("./words.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  camelCase: _camelCase.default,
  capitalize: _capitalize.default,
  deburr: _deburr.default,
  endsWith: _endsWith.default,
  escape: _escape.default,
  escapeRegExp: _escapeRegExp.default,
  kebabCase: _kebabCase.default,
  lowerCase: _lowerCase.default,
  lowerFirst: _lowerFirst.default,
  pad: _pad.default,
  padEnd: _padEnd.default,
  padStart: _padStart.default,
  parseInt: _parseInt.default,
  repeat: _repeat.default,
  replace: _replace.default,
  snakeCase: _snakeCase.default,
  split: _split.default,
  startCase: _startCase.default,
  startsWith: _startsWith.default,
  template: _template.default,
  templateSettings: _templateSettings.default,
  toLower: _toLower.default,
  toUpper: _toUpper.default,
  trim: _trim.default,
  trimEnd: _trimEnd.default,
  trimStart: _trimStart.default,
  truncate: _truncate.default,
  unescape: _unescape.default,
  upperCase: _upperCase.default,
  upperFirst: _upperFirst.default,
  words: _words.default
};
exports.default = _default;
},{"./camelCase.js":"node_modules/lodash-es/camelCase.js","./capitalize.js":"node_modules/lodash-es/capitalize.js","./deburr.js":"node_modules/lodash-es/deburr.js","./endsWith.js":"node_modules/lodash-es/endsWith.js","./escape.js":"node_modules/lodash-es/escape.js","./escapeRegExp.js":"node_modules/lodash-es/escapeRegExp.js","./kebabCase.js":"node_modules/lodash-es/kebabCase.js","./lowerCase.js":"node_modules/lodash-es/lowerCase.js","./lowerFirst.js":"node_modules/lodash-es/lowerFirst.js","./pad.js":"node_modules/lodash-es/pad.js","./padEnd.js":"node_modules/lodash-es/padEnd.js","./padStart.js":"node_modules/lodash-es/padStart.js","./parseInt.js":"node_modules/lodash-es/parseInt.js","./repeat.js":"node_modules/lodash-es/repeat.js","./replace.js":"node_modules/lodash-es/replace.js","./snakeCase.js":"node_modules/lodash-es/snakeCase.js","./split.js":"node_modules/lodash-es/split.js","./startCase.js":"node_modules/lodash-es/startCase.js","./startsWith.js":"node_modules/lodash-es/startsWith.js","./template.js":"node_modules/lodash-es/template.js","./templateSettings.js":"node_modules/lodash-es/templateSettings.js","./toLower.js":"node_modules/lodash-es/toLower.js","./toUpper.js":"node_modules/lodash-es/toUpper.js","./trim.js":"node_modules/lodash-es/trim.js","./trimEnd.js":"node_modules/lodash-es/trimEnd.js","./trimStart.js":"node_modules/lodash-es/trimStart.js","./truncate.js":"node_modules/lodash-es/truncate.js","./unescape.js":"node_modules/lodash-es/unescape.js","./upperCase.js":"node_modules/lodash-es/upperCase.js","./upperFirst.js":"node_modules/lodash-es/upperFirst.js","./words.js":"node_modules/lodash-es/words.js"}],"node_modules/lodash-es/string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "camelCase", {
  enumerable: true,
  get: function () {
    return _camelCase.default;
  }
});
Object.defineProperty(exports, "capitalize", {
  enumerable: true,
  get: function () {
    return _capitalize.default;
  }
});
Object.defineProperty(exports, "deburr", {
  enumerable: true,
  get: function () {
    return _deburr.default;
  }
});
Object.defineProperty(exports, "endsWith", {
  enumerable: true,
  get: function () {
    return _endsWith.default;
  }
});
Object.defineProperty(exports, "escape", {
  enumerable: true,
  get: function () {
    return _escape.default;
  }
});
Object.defineProperty(exports, "escapeRegExp", {
  enumerable: true,
  get: function () {
    return _escapeRegExp.default;
  }
});
Object.defineProperty(exports, "kebabCase", {
  enumerable: true,
  get: function () {
    return _kebabCase.default;
  }
});
Object.defineProperty(exports, "lowerCase", {
  enumerable: true,
  get: function () {
    return _lowerCase.default;
  }
});
Object.defineProperty(exports, "lowerFirst", {
  enumerable: true,
  get: function () {
    return _lowerFirst.default;
  }
});
Object.defineProperty(exports, "pad", {
  enumerable: true,
  get: function () {
    return _pad.default;
  }
});
Object.defineProperty(exports, "padEnd", {
  enumerable: true,
  get: function () {
    return _padEnd.default;
  }
});
Object.defineProperty(exports, "padStart", {
  enumerable: true,
  get: function () {
    return _padStart.default;
  }
});
Object.defineProperty(exports, "parseInt", {
  enumerable: true,
  get: function () {
    return _parseInt.default;
  }
});
Object.defineProperty(exports, "repeat", {
  enumerable: true,
  get: function () {
    return _repeat.default;
  }
});
Object.defineProperty(exports, "replace", {
  enumerable: true,
  get: function () {
    return _replace.default;
  }
});
Object.defineProperty(exports, "snakeCase", {
  enumerable: true,
  get: function () {
    return _snakeCase.default;
  }
});
Object.defineProperty(exports, "split", {
  enumerable: true,
  get: function () {
    return _split.default;
  }
});
Object.defineProperty(exports, "startCase", {
  enumerable: true,
  get: function () {
    return _startCase.default;
  }
});
Object.defineProperty(exports, "startsWith", {
  enumerable: true,
  get: function () {
    return _startsWith.default;
  }
});
Object.defineProperty(exports, "template", {
  enumerable: true,
  get: function () {
    return _template.default;
  }
});
Object.defineProperty(exports, "templateSettings", {
  enumerable: true,
  get: function () {
    return _templateSettings.default;
  }
});
Object.defineProperty(exports, "toLower", {
  enumerable: true,
  get: function () {
    return _toLower.default;
  }
});
Object.defineProperty(exports, "toUpper", {
  enumerable: true,
  get: function () {
    return _toUpper.default;
  }
});
Object.defineProperty(exports, "trim", {
  enumerable: true,
  get: function () {
    return _trim.default;
  }
});
Object.defineProperty(exports, "trimEnd", {
  enumerable: true,
  get: function () {
    return _trimEnd.default;
  }
});
Object.defineProperty(exports, "trimStart", {
  enumerable: true,
  get: function () {
    return _trimStart.default;
  }
});
Object.defineProperty(exports, "truncate", {
  enumerable: true,
  get: function () {
    return _truncate.default;
  }
});
Object.defineProperty(exports, "unescape", {
  enumerable: true,
  get: function () {
    return _unescape.default;
  }
});
Object.defineProperty(exports, "upperCase", {
  enumerable: true,
  get: function () {
    return _upperCase.default;
  }
});
Object.defineProperty(exports, "upperFirst", {
  enumerable: true,
  get: function () {
    return _upperFirst.default;
  }
});
Object.defineProperty(exports, "words", {
  enumerable: true,
  get: function () {
    return _words.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _stringDefault.default;
  }
});

var _camelCase = _interopRequireDefault(require("./camelCase.js"));

var _capitalize = _interopRequireDefault(require("./capitalize.js"));

var _deburr = _interopRequireDefault(require("./deburr.js"));

var _endsWith = _interopRequireDefault(require("./endsWith.js"));

var _escape = _interopRequireDefault(require("./escape.js"));

var _escapeRegExp = _interopRequireDefault(require("./escapeRegExp.js"));

var _kebabCase = _interopRequireDefault(require("./kebabCase.js"));

var _lowerCase = _interopRequireDefault(require("./lowerCase.js"));

var _lowerFirst = _interopRequireDefault(require("./lowerFirst.js"));

var _pad = _interopRequireDefault(require("./pad.js"));

var _padEnd = _interopRequireDefault(require("./padEnd.js"));

var _padStart = _interopRequireDefault(require("./padStart.js"));

var _parseInt = _interopRequireDefault(require("./parseInt.js"));

var _repeat = _interopRequireDefault(require("./repeat.js"));

var _replace = _interopRequireDefault(require("./replace.js"));

var _snakeCase = _interopRequireDefault(require("./snakeCase.js"));

var _split = _interopRequireDefault(require("./split.js"));

var _startCase = _interopRequireDefault(require("./startCase.js"));

var _startsWith = _interopRequireDefault(require("./startsWith.js"));

var _template = _interopRequireDefault(require("./template.js"));

var _templateSettings = _interopRequireDefault(require("./templateSettings.js"));

var _toLower = _interopRequireDefault(require("./toLower.js"));

var _toUpper = _interopRequireDefault(require("./toUpper.js"));

var _trim = _interopRequireDefault(require("./trim.js"));

var _trimEnd = _interopRequireDefault(require("./trimEnd.js"));

var _trimStart = _interopRequireDefault(require("./trimStart.js"));

var _truncate = _interopRequireDefault(require("./truncate.js"));

var _unescape = _interopRequireDefault(require("./unescape.js"));

var _upperCase = _interopRequireDefault(require("./upperCase.js"));

var _upperFirst = _interopRequireDefault(require("./upperFirst.js"));

var _words = _interopRequireDefault(require("./words.js"));

var _stringDefault = _interopRequireDefault(require("./string.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./camelCase.js":"node_modules/lodash-es/camelCase.js","./capitalize.js":"node_modules/lodash-es/capitalize.js","./deburr.js":"node_modules/lodash-es/deburr.js","./endsWith.js":"node_modules/lodash-es/endsWith.js","./escape.js":"node_modules/lodash-es/escape.js","./escapeRegExp.js":"node_modules/lodash-es/escapeRegExp.js","./kebabCase.js":"node_modules/lodash-es/kebabCase.js","./lowerCase.js":"node_modules/lodash-es/lowerCase.js","./lowerFirst.js":"node_modules/lodash-es/lowerFirst.js","./pad.js":"node_modules/lodash-es/pad.js","./padEnd.js":"node_modules/lodash-es/padEnd.js","./padStart.js":"node_modules/lodash-es/padStart.js","./parseInt.js":"node_modules/lodash-es/parseInt.js","./repeat.js":"node_modules/lodash-es/repeat.js","./replace.js":"node_modules/lodash-es/replace.js","./snakeCase.js":"node_modules/lodash-es/snakeCase.js","./split.js":"node_modules/lodash-es/split.js","./startCase.js":"node_modules/lodash-es/startCase.js","./startsWith.js":"node_modules/lodash-es/startsWith.js","./template.js":"node_modules/lodash-es/template.js","./templateSettings.js":"node_modules/lodash-es/templateSettings.js","./toLower.js":"node_modules/lodash-es/toLower.js","./toUpper.js":"node_modules/lodash-es/toUpper.js","./trim.js":"node_modules/lodash-es/trim.js","./trimEnd.js":"node_modules/lodash-es/trimEnd.js","./trimStart.js":"node_modules/lodash-es/trimStart.js","./truncate.js":"node_modules/lodash-es/truncate.js","./unescape.js":"node_modules/lodash-es/unescape.js","./upperCase.js":"node_modules/lodash-es/upperCase.js","./upperFirst.js":"node_modules/lodash-es/upperFirst.js","./words.js":"node_modules/lodash-es/words.js","./string.default.js":"node_modules/lodash-es/string.default.js"}],"node_modules/lodash-es/util.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _attempt = _interopRequireDefault(require("./attempt.js"));

var _bindAll = _interopRequireDefault(require("./bindAll.js"));

var _cond = _interopRequireDefault(require("./cond.js"));

var _conforms = _interopRequireDefault(require("./conforms.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _defaultTo = _interopRequireDefault(require("./defaultTo.js"));

var _flow = _interopRequireDefault(require("./flow.js"));

var _flowRight = _interopRequireDefault(require("./flowRight.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _iteratee = _interopRequireDefault(require("./iteratee.js"));

var _matches = _interopRequireDefault(require("./matches.js"));

var _matchesProperty = _interopRequireDefault(require("./matchesProperty.js"));

var _method = _interopRequireDefault(require("./method.js"));

var _methodOf = _interopRequireDefault(require("./methodOf.js"));

var _mixin = _interopRequireDefault(require("./mixin.js"));

var _noop = _interopRequireDefault(require("./noop.js"));

var _nthArg = _interopRequireDefault(require("./nthArg.js"));

var _over = _interopRequireDefault(require("./over.js"));

var _overEvery = _interopRequireDefault(require("./overEvery.js"));

var _overSome = _interopRequireDefault(require("./overSome.js"));

var _property = _interopRequireDefault(require("./property.js"));

var _propertyOf = _interopRequireDefault(require("./propertyOf.js"));

var _range = _interopRequireDefault(require("./range.js"));

var _rangeRight = _interopRequireDefault(require("./rangeRight.js"));

var _stubArray = _interopRequireDefault(require("./stubArray.js"));

var _stubFalse = _interopRequireDefault(require("./stubFalse.js"));

var _stubObject = _interopRequireDefault(require("./stubObject.js"));

var _stubString = _interopRequireDefault(require("./stubString.js"));

var _stubTrue = _interopRequireDefault(require("./stubTrue.js"));

var _times = _interopRequireDefault(require("./times.js"));

var _toPath = _interopRequireDefault(require("./toPath.js"));

var _uniqueId = _interopRequireDefault(require("./uniqueId.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  attempt: _attempt.default,
  bindAll: _bindAll.default,
  cond: _cond.default,
  conforms: _conforms.default,
  constant: _constant.default,
  defaultTo: _defaultTo.default,
  flow: _flow.default,
  flowRight: _flowRight.default,
  identity: _identity.default,
  iteratee: _iteratee.default,
  matches: _matches.default,
  matchesProperty: _matchesProperty.default,
  method: _method.default,
  methodOf: _methodOf.default,
  mixin: _mixin.default,
  noop: _noop.default,
  nthArg: _nthArg.default,
  over: _over.default,
  overEvery: _overEvery.default,
  overSome: _overSome.default,
  property: _property.default,
  propertyOf: _propertyOf.default,
  range: _range.default,
  rangeRight: _rangeRight.default,
  stubArray: _stubArray.default,
  stubFalse: _stubFalse.default,
  stubObject: _stubObject.default,
  stubString: _stubString.default,
  stubTrue: _stubTrue.default,
  times: _times.default,
  toPath: _toPath.default,
  uniqueId: _uniqueId.default
};
exports.default = _default;
},{"./attempt.js":"node_modules/lodash-es/attempt.js","./bindAll.js":"node_modules/lodash-es/bindAll.js","./cond.js":"node_modules/lodash-es/cond.js","./conforms.js":"node_modules/lodash-es/conforms.js","./constant.js":"node_modules/lodash-es/constant.js","./defaultTo.js":"node_modules/lodash-es/defaultTo.js","./flow.js":"node_modules/lodash-es/flow.js","./flowRight.js":"node_modules/lodash-es/flowRight.js","./identity.js":"node_modules/lodash-es/identity.js","./iteratee.js":"node_modules/lodash-es/iteratee.js","./matches.js":"node_modules/lodash-es/matches.js","./matchesProperty.js":"node_modules/lodash-es/matchesProperty.js","./method.js":"node_modules/lodash-es/method.js","./methodOf.js":"node_modules/lodash-es/methodOf.js","./mixin.js":"node_modules/lodash-es/mixin.js","./noop.js":"node_modules/lodash-es/noop.js","./nthArg.js":"node_modules/lodash-es/nthArg.js","./over.js":"node_modules/lodash-es/over.js","./overEvery.js":"node_modules/lodash-es/overEvery.js","./overSome.js":"node_modules/lodash-es/overSome.js","./property.js":"node_modules/lodash-es/property.js","./propertyOf.js":"node_modules/lodash-es/propertyOf.js","./range.js":"node_modules/lodash-es/range.js","./rangeRight.js":"node_modules/lodash-es/rangeRight.js","./stubArray.js":"node_modules/lodash-es/stubArray.js","./stubFalse.js":"node_modules/lodash-es/stubFalse.js","./stubObject.js":"node_modules/lodash-es/stubObject.js","./stubString.js":"node_modules/lodash-es/stubString.js","./stubTrue.js":"node_modules/lodash-es/stubTrue.js","./times.js":"node_modules/lodash-es/times.js","./toPath.js":"node_modules/lodash-es/toPath.js","./uniqueId.js":"node_modules/lodash-es/uniqueId.js"}],"node_modules/lodash-es/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "attempt", {
  enumerable: true,
  get: function () {
    return _attempt.default;
  }
});
Object.defineProperty(exports, "bindAll", {
  enumerable: true,
  get: function () {
    return _bindAll.default;
  }
});
Object.defineProperty(exports, "cond", {
  enumerable: true,
  get: function () {
    return _cond.default;
  }
});
Object.defineProperty(exports, "conforms", {
  enumerable: true,
  get: function () {
    return _conforms.default;
  }
});
Object.defineProperty(exports, "constant", {
  enumerable: true,
  get: function () {
    return _constant.default;
  }
});
Object.defineProperty(exports, "defaultTo", {
  enumerable: true,
  get: function () {
    return _defaultTo.default;
  }
});
Object.defineProperty(exports, "flow", {
  enumerable: true,
  get: function () {
    return _flow.default;
  }
});
Object.defineProperty(exports, "flowRight", {
  enumerable: true,
  get: function () {
    return _flowRight.default;
  }
});
Object.defineProperty(exports, "identity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "iteratee", {
  enumerable: true,
  get: function () {
    return _iteratee.default;
  }
});
Object.defineProperty(exports, "matches", {
  enumerable: true,
  get: function () {
    return _matches.default;
  }
});
Object.defineProperty(exports, "matchesProperty", {
  enumerable: true,
  get: function () {
    return _matchesProperty.default;
  }
});
Object.defineProperty(exports, "method", {
  enumerable: true,
  get: function () {
    return _method.default;
  }
});
Object.defineProperty(exports, "methodOf", {
  enumerable: true,
  get: function () {
    return _methodOf.default;
  }
});
Object.defineProperty(exports, "mixin", {
  enumerable: true,
  get: function () {
    return _mixin.default;
  }
});
Object.defineProperty(exports, "noop", {
  enumerable: true,
  get: function () {
    return _noop.default;
  }
});
Object.defineProperty(exports, "nthArg", {
  enumerable: true,
  get: function () {
    return _nthArg.default;
  }
});
Object.defineProperty(exports, "over", {
  enumerable: true,
  get: function () {
    return _over.default;
  }
});
Object.defineProperty(exports, "overEvery", {
  enumerable: true,
  get: function () {
    return _overEvery.default;
  }
});
Object.defineProperty(exports, "overSome", {
  enumerable: true,
  get: function () {
    return _overSome.default;
  }
});
Object.defineProperty(exports, "property", {
  enumerable: true,
  get: function () {
    return _property.default;
  }
});
Object.defineProperty(exports, "propertyOf", {
  enumerable: true,
  get: function () {
    return _propertyOf.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "rangeRight", {
  enumerable: true,
  get: function () {
    return _rangeRight.default;
  }
});
Object.defineProperty(exports, "stubArray", {
  enumerable: true,
  get: function () {
    return _stubArray.default;
  }
});
Object.defineProperty(exports, "stubFalse", {
  enumerable: true,
  get: function () {
    return _stubFalse.default;
  }
});
Object.defineProperty(exports, "stubObject", {
  enumerable: true,
  get: function () {
    return _stubObject.default;
  }
});
Object.defineProperty(exports, "stubString", {
  enumerable: true,
  get: function () {
    return _stubString.default;
  }
});
Object.defineProperty(exports, "stubTrue", {
  enumerable: true,
  get: function () {
    return _stubTrue.default;
  }
});
Object.defineProperty(exports, "times", {
  enumerable: true,
  get: function () {
    return _times.default;
  }
});
Object.defineProperty(exports, "toPath", {
  enumerable: true,
  get: function () {
    return _toPath.default;
  }
});
Object.defineProperty(exports, "uniqueId", {
  enumerable: true,
  get: function () {
    return _uniqueId.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _utilDefault.default;
  }
});

var _attempt = _interopRequireDefault(require("./attempt.js"));

var _bindAll = _interopRequireDefault(require("./bindAll.js"));

var _cond = _interopRequireDefault(require("./cond.js"));

var _conforms = _interopRequireDefault(require("./conforms.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _defaultTo = _interopRequireDefault(require("./defaultTo.js"));

var _flow = _interopRequireDefault(require("./flow.js"));

var _flowRight = _interopRequireDefault(require("./flowRight.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _iteratee = _interopRequireDefault(require("./iteratee.js"));

var _matches = _interopRequireDefault(require("./matches.js"));

var _matchesProperty = _interopRequireDefault(require("./matchesProperty.js"));

var _method = _interopRequireDefault(require("./method.js"));

var _methodOf = _interopRequireDefault(require("./methodOf.js"));

var _mixin = _interopRequireDefault(require("./mixin.js"));

var _noop = _interopRequireDefault(require("./noop.js"));

var _nthArg = _interopRequireDefault(require("./nthArg.js"));

var _over = _interopRequireDefault(require("./over.js"));

var _overEvery = _interopRequireDefault(require("./overEvery.js"));

var _overSome = _interopRequireDefault(require("./overSome.js"));

var _property = _interopRequireDefault(require("./property.js"));

var _propertyOf = _interopRequireDefault(require("./propertyOf.js"));

var _range = _interopRequireDefault(require("./range.js"));

var _rangeRight = _interopRequireDefault(require("./rangeRight.js"));

var _stubArray = _interopRequireDefault(require("./stubArray.js"));

var _stubFalse = _interopRequireDefault(require("./stubFalse.js"));

var _stubObject = _interopRequireDefault(require("./stubObject.js"));

var _stubString = _interopRequireDefault(require("./stubString.js"));

var _stubTrue = _interopRequireDefault(require("./stubTrue.js"));

var _times = _interopRequireDefault(require("./times.js"));

var _toPath = _interopRequireDefault(require("./toPath.js"));

var _uniqueId = _interopRequireDefault(require("./uniqueId.js"));

var _utilDefault = _interopRequireDefault(require("./util.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./attempt.js":"node_modules/lodash-es/attempt.js","./bindAll.js":"node_modules/lodash-es/bindAll.js","./cond.js":"node_modules/lodash-es/cond.js","./conforms.js":"node_modules/lodash-es/conforms.js","./constant.js":"node_modules/lodash-es/constant.js","./defaultTo.js":"node_modules/lodash-es/defaultTo.js","./flow.js":"node_modules/lodash-es/flow.js","./flowRight.js":"node_modules/lodash-es/flowRight.js","./identity.js":"node_modules/lodash-es/identity.js","./iteratee.js":"node_modules/lodash-es/iteratee.js","./matches.js":"node_modules/lodash-es/matches.js","./matchesProperty.js":"node_modules/lodash-es/matchesProperty.js","./method.js":"node_modules/lodash-es/method.js","./methodOf.js":"node_modules/lodash-es/methodOf.js","./mixin.js":"node_modules/lodash-es/mixin.js","./noop.js":"node_modules/lodash-es/noop.js","./nthArg.js":"node_modules/lodash-es/nthArg.js","./over.js":"node_modules/lodash-es/over.js","./overEvery.js":"node_modules/lodash-es/overEvery.js","./overSome.js":"node_modules/lodash-es/overSome.js","./property.js":"node_modules/lodash-es/property.js","./propertyOf.js":"node_modules/lodash-es/propertyOf.js","./range.js":"node_modules/lodash-es/range.js","./rangeRight.js":"node_modules/lodash-es/rangeRight.js","./stubArray.js":"node_modules/lodash-es/stubArray.js","./stubFalse.js":"node_modules/lodash-es/stubFalse.js","./stubObject.js":"node_modules/lodash-es/stubObject.js","./stubString.js":"node_modules/lodash-es/stubString.js","./stubTrue.js":"node_modules/lodash-es/stubTrue.js","./times.js":"node_modules/lodash-es/times.js","./toPath.js":"node_modules/lodash-es/toPath.js","./uniqueId.js":"node_modules/lodash-es/uniqueId.js","./util.default.js":"node_modules/lodash-es/util.default.js"}],"node_modules/lodash-es/_lazyClone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _copyArray = _interopRequireDefault(require("./_copyArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Creates a clone of the lazy wrapper object.
 *
 * @private
 * @name clone
 * @memberOf LazyWrapper
 * @returns {Object} Returns the cloned `LazyWrapper` object.
 */
function lazyClone() {
  var result = new _LazyWrapper.default(this.__wrapped__);
  result.__actions__ = (0, _copyArray.default)(this.__actions__);
  result.__dir__ = this.__dir__;
  result.__filtered__ = this.__filtered__;
  result.__iteratees__ = (0, _copyArray.default)(this.__iteratees__);
  result.__takeCount__ = this.__takeCount__;
  result.__views__ = (0, _copyArray.default)(this.__views__);
  return result;
}

var _default = lazyClone;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_copyArray.js":"node_modules/lodash-es/_copyArray.js"}],"node_modules/lodash-es/_lazyReverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Reverses the direction of lazy iteration.
 *
 * @private
 * @name reverse
 * @memberOf LazyWrapper
 * @returns {Object} Returns the new reversed `LazyWrapper` object.
 */
function lazyReverse() {
  if (this.__filtered__) {
    var result = new _LazyWrapper.default(this);
    result.__dir__ = -1;
    result.__filtered__ = true;
  } else {
    result = this.clone();
    result.__dir__ *= -1;
  }

  return result;
}

var _default = lazyReverse;
exports.default = _default;
},{"./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js"}],"node_modules/lodash-es/_getView.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;
/**
 * Gets the view, applying any `transforms` to the `start` and `end` positions.
 *
 * @private
 * @param {number} start The start of the view.
 * @param {number} end The end of the view.
 * @param {Array} transforms The transformations to apply to the view.
 * @returns {Object} Returns an object containing the `start` and `end`
 *  positions of the view.
 */

function getView(start, end, transforms) {
  var index = -1,
      length = transforms.length;

  while (++index < length) {
    var data = transforms[index],
        size = data.size;

    switch (data.type) {
      case 'drop':
        start += size;
        break;

      case 'dropRight':
        end -= size;
        break;

      case 'take':
        end = nativeMin(end, start + size);
        break;

      case 'takeRight':
        start = nativeMax(start, end - size);
        break;
    }
  }

  return {
    'start': start,
    'end': end
  };
}

var _default = getView;
exports.default = _default;
},{}],"node_modules/lodash-es/_lazyValue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _baseWrapperValue = _interopRequireDefault(require("./_baseWrapperValue.js"));

var _getView = _interopRequireDefault(require("./_getView.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/** Used to indicate the type of lazy iteratees. */
var LAZY_FILTER_FLAG = 1,
    LAZY_MAP_FLAG = 2;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMin = Math.min;
/**
 * Extracts the unwrapped value from its lazy wrapper.
 *
 * @private
 * @name value
 * @memberOf LazyWrapper
 * @returns {*} Returns the unwrapped value.
 */

function lazyValue() {
  var array = this.__wrapped__.value(),
      dir = this.__dir__,
      isArr = (0, _isArray.default)(array),
      isRight = dir < 0,
      arrLength = isArr ? array.length : 0,
      view = (0, _getView.default)(0, arrLength, this.__views__),
      start = view.start,
      end = view.end,
      length = end - start,
      index = isRight ? end : start - 1,
      iteratees = this.__iteratees__,
      iterLength = iteratees.length,
      resIndex = 0,
      takeCount = nativeMin(length, this.__takeCount__);

  if (!isArr || !isRight && arrLength == length && takeCount == length) {
    return (0, _baseWrapperValue.default)(array, this.__actions__);
  }

  var result = [];

  outer: while (length-- && resIndex < takeCount) {
    index += dir;
    var iterIndex = -1,
        value = array[index];

    while (++iterIndex < iterLength) {
      var data = iteratees[iterIndex],
          iteratee = data.iteratee,
          type = data.type,
          computed = iteratee(value);

      if (type == LAZY_MAP_FLAG) {
        value = computed;
      } else if (!computed) {
        if (type == LAZY_FILTER_FLAG) {
          continue outer;
        } else {
          break outer;
        }
      }
    }

    result[resIndex++] = value;
  }

  return result;
}

var _default = lazyValue;
exports.default = _default;
},{"./_baseWrapperValue.js":"node_modules/lodash-es/_baseWrapperValue.js","./_getView.js":"node_modules/lodash-es/_getView.js","./isArray.js":"node_modules/lodash-es/isArray.js"}],"node_modules/lodash-es/lodash.default.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _array = _interopRequireDefault(require("./array.js"));

var _collection = _interopRequireDefault(require("./collection.js"));

var _date = _interopRequireDefault(require("./date.js"));

var _function = _interopRequireDefault(require("./function.js"));

var _lang = _interopRequireDefault(require("./lang.js"));

var _math = _interopRequireDefault(require("./math.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _seq = _interopRequireDefault(require("./seq.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _util = _interopRequireDefault(require("./util.js"));

var _LazyWrapper = _interopRequireDefault(require("./_LazyWrapper.js"));

var _LodashWrapper = _interopRequireDefault(require("./_LodashWrapper.js"));

var _Symbol = _interopRequireDefault(require("./_Symbol.js"));

var _arrayEach = _interopRequireDefault(require("./_arrayEach.js"));

var _arrayPush = _interopRequireDefault(require("./_arrayPush.js"));

var _baseForOwn = _interopRequireDefault(require("./_baseForOwn.js"));

var _baseFunctions = _interopRequireDefault(require("./_baseFunctions.js"));

var _baseInvoke = _interopRequireDefault(require("./_baseInvoke.js"));

var _baseIteratee = _interopRequireDefault(require("./_baseIteratee.js"));

var _baseRest = _interopRequireDefault(require("./_baseRest.js"));

var _createHybrid = _interopRequireDefault(require("./_createHybrid.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

var _last = _interopRequireDefault(require("./last.js"));

var _lazyClone = _interopRequireDefault(require("./_lazyClone.js"));

var _lazyReverse = _interopRequireDefault(require("./_lazyReverse.js"));

var _lazyValue = _interopRequireDefault(require("./_lazyValue.js"));

var _mixin2 = _interopRequireDefault(require("./mixin.js"));

var _negate = _interopRequireDefault(require("./negate.js"));

var _realNames = _interopRequireDefault(require("./_realNames.js"));

var _thru = _interopRequireDefault(require("./thru.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _wrapperLodash = _interopRequireDefault(require("./wrapperLodash.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the semantic version number. */
var VERSION = '4.17.15';
/** Used to compose bitmasks for function metadata. */

var WRAP_BIND_KEY_FLAG = 2;
/** Used to indicate the type of lazy iteratees. */

var LAZY_FILTER_FLAG = 1,
    LAZY_WHILE_FLAG = 3;
/** Used as references for the maximum length and index of an array. */

var MAX_ARRAY_LENGTH = 4294967295;
/** Used for built-in method references. */

var arrayProto = Array.prototype,
    objectProto = Object.prototype;
/** Used to check objects for own properties. */

var hasOwnProperty = objectProto.hasOwnProperty;
/** Built-in value references. */

var symIterator = _Symbol.default ? _Symbol.default.iterator : undefined;
/* Built-in method references for those with the same name as other `lodash` methods. */

var nativeMax = Math.max,
    nativeMin = Math.min; // wrap `_.mixin` so it works when provided only one argument

var mixin = function (func) {
  return function (object, source, options) {
    if (options == null) {
      var isObj = (0, _isObject.default)(source),
          props = isObj && (0, _keys.default)(source),
          methodNames = props && props.length && (0, _baseFunctions.default)(source, props);

      if (!(methodNames ? methodNames.length : isObj)) {
        options = source;
        source = object;
        object = this;
      }
    }

    return func(object, source, options);
  };
}(_mixin2.default); // Add methods that return wrapped values in chain sequences.


_wrapperLodash.default.after = _function.default.after;
_wrapperLodash.default.ary = _function.default.ary;
_wrapperLodash.default.assign = _object.default.assign;
_wrapperLodash.default.assignIn = _object.default.assignIn;
_wrapperLodash.default.assignInWith = _object.default.assignInWith;
_wrapperLodash.default.assignWith = _object.default.assignWith;
_wrapperLodash.default.at = _object.default.at;
_wrapperLodash.default.before = _function.default.before;
_wrapperLodash.default.bind = _function.default.bind;
_wrapperLodash.default.bindAll = _util.default.bindAll;
_wrapperLodash.default.bindKey = _function.default.bindKey;
_wrapperLodash.default.castArray = _lang.default.castArray;
_wrapperLodash.default.chain = _seq.default.chain;
_wrapperLodash.default.chunk = _array.default.chunk;
_wrapperLodash.default.compact = _array.default.compact;
_wrapperLodash.default.concat = _array.default.concat;
_wrapperLodash.default.cond = _util.default.cond;
_wrapperLodash.default.conforms = _util.default.conforms;
_wrapperLodash.default.constant = _util.default.constant;
_wrapperLodash.default.countBy = _collection.default.countBy;
_wrapperLodash.default.create = _object.default.create;
_wrapperLodash.default.curry = _function.default.curry;
_wrapperLodash.default.curryRight = _function.default.curryRight;
_wrapperLodash.default.debounce = _function.default.debounce;
_wrapperLodash.default.defaults = _object.default.defaults;
_wrapperLodash.default.defaultsDeep = _object.default.defaultsDeep;
_wrapperLodash.default.defer = _function.default.defer;
_wrapperLodash.default.delay = _function.default.delay;
_wrapperLodash.default.difference = _array.default.difference;
_wrapperLodash.default.differenceBy = _array.default.differenceBy;
_wrapperLodash.default.differenceWith = _array.default.differenceWith;
_wrapperLodash.default.drop = _array.default.drop;
_wrapperLodash.default.dropRight = _array.default.dropRight;
_wrapperLodash.default.dropRightWhile = _array.default.dropRightWhile;
_wrapperLodash.default.dropWhile = _array.default.dropWhile;
_wrapperLodash.default.fill = _array.default.fill;
_wrapperLodash.default.filter = _collection.default.filter;
_wrapperLodash.default.flatMap = _collection.default.flatMap;
_wrapperLodash.default.flatMapDeep = _collection.default.flatMapDeep;
_wrapperLodash.default.flatMapDepth = _collection.default.flatMapDepth;
_wrapperLodash.default.flatten = _array.default.flatten;
_wrapperLodash.default.flattenDeep = _array.default.flattenDeep;
_wrapperLodash.default.flattenDepth = _array.default.flattenDepth;
_wrapperLodash.default.flip = _function.default.flip;
_wrapperLodash.default.flow = _util.default.flow;
_wrapperLodash.default.flowRight = _util.default.flowRight;
_wrapperLodash.default.fromPairs = _array.default.fromPairs;
_wrapperLodash.default.functions = _object.default.functions;
_wrapperLodash.default.functionsIn = _object.default.functionsIn;
_wrapperLodash.default.groupBy = _collection.default.groupBy;
_wrapperLodash.default.initial = _array.default.initial;
_wrapperLodash.default.intersection = _array.default.intersection;
_wrapperLodash.default.intersectionBy = _array.default.intersectionBy;
_wrapperLodash.default.intersectionWith = _array.default.intersectionWith;
_wrapperLodash.default.invert = _object.default.invert;
_wrapperLodash.default.invertBy = _object.default.invertBy;
_wrapperLodash.default.invokeMap = _collection.default.invokeMap;
_wrapperLodash.default.iteratee = _util.default.iteratee;
_wrapperLodash.default.keyBy = _collection.default.keyBy;
_wrapperLodash.default.keys = _keys.default;
_wrapperLodash.default.keysIn = _object.default.keysIn;
_wrapperLodash.default.map = _collection.default.map;
_wrapperLodash.default.mapKeys = _object.default.mapKeys;
_wrapperLodash.default.mapValues = _object.default.mapValues;
_wrapperLodash.default.matches = _util.default.matches;
_wrapperLodash.default.matchesProperty = _util.default.matchesProperty;
_wrapperLodash.default.memoize = _function.default.memoize;
_wrapperLodash.default.merge = _object.default.merge;
_wrapperLodash.default.mergeWith = _object.default.mergeWith;
_wrapperLodash.default.method = _util.default.method;
_wrapperLodash.default.methodOf = _util.default.methodOf;
_wrapperLodash.default.mixin = mixin;
_wrapperLodash.default.negate = _negate.default;
_wrapperLodash.default.nthArg = _util.default.nthArg;
_wrapperLodash.default.omit = _object.default.omit;
_wrapperLodash.default.omitBy = _object.default.omitBy;
_wrapperLodash.default.once = _function.default.once;
_wrapperLodash.default.orderBy = _collection.default.orderBy;
_wrapperLodash.default.over = _util.default.over;
_wrapperLodash.default.overArgs = _function.default.overArgs;
_wrapperLodash.default.overEvery = _util.default.overEvery;
_wrapperLodash.default.overSome = _util.default.overSome;
_wrapperLodash.default.partial = _function.default.partial;
_wrapperLodash.default.partialRight = _function.default.partialRight;
_wrapperLodash.default.partition = _collection.default.partition;
_wrapperLodash.default.pick = _object.default.pick;
_wrapperLodash.default.pickBy = _object.default.pickBy;
_wrapperLodash.default.property = _util.default.property;
_wrapperLodash.default.propertyOf = _util.default.propertyOf;
_wrapperLodash.default.pull = _array.default.pull;
_wrapperLodash.default.pullAll = _array.default.pullAll;
_wrapperLodash.default.pullAllBy = _array.default.pullAllBy;
_wrapperLodash.default.pullAllWith = _array.default.pullAllWith;
_wrapperLodash.default.pullAt = _array.default.pullAt;
_wrapperLodash.default.range = _util.default.range;
_wrapperLodash.default.rangeRight = _util.default.rangeRight;
_wrapperLodash.default.rearg = _function.default.rearg;
_wrapperLodash.default.reject = _collection.default.reject;
_wrapperLodash.default.remove = _array.default.remove;
_wrapperLodash.default.rest = _function.default.rest;
_wrapperLodash.default.reverse = _array.default.reverse;
_wrapperLodash.default.sampleSize = _collection.default.sampleSize;
_wrapperLodash.default.set = _object.default.set;
_wrapperLodash.default.setWith = _object.default.setWith;
_wrapperLodash.default.shuffle = _collection.default.shuffle;
_wrapperLodash.default.slice = _array.default.slice;
_wrapperLodash.default.sortBy = _collection.default.sortBy;
_wrapperLodash.default.sortedUniq = _array.default.sortedUniq;
_wrapperLodash.default.sortedUniqBy = _array.default.sortedUniqBy;
_wrapperLodash.default.split = _string.default.split;
_wrapperLodash.default.spread = _function.default.spread;
_wrapperLodash.default.tail = _array.default.tail;
_wrapperLodash.default.take = _array.default.take;
_wrapperLodash.default.takeRight = _array.default.takeRight;
_wrapperLodash.default.takeRightWhile = _array.default.takeRightWhile;
_wrapperLodash.default.takeWhile = _array.default.takeWhile;
_wrapperLodash.default.tap = _seq.default.tap;
_wrapperLodash.default.throttle = _function.default.throttle;
_wrapperLodash.default.thru = _thru.default;
_wrapperLodash.default.toArray = _lang.default.toArray;
_wrapperLodash.default.toPairs = _object.default.toPairs;
_wrapperLodash.default.toPairsIn = _object.default.toPairsIn;
_wrapperLodash.default.toPath = _util.default.toPath;
_wrapperLodash.default.toPlainObject = _lang.default.toPlainObject;
_wrapperLodash.default.transform = _object.default.transform;
_wrapperLodash.default.unary = _function.default.unary;
_wrapperLodash.default.union = _array.default.union;
_wrapperLodash.default.unionBy = _array.default.unionBy;
_wrapperLodash.default.unionWith = _array.default.unionWith;
_wrapperLodash.default.uniq = _array.default.uniq;
_wrapperLodash.default.uniqBy = _array.default.uniqBy;
_wrapperLodash.default.uniqWith = _array.default.uniqWith;
_wrapperLodash.default.unset = _object.default.unset;
_wrapperLodash.default.unzip = _array.default.unzip;
_wrapperLodash.default.unzipWith = _array.default.unzipWith;
_wrapperLodash.default.update = _object.default.update;
_wrapperLodash.default.updateWith = _object.default.updateWith;
_wrapperLodash.default.values = _object.default.values;
_wrapperLodash.default.valuesIn = _object.default.valuesIn;
_wrapperLodash.default.without = _array.default.without;
_wrapperLodash.default.words = _string.default.words;
_wrapperLodash.default.wrap = _function.default.wrap;
_wrapperLodash.default.xor = _array.default.xor;
_wrapperLodash.default.xorBy = _array.default.xorBy;
_wrapperLodash.default.xorWith = _array.default.xorWith;
_wrapperLodash.default.zip = _array.default.zip;
_wrapperLodash.default.zipObject = _array.default.zipObject;
_wrapperLodash.default.zipObjectDeep = _array.default.zipObjectDeep;
_wrapperLodash.default.zipWith = _array.default.zipWith; // Add aliases.

_wrapperLodash.default.entries = _object.default.toPairs;
_wrapperLodash.default.entriesIn = _object.default.toPairsIn;
_wrapperLodash.default.extend = _object.default.assignIn;
_wrapperLodash.default.extendWith = _object.default.assignInWith; // Add methods to `lodash.prototype`.

mixin(_wrapperLodash.default, _wrapperLodash.default); // Add methods that return unwrapped values in chain sequences.

_wrapperLodash.default.add = _math.default.add;
_wrapperLodash.default.attempt = _util.default.attempt;
_wrapperLodash.default.camelCase = _string.default.camelCase;
_wrapperLodash.default.capitalize = _string.default.capitalize;
_wrapperLodash.default.ceil = _math.default.ceil;
_wrapperLodash.default.clamp = _number.default.clamp;
_wrapperLodash.default.clone = _lang.default.clone;
_wrapperLodash.default.cloneDeep = _lang.default.cloneDeep;
_wrapperLodash.default.cloneDeepWith = _lang.default.cloneDeepWith;
_wrapperLodash.default.cloneWith = _lang.default.cloneWith;
_wrapperLodash.default.conformsTo = _lang.default.conformsTo;
_wrapperLodash.default.deburr = _string.default.deburr;
_wrapperLodash.default.defaultTo = _util.default.defaultTo;
_wrapperLodash.default.divide = _math.default.divide;
_wrapperLodash.default.endsWith = _string.default.endsWith;
_wrapperLodash.default.eq = _lang.default.eq;
_wrapperLodash.default.escape = _string.default.escape;
_wrapperLodash.default.escapeRegExp = _string.default.escapeRegExp;
_wrapperLodash.default.every = _collection.default.every;
_wrapperLodash.default.find = _collection.default.find;
_wrapperLodash.default.findIndex = _array.default.findIndex;
_wrapperLodash.default.findKey = _object.default.findKey;
_wrapperLodash.default.findLast = _collection.default.findLast;
_wrapperLodash.default.findLastIndex = _array.default.findLastIndex;
_wrapperLodash.default.findLastKey = _object.default.findLastKey;
_wrapperLodash.default.floor = _math.default.floor;
_wrapperLodash.default.forEach = _collection.default.forEach;
_wrapperLodash.default.forEachRight = _collection.default.forEachRight;
_wrapperLodash.default.forIn = _object.default.forIn;
_wrapperLodash.default.forInRight = _object.default.forInRight;
_wrapperLodash.default.forOwn = _object.default.forOwn;
_wrapperLodash.default.forOwnRight = _object.default.forOwnRight;
_wrapperLodash.default.get = _object.default.get;
_wrapperLodash.default.gt = _lang.default.gt;
_wrapperLodash.default.gte = _lang.default.gte;
_wrapperLodash.default.has = _object.default.has;
_wrapperLodash.default.hasIn = _object.default.hasIn;
_wrapperLodash.default.head = _array.default.head;
_wrapperLodash.default.identity = _identity.default;
_wrapperLodash.default.includes = _collection.default.includes;
_wrapperLodash.default.indexOf = _array.default.indexOf;
_wrapperLodash.default.inRange = _number.default.inRange;
_wrapperLodash.default.invoke = _object.default.invoke;
_wrapperLodash.default.isArguments = _lang.default.isArguments;
_wrapperLodash.default.isArray = _isArray.default;
_wrapperLodash.default.isArrayBuffer = _lang.default.isArrayBuffer;
_wrapperLodash.default.isArrayLike = _lang.default.isArrayLike;
_wrapperLodash.default.isArrayLikeObject = _lang.default.isArrayLikeObject;
_wrapperLodash.default.isBoolean = _lang.default.isBoolean;
_wrapperLodash.default.isBuffer = _lang.default.isBuffer;
_wrapperLodash.default.isDate = _lang.default.isDate;
_wrapperLodash.default.isElement = _lang.default.isElement;
_wrapperLodash.default.isEmpty = _lang.default.isEmpty;
_wrapperLodash.default.isEqual = _lang.default.isEqual;
_wrapperLodash.default.isEqualWith = _lang.default.isEqualWith;
_wrapperLodash.default.isError = _lang.default.isError;
_wrapperLodash.default.isFinite = _lang.default.isFinite;
_wrapperLodash.default.isFunction = _lang.default.isFunction;
_wrapperLodash.default.isInteger = _lang.default.isInteger;
_wrapperLodash.default.isLength = _lang.default.isLength;
_wrapperLodash.default.isMap = _lang.default.isMap;
_wrapperLodash.default.isMatch = _lang.default.isMatch;
_wrapperLodash.default.isMatchWith = _lang.default.isMatchWith;
_wrapperLodash.default.isNaN = _lang.default.isNaN;
_wrapperLodash.default.isNative = _lang.default.isNative;
_wrapperLodash.default.isNil = _lang.default.isNil;
_wrapperLodash.default.isNull = _lang.default.isNull;
_wrapperLodash.default.isNumber = _lang.default.isNumber;
_wrapperLodash.default.isObject = _isObject.default;
_wrapperLodash.default.isObjectLike = _lang.default.isObjectLike;
_wrapperLodash.default.isPlainObject = _lang.default.isPlainObject;
_wrapperLodash.default.isRegExp = _lang.default.isRegExp;
_wrapperLodash.default.isSafeInteger = _lang.default.isSafeInteger;
_wrapperLodash.default.isSet = _lang.default.isSet;
_wrapperLodash.default.isString = _lang.default.isString;
_wrapperLodash.default.isSymbol = _lang.default.isSymbol;
_wrapperLodash.default.isTypedArray = _lang.default.isTypedArray;
_wrapperLodash.default.isUndefined = _lang.default.isUndefined;
_wrapperLodash.default.isWeakMap = _lang.default.isWeakMap;
_wrapperLodash.default.isWeakSet = _lang.default.isWeakSet;
_wrapperLodash.default.join = _array.default.join;
_wrapperLodash.default.kebabCase = _string.default.kebabCase;
_wrapperLodash.default.last = _last.default;
_wrapperLodash.default.lastIndexOf = _array.default.lastIndexOf;
_wrapperLodash.default.lowerCase = _string.default.lowerCase;
_wrapperLodash.default.lowerFirst = _string.default.lowerFirst;
_wrapperLodash.default.lt = _lang.default.lt;
_wrapperLodash.default.lte = _lang.default.lte;
_wrapperLodash.default.max = _math.default.max;
_wrapperLodash.default.maxBy = _math.default.maxBy;
_wrapperLodash.default.mean = _math.default.mean;
_wrapperLodash.default.meanBy = _math.default.meanBy;
_wrapperLodash.default.min = _math.default.min;
_wrapperLodash.default.minBy = _math.default.minBy;
_wrapperLodash.default.stubArray = _util.default.stubArray;
_wrapperLodash.default.stubFalse = _util.default.stubFalse;
_wrapperLodash.default.stubObject = _util.default.stubObject;
_wrapperLodash.default.stubString = _util.default.stubString;
_wrapperLodash.default.stubTrue = _util.default.stubTrue;
_wrapperLodash.default.multiply = _math.default.multiply;
_wrapperLodash.default.nth = _array.default.nth;
_wrapperLodash.default.noop = _util.default.noop;
_wrapperLodash.default.now = _date.default.now;
_wrapperLodash.default.pad = _string.default.pad;
_wrapperLodash.default.padEnd = _string.default.padEnd;
_wrapperLodash.default.padStart = _string.default.padStart;
_wrapperLodash.default.parseInt = _string.default.parseInt;
_wrapperLodash.default.random = _number.default.random;
_wrapperLodash.default.reduce = _collection.default.reduce;
_wrapperLodash.default.reduceRight = _collection.default.reduceRight;
_wrapperLodash.default.repeat = _string.default.repeat;
_wrapperLodash.default.replace = _string.default.replace;
_wrapperLodash.default.result = _object.default.result;
_wrapperLodash.default.round = _math.default.round;
_wrapperLodash.default.sample = _collection.default.sample;
_wrapperLodash.default.size = _collection.default.size;
_wrapperLodash.default.snakeCase = _string.default.snakeCase;
_wrapperLodash.default.some = _collection.default.some;
_wrapperLodash.default.sortedIndex = _array.default.sortedIndex;
_wrapperLodash.default.sortedIndexBy = _array.default.sortedIndexBy;
_wrapperLodash.default.sortedIndexOf = _array.default.sortedIndexOf;
_wrapperLodash.default.sortedLastIndex = _array.default.sortedLastIndex;
_wrapperLodash.default.sortedLastIndexBy = _array.default.sortedLastIndexBy;
_wrapperLodash.default.sortedLastIndexOf = _array.default.sortedLastIndexOf;
_wrapperLodash.default.startCase = _string.default.startCase;
_wrapperLodash.default.startsWith = _string.default.startsWith;
_wrapperLodash.default.subtract = _math.default.subtract;
_wrapperLodash.default.sum = _math.default.sum;
_wrapperLodash.default.sumBy = _math.default.sumBy;
_wrapperLodash.default.template = _string.default.template;
_wrapperLodash.default.times = _util.default.times;
_wrapperLodash.default.toFinite = _lang.default.toFinite;
_wrapperLodash.default.toInteger = _toInteger.default;
_wrapperLodash.default.toLength = _lang.default.toLength;
_wrapperLodash.default.toLower = _string.default.toLower;
_wrapperLodash.default.toNumber = _lang.default.toNumber;
_wrapperLodash.default.toSafeInteger = _lang.default.toSafeInteger;
_wrapperLodash.default.toString = _lang.default.toString;
_wrapperLodash.default.toUpper = _string.default.toUpper;
_wrapperLodash.default.trim = _string.default.trim;
_wrapperLodash.default.trimEnd = _string.default.trimEnd;
_wrapperLodash.default.trimStart = _string.default.trimStart;
_wrapperLodash.default.truncate = _string.default.truncate;
_wrapperLodash.default.unescape = _string.default.unescape;
_wrapperLodash.default.uniqueId = _util.default.uniqueId;
_wrapperLodash.default.upperCase = _string.default.upperCase;
_wrapperLodash.default.upperFirst = _string.default.upperFirst; // Add aliases.

_wrapperLodash.default.each = _collection.default.forEach;
_wrapperLodash.default.eachRight = _collection.default.forEachRight;
_wrapperLodash.default.first = _array.default.head;
mixin(_wrapperLodash.default, function () {
  var source = {};
  (0, _baseForOwn.default)(_wrapperLodash.default, function (func, methodName) {
    if (!hasOwnProperty.call(_wrapperLodash.default.prototype, methodName)) {
      source[methodName] = func;
    }
  });
  return source;
}(), {
  'chain': false
});
/**
 * The semantic version number.
 *
 * @static
 * @memberOf _
 * @type {string}
 */

_wrapperLodash.default.VERSION = VERSION;
(_wrapperLodash.default.templateSettings = _string.default.templateSettings).imports._ = _wrapperLodash.default; // Assign default placeholders.

(0, _arrayEach.default)(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function (methodName) {
  _wrapperLodash.default[methodName].placeholder = _wrapperLodash.default;
}); // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.

(0, _arrayEach.default)(['drop', 'take'], function (methodName, index) {
  _LazyWrapper.default.prototype[methodName] = function (n) {
    n = n === undefined ? 1 : nativeMax((0, _toInteger.default)(n), 0);
    var result = this.__filtered__ && !index ? new _LazyWrapper.default(this) : this.clone();

    if (result.__filtered__) {
      result.__takeCount__ = nativeMin(n, result.__takeCount__);
    } else {
      result.__views__.push({
        'size': nativeMin(n, MAX_ARRAY_LENGTH),
        'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
      });
    }

    return result;
  };

  _LazyWrapper.default.prototype[methodName + 'Right'] = function (n) {
    return this.reverse()[methodName](n).reverse();
  };
}); // Add `LazyWrapper` methods that accept an `iteratee` value.

(0, _arrayEach.default)(['filter', 'map', 'takeWhile'], function (methodName, index) {
  var type = index + 1,
      isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

  _LazyWrapper.default.prototype[methodName] = function (iteratee) {
    var result = this.clone();

    result.__iteratees__.push({
      'iteratee': (0, _baseIteratee.default)(iteratee, 3),
      'type': type
    });

    result.__filtered__ = result.__filtered__ || isFilter;
    return result;
  };
}); // Add `LazyWrapper` methods for `_.head` and `_.last`.

(0, _arrayEach.default)(['head', 'last'], function (methodName, index) {
  var takeName = 'take' + (index ? 'Right' : '');

  _LazyWrapper.default.prototype[methodName] = function () {
    return this[takeName](1).value()[0];
  };
}); // Add `LazyWrapper` methods for `_.initial` and `_.tail`.

(0, _arrayEach.default)(['initial', 'tail'], function (methodName, index) {
  var dropName = 'drop' + (index ? '' : 'Right');

  _LazyWrapper.default.prototype[methodName] = function () {
    return this.__filtered__ ? new _LazyWrapper.default(this) : this[dropName](1);
  };
});

_LazyWrapper.default.prototype.compact = function () {
  return this.filter(_identity.default);
};

_LazyWrapper.default.prototype.find = function (predicate) {
  return this.filter(predicate).head();
};

_LazyWrapper.default.prototype.findLast = function (predicate) {
  return this.reverse().find(predicate);
};

_LazyWrapper.default.prototype.invokeMap = (0, _baseRest.default)(function (path, args) {
  if (typeof path == 'function') {
    return new _LazyWrapper.default(this);
  }

  return this.map(function (value) {
    return (0, _baseInvoke.default)(value, path, args);
  });
});

_LazyWrapper.default.prototype.reject = function (predicate) {
  return this.filter((0, _negate.default)((0, _baseIteratee.default)(predicate)));
};

_LazyWrapper.default.prototype.slice = function (start, end) {
  start = (0, _toInteger.default)(start);
  var result = this;

  if (result.__filtered__ && (start > 0 || end < 0)) {
    return new _LazyWrapper.default(result);
  }

  if (start < 0) {
    result = result.takeRight(-start);
  } else if (start) {
    result = result.drop(start);
  }

  if (end !== undefined) {
    end = (0, _toInteger.default)(end);
    result = end < 0 ? result.dropRight(-end) : result.take(end - start);
  }

  return result;
};

_LazyWrapper.default.prototype.takeRightWhile = function (predicate) {
  return this.reverse().takeWhile(predicate).reverse();
};

_LazyWrapper.default.prototype.toArray = function () {
  return this.take(MAX_ARRAY_LENGTH);
}; // Add `LazyWrapper` methods to `lodash.prototype`.


(0, _baseForOwn.default)(_LazyWrapper.default.prototype, function (func, methodName) {
  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
      isTaker = /^(?:head|last)$/.test(methodName),
      lodashFunc = _wrapperLodash.default[isTaker ? 'take' + (methodName == 'last' ? 'Right' : '') : methodName],
      retUnwrapped = isTaker || /^find/.test(methodName);

  if (!lodashFunc) {
    return;
  }

  _wrapperLodash.default.prototype[methodName] = function () {
    var value = this.__wrapped__,
        args = isTaker ? [1] : arguments,
        isLazy = value instanceof _LazyWrapper.default,
        iteratee = args[0],
        useLazy = isLazy || (0, _isArray.default)(value);

    var interceptor = function (value) {
      var result = lodashFunc.apply(_wrapperLodash.default, (0, _arrayPush.default)([value], args));
      return isTaker && chainAll ? result[0] : result;
    };

    if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
      // Avoid lazy use if the iteratee has a "length" value other than `1`.
      isLazy = useLazy = false;
    }

    var chainAll = this.__chain__,
        isHybrid = !!this.__actions__.length,
        isUnwrapped = retUnwrapped && !chainAll,
        onlyLazy = isLazy && !isHybrid;

    if (!retUnwrapped && useLazy) {
      value = onlyLazy ? value : new _LazyWrapper.default(this);
      var result = func.apply(value, args);

      result.__actions__.push({
        'func': _thru.default,
        'args': [interceptor],
        'thisArg': undefined
      });

      return new _LodashWrapper.default(result, chainAll);
    }

    if (isUnwrapped && onlyLazy) {
      return func.apply(this, args);
    }

    result = this.thru(interceptor);
    return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
  };
}); // Add `Array` methods to `lodash.prototype`.

(0, _arrayEach.default)(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function (methodName) {
  var func = arrayProto[methodName],
      chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
      retUnwrapped = /^(?:pop|shift)$/.test(methodName);

  _wrapperLodash.default.prototype[methodName] = function () {
    var args = arguments;

    if (retUnwrapped && !this.__chain__) {
      var value = this.value();
      return func.apply((0, _isArray.default)(value) ? value : [], args);
    }

    return this[chainName](function (value) {
      return func.apply((0, _isArray.default)(value) ? value : [], args);
    });
  };
}); // Map minified method names to their real names.

(0, _baseForOwn.default)(_LazyWrapper.default.prototype, function (func, methodName) {
  var lodashFunc = _wrapperLodash.default[methodName];

  if (lodashFunc) {
    var key = lodashFunc.name + '';

    if (!hasOwnProperty.call(_realNames.default, key)) {
      _realNames.default[key] = [];
    }

    _realNames.default[key].push({
      'name': methodName,
      'func': lodashFunc
    });
  }
});
_realNames.default[(0, _createHybrid.default)(undefined, WRAP_BIND_KEY_FLAG).name] = [{
  'name': 'wrapper',
  'func': undefined
}]; // Add methods to `LazyWrapper`.

_LazyWrapper.default.prototype.clone = _lazyClone.default;
_LazyWrapper.default.prototype.reverse = _lazyReverse.default;
_LazyWrapper.default.prototype.value = _lazyValue.default; // Add chain sequence methods to the `lodash` wrapper.

_wrapperLodash.default.prototype.at = _seq.default.at;
_wrapperLodash.default.prototype.chain = _seq.default.wrapperChain;
_wrapperLodash.default.prototype.commit = _seq.default.commit;
_wrapperLodash.default.prototype.next = _seq.default.next;
_wrapperLodash.default.prototype.plant = _seq.default.plant;
_wrapperLodash.default.prototype.reverse = _seq.default.reverse;
_wrapperLodash.default.prototype.toJSON = _wrapperLodash.default.prototype.valueOf = _wrapperLodash.default.prototype.value = _seq.default.value; // Add lazy aliases.

_wrapperLodash.default.prototype.first = _wrapperLodash.default.prototype.head;

if (symIterator) {
  _wrapperLodash.default.prototype[symIterator] = _seq.default.toIterator;
}

var _default = _wrapperLodash.default;
exports.default = _default;
},{"./array.js":"node_modules/lodash-es/array.js","./collection.js":"node_modules/lodash-es/collection.js","./date.js":"node_modules/lodash-es/date.js","./function.js":"node_modules/lodash-es/function.js","./lang.js":"node_modules/lodash-es/lang.js","./math.js":"node_modules/lodash-es/math.js","./number.js":"node_modules/lodash-es/number.js","./object.js":"node_modules/lodash-es/object.js","./seq.js":"node_modules/lodash-es/seq.js","./string.js":"node_modules/lodash-es/string.js","./util.js":"node_modules/lodash-es/util.js","./_LazyWrapper.js":"node_modules/lodash-es/_LazyWrapper.js","./_LodashWrapper.js":"node_modules/lodash-es/_LodashWrapper.js","./_Symbol.js":"node_modules/lodash-es/_Symbol.js","./_arrayEach.js":"node_modules/lodash-es/_arrayEach.js","./_arrayPush.js":"node_modules/lodash-es/_arrayPush.js","./_baseForOwn.js":"node_modules/lodash-es/_baseForOwn.js","./_baseFunctions.js":"node_modules/lodash-es/_baseFunctions.js","./_baseInvoke.js":"node_modules/lodash-es/_baseInvoke.js","./_baseIteratee.js":"node_modules/lodash-es/_baseIteratee.js","./_baseRest.js":"node_modules/lodash-es/_baseRest.js","./_createHybrid.js":"node_modules/lodash-es/_createHybrid.js","./identity.js":"node_modules/lodash-es/identity.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isObject.js":"node_modules/lodash-es/isObject.js","./keys.js":"node_modules/lodash-es/keys.js","./last.js":"node_modules/lodash-es/last.js","./_lazyClone.js":"node_modules/lodash-es/_lazyClone.js","./_lazyReverse.js":"node_modules/lodash-es/_lazyReverse.js","./_lazyValue.js":"node_modules/lodash-es/_lazyValue.js","./mixin.js":"node_modules/lodash-es/mixin.js","./negate.js":"node_modules/lodash-es/negate.js","./_realNames.js":"node_modules/lodash-es/_realNames.js","./thru.js":"node_modules/lodash-es/thru.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./wrapperLodash.js":"node_modules/lodash-es/wrapperLodash.js"}],"node_modules/lodash-es/lodash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "add", {
  enumerable: true,
  get: function () {
    return _add.default;
  }
});
Object.defineProperty(exports, "after", {
  enumerable: true,
  get: function () {
    return _after.default;
  }
});
Object.defineProperty(exports, "ary", {
  enumerable: true,
  get: function () {
    return _ary.default;
  }
});
Object.defineProperty(exports, "assign", {
  enumerable: true,
  get: function () {
    return _assign.default;
  }
});
Object.defineProperty(exports, "assignIn", {
  enumerable: true,
  get: function () {
    return _assignIn.default;
  }
});
Object.defineProperty(exports, "assignInWith", {
  enumerable: true,
  get: function () {
    return _assignInWith.default;
  }
});
Object.defineProperty(exports, "assignWith", {
  enumerable: true,
  get: function () {
    return _assignWith.default;
  }
});
Object.defineProperty(exports, "at", {
  enumerable: true,
  get: function () {
    return _at.default;
  }
});
Object.defineProperty(exports, "attempt", {
  enumerable: true,
  get: function () {
    return _attempt.default;
  }
});
Object.defineProperty(exports, "before", {
  enumerable: true,
  get: function () {
    return _before.default;
  }
});
Object.defineProperty(exports, "bind", {
  enumerable: true,
  get: function () {
    return _bind.default;
  }
});
Object.defineProperty(exports, "bindAll", {
  enumerable: true,
  get: function () {
    return _bindAll.default;
  }
});
Object.defineProperty(exports, "bindKey", {
  enumerable: true,
  get: function () {
    return _bindKey.default;
  }
});
Object.defineProperty(exports, "camelCase", {
  enumerable: true,
  get: function () {
    return _camelCase.default;
  }
});
Object.defineProperty(exports, "capitalize", {
  enumerable: true,
  get: function () {
    return _capitalize.default;
  }
});
Object.defineProperty(exports, "castArray", {
  enumerable: true,
  get: function () {
    return _castArray.default;
  }
});
Object.defineProperty(exports, "ceil", {
  enumerable: true,
  get: function () {
    return _ceil.default;
  }
});
Object.defineProperty(exports, "chain", {
  enumerable: true,
  get: function () {
    return _chain.default;
  }
});
Object.defineProperty(exports, "chunk", {
  enumerable: true,
  get: function () {
    return _chunk.default;
  }
});
Object.defineProperty(exports, "clamp", {
  enumerable: true,
  get: function () {
    return _clamp.default;
  }
});
Object.defineProperty(exports, "clone", {
  enumerable: true,
  get: function () {
    return _clone.default;
  }
});
Object.defineProperty(exports, "cloneDeep", {
  enumerable: true,
  get: function () {
    return _cloneDeep.default;
  }
});
Object.defineProperty(exports, "cloneDeepWith", {
  enumerable: true,
  get: function () {
    return _cloneDeepWith.default;
  }
});
Object.defineProperty(exports, "cloneWith", {
  enumerable: true,
  get: function () {
    return _cloneWith.default;
  }
});
Object.defineProperty(exports, "commit", {
  enumerable: true,
  get: function () {
    return _commit.default;
  }
});
Object.defineProperty(exports, "wrapperCommit", {
  enumerable: true,
  get: function () {
    return _commit.default;
  }
});
Object.defineProperty(exports, "compact", {
  enumerable: true,
  get: function () {
    return _compact.default;
  }
});
Object.defineProperty(exports, "concat", {
  enumerable: true,
  get: function () {
    return _concat.default;
  }
});
Object.defineProperty(exports, "cond", {
  enumerable: true,
  get: function () {
    return _cond.default;
  }
});
Object.defineProperty(exports, "conforms", {
  enumerable: true,
  get: function () {
    return _conforms.default;
  }
});
Object.defineProperty(exports, "conformsTo", {
  enumerable: true,
  get: function () {
    return _conformsTo.default;
  }
});
Object.defineProperty(exports, "constant", {
  enumerable: true,
  get: function () {
    return _constant.default;
  }
});
Object.defineProperty(exports, "countBy", {
  enumerable: true,
  get: function () {
    return _countBy.default;
  }
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "curry", {
  enumerable: true,
  get: function () {
    return _curry.default;
  }
});
Object.defineProperty(exports, "curryRight", {
  enumerable: true,
  get: function () {
    return _curryRight.default;
  }
});
Object.defineProperty(exports, "debounce", {
  enumerable: true,
  get: function () {
    return _debounce.default;
  }
});
Object.defineProperty(exports, "deburr", {
  enumerable: true,
  get: function () {
    return _deburr.default;
  }
});
Object.defineProperty(exports, "defaultTo", {
  enumerable: true,
  get: function () {
    return _defaultTo.default;
  }
});
Object.defineProperty(exports, "defaults", {
  enumerable: true,
  get: function () {
    return _defaults.default;
  }
});
Object.defineProperty(exports, "defaultsDeep", {
  enumerable: true,
  get: function () {
    return _defaultsDeep.default;
  }
});
Object.defineProperty(exports, "defer", {
  enumerable: true,
  get: function () {
    return _defer.default;
  }
});
Object.defineProperty(exports, "delay", {
  enumerable: true,
  get: function () {
    return _delay.default;
  }
});
Object.defineProperty(exports, "difference", {
  enumerable: true,
  get: function () {
    return _difference.default;
  }
});
Object.defineProperty(exports, "differenceBy", {
  enumerable: true,
  get: function () {
    return _differenceBy.default;
  }
});
Object.defineProperty(exports, "differenceWith", {
  enumerable: true,
  get: function () {
    return _differenceWith.default;
  }
});
Object.defineProperty(exports, "divide", {
  enumerable: true,
  get: function () {
    return _divide.default;
  }
});
Object.defineProperty(exports, "drop", {
  enumerable: true,
  get: function () {
    return _drop.default;
  }
});
Object.defineProperty(exports, "dropRight", {
  enumerable: true,
  get: function () {
    return _dropRight.default;
  }
});
Object.defineProperty(exports, "dropRightWhile", {
  enumerable: true,
  get: function () {
    return _dropRightWhile.default;
  }
});
Object.defineProperty(exports, "dropWhile", {
  enumerable: true,
  get: function () {
    return _dropWhile.default;
  }
});
Object.defineProperty(exports, "each", {
  enumerable: true,
  get: function () {
    return _each.default;
  }
});
Object.defineProperty(exports, "eachRight", {
  enumerable: true,
  get: function () {
    return _eachRight.default;
  }
});
Object.defineProperty(exports, "endsWith", {
  enumerable: true,
  get: function () {
    return _endsWith.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});
Object.defineProperty(exports, "entriesIn", {
  enumerable: true,
  get: function () {
    return _entriesIn.default;
  }
});
Object.defineProperty(exports, "eq", {
  enumerable: true,
  get: function () {
    return _eq.default;
  }
});
Object.defineProperty(exports, "escape", {
  enumerable: true,
  get: function () {
    return _escape.default;
  }
});
Object.defineProperty(exports, "escapeRegExp", {
  enumerable: true,
  get: function () {
    return _escapeRegExp.default;
  }
});
Object.defineProperty(exports, "every", {
  enumerable: true,
  get: function () {
    return _every.default;
  }
});
Object.defineProperty(exports, "extend", {
  enumerable: true,
  get: function () {
    return _extend.default;
  }
});
Object.defineProperty(exports, "extendWith", {
  enumerable: true,
  get: function () {
    return _extendWith.default;
  }
});
Object.defineProperty(exports, "fill", {
  enumerable: true,
  get: function () {
    return _fill.default;
  }
});
Object.defineProperty(exports, "filter", {
  enumerable: true,
  get: function () {
    return _filter.default;
  }
});
Object.defineProperty(exports, "find", {
  enumerable: true,
  get: function () {
    return _find.default;
  }
});
Object.defineProperty(exports, "findIndex", {
  enumerable: true,
  get: function () {
    return _findIndex.default;
  }
});
Object.defineProperty(exports, "findKey", {
  enumerable: true,
  get: function () {
    return _findKey.default;
  }
});
Object.defineProperty(exports, "findLast", {
  enumerable: true,
  get: function () {
    return _findLast.default;
  }
});
Object.defineProperty(exports, "findLastIndex", {
  enumerable: true,
  get: function () {
    return _findLastIndex.default;
  }
});
Object.defineProperty(exports, "findLastKey", {
  enumerable: true,
  get: function () {
    return _findLastKey.default;
  }
});
Object.defineProperty(exports, "first", {
  enumerable: true,
  get: function () {
    return _first.default;
  }
});
Object.defineProperty(exports, "flatMap", {
  enumerable: true,
  get: function () {
    return _flatMap.default;
  }
});
Object.defineProperty(exports, "flatMapDeep", {
  enumerable: true,
  get: function () {
    return _flatMapDeep.default;
  }
});
Object.defineProperty(exports, "flatMapDepth", {
  enumerable: true,
  get: function () {
    return _flatMapDepth.default;
  }
});
Object.defineProperty(exports, "flatten", {
  enumerable: true,
  get: function () {
    return _flatten.default;
  }
});
Object.defineProperty(exports, "flattenDeep", {
  enumerable: true,
  get: function () {
    return _flattenDeep.default;
  }
});
Object.defineProperty(exports, "flattenDepth", {
  enumerable: true,
  get: function () {
    return _flattenDepth.default;
  }
});
Object.defineProperty(exports, "flip", {
  enumerable: true,
  get: function () {
    return _flip.default;
  }
});
Object.defineProperty(exports, "floor", {
  enumerable: true,
  get: function () {
    return _floor.default;
  }
});
Object.defineProperty(exports, "flow", {
  enumerable: true,
  get: function () {
    return _flow.default;
  }
});
Object.defineProperty(exports, "flowRight", {
  enumerable: true,
  get: function () {
    return _flowRight.default;
  }
});
Object.defineProperty(exports, "forEach", {
  enumerable: true,
  get: function () {
    return _forEach.default;
  }
});
Object.defineProperty(exports, "forEachRight", {
  enumerable: true,
  get: function () {
    return _forEachRight.default;
  }
});
Object.defineProperty(exports, "forIn", {
  enumerable: true,
  get: function () {
    return _forIn.default;
  }
});
Object.defineProperty(exports, "forInRight", {
  enumerable: true,
  get: function () {
    return _forInRight.default;
  }
});
Object.defineProperty(exports, "forOwn", {
  enumerable: true,
  get: function () {
    return _forOwn.default;
  }
});
Object.defineProperty(exports, "forOwnRight", {
  enumerable: true,
  get: function () {
    return _forOwnRight.default;
  }
});
Object.defineProperty(exports, "fromPairs", {
  enumerable: true,
  get: function () {
    return _fromPairs.default;
  }
});
Object.defineProperty(exports, "functions", {
  enumerable: true,
  get: function () {
    return _functions.default;
  }
});
Object.defineProperty(exports, "functionsIn", {
  enumerable: true,
  get: function () {
    return _functionsIn.default;
  }
});
Object.defineProperty(exports, "get", {
  enumerable: true,
  get: function () {
    return _get.default;
  }
});
Object.defineProperty(exports, "groupBy", {
  enumerable: true,
  get: function () {
    return _groupBy.default;
  }
});
Object.defineProperty(exports, "gt", {
  enumerable: true,
  get: function () {
    return _gt.default;
  }
});
Object.defineProperty(exports, "gte", {
  enumerable: true,
  get: function () {
    return _gte.default;
  }
});
Object.defineProperty(exports, "has", {
  enumerable: true,
  get: function () {
    return _has.default;
  }
});
Object.defineProperty(exports, "hasIn", {
  enumerable: true,
  get: function () {
    return _hasIn.default;
  }
});
Object.defineProperty(exports, "head", {
  enumerable: true,
  get: function () {
    return _head.default;
  }
});
Object.defineProperty(exports, "identity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "inRange", {
  enumerable: true,
  get: function () {
    return _inRange.default;
  }
});
Object.defineProperty(exports, "includes", {
  enumerable: true,
  get: function () {
    return _includes.default;
  }
});
Object.defineProperty(exports, "indexOf", {
  enumerable: true,
  get: function () {
    return _indexOf.default;
  }
});
Object.defineProperty(exports, "initial", {
  enumerable: true,
  get: function () {
    return _initial.default;
  }
});
Object.defineProperty(exports, "intersection", {
  enumerable: true,
  get: function () {
    return _intersection.default;
  }
});
Object.defineProperty(exports, "intersectionBy", {
  enumerable: true,
  get: function () {
    return _intersectionBy.default;
  }
});
Object.defineProperty(exports, "intersectionWith", {
  enumerable: true,
  get: function () {
    return _intersectionWith.default;
  }
});
Object.defineProperty(exports, "invert", {
  enumerable: true,
  get: function () {
    return _invert.default;
  }
});
Object.defineProperty(exports, "invertBy", {
  enumerable: true,
  get: function () {
    return _invertBy.default;
  }
});
Object.defineProperty(exports, "invoke", {
  enumerable: true,
  get: function () {
    return _invoke.default;
  }
});
Object.defineProperty(exports, "invokeMap", {
  enumerable: true,
  get: function () {
    return _invokeMap.default;
  }
});
Object.defineProperty(exports, "isArguments", {
  enumerable: true,
  get: function () {
    return _isArguments.default;
  }
});
Object.defineProperty(exports, "isArray", {
  enumerable: true,
  get: function () {
    return _isArray.default;
  }
});
Object.defineProperty(exports, "isArrayBuffer", {
  enumerable: true,
  get: function () {
    return _isArrayBuffer.default;
  }
});
Object.defineProperty(exports, "isArrayLike", {
  enumerable: true,
  get: function () {
    return _isArrayLike.default;
  }
});
Object.defineProperty(exports, "isArrayLikeObject", {
  enumerable: true,
  get: function () {
    return _isArrayLikeObject.default;
  }
});
Object.defineProperty(exports, "isBoolean", {
  enumerable: true,
  get: function () {
    return _isBoolean.default;
  }
});
Object.defineProperty(exports, "isBuffer", {
  enumerable: true,
  get: function () {
    return _isBuffer.default;
  }
});
Object.defineProperty(exports, "isDate", {
  enumerable: true,
  get: function () {
    return _isDate.default;
  }
});
Object.defineProperty(exports, "isElement", {
  enumerable: true,
  get: function () {
    return _isElement.default;
  }
});
Object.defineProperty(exports, "isEmpty", {
  enumerable: true,
  get: function () {
    return _isEmpty.default;
  }
});
Object.defineProperty(exports, "isEqual", {
  enumerable: true,
  get: function () {
    return _isEqual.default;
  }
});
Object.defineProperty(exports, "isEqualWith", {
  enumerable: true,
  get: function () {
    return _isEqualWith.default;
  }
});
Object.defineProperty(exports, "isError", {
  enumerable: true,
  get: function () {
    return _isError.default;
  }
});
Object.defineProperty(exports, "isFinite", {
  enumerable: true,
  get: function () {
    return _isFinite.default;
  }
});
Object.defineProperty(exports, "isFunction", {
  enumerable: true,
  get: function () {
    return _isFunction.default;
  }
});
Object.defineProperty(exports, "isInteger", {
  enumerable: true,
  get: function () {
    return _isInteger.default;
  }
});
Object.defineProperty(exports, "isLength", {
  enumerable: true,
  get: function () {
    return _isLength.default;
  }
});
Object.defineProperty(exports, "isMap", {
  enumerable: true,
  get: function () {
    return _isMap.default;
  }
});
Object.defineProperty(exports, "isMatch", {
  enumerable: true,
  get: function () {
    return _isMatch.default;
  }
});
Object.defineProperty(exports, "isMatchWith", {
  enumerable: true,
  get: function () {
    return _isMatchWith.default;
  }
});
Object.defineProperty(exports, "isNaN", {
  enumerable: true,
  get: function () {
    return _isNaN.default;
  }
});
Object.defineProperty(exports, "isNative", {
  enumerable: true,
  get: function () {
    return _isNative.default;
  }
});
Object.defineProperty(exports, "isNil", {
  enumerable: true,
  get: function () {
    return _isNil.default;
  }
});
Object.defineProperty(exports, "isNull", {
  enumerable: true,
  get: function () {
    return _isNull.default;
  }
});
Object.defineProperty(exports, "isNumber", {
  enumerable: true,
  get: function () {
    return _isNumber.default;
  }
});
Object.defineProperty(exports, "isObject", {
  enumerable: true,
  get: function () {
    return _isObject.default;
  }
});
Object.defineProperty(exports, "isObjectLike", {
  enumerable: true,
  get: function () {
    return _isObjectLike.default;
  }
});
Object.defineProperty(exports, "isPlainObject", {
  enumerable: true,
  get: function () {
    return _isPlainObject.default;
  }
});
Object.defineProperty(exports, "isRegExp", {
  enumerable: true,
  get: function () {
    return _isRegExp.default;
  }
});
Object.defineProperty(exports, "isSafeInteger", {
  enumerable: true,
  get: function () {
    return _isSafeInteger.default;
  }
});
Object.defineProperty(exports, "isSet", {
  enumerable: true,
  get: function () {
    return _isSet.default;
  }
});
Object.defineProperty(exports, "isString", {
  enumerable: true,
  get: function () {
    return _isString.default;
  }
});
Object.defineProperty(exports, "isSymbol", {
  enumerable: true,
  get: function () {
    return _isSymbol.default;
  }
});
Object.defineProperty(exports, "isTypedArray", {
  enumerable: true,
  get: function () {
    return _isTypedArray.default;
  }
});
Object.defineProperty(exports, "isUndefined", {
  enumerable: true,
  get: function () {
    return _isUndefined.default;
  }
});
Object.defineProperty(exports, "isWeakMap", {
  enumerable: true,
  get: function () {
    return _isWeakMap.default;
  }
});
Object.defineProperty(exports, "isWeakSet", {
  enumerable: true,
  get: function () {
    return _isWeakSet.default;
  }
});
Object.defineProperty(exports, "iteratee", {
  enumerable: true,
  get: function () {
    return _iteratee.default;
  }
});
Object.defineProperty(exports, "join", {
  enumerable: true,
  get: function () {
    return _join.default;
  }
});
Object.defineProperty(exports, "kebabCase", {
  enumerable: true,
  get: function () {
    return _kebabCase.default;
  }
});
Object.defineProperty(exports, "keyBy", {
  enumerable: true,
  get: function () {
    return _keyBy.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "keysIn", {
  enumerable: true,
  get: function () {
    return _keysIn.default;
  }
});
Object.defineProperty(exports, "last", {
  enumerable: true,
  get: function () {
    return _last.default;
  }
});
Object.defineProperty(exports, "lastIndexOf", {
  enumerable: true,
  get: function () {
    return _lastIndexOf.default;
  }
});
Object.defineProperty(exports, "lodash", {
  enumerable: true,
  get: function () {
    return _wrapperLodash.default;
  }
});
Object.defineProperty(exports, "wrapperLodash", {
  enumerable: true,
  get: function () {
    return _wrapperLodash.default;
  }
});
Object.defineProperty(exports, "lowerCase", {
  enumerable: true,
  get: function () {
    return _lowerCase.default;
  }
});
Object.defineProperty(exports, "lowerFirst", {
  enumerable: true,
  get: function () {
    return _lowerFirst.default;
  }
});
Object.defineProperty(exports, "lt", {
  enumerable: true,
  get: function () {
    return _lt.default;
  }
});
Object.defineProperty(exports, "lte", {
  enumerable: true,
  get: function () {
    return _lte.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "mapKeys", {
  enumerable: true,
  get: function () {
    return _mapKeys.default;
  }
});
Object.defineProperty(exports, "mapValues", {
  enumerable: true,
  get: function () {
    return _mapValues.default;
  }
});
Object.defineProperty(exports, "matches", {
  enumerable: true,
  get: function () {
    return _matches.default;
  }
});
Object.defineProperty(exports, "matchesProperty", {
  enumerable: true,
  get: function () {
    return _matchesProperty.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "maxBy", {
  enumerable: true,
  get: function () {
    return _maxBy.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "meanBy", {
  enumerable: true,
  get: function () {
    return _meanBy.default;
  }
});
Object.defineProperty(exports, "memoize", {
  enumerable: true,
  get: function () {
    return _memoize.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "mergeWith", {
  enumerable: true,
  get: function () {
    return _mergeWith.default;
  }
});
Object.defineProperty(exports, "method", {
  enumerable: true,
  get: function () {
    return _method.default;
  }
});
Object.defineProperty(exports, "methodOf", {
  enumerable: true,
  get: function () {
    return _methodOf.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "minBy", {
  enumerable: true,
  get: function () {
    return _minBy.default;
  }
});
Object.defineProperty(exports, "mixin", {
  enumerable: true,
  get: function () {
    return _mixin.default;
  }
});
Object.defineProperty(exports, "multiply", {
  enumerable: true,
  get: function () {
    return _multiply.default;
  }
});
Object.defineProperty(exports, "negate", {
  enumerable: true,
  get: function () {
    return _negate.default;
  }
});
Object.defineProperty(exports, "next", {
  enumerable: true,
  get: function () {
    return _next.default;
  }
});
Object.defineProperty(exports, "wrapperNext", {
  enumerable: true,
  get: function () {
    return _next.default;
  }
});
Object.defineProperty(exports, "noop", {
  enumerable: true,
  get: function () {
    return _noop.default;
  }
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _now.default;
  }
});
Object.defineProperty(exports, "nth", {
  enumerable: true,
  get: function () {
    return _nth.default;
  }
});
Object.defineProperty(exports, "nthArg", {
  enumerable: true,
  get: function () {
    return _nthArg.default;
  }
});
Object.defineProperty(exports, "omit", {
  enumerable: true,
  get: function () {
    return _omit.default;
  }
});
Object.defineProperty(exports, "omitBy", {
  enumerable: true,
  get: function () {
    return _omitBy.default;
  }
});
Object.defineProperty(exports, "once", {
  enumerable: true,
  get: function () {
    return _once.default;
  }
});
Object.defineProperty(exports, "orderBy", {
  enumerable: true,
  get: function () {
    return _orderBy.default;
  }
});
Object.defineProperty(exports, "over", {
  enumerable: true,
  get: function () {
    return _over.default;
  }
});
Object.defineProperty(exports, "overArgs", {
  enumerable: true,
  get: function () {
    return _overArgs.default;
  }
});
Object.defineProperty(exports, "overEvery", {
  enumerable: true,
  get: function () {
    return _overEvery.default;
  }
});
Object.defineProperty(exports, "overSome", {
  enumerable: true,
  get: function () {
    return _overSome.default;
  }
});
Object.defineProperty(exports, "pad", {
  enumerable: true,
  get: function () {
    return _pad.default;
  }
});
Object.defineProperty(exports, "padEnd", {
  enumerable: true,
  get: function () {
    return _padEnd.default;
  }
});
Object.defineProperty(exports, "padStart", {
  enumerable: true,
  get: function () {
    return _padStart.default;
  }
});
Object.defineProperty(exports, "parseInt", {
  enumerable: true,
  get: function () {
    return _parseInt.default;
  }
});
Object.defineProperty(exports, "partial", {
  enumerable: true,
  get: function () {
    return _partial.default;
  }
});
Object.defineProperty(exports, "partialRight", {
  enumerable: true,
  get: function () {
    return _partialRight.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "pick", {
  enumerable: true,
  get: function () {
    return _pick.default;
  }
});
Object.defineProperty(exports, "pickBy", {
  enumerable: true,
  get: function () {
    return _pickBy.default;
  }
});
Object.defineProperty(exports, "plant", {
  enumerable: true,
  get: function () {
    return _plant.default;
  }
});
Object.defineProperty(exports, "wrapperPlant", {
  enumerable: true,
  get: function () {
    return _plant.default;
  }
});
Object.defineProperty(exports, "property", {
  enumerable: true,
  get: function () {
    return _property.default;
  }
});
Object.defineProperty(exports, "propertyOf", {
  enumerable: true,
  get: function () {
    return _propertyOf.default;
  }
});
Object.defineProperty(exports, "pull", {
  enumerable: true,
  get: function () {
    return _pull.default;
  }
});
Object.defineProperty(exports, "pullAll", {
  enumerable: true,
  get: function () {
    return _pullAll.default;
  }
});
Object.defineProperty(exports, "pullAllBy", {
  enumerable: true,
  get: function () {
    return _pullAllBy.default;
  }
});
Object.defineProperty(exports, "pullAllWith", {
  enumerable: true,
  get: function () {
    return _pullAllWith.default;
  }
});
Object.defineProperty(exports, "pullAt", {
  enumerable: true,
  get: function () {
    return _pullAt.default;
  }
});
Object.defineProperty(exports, "random", {
  enumerable: true,
  get: function () {
    return _random.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "rangeRight", {
  enumerable: true,
  get: function () {
    return _rangeRight.default;
  }
});
Object.defineProperty(exports, "rearg", {
  enumerable: true,
  get: function () {
    return _rearg.default;
  }
});
Object.defineProperty(exports, "reduce", {
  enumerable: true,
  get: function () {
    return _reduce.default;
  }
});
Object.defineProperty(exports, "reduceRight", {
  enumerable: true,
  get: function () {
    return _reduceRight.default;
  }
});
Object.defineProperty(exports, "reject", {
  enumerable: true,
  get: function () {
    return _reject.default;
  }
});
Object.defineProperty(exports, "remove", {
  enumerable: true,
  get: function () {
    return _remove.default;
  }
});
Object.defineProperty(exports, "repeat", {
  enumerable: true,
  get: function () {
    return _repeat.default;
  }
});
Object.defineProperty(exports, "replace", {
  enumerable: true,
  get: function () {
    return _replace.default;
  }
});
Object.defineProperty(exports, "rest", {
  enumerable: true,
  get: function () {
    return _rest.default;
  }
});
Object.defineProperty(exports, "result", {
  enumerable: true,
  get: function () {
    return _result.default;
  }
});
Object.defineProperty(exports, "reverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});
Object.defineProperty(exports, "round", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "sample", {
  enumerable: true,
  get: function () {
    return _sample.default;
  }
});
Object.defineProperty(exports, "sampleSize", {
  enumerable: true,
  get: function () {
    return _sampleSize.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "setWith", {
  enumerable: true,
  get: function () {
    return _setWith.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "size", {
  enumerable: true,
  get: function () {
    return _size.default;
  }
});
Object.defineProperty(exports, "slice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "snakeCase", {
  enumerable: true,
  get: function () {
    return _snakeCase.default;
  }
});
Object.defineProperty(exports, "some", {
  enumerable: true,
  get: function () {
    return _some.default;
  }
});
Object.defineProperty(exports, "sortBy", {
  enumerable: true,
  get: function () {
    return _sortBy.default;
  }
});
Object.defineProperty(exports, "sortedIndex", {
  enumerable: true,
  get: function () {
    return _sortedIndex.default;
  }
});
Object.defineProperty(exports, "sortedIndexBy", {
  enumerable: true,
  get: function () {
    return _sortedIndexBy.default;
  }
});
Object.defineProperty(exports, "sortedIndexOf", {
  enumerable: true,
  get: function () {
    return _sortedIndexOf.default;
  }
});
Object.defineProperty(exports, "sortedLastIndex", {
  enumerable: true,
  get: function () {
    return _sortedLastIndex.default;
  }
});
Object.defineProperty(exports, "sortedLastIndexBy", {
  enumerable: true,
  get: function () {
    return _sortedLastIndexBy.default;
  }
});
Object.defineProperty(exports, "sortedLastIndexOf", {
  enumerable: true,
  get: function () {
    return _sortedLastIndexOf.default;
  }
});
Object.defineProperty(exports, "sortedUniq", {
  enumerable: true,
  get: function () {
    return _sortedUniq.default;
  }
});
Object.defineProperty(exports, "sortedUniqBy", {
  enumerable: true,
  get: function () {
    return _sortedUniqBy.default;
  }
});
Object.defineProperty(exports, "split", {
  enumerable: true,
  get: function () {
    return _split.default;
  }
});
Object.defineProperty(exports, "spread", {
  enumerable: true,
  get: function () {
    return _spread.default;
  }
});
Object.defineProperty(exports, "startCase", {
  enumerable: true,
  get: function () {
    return _startCase.default;
  }
});
Object.defineProperty(exports, "startsWith", {
  enumerable: true,
  get: function () {
    return _startsWith.default;
  }
});
Object.defineProperty(exports, "stubArray", {
  enumerable: true,
  get: function () {
    return _stubArray.default;
  }
});
Object.defineProperty(exports, "stubFalse", {
  enumerable: true,
  get: function () {
    return _stubFalse.default;
  }
});
Object.defineProperty(exports, "stubObject", {
  enumerable: true,
  get: function () {
    return _stubObject.default;
  }
});
Object.defineProperty(exports, "stubString", {
  enumerable: true,
  get: function () {
    return _stubString.default;
  }
});
Object.defineProperty(exports, "stubTrue", {
  enumerable: true,
  get: function () {
    return _stubTrue.default;
  }
});
Object.defineProperty(exports, "subtract", {
  enumerable: true,
  get: function () {
    return _subtract.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "sumBy", {
  enumerable: true,
  get: function () {
    return _sumBy.default;
  }
});
Object.defineProperty(exports, "tail", {
  enumerable: true,
  get: function () {
    return _tail.default;
  }
});
Object.defineProperty(exports, "take", {
  enumerable: true,
  get: function () {
    return _take.default;
  }
});
Object.defineProperty(exports, "takeRight", {
  enumerable: true,
  get: function () {
    return _takeRight.default;
  }
});
Object.defineProperty(exports, "takeRightWhile", {
  enumerable: true,
  get: function () {
    return _takeRightWhile.default;
  }
});
Object.defineProperty(exports, "takeWhile", {
  enumerable: true,
  get: function () {
    return _takeWhile.default;
  }
});
Object.defineProperty(exports, "tap", {
  enumerable: true,
  get: function () {
    return _tap.default;
  }
});
Object.defineProperty(exports, "template", {
  enumerable: true,
  get: function () {
    return _template.default;
  }
});
Object.defineProperty(exports, "templateSettings", {
  enumerable: true,
  get: function () {
    return _templateSettings.default;
  }
});
Object.defineProperty(exports, "throttle", {
  enumerable: true,
  get: function () {
    return _throttle.default;
  }
});
Object.defineProperty(exports, "thru", {
  enumerable: true,
  get: function () {
    return _thru.default;
  }
});
Object.defineProperty(exports, "times", {
  enumerable: true,
  get: function () {
    return _times.default;
  }
});
Object.defineProperty(exports, "toArray", {
  enumerable: true,
  get: function () {
    return _toArray.default;
  }
});
Object.defineProperty(exports, "toFinite", {
  enumerable: true,
  get: function () {
    return _toFinite.default;
  }
});
Object.defineProperty(exports, "toInteger", {
  enumerable: true,
  get: function () {
    return _toInteger.default;
  }
});
Object.defineProperty(exports, "toIterator", {
  enumerable: true,
  get: function () {
    return _toIterator.default;
  }
});
Object.defineProperty(exports, "wrapperToIterator", {
  enumerable: true,
  get: function () {
    return _toIterator.default;
  }
});
Object.defineProperty(exports, "toJSON", {
  enumerable: true,
  get: function () {
    return _toJSON.default;
  }
});
Object.defineProperty(exports, "toLength", {
  enumerable: true,
  get: function () {
    return _toLength.default;
  }
});
Object.defineProperty(exports, "toLower", {
  enumerable: true,
  get: function () {
    return _toLower.default;
  }
});
Object.defineProperty(exports, "toNumber", {
  enumerable: true,
  get: function () {
    return _toNumber.default;
  }
});
Object.defineProperty(exports, "toPairs", {
  enumerable: true,
  get: function () {
    return _toPairs.default;
  }
});
Object.defineProperty(exports, "toPairsIn", {
  enumerable: true,
  get: function () {
    return _toPairsIn.default;
  }
});
Object.defineProperty(exports, "toPath", {
  enumerable: true,
  get: function () {
    return _toPath.default;
  }
});
Object.defineProperty(exports, "toPlainObject", {
  enumerable: true,
  get: function () {
    return _toPlainObject.default;
  }
});
Object.defineProperty(exports, "toSafeInteger", {
  enumerable: true,
  get: function () {
    return _toSafeInteger.default;
  }
});
Object.defineProperty(exports, "toString", {
  enumerable: true,
  get: function () {
    return _toString.default;
  }
});
Object.defineProperty(exports, "toUpper", {
  enumerable: true,
  get: function () {
    return _toUpper.default;
  }
});
Object.defineProperty(exports, "transform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "trim", {
  enumerable: true,
  get: function () {
    return _trim.default;
  }
});
Object.defineProperty(exports, "trimEnd", {
  enumerable: true,
  get: function () {
    return _trimEnd.default;
  }
});
Object.defineProperty(exports, "trimStart", {
  enumerable: true,
  get: function () {
    return _trimStart.default;
  }
});
Object.defineProperty(exports, "truncate", {
  enumerable: true,
  get: function () {
    return _truncate.default;
  }
});
Object.defineProperty(exports, "unary", {
  enumerable: true,
  get: function () {
    return _unary.default;
  }
});
Object.defineProperty(exports, "unescape", {
  enumerable: true,
  get: function () {
    return _unescape.default;
  }
});
Object.defineProperty(exports, "union", {
  enumerable: true,
  get: function () {
    return _union.default;
  }
});
Object.defineProperty(exports, "unionBy", {
  enumerable: true,
  get: function () {
    return _unionBy.default;
  }
});
Object.defineProperty(exports, "unionWith", {
  enumerable: true,
  get: function () {
    return _unionWith.default;
  }
});
Object.defineProperty(exports, "uniq", {
  enumerable: true,
  get: function () {
    return _uniq.default;
  }
});
Object.defineProperty(exports, "uniqBy", {
  enumerable: true,
  get: function () {
    return _uniqBy.default;
  }
});
Object.defineProperty(exports, "uniqWith", {
  enumerable: true,
  get: function () {
    return _uniqWith.default;
  }
});
Object.defineProperty(exports, "uniqueId", {
  enumerable: true,
  get: function () {
    return _uniqueId.default;
  }
});
Object.defineProperty(exports, "unset", {
  enumerable: true,
  get: function () {
    return _unset.default;
  }
});
Object.defineProperty(exports, "unzip", {
  enumerable: true,
  get: function () {
    return _unzip.default;
  }
});
Object.defineProperty(exports, "unzipWith", {
  enumerable: true,
  get: function () {
    return _unzipWith.default;
  }
});
Object.defineProperty(exports, "update", {
  enumerable: true,
  get: function () {
    return _update.default;
  }
});
Object.defineProperty(exports, "updateWith", {
  enumerable: true,
  get: function () {
    return _updateWith.default;
  }
});
Object.defineProperty(exports, "upperCase", {
  enumerable: true,
  get: function () {
    return _upperCase.default;
  }
});
Object.defineProperty(exports, "upperFirst", {
  enumerable: true,
  get: function () {
    return _upperFirst.default;
  }
});
Object.defineProperty(exports, "value", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "valueOf", {
  enumerable: true,
  get: function () {
    return _valueOf.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "valuesIn", {
  enumerable: true,
  get: function () {
    return _valuesIn.default;
  }
});
Object.defineProperty(exports, "without", {
  enumerable: true,
  get: function () {
    return _without.default;
  }
});
Object.defineProperty(exports, "words", {
  enumerable: true,
  get: function () {
    return _words.default;
  }
});
Object.defineProperty(exports, "wrap", {
  enumerable: true,
  get: function () {
    return _wrap.default;
  }
});
Object.defineProperty(exports, "wrapperAt", {
  enumerable: true,
  get: function () {
    return _wrapperAt.default;
  }
});
Object.defineProperty(exports, "wrapperChain", {
  enumerable: true,
  get: function () {
    return _wrapperChain.default;
  }
});
Object.defineProperty(exports, "wrapperReverse", {
  enumerable: true,
  get: function () {
    return _wrapperReverse.default;
  }
});
Object.defineProperty(exports, "wrapperValue", {
  enumerable: true,
  get: function () {
    return _wrapperValue.default;
  }
});
Object.defineProperty(exports, "xor", {
  enumerable: true,
  get: function () {
    return _xor.default;
  }
});
Object.defineProperty(exports, "xorBy", {
  enumerable: true,
  get: function () {
    return _xorBy.default;
  }
});
Object.defineProperty(exports, "xorWith", {
  enumerable: true,
  get: function () {
    return _xorWith.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});
Object.defineProperty(exports, "zipObject", {
  enumerable: true,
  get: function () {
    return _zipObject.default;
  }
});
Object.defineProperty(exports, "zipObjectDeep", {
  enumerable: true,
  get: function () {
    return _zipObjectDeep.default;
  }
});
Object.defineProperty(exports, "zipWith", {
  enumerable: true,
  get: function () {
    return _zipWith.default;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    return _lodashDefault.default;
  }
});

var _add = _interopRequireDefault(require("./add.js"));

var _after = _interopRequireDefault(require("./after.js"));

var _ary = _interopRequireDefault(require("./ary.js"));

var _assign = _interopRequireDefault(require("./assign.js"));

var _assignIn = _interopRequireDefault(require("./assignIn.js"));

var _assignInWith = _interopRequireDefault(require("./assignInWith.js"));

var _assignWith = _interopRequireDefault(require("./assignWith.js"));

var _at = _interopRequireDefault(require("./at.js"));

var _attempt = _interopRequireDefault(require("./attempt.js"));

var _before = _interopRequireDefault(require("./before.js"));

var _bind = _interopRequireDefault(require("./bind.js"));

var _bindAll = _interopRequireDefault(require("./bindAll.js"));

var _bindKey = _interopRequireDefault(require("./bindKey.js"));

var _camelCase = _interopRequireDefault(require("./camelCase.js"));

var _capitalize = _interopRequireDefault(require("./capitalize.js"));

var _castArray = _interopRequireDefault(require("./castArray.js"));

var _ceil = _interopRequireDefault(require("./ceil.js"));

var _chain = _interopRequireDefault(require("./chain.js"));

var _chunk = _interopRequireDefault(require("./chunk.js"));

var _clamp = _interopRequireDefault(require("./clamp.js"));

var _clone = _interopRequireDefault(require("./clone.js"));

var _cloneDeep = _interopRequireDefault(require("./cloneDeep.js"));

var _cloneDeepWith = _interopRequireDefault(require("./cloneDeepWith.js"));

var _cloneWith = _interopRequireDefault(require("./cloneWith.js"));

var _commit = _interopRequireDefault(require("./commit.js"));

var _compact = _interopRequireDefault(require("./compact.js"));

var _concat = _interopRequireDefault(require("./concat.js"));

var _cond = _interopRequireDefault(require("./cond.js"));

var _conforms = _interopRequireDefault(require("./conforms.js"));

var _conformsTo = _interopRequireDefault(require("./conformsTo.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _countBy = _interopRequireDefault(require("./countBy.js"));

var _create = _interopRequireDefault(require("./create.js"));

var _curry = _interopRequireDefault(require("./curry.js"));

var _curryRight = _interopRequireDefault(require("./curryRight.js"));

var _debounce = _interopRequireDefault(require("./debounce.js"));

var _deburr = _interopRequireDefault(require("./deburr.js"));

var _defaultTo = _interopRequireDefault(require("./defaultTo.js"));

var _defaults = _interopRequireDefault(require("./defaults.js"));

var _defaultsDeep = _interopRequireDefault(require("./defaultsDeep.js"));

var _defer = _interopRequireDefault(require("./defer.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _difference = _interopRequireDefault(require("./difference.js"));

var _differenceBy = _interopRequireDefault(require("./differenceBy.js"));

var _differenceWith = _interopRequireDefault(require("./differenceWith.js"));

var _divide = _interopRequireDefault(require("./divide.js"));

var _drop = _interopRequireDefault(require("./drop.js"));

var _dropRight = _interopRequireDefault(require("./dropRight.js"));

var _dropRightWhile = _interopRequireDefault(require("./dropRightWhile.js"));

var _dropWhile = _interopRequireDefault(require("./dropWhile.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachRight = _interopRequireDefault(require("./eachRight.js"));

var _endsWith = _interopRequireDefault(require("./endsWith.js"));

var _entries = _interopRequireDefault(require("./entries.js"));

var _entriesIn = _interopRequireDefault(require("./entriesIn.js"));

var _eq = _interopRequireDefault(require("./eq.js"));

var _escape = _interopRequireDefault(require("./escape.js"));

var _escapeRegExp = _interopRequireDefault(require("./escapeRegExp.js"));

var _every = _interopRequireDefault(require("./every.js"));

var _extend = _interopRequireDefault(require("./extend.js"));

var _extendWith = _interopRequireDefault(require("./extendWith.js"));

var _fill = _interopRequireDefault(require("./fill.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _findIndex = _interopRequireDefault(require("./findIndex.js"));

var _findKey = _interopRequireDefault(require("./findKey.js"));

var _findLast = _interopRequireDefault(require("./findLast.js"));

var _findLastIndex = _interopRequireDefault(require("./findLastIndex.js"));

var _findLastKey = _interopRequireDefault(require("./findLastKey.js"));

var _first = _interopRequireDefault(require("./first.js"));

var _flatMap = _interopRequireDefault(require("./flatMap.js"));

var _flatMapDeep = _interopRequireDefault(require("./flatMapDeep.js"));

var _flatMapDepth = _interopRequireDefault(require("./flatMapDepth.js"));

var _flatten = _interopRequireDefault(require("./flatten.js"));

var _flattenDeep = _interopRequireDefault(require("./flattenDeep.js"));

var _flattenDepth = _interopRequireDefault(require("./flattenDepth.js"));

var _flip = _interopRequireDefault(require("./flip.js"));

var _floor = _interopRequireDefault(require("./floor.js"));

var _flow = _interopRequireDefault(require("./flow.js"));

var _flowRight = _interopRequireDefault(require("./flowRight.js"));

var _forEach = _interopRequireDefault(require("./forEach.js"));

var _forEachRight = _interopRequireDefault(require("./forEachRight.js"));

var _forIn = _interopRequireDefault(require("./forIn.js"));

var _forInRight = _interopRequireDefault(require("./forInRight.js"));

var _forOwn = _interopRequireDefault(require("./forOwn.js"));

var _forOwnRight = _interopRequireDefault(require("./forOwnRight.js"));

var _fromPairs = _interopRequireDefault(require("./fromPairs.js"));

var _functions = _interopRequireDefault(require("./functions.js"));

var _functionsIn = _interopRequireDefault(require("./functionsIn.js"));

var _get = _interopRequireDefault(require("./get.js"));

var _groupBy = _interopRequireDefault(require("./groupBy.js"));

var _gt = _interopRequireDefault(require("./gt.js"));

var _gte = _interopRequireDefault(require("./gte.js"));

var _has = _interopRequireDefault(require("./has.js"));

var _hasIn = _interopRequireDefault(require("./hasIn.js"));

var _head = _interopRequireDefault(require("./head.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _inRange = _interopRequireDefault(require("./inRange.js"));

var _includes = _interopRequireDefault(require("./includes.js"));

var _indexOf = _interopRequireDefault(require("./indexOf.js"));

var _initial = _interopRequireDefault(require("./initial.js"));

var _intersection = _interopRequireDefault(require("./intersection.js"));

var _intersectionBy = _interopRequireDefault(require("./intersectionBy.js"));

var _intersectionWith = _interopRequireDefault(require("./intersectionWith.js"));

var _invert = _interopRequireDefault(require("./invert.js"));

var _invertBy = _interopRequireDefault(require("./invertBy.js"));

var _invoke = _interopRequireDefault(require("./invoke.js"));

var _invokeMap = _interopRequireDefault(require("./invokeMap.js"));

var _isArguments = _interopRequireDefault(require("./isArguments.js"));

var _isArray = _interopRequireDefault(require("./isArray.js"));

var _isArrayBuffer = _interopRequireDefault(require("./isArrayBuffer.js"));

var _isArrayLike = _interopRequireDefault(require("./isArrayLike.js"));

var _isArrayLikeObject = _interopRequireDefault(require("./isArrayLikeObject.js"));

var _isBoolean = _interopRequireDefault(require("./isBoolean.js"));

var _isBuffer = _interopRequireDefault(require("./isBuffer.js"));

var _isDate = _interopRequireDefault(require("./isDate.js"));

var _isElement = _interopRequireDefault(require("./isElement.js"));

var _isEmpty = _interopRequireDefault(require("./isEmpty.js"));

var _isEqual = _interopRequireDefault(require("./isEqual.js"));

var _isEqualWith = _interopRequireDefault(require("./isEqualWith.js"));

var _isError = _interopRequireDefault(require("./isError.js"));

var _isFinite = _interopRequireDefault(require("./isFinite.js"));

var _isFunction = _interopRequireDefault(require("./isFunction.js"));

var _isInteger = _interopRequireDefault(require("./isInteger.js"));

var _isLength = _interopRequireDefault(require("./isLength.js"));

var _isMap = _interopRequireDefault(require("./isMap.js"));

var _isMatch = _interopRequireDefault(require("./isMatch.js"));

var _isMatchWith = _interopRequireDefault(require("./isMatchWith.js"));

var _isNaN = _interopRequireDefault(require("./isNaN.js"));

var _isNative = _interopRequireDefault(require("./isNative.js"));

var _isNil = _interopRequireDefault(require("./isNil.js"));

var _isNull = _interopRequireDefault(require("./isNull.js"));

var _isNumber = _interopRequireDefault(require("./isNumber.js"));

var _isObject = _interopRequireDefault(require("./isObject.js"));

var _isObjectLike = _interopRequireDefault(require("./isObjectLike.js"));

var _isPlainObject = _interopRequireDefault(require("./isPlainObject.js"));

var _isRegExp = _interopRequireDefault(require("./isRegExp.js"));

var _isSafeInteger = _interopRequireDefault(require("./isSafeInteger.js"));

var _isSet = _interopRequireDefault(require("./isSet.js"));

var _isString = _interopRequireDefault(require("./isString.js"));

var _isSymbol = _interopRequireDefault(require("./isSymbol.js"));

var _isTypedArray = _interopRequireDefault(require("./isTypedArray.js"));

var _isUndefined = _interopRequireDefault(require("./isUndefined.js"));

var _isWeakMap = _interopRequireDefault(require("./isWeakMap.js"));

var _isWeakSet = _interopRequireDefault(require("./isWeakSet.js"));

var _iteratee = _interopRequireDefault(require("./iteratee.js"));

var _join = _interopRequireDefault(require("./join.js"));

var _kebabCase = _interopRequireDefault(require("./kebabCase.js"));

var _keyBy = _interopRequireDefault(require("./keyBy.js"));

var _keys = _interopRequireDefault(require("./keys.js"));

var _keysIn = _interopRequireDefault(require("./keysIn.js"));

var _last = _interopRequireDefault(require("./last.js"));

var _lastIndexOf = _interopRequireDefault(require("./lastIndexOf.js"));

var _wrapperLodash = _interopRequireDefault(require("./wrapperLodash.js"));

var _lowerCase = _interopRequireDefault(require("./lowerCase.js"));

var _lowerFirst = _interopRequireDefault(require("./lowerFirst.js"));

var _lt = _interopRequireDefault(require("./lt.js"));

var _lte = _interopRequireDefault(require("./lte.js"));

var _map = _interopRequireDefault(require("./map.js"));

var _mapKeys = _interopRequireDefault(require("./mapKeys.js"));

var _mapValues = _interopRequireDefault(require("./mapValues.js"));

var _matches = _interopRequireDefault(require("./matches.js"));

var _matchesProperty = _interopRequireDefault(require("./matchesProperty.js"));

var _max = _interopRequireDefault(require("./max.js"));

var _maxBy = _interopRequireDefault(require("./maxBy.js"));

var _mean = _interopRequireDefault(require("./mean.js"));

var _meanBy = _interopRequireDefault(require("./meanBy.js"));

var _memoize = _interopRequireDefault(require("./memoize.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _mergeWith = _interopRequireDefault(require("./mergeWith.js"));

var _method = _interopRequireDefault(require("./method.js"));

var _methodOf = _interopRequireDefault(require("./methodOf.js"));

var _min = _interopRequireDefault(require("./min.js"));

var _minBy = _interopRequireDefault(require("./minBy.js"));

var _mixin = _interopRequireDefault(require("./mixin.js"));

var _multiply = _interopRequireDefault(require("./multiply.js"));

var _negate = _interopRequireDefault(require("./negate.js"));

var _next = _interopRequireDefault(require("./next.js"));

var _noop = _interopRequireDefault(require("./noop.js"));

var _now = _interopRequireDefault(require("./now.js"));

var _nth = _interopRequireDefault(require("./nth.js"));

var _nthArg = _interopRequireDefault(require("./nthArg.js"));

var _omit = _interopRequireDefault(require("./omit.js"));

var _omitBy = _interopRequireDefault(require("./omitBy.js"));

var _once = _interopRequireDefault(require("./once.js"));

var _orderBy = _interopRequireDefault(require("./orderBy.js"));

var _over = _interopRequireDefault(require("./over.js"));

var _overArgs = _interopRequireDefault(require("./overArgs.js"));

var _overEvery = _interopRequireDefault(require("./overEvery.js"));

var _overSome = _interopRequireDefault(require("./overSome.js"));

var _pad = _interopRequireDefault(require("./pad.js"));

var _padEnd = _interopRequireDefault(require("./padEnd.js"));

var _padStart = _interopRequireDefault(require("./padStart.js"));

var _parseInt = _interopRequireDefault(require("./parseInt.js"));

var _partial = _interopRequireDefault(require("./partial.js"));

var _partialRight = _interopRequireDefault(require("./partialRight.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _pick = _interopRequireDefault(require("./pick.js"));

var _pickBy = _interopRequireDefault(require("./pickBy.js"));

var _plant = _interopRequireDefault(require("./plant.js"));

var _property = _interopRequireDefault(require("./property.js"));

var _propertyOf = _interopRequireDefault(require("./propertyOf.js"));

var _pull = _interopRequireDefault(require("./pull.js"));

var _pullAll = _interopRequireDefault(require("./pullAll.js"));

var _pullAllBy = _interopRequireDefault(require("./pullAllBy.js"));

var _pullAllWith = _interopRequireDefault(require("./pullAllWith.js"));

var _pullAt = _interopRequireDefault(require("./pullAt.js"));

var _random = _interopRequireDefault(require("./random.js"));

var _range = _interopRequireDefault(require("./range.js"));

var _rangeRight = _interopRequireDefault(require("./rangeRight.js"));

var _rearg = _interopRequireDefault(require("./rearg.js"));

var _reduce = _interopRequireDefault(require("./reduce.js"));

var _reduceRight = _interopRequireDefault(require("./reduceRight.js"));

var _reject = _interopRequireDefault(require("./reject.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _repeat = _interopRequireDefault(require("./repeat.js"));

var _replace = _interopRequireDefault(require("./replace.js"));

var _rest = _interopRequireDefault(require("./rest.js"));

var _result = _interopRequireDefault(require("./result.js"));

var _reverse = _interopRequireDefault(require("./reverse.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _sample = _interopRequireDefault(require("./sample.js"));

var _sampleSize = _interopRequireDefault(require("./sampleSize.js"));

var _set = _interopRequireDefault(require("./set.js"));

var _setWith = _interopRequireDefault(require("./setWith.js"));

var _shuffle = _interopRequireDefault(require("./shuffle.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _snakeCase = _interopRequireDefault(require("./snakeCase.js"));

var _some = _interopRequireDefault(require("./some.js"));

var _sortBy = _interopRequireDefault(require("./sortBy.js"));

var _sortedIndex = _interopRequireDefault(require("./sortedIndex.js"));

var _sortedIndexBy = _interopRequireDefault(require("./sortedIndexBy.js"));

var _sortedIndexOf = _interopRequireDefault(require("./sortedIndexOf.js"));

var _sortedLastIndex = _interopRequireDefault(require("./sortedLastIndex.js"));

var _sortedLastIndexBy = _interopRequireDefault(require("./sortedLastIndexBy.js"));

var _sortedLastIndexOf = _interopRequireDefault(require("./sortedLastIndexOf.js"));

var _sortedUniq = _interopRequireDefault(require("./sortedUniq.js"));

var _sortedUniqBy = _interopRequireDefault(require("./sortedUniqBy.js"));

var _split = _interopRequireDefault(require("./split.js"));

var _spread = _interopRequireDefault(require("./spread.js"));

var _startCase = _interopRequireDefault(require("./startCase.js"));

var _startsWith = _interopRequireDefault(require("./startsWith.js"));

var _stubArray = _interopRequireDefault(require("./stubArray.js"));

var _stubFalse = _interopRequireDefault(require("./stubFalse.js"));

var _stubObject = _interopRequireDefault(require("./stubObject.js"));

var _stubString = _interopRequireDefault(require("./stubString.js"));

var _stubTrue = _interopRequireDefault(require("./stubTrue.js"));

var _subtract = _interopRequireDefault(require("./subtract.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sumBy = _interopRequireDefault(require("./sumBy.js"));

var _tail = _interopRequireDefault(require("./tail.js"));

var _take = _interopRequireDefault(require("./take.js"));

var _takeRight = _interopRequireDefault(require("./takeRight.js"));

var _takeRightWhile = _interopRequireDefault(require("./takeRightWhile.js"));

var _takeWhile = _interopRequireDefault(require("./takeWhile.js"));

var _tap = _interopRequireDefault(require("./tap.js"));

var _template = _interopRequireDefault(require("./template.js"));

var _templateSettings = _interopRequireDefault(require("./templateSettings.js"));

var _throttle = _interopRequireDefault(require("./throttle.js"));

var _thru = _interopRequireDefault(require("./thru.js"));

var _times = _interopRequireDefault(require("./times.js"));

var _toArray = _interopRequireDefault(require("./toArray.js"));

var _toFinite = _interopRequireDefault(require("./toFinite.js"));

var _toInteger = _interopRequireDefault(require("./toInteger.js"));

var _toIterator = _interopRequireDefault(require("./toIterator.js"));

var _toJSON = _interopRequireDefault(require("./toJSON.js"));

var _toLength = _interopRequireDefault(require("./toLength.js"));

var _toLower = _interopRequireDefault(require("./toLower.js"));

var _toNumber = _interopRequireDefault(require("./toNumber.js"));

var _toPairs = _interopRequireDefault(require("./toPairs.js"));

var _toPairsIn = _interopRequireDefault(require("./toPairsIn.js"));

var _toPath = _interopRequireDefault(require("./toPath.js"));

var _toPlainObject = _interopRequireDefault(require("./toPlainObject.js"));

var _toSafeInteger = _interopRequireDefault(require("./toSafeInteger.js"));

var _toString = _interopRequireDefault(require("./toString.js"));

var _toUpper = _interopRequireDefault(require("./toUpper.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

var _trim = _interopRequireDefault(require("./trim.js"));

var _trimEnd = _interopRequireDefault(require("./trimEnd.js"));

var _trimStart = _interopRequireDefault(require("./trimStart.js"));

var _truncate = _interopRequireDefault(require("./truncate.js"));

var _unary = _interopRequireDefault(require("./unary.js"));

var _unescape = _interopRequireDefault(require("./unescape.js"));

var _union = _interopRequireDefault(require("./union.js"));

var _unionBy = _interopRequireDefault(require("./unionBy.js"));

var _unionWith = _interopRequireDefault(require("./unionWith.js"));

var _uniq = _interopRequireDefault(require("./uniq.js"));

var _uniqBy = _interopRequireDefault(require("./uniqBy.js"));

var _uniqWith = _interopRequireDefault(require("./uniqWith.js"));

var _uniqueId = _interopRequireDefault(require("./uniqueId.js"));

var _unset = _interopRequireDefault(require("./unset.js"));

var _unzip = _interopRequireDefault(require("./unzip.js"));

var _unzipWith = _interopRequireDefault(require("./unzipWith.js"));

var _update = _interopRequireDefault(require("./update.js"));

var _updateWith = _interopRequireDefault(require("./updateWith.js"));

var _upperCase = _interopRequireDefault(require("./upperCase.js"));

var _upperFirst = _interopRequireDefault(require("./upperFirst.js"));

var _value = _interopRequireDefault(require("./value.js"));

var _valueOf = _interopRequireDefault(require("./valueOf.js"));

var _values = _interopRequireDefault(require("./values.js"));

var _valuesIn = _interopRequireDefault(require("./valuesIn.js"));

var _without = _interopRequireDefault(require("./without.js"));

var _words = _interopRequireDefault(require("./words.js"));

var _wrap = _interopRequireDefault(require("./wrap.js"));

var _wrapperAt = _interopRequireDefault(require("./wrapperAt.js"));

var _wrapperChain = _interopRequireDefault(require("./wrapperChain.js"));

var _wrapperReverse = _interopRequireDefault(require("./wrapperReverse.js"));

var _wrapperValue = _interopRequireDefault(require("./wrapperValue.js"));

var _xor = _interopRequireDefault(require("./xor.js"));

var _xorBy = _interopRequireDefault(require("./xorBy.js"));

var _xorWith = _interopRequireDefault(require("./xorWith.js"));

var _zip = _interopRequireDefault(require("./zip.js"));

var _zipObject = _interopRequireDefault(require("./zipObject.js"));

var _zipObjectDeep = _interopRequireDefault(require("./zipObjectDeep.js"));

var _zipWith = _interopRequireDefault(require("./zipWith.js"));

var _lodashDefault = _interopRequireDefault(require("./lodash.default.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./add.js":"node_modules/lodash-es/add.js","./after.js":"node_modules/lodash-es/after.js","./ary.js":"node_modules/lodash-es/ary.js","./assign.js":"node_modules/lodash-es/assign.js","./assignIn.js":"node_modules/lodash-es/assignIn.js","./assignInWith.js":"node_modules/lodash-es/assignInWith.js","./assignWith.js":"node_modules/lodash-es/assignWith.js","./at.js":"node_modules/lodash-es/at.js","./attempt.js":"node_modules/lodash-es/attempt.js","./before.js":"node_modules/lodash-es/before.js","./bind.js":"node_modules/lodash-es/bind.js","./bindAll.js":"node_modules/lodash-es/bindAll.js","./bindKey.js":"node_modules/lodash-es/bindKey.js","./camelCase.js":"node_modules/lodash-es/camelCase.js","./capitalize.js":"node_modules/lodash-es/capitalize.js","./castArray.js":"node_modules/lodash-es/castArray.js","./ceil.js":"node_modules/lodash-es/ceil.js","./chain.js":"node_modules/lodash-es/chain.js","./chunk.js":"node_modules/lodash-es/chunk.js","./clamp.js":"node_modules/lodash-es/clamp.js","./clone.js":"node_modules/lodash-es/clone.js","./cloneDeep.js":"node_modules/lodash-es/cloneDeep.js","./cloneDeepWith.js":"node_modules/lodash-es/cloneDeepWith.js","./cloneWith.js":"node_modules/lodash-es/cloneWith.js","./commit.js":"node_modules/lodash-es/commit.js","./compact.js":"node_modules/lodash-es/compact.js","./concat.js":"node_modules/lodash-es/concat.js","./cond.js":"node_modules/lodash-es/cond.js","./conforms.js":"node_modules/lodash-es/conforms.js","./conformsTo.js":"node_modules/lodash-es/conformsTo.js","./constant.js":"node_modules/lodash-es/constant.js","./countBy.js":"node_modules/lodash-es/countBy.js","./create.js":"node_modules/lodash-es/create.js","./curry.js":"node_modules/lodash-es/curry.js","./curryRight.js":"node_modules/lodash-es/curryRight.js","./debounce.js":"node_modules/lodash-es/debounce.js","./deburr.js":"node_modules/lodash-es/deburr.js","./defaultTo.js":"node_modules/lodash-es/defaultTo.js","./defaults.js":"node_modules/lodash-es/defaults.js","./defaultsDeep.js":"node_modules/lodash-es/defaultsDeep.js","./defer.js":"node_modules/lodash-es/defer.js","./delay.js":"node_modules/lodash-es/delay.js","./difference.js":"node_modules/lodash-es/difference.js","./differenceBy.js":"node_modules/lodash-es/differenceBy.js","./differenceWith.js":"node_modules/lodash-es/differenceWith.js","./divide.js":"node_modules/lodash-es/divide.js","./drop.js":"node_modules/lodash-es/drop.js","./dropRight.js":"node_modules/lodash-es/dropRight.js","./dropRightWhile.js":"node_modules/lodash-es/dropRightWhile.js","./dropWhile.js":"node_modules/lodash-es/dropWhile.js","./each.js":"node_modules/lodash-es/each.js","./eachRight.js":"node_modules/lodash-es/eachRight.js","./endsWith.js":"node_modules/lodash-es/endsWith.js","./entries.js":"node_modules/lodash-es/entries.js","./entriesIn.js":"node_modules/lodash-es/entriesIn.js","./eq.js":"node_modules/lodash-es/eq.js","./escape.js":"node_modules/lodash-es/escape.js","./escapeRegExp.js":"node_modules/lodash-es/escapeRegExp.js","./every.js":"node_modules/lodash-es/every.js","./extend.js":"node_modules/lodash-es/extend.js","./extendWith.js":"node_modules/lodash-es/extendWith.js","./fill.js":"node_modules/lodash-es/fill.js","./filter.js":"node_modules/lodash-es/filter.js","./find.js":"node_modules/lodash-es/find.js","./findIndex.js":"node_modules/lodash-es/findIndex.js","./findKey.js":"node_modules/lodash-es/findKey.js","./findLast.js":"node_modules/lodash-es/findLast.js","./findLastIndex.js":"node_modules/lodash-es/findLastIndex.js","./findLastKey.js":"node_modules/lodash-es/findLastKey.js","./first.js":"node_modules/lodash-es/first.js","./flatMap.js":"node_modules/lodash-es/flatMap.js","./flatMapDeep.js":"node_modules/lodash-es/flatMapDeep.js","./flatMapDepth.js":"node_modules/lodash-es/flatMapDepth.js","./flatten.js":"node_modules/lodash-es/flatten.js","./flattenDeep.js":"node_modules/lodash-es/flattenDeep.js","./flattenDepth.js":"node_modules/lodash-es/flattenDepth.js","./flip.js":"node_modules/lodash-es/flip.js","./floor.js":"node_modules/lodash-es/floor.js","./flow.js":"node_modules/lodash-es/flow.js","./flowRight.js":"node_modules/lodash-es/flowRight.js","./forEach.js":"node_modules/lodash-es/forEach.js","./forEachRight.js":"node_modules/lodash-es/forEachRight.js","./forIn.js":"node_modules/lodash-es/forIn.js","./forInRight.js":"node_modules/lodash-es/forInRight.js","./forOwn.js":"node_modules/lodash-es/forOwn.js","./forOwnRight.js":"node_modules/lodash-es/forOwnRight.js","./fromPairs.js":"node_modules/lodash-es/fromPairs.js","./functions.js":"node_modules/lodash-es/functions.js","./functionsIn.js":"node_modules/lodash-es/functionsIn.js","./get.js":"node_modules/lodash-es/get.js","./groupBy.js":"node_modules/lodash-es/groupBy.js","./gt.js":"node_modules/lodash-es/gt.js","./gte.js":"node_modules/lodash-es/gte.js","./has.js":"node_modules/lodash-es/has.js","./hasIn.js":"node_modules/lodash-es/hasIn.js","./head.js":"node_modules/lodash-es/head.js","./identity.js":"node_modules/lodash-es/identity.js","./inRange.js":"node_modules/lodash-es/inRange.js","./includes.js":"node_modules/lodash-es/includes.js","./indexOf.js":"node_modules/lodash-es/indexOf.js","./initial.js":"node_modules/lodash-es/initial.js","./intersection.js":"node_modules/lodash-es/intersection.js","./intersectionBy.js":"node_modules/lodash-es/intersectionBy.js","./intersectionWith.js":"node_modules/lodash-es/intersectionWith.js","./invert.js":"node_modules/lodash-es/invert.js","./invertBy.js":"node_modules/lodash-es/invertBy.js","./invoke.js":"node_modules/lodash-es/invoke.js","./invokeMap.js":"node_modules/lodash-es/invokeMap.js","./isArguments.js":"node_modules/lodash-es/isArguments.js","./isArray.js":"node_modules/lodash-es/isArray.js","./isArrayBuffer.js":"node_modules/lodash-es/isArrayBuffer.js","./isArrayLike.js":"node_modules/lodash-es/isArrayLike.js","./isArrayLikeObject.js":"node_modules/lodash-es/isArrayLikeObject.js","./isBoolean.js":"node_modules/lodash-es/isBoolean.js","./isBuffer.js":"node_modules/lodash-es/isBuffer.js","./isDate.js":"node_modules/lodash-es/isDate.js","./isElement.js":"node_modules/lodash-es/isElement.js","./isEmpty.js":"node_modules/lodash-es/isEmpty.js","./isEqual.js":"node_modules/lodash-es/isEqual.js","./isEqualWith.js":"node_modules/lodash-es/isEqualWith.js","./isError.js":"node_modules/lodash-es/isError.js","./isFinite.js":"node_modules/lodash-es/isFinite.js","./isFunction.js":"node_modules/lodash-es/isFunction.js","./isInteger.js":"node_modules/lodash-es/isInteger.js","./isLength.js":"node_modules/lodash-es/isLength.js","./isMap.js":"node_modules/lodash-es/isMap.js","./isMatch.js":"node_modules/lodash-es/isMatch.js","./isMatchWith.js":"node_modules/lodash-es/isMatchWith.js","./isNaN.js":"node_modules/lodash-es/isNaN.js","./isNative.js":"node_modules/lodash-es/isNative.js","./isNil.js":"node_modules/lodash-es/isNil.js","./isNull.js":"node_modules/lodash-es/isNull.js","./isNumber.js":"node_modules/lodash-es/isNumber.js","./isObject.js":"node_modules/lodash-es/isObject.js","./isObjectLike.js":"node_modules/lodash-es/isObjectLike.js","./isPlainObject.js":"node_modules/lodash-es/isPlainObject.js","./isRegExp.js":"node_modules/lodash-es/isRegExp.js","./isSafeInteger.js":"node_modules/lodash-es/isSafeInteger.js","./isSet.js":"node_modules/lodash-es/isSet.js","./isString.js":"node_modules/lodash-es/isString.js","./isSymbol.js":"node_modules/lodash-es/isSymbol.js","./isTypedArray.js":"node_modules/lodash-es/isTypedArray.js","./isUndefined.js":"node_modules/lodash-es/isUndefined.js","./isWeakMap.js":"node_modules/lodash-es/isWeakMap.js","./isWeakSet.js":"node_modules/lodash-es/isWeakSet.js","./iteratee.js":"node_modules/lodash-es/iteratee.js","./join.js":"node_modules/lodash-es/join.js","./kebabCase.js":"node_modules/lodash-es/kebabCase.js","./keyBy.js":"node_modules/lodash-es/keyBy.js","./keys.js":"node_modules/lodash-es/keys.js","./keysIn.js":"node_modules/lodash-es/keysIn.js","./last.js":"node_modules/lodash-es/last.js","./lastIndexOf.js":"node_modules/lodash-es/lastIndexOf.js","./wrapperLodash.js":"node_modules/lodash-es/wrapperLodash.js","./lowerCase.js":"node_modules/lodash-es/lowerCase.js","./lowerFirst.js":"node_modules/lodash-es/lowerFirst.js","./lt.js":"node_modules/lodash-es/lt.js","./lte.js":"node_modules/lodash-es/lte.js","./map.js":"node_modules/lodash-es/map.js","./mapKeys.js":"node_modules/lodash-es/mapKeys.js","./mapValues.js":"node_modules/lodash-es/mapValues.js","./matches.js":"node_modules/lodash-es/matches.js","./matchesProperty.js":"node_modules/lodash-es/matchesProperty.js","./max.js":"node_modules/lodash-es/max.js","./maxBy.js":"node_modules/lodash-es/maxBy.js","./mean.js":"node_modules/lodash-es/mean.js","./meanBy.js":"node_modules/lodash-es/meanBy.js","./memoize.js":"node_modules/lodash-es/memoize.js","./merge.js":"node_modules/lodash-es/merge.js","./mergeWith.js":"node_modules/lodash-es/mergeWith.js","./method.js":"node_modules/lodash-es/method.js","./methodOf.js":"node_modules/lodash-es/methodOf.js","./min.js":"node_modules/lodash-es/min.js","./minBy.js":"node_modules/lodash-es/minBy.js","./mixin.js":"node_modules/lodash-es/mixin.js","./multiply.js":"node_modules/lodash-es/multiply.js","./negate.js":"node_modules/lodash-es/negate.js","./next.js":"node_modules/lodash-es/next.js","./noop.js":"node_modules/lodash-es/noop.js","./now.js":"node_modules/lodash-es/now.js","./nth.js":"node_modules/lodash-es/nth.js","./nthArg.js":"node_modules/lodash-es/nthArg.js","./omit.js":"node_modules/lodash-es/omit.js","./omitBy.js":"node_modules/lodash-es/omitBy.js","./once.js":"node_modules/lodash-es/once.js","./orderBy.js":"node_modules/lodash-es/orderBy.js","./over.js":"node_modules/lodash-es/over.js","./overArgs.js":"node_modules/lodash-es/overArgs.js","./overEvery.js":"node_modules/lodash-es/overEvery.js","./overSome.js":"node_modules/lodash-es/overSome.js","./pad.js":"node_modules/lodash-es/pad.js","./padEnd.js":"node_modules/lodash-es/padEnd.js","./padStart.js":"node_modules/lodash-es/padStart.js","./parseInt.js":"node_modules/lodash-es/parseInt.js","./partial.js":"node_modules/lodash-es/partial.js","./partialRight.js":"node_modules/lodash-es/partialRight.js","./partition.js":"node_modules/lodash-es/partition.js","./pick.js":"node_modules/lodash-es/pick.js","./pickBy.js":"node_modules/lodash-es/pickBy.js","./plant.js":"node_modules/lodash-es/plant.js","./property.js":"node_modules/lodash-es/property.js","./propertyOf.js":"node_modules/lodash-es/propertyOf.js","./pull.js":"node_modules/lodash-es/pull.js","./pullAll.js":"node_modules/lodash-es/pullAll.js","./pullAllBy.js":"node_modules/lodash-es/pullAllBy.js","./pullAllWith.js":"node_modules/lodash-es/pullAllWith.js","./pullAt.js":"node_modules/lodash-es/pullAt.js","./random.js":"node_modules/lodash-es/random.js","./range.js":"node_modules/lodash-es/range.js","./rangeRight.js":"node_modules/lodash-es/rangeRight.js","./rearg.js":"node_modules/lodash-es/rearg.js","./reduce.js":"node_modules/lodash-es/reduce.js","./reduceRight.js":"node_modules/lodash-es/reduceRight.js","./reject.js":"node_modules/lodash-es/reject.js","./remove.js":"node_modules/lodash-es/remove.js","./repeat.js":"node_modules/lodash-es/repeat.js","./replace.js":"node_modules/lodash-es/replace.js","./rest.js":"node_modules/lodash-es/rest.js","./result.js":"node_modules/lodash-es/result.js","./reverse.js":"node_modules/lodash-es/reverse.js","./round.js":"node_modules/lodash-es/round.js","./sample.js":"node_modules/lodash-es/sample.js","./sampleSize.js":"node_modules/lodash-es/sampleSize.js","./set.js":"node_modules/lodash-es/set.js","./setWith.js":"node_modules/lodash-es/setWith.js","./shuffle.js":"node_modules/lodash-es/shuffle.js","./size.js":"node_modules/lodash-es/size.js","./slice.js":"node_modules/lodash-es/slice.js","./snakeCase.js":"node_modules/lodash-es/snakeCase.js","./some.js":"node_modules/lodash-es/some.js","./sortBy.js":"node_modules/lodash-es/sortBy.js","./sortedIndex.js":"node_modules/lodash-es/sortedIndex.js","./sortedIndexBy.js":"node_modules/lodash-es/sortedIndexBy.js","./sortedIndexOf.js":"node_modules/lodash-es/sortedIndexOf.js","./sortedLastIndex.js":"node_modules/lodash-es/sortedLastIndex.js","./sortedLastIndexBy.js":"node_modules/lodash-es/sortedLastIndexBy.js","./sortedLastIndexOf.js":"node_modules/lodash-es/sortedLastIndexOf.js","./sortedUniq.js":"node_modules/lodash-es/sortedUniq.js","./sortedUniqBy.js":"node_modules/lodash-es/sortedUniqBy.js","./split.js":"node_modules/lodash-es/split.js","./spread.js":"node_modules/lodash-es/spread.js","./startCase.js":"node_modules/lodash-es/startCase.js","./startsWith.js":"node_modules/lodash-es/startsWith.js","./stubArray.js":"node_modules/lodash-es/stubArray.js","./stubFalse.js":"node_modules/lodash-es/stubFalse.js","./stubObject.js":"node_modules/lodash-es/stubObject.js","./stubString.js":"node_modules/lodash-es/stubString.js","./stubTrue.js":"node_modules/lodash-es/stubTrue.js","./subtract.js":"node_modules/lodash-es/subtract.js","./sum.js":"node_modules/lodash-es/sum.js","./sumBy.js":"node_modules/lodash-es/sumBy.js","./tail.js":"node_modules/lodash-es/tail.js","./take.js":"node_modules/lodash-es/take.js","./takeRight.js":"node_modules/lodash-es/takeRight.js","./takeRightWhile.js":"node_modules/lodash-es/takeRightWhile.js","./takeWhile.js":"node_modules/lodash-es/takeWhile.js","./tap.js":"node_modules/lodash-es/tap.js","./template.js":"node_modules/lodash-es/template.js","./templateSettings.js":"node_modules/lodash-es/templateSettings.js","./throttle.js":"node_modules/lodash-es/throttle.js","./thru.js":"node_modules/lodash-es/thru.js","./times.js":"node_modules/lodash-es/times.js","./toArray.js":"node_modules/lodash-es/toArray.js","./toFinite.js":"node_modules/lodash-es/toFinite.js","./toInteger.js":"node_modules/lodash-es/toInteger.js","./toIterator.js":"node_modules/lodash-es/toIterator.js","./toJSON.js":"node_modules/lodash-es/toJSON.js","./toLength.js":"node_modules/lodash-es/toLength.js","./toLower.js":"node_modules/lodash-es/toLower.js","./toNumber.js":"node_modules/lodash-es/toNumber.js","./toPairs.js":"node_modules/lodash-es/toPairs.js","./toPairsIn.js":"node_modules/lodash-es/toPairsIn.js","./toPath.js":"node_modules/lodash-es/toPath.js","./toPlainObject.js":"node_modules/lodash-es/toPlainObject.js","./toSafeInteger.js":"node_modules/lodash-es/toSafeInteger.js","./toString.js":"node_modules/lodash-es/toString.js","./toUpper.js":"node_modules/lodash-es/toUpper.js","./transform.js":"node_modules/lodash-es/transform.js","./trim.js":"node_modules/lodash-es/trim.js","./trimEnd.js":"node_modules/lodash-es/trimEnd.js","./trimStart.js":"node_modules/lodash-es/trimStart.js","./truncate.js":"node_modules/lodash-es/truncate.js","./unary.js":"node_modules/lodash-es/unary.js","./unescape.js":"node_modules/lodash-es/unescape.js","./union.js":"node_modules/lodash-es/union.js","./unionBy.js":"node_modules/lodash-es/unionBy.js","./unionWith.js":"node_modules/lodash-es/unionWith.js","./uniq.js":"node_modules/lodash-es/uniq.js","./uniqBy.js":"node_modules/lodash-es/uniqBy.js","./uniqWith.js":"node_modules/lodash-es/uniqWith.js","./uniqueId.js":"node_modules/lodash-es/uniqueId.js","./unset.js":"node_modules/lodash-es/unset.js","./unzip.js":"node_modules/lodash-es/unzip.js","./unzipWith.js":"node_modules/lodash-es/unzipWith.js","./update.js":"node_modules/lodash-es/update.js","./updateWith.js":"node_modules/lodash-es/updateWith.js","./upperCase.js":"node_modules/lodash-es/upperCase.js","./upperFirst.js":"node_modules/lodash-es/upperFirst.js","./value.js":"node_modules/lodash-es/value.js","./valueOf.js":"node_modules/lodash-es/valueOf.js","./values.js":"node_modules/lodash-es/values.js","./valuesIn.js":"node_modules/lodash-es/valuesIn.js","./without.js":"node_modules/lodash-es/without.js","./words.js":"node_modules/lodash-es/words.js","./wrap.js":"node_modules/lodash-es/wrap.js","./wrapperAt.js":"node_modules/lodash-es/wrapperAt.js","./wrapperChain.js":"node_modules/lodash-es/wrapperChain.js","./wrapperReverse.js":"node_modules/lodash-es/wrapperReverse.js","./wrapperValue.js":"node_modules/lodash-es/wrapperValue.js","./xor.js":"node_modules/lodash-es/xor.js","./xorBy.js":"node_modules/lodash-es/xorBy.js","./xorWith.js":"node_modules/lodash-es/xorWith.js","./zip.js":"node_modules/lodash-es/zip.js","./zipObject.js":"node_modules/lodash-es/zipObject.js","./zipObjectDeep.js":"node_modules/lodash-es/zipObjectDeep.js","./zipWith.js":"node_modules/lodash-es/zipWith.js","./lodash.default.js":"node_modules/lodash-es/lodash.default.js"}],"components/App.vue":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _TeamCard = _interopRequireDefault(require("./TeamCard.vue"));

var _lodashEs = require("lodash-es");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var teamsApiUrl = "https://nameless-island-49053.herokuapp.com";
var _default = {
  name: "App",
  data: function data() {
    return {
      teams: [],
      employees: [],
      projects: []
    };
  },
  methods: {
    loadTeams: function loadTeams() {
      var _this = this;

      fetch("".concat(teamsApiUrl, "/teams")).then(function (res) {
        return res.json();
      }).then(function (teams) {
        console.log(teams);
        _this.teams = teams;

        _this.teams.sort(function (teama, teamb) {
          return teama._id > teamb._id;
        });
      }).catch(function () {
        console.log("Error loading team info");

        _this.showModalWindow(err);
      });
    },
    loadEmployees: function loadEmployees() {
      var _this2 = this;

      fetch("".concat(teamsApiUrl, "/employees")) //gets employees
      .then(function (res) {
        return res.json();
      }).then(function (employees) {
        _this2.employees = (0, _lodashEs.map)(employees, function (employee) {
          return (0, _lodashEs.pick)(employee, ["_id", "FirstName", "LastName"]);
        });

        _this2.employees.forEach(function (employee) {
          //create full name property
          employee.FullName = employee.FirstName + " " + employee.LastName;
        });
      }).catch(function (err) {
        console.log("Error loading employee info");

        _this2.showModalWindow(err);
      });
    },
    loadProjects: function loadProjects() {
      var _this3 = this;

      //load projects into team apu
      fetch("".concat(teamsApiUrl, "/projects")).then(function (res) {
        return res.json();
      }).then(function (projects) {
        _this3.projects = projects; // assign project data from teams api to project array
      }).catch(function () {
        console.log("Error loading projects info");
      });
    },
    showModalWindow: function showModalWindow(msg) {
      this.$bvModal.msgBoxOk(msg); // display modal

      this.showModalWindow(err);
    }
  },
  created: function created() {
    // calls functions on page load
    this.loadEmployees();
    this.loadTeams();
    this.loadProjects();
  },
  components: {
    TeamCard: _TeamCard.default //connect to teamcard component

  }
};
exports.default = _default;
        var $108054 = exports.default || module.exports;
      
      if (typeof $108054 === 'function') {
        $108054 = $108054.options;
      }
    
        /* template */
        Object.assign($108054, (function () {
          var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "wrapper" }, [
    _vm._m(0),
    _vm._v(" "),
    _c("div", { staticClass: "container" }, [
      _c(
        "div",
        { staticClass: "row" },
        _vm._l(_vm.teams, function(team, index) {
          return _c("TeamCard", {
            key: "team-" + index,
            attrs: {
              employees: _vm.employees,
              projects: _vm.projects,
              team: team
            },
            on: { "team-updated": _vm.showModalWindow }
          })
        }),
        1
      )
    ])
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c(
      "nav",
      { staticClass: "navbar navbar-expand-lg navbar-light bg-light" },
      [
        _c("a", { staticClass: "navbar-brand" }, [
          _vm._v("David Zak's Assignment 3 - Team Details")
        ])
      ]
    )
  }
]
render._withStripped = true

          return {
            render: render,
            staticRenderFns: staticRenderFns,
            _compiled: true,
            _scopeId: "data-v-108054",
            functional: undefined
          };
        })());
      
    /* hot reload */
    (function () {
      if (module.hot) {
        var api = require('vue-hot-reload-api');
        api.install(require('vue'));
        if (api.compatible) {
          module.hot.accept();
          if (!module.hot.data) {
            api.createRecord('$108054', $108054);
          } else {
            api.reload('$108054', $108054);
          }
        }

        
        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
      }
    })();
},{"./TeamCard.vue":"components/TeamCard.vue","lodash-es":"node_modules/lodash-es/lodash.js","_css_loader":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js","vue-hot-reload-api":"node_modules/vue-hot-reload-api/dist/index.js","vue":"node_modules/vue/dist/vue.esm.js"}],"node_modules/bootstrap-vue/esm/utils/vue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vue = _interopRequireDefault(require("vue"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//
// Single point of contact for Vue
//
// TODO:
//   Conditionally import Vue if no global Vue
//
var _default = _vue.default;
exports.default = _default;
},{"vue":"node_modules/vue/dist/vue.esm.js"}],"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"node_modules/bootstrap-vue/esm/utils/env.js":[function(require,module,exports) {
var process = require("process");
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNoWarn = exports.getEnv = exports.hasIntersectionObserverSupport = exports.hasPointerEventSupport = exports.hasTouchSupport = exports.hasPassiveEventSupport = exports.isIE = exports.isJSDOM = exports.userAgent = exports.isBrowser = exports.hasMutationObserverSupport = exports.hasPromiseSupport = exports.hasNavigatorSupport = exports.hasDocumentSupport = exports.hasWindowSupport = void 0;

/**
 * Utilities to get information about the current environment
 */
// --- Constants ---
var hasWindowSupport = typeof window !== 'undefined';
exports.hasWindowSupport = hasWindowSupport;
var hasDocumentSupport = typeof document !== 'undefined';
exports.hasDocumentSupport = hasDocumentSupport;
var hasNavigatorSupport = typeof navigator !== 'undefined';
exports.hasNavigatorSupport = hasNavigatorSupport;
var hasPromiseSupport = typeof Promise !== 'undefined';
exports.hasPromiseSupport = hasPromiseSupport;
var hasMutationObserverSupport = typeof MutationObserver !== 'undefined' || typeof WebKitMutationObserver !== 'undefined' || typeof MozMutationObserver !== 'undefined';
exports.hasMutationObserverSupport = hasMutationObserverSupport;
var isBrowser = hasWindowSupport && hasDocumentSupport && hasNavigatorSupport; // Browser type sniffing

exports.isBrowser = isBrowser;
var userAgent = isBrowser ? window.navigator.userAgent.toLowerCase() : '';
exports.userAgent = userAgent;
var isJSDOM = userAgent.indexOf('jsdom') > 0;
exports.isJSDOM = isJSDOM;
var isIE = /msie|trident/.test(userAgent); // Determine if the browser supports the option passive for events

exports.isIE = isIE;

var hasPassiveEventSupport = function () {
  var passiveEventSupported = false;

  if (isBrowser) {
    try {
      var options = {
        get passive() {
          // This function will be called when the browser
          // attempts to access the passive property.

          /* istanbul ignore next: will never be called in JSDOM */
          passiveEventSupported = true;
        }

      };
      window.addEventListener('test', options, options);
      window.removeEventListener('test', options, options);
    } catch (err) {
      /* istanbul ignore next: will never be called in JSDOM */
      passiveEventSupported = false;
    }
  }

  return passiveEventSupported;
}();

exports.hasPassiveEventSupport = hasPassiveEventSupport;
var hasTouchSupport = isBrowser && ('ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0);
exports.hasTouchSupport = hasTouchSupport;
var hasPointerEventSupport = isBrowser && Boolean(window.PointerEvent || window.MSPointerEvent);
exports.hasPointerEventSupport = hasPointerEventSupport;
var hasIntersectionObserverSupport = isBrowser && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && // Edge 15 and UC Browser lack support for `isIntersecting`
// but we an use intersectionRatio > 0 instead
// 'isIntersecting' in window.IntersectionObserverEntry.prototype &&
'intersectionRatio' in window.IntersectionObserverEntry.prototype; // --- Getters ---

exports.hasIntersectionObserverSupport = hasIntersectionObserverSupport;

var getEnv = function getEnv(key) {
  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var env = typeof process !== 'undefined' && process ? process.env || {} : {};

  if (!key) {
    /* istanbul ignore next */
    return env;
  }

  return env[key] || fallback;
};

exports.getEnv = getEnv;

var getNoWarn = function getNoWarn() {
  return getEnv('BOOTSTRAP_VUE_NO_WARN');
};

exports.getNoWarn = getNoWarn;
},{"process":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/node_modules/process/browser.js"}],"node_modules/bootstrap-vue/esm/utils/warn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.warnNoMutationObserverSupport = exports.warnNoPromiseSupport = exports.warnNotClient = exports.warn = void 0;

var _env = require("./env");

/**
 * Log a warning message to the console with BootstrapVue formatting
 * @param {string} message
 */
var warn = function warn(message)
/* istanbul ignore next */
{
  if (!(0, _env.getNoWarn)()) {
    console.warn("[BootstrapVue warn]: ".concat(message));
  }
};
/**
 * Warn when no Promise support is given
 * @param {string} source
 * @returns {boolean} warned
 */


exports.warn = warn;

var warnNotClient = function warnNotClient(source) {
  /* istanbul ignore else */
  if (_env.isBrowser) {
    return false;
  } else {
    warn("".concat(source, ": Can not be called during SSR."));
    return true;
  }
};
/**
 * Warn when no Promise support is given
 * @param {string} source
 * @returns {boolean} warned
 */


exports.warnNotClient = warnNotClient;

var warnNoPromiseSupport = function warnNoPromiseSupport(source) {
  /* istanbul ignore else */
  if (_env.hasPromiseSupport) {
    return false;
  } else {
    warn("".concat(source, ": Requires Promise support."));
    return true;
  }
};
/**
 * Warn when no MutationObserver support is given
 * @param {string} source
 * @returns {boolean} warned
 */


exports.warnNoPromiseSupport = warnNoPromiseSupport;

var warnNoMutationObserverSupport = function warnNoMutationObserverSupport(source) {
  /* istanbul ignore else */
  if (_env.hasMutationObserverSupport) {
    return false;
  } else {
    warn("".concat(source, ": Requires MutationObserver support."));
    return true;
  }
}; // Default export


exports.warnNoMutationObserverSupport = warnNoMutationObserverSupport;
var _default = warn;
exports.default = _default;
},{"./env":"node_modules/bootstrap-vue/esm/utils/env.js"}],"node_modules/bootstrap-vue/esm/utils/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.concat = exports.arrayIncludes = exports.isArray = exports.from = void 0;
// --- Static ---
var from = Array.from;
exports.from = from;
var isArray = Array.isArray; // --- Instance ---

exports.isArray = isArray;

var arrayIncludes = function arrayIncludes(array, value) {
  return array.indexOf(value) !== -1;
};

exports.arrayIncludes = arrayIncludes;

var concat = function concat() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return Array.prototype.concat.apply([], args);
};

exports.concat = concat;
},{}],"node_modules/bootstrap-vue/esm/utils/object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deepFreeze = exports.readonlyDescriptor = exports.omit = exports.isPlainObject = exports.isObject = exports.toString = exports.hasOwnProperty = exports.is = exports.isFrozen = exports.create = exports.getPrototypeOf = exports.getOwnPropertySymbols = exports.getOwnPropertyDescriptor = exports.freeze = exports.defineProperty = exports.defineProperties = exports.keys = exports.getOwnPropertyNames = exports.assign = void 0;

var _array = require("./array");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

// --- Static ---
var assign = Object.assign;
exports.assign = assign;
var getOwnPropertyNames = Object.getOwnPropertyNames;
exports.getOwnPropertyNames = getOwnPropertyNames;
var keys = Object.keys;
exports.keys = keys;
var defineProperties = Object.defineProperties;
exports.defineProperties = defineProperties;
var defineProperty = Object.defineProperty;
exports.defineProperty = defineProperty;
var freeze = Object.freeze;
exports.freeze = freeze;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
exports.getOwnPropertyDescriptor = getOwnPropertyDescriptor;
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
exports.getOwnPropertySymbols = getOwnPropertySymbols;
var getPrototypeOf = Object.getPrototypeOf;
exports.getPrototypeOf = getPrototypeOf;
var create = Object.create;
exports.create = create;
var isFrozen = Object.isFrozen;
exports.isFrozen = isFrozen;
var is = Object.is; // --- "Instance" ---

exports.is = is;

var hasOwnProperty = function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};

exports.hasOwnProperty = hasOwnProperty;

var toString = function toString(obj) {
  return Object.prototype.toString.call(obj);
}; // --- Utilities ---

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 * Note object could be a complex type like array, date, etc.
 */


exports.toString = toString;

var isObject = function isObject(obj) {
  return obj !== null && _typeof(obj) === 'object';
};
/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */


exports.isObject = isObject;

var isPlainObject = function isPlainObject(obj) {
  return Object.prototype.toString.call(obj) === '[object Object]';
}; // @link https://gist.github.com/bisubus/2da8af7e801ffd813fab7ac221aa7afc


exports.isPlainObject = isPlainObject;

var omit = function omit(obj, props) {
  return keys(obj).filter(function (key) {
    return props.indexOf(key) === -1;
  }).reduce(function (result, key) {
    return _objectSpread({}, result, _defineProperty({}, key, obj[key]));
  }, {});
};

exports.omit = omit;

var readonlyDescriptor = function readonlyDescriptor() {
  return {
    enumerable: true,
    configurable: false,
    writable: false
  };
};
/**
 * Deep-freezes and object, making it immutable / read-only.
 * Returns the same object passed-in, but frozen.
 * Freezes inner object/array/values first.
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze
 * Note: this method will not work for property values using Symbol() as a key
 */


exports.readonlyDescriptor = readonlyDescriptor;

var deepFreeze = function deepFreeze(obj) {
  // Retrieve the property names defined on object/array
  // Note: `keys` will ignore properties that are keyed by a `Symbol()`
  var props = keys(obj); // Iterate over each prop and recursively freeze it

  props.forEach(function (prop) {
    var value = obj[prop]; // If value is a plain object or array, we deepFreeze it

    obj[prop] = value && (isPlainObject(value) || (0, _array.isArray)(value)) ? deepFreeze(value) : value;
  });
  return freeze(obj);
};

exports.deepFreeze = deepFreeze;
},{"./array":"node_modules/bootstrap-vue/esm/utils/array.js"}],"node_modules/bootstrap-vue/esm/utils/safe-types.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.File = exports.SVGElement = exports.HTMLElement = exports.Element = void 0;

var _env = require("./env");

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
/**
 * SSR safe types
 */


var w = _env.hasWindowSupport ? window : {};
var Element = _env.hasWindowSupport ? w.Element :
/*#__PURE__*/
function (_Object) {
  _inherits(Element, _Object);

  function Element() {
    _classCallCheck(this, Element);

    return _possibleConstructorReturn(this, _getPrototypeOf(Element).apply(this, arguments));
  }

  return Element;
}(_wrapNativeSuper(Object));
exports.Element = Element;
var HTMLElement = _env.hasWindowSupport ? w.HTMLElement :
/*#__PURE__*/
function (_Element) {
  _inherits(HTMLElement, _Element);

  function HTMLElement() {
    _classCallCheck(this, HTMLElement);

    return _possibleConstructorReturn(this, _getPrototypeOf(HTMLElement).apply(this, arguments));
  }

  return HTMLElement;
}(Element);
exports.HTMLElement = HTMLElement;
var SVGElement = _env.hasWindowSupport ? w.SVGElement :
/*#__PURE__*/
function (_Element2) {
  _inherits(SVGElement, _Element2);

  function SVGElement() {
    _classCallCheck(this, SVGElement);

    return _possibleConstructorReturn(this, _getPrototypeOf(SVGElement).apply(this, arguments));
  }

  return SVGElement;
}(Element);
exports.SVGElement = SVGElement;
var File = _env.hasWindowSupport ? w.File :
/*#__PURE__*/
function (_Object2) {
  _inherits(File, _Object2);

  function File() {
    _classCallCheck(this, File);

    return _possibleConstructorReturn(this, _getPrototypeOf(File).apply(this, arguments));
  }

  return File;
}(_wrapNativeSuper(Object));
exports.File = File;
},{"./env":"node_modules/bootstrap-vue/esm/utils/env.js"}],"node_modules/bootstrap-vue/esm/utils/inspect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "isArray", {
  enumerable: true,
  get: function () {
    return _array.isArray;
  }
});
Object.defineProperty(exports, "isObject", {
  enumerable: true,
  get: function () {
    return _object.isObject;
  }
});
Object.defineProperty(exports, "isPlainObject", {
  enumerable: true,
  get: function () {
    return _object.isPlainObject;
  }
});
exports.isPromise = exports.isRegExp = exports.isFile = exports.isEvent = exports.isDate = exports.isPrimitive = exports.isNumber = exports.isString = exports.isBoolean = exports.isFunction = exports.isUndefinedOrNull = exports.isNull = exports.isUndefined = exports.toRawTypeLC = exports.toRawType = exports.toType = void 0;

var _array = require("./array");

var _object = require("./object");

var _safeTypes = require("./safe-types");

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

// --- Convenience inspection utilities ---
var toType = function toType(val) {
  return _typeof(val);
};

exports.toType = toType;

var toRawType = function toRawType(val) {
  return Object.prototype.toString.call(val).slice(8, -1);
};

exports.toRawType = toRawType;

var toRawTypeLC = function toRawTypeLC(val) {
  return toRawType(val).toLowerCase();
};

exports.toRawTypeLC = toRawTypeLC;

var isUndefined = function isUndefined(val) {
  return val === undefined;
};

exports.isUndefined = isUndefined;

var isNull = function isNull(val) {
  return val === null;
};

exports.isNull = isNull;

var isUndefinedOrNull = function isUndefinedOrNull(val) {
  return isUndefined(val) || isNull(val);
};

exports.isUndefinedOrNull = isUndefinedOrNull;

var isFunction = function isFunction(val) {
  return toType(val) === 'function';
};

exports.isFunction = isFunction;

var isBoolean = function isBoolean(val) {
  return toType(val) === 'boolean';
};

exports.isBoolean = isBoolean;

var isString = function isString(val) {
  return toType(val) === 'string';
};

exports.isString = isString;

var isNumber = function isNumber(val) {
  return toType(val) === 'number';
};

exports.isNumber = isNumber;

var isPrimitive = function isPrimitive(val) {
  return isBoolean(val) || isString(val) || isNumber(val);
};

exports.isPrimitive = isPrimitive;

var isDate = function isDate(val) {
  return val instanceof Date;
};

exports.isDate = isDate;

var isEvent = function isEvent(val) {
  return val instanceof Event;
};

exports.isEvent = isEvent;

var isFile = function isFile(val) {
  return val instanceof _safeTypes.File;
};

exports.isFile = isFile;

var isRegExp = function isRegExp(val) {
  return toRawType(val) === 'RegExp';
};

exports.isRegExp = isRegExp;

var isPromise = function isPromise(val) {
  return !isUndefinedOrNull(val) && isFunction(val.then) && isFunction(val.catch);
}; // Extra convenience named re-exports


exports.isPromise = isPromise;
},{"./array":"node_modules/bootstrap-vue/esm/utils/array.js","./object":"node_modules/bootstrap-vue/esm/utils/object.js","./safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js"}],"node_modules/bootstrap-vue/esm/utils/clone-deep.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.cloneDeep = void 0;

var _inspect = require("./inspect");

var _object = require("./object");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

var cloneDeep = function cloneDeep(obj) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : obj;

  if ((0, _inspect.isArray)(obj)) {
    return obj.reduce(function (result, val) {
      return [].concat(_toConsumableArray(result), [cloneDeep(val, val)]);
    }, []);
  }

  if ((0, _inspect.isPlainObject)(obj)) {
    return (0, _object.keys)(obj).reduce(function (result, key) {
      return _objectSpread({}, result, _defineProperty({}, key, cloneDeep(obj[key], obj[key])));
    }, {});
  }

  return defaultValue;
};

exports.cloneDeep = cloneDeep;
var _default = cloneDeep;
exports.default = _default;
},{"./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/utils/get.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("./inspect");

/**
 * Get property defined by dot/array notation in string.
 *
 * @link https://gist.github.com/jeneg/9767afdcca45601ea44930ea03e0febf#gistcomment-1935901
 *
 * @param {Object} obj
 * @param {string|Array} path
 * @param {*} defaultValue (optional)
 * @return {*}
 */
var get = function get(obj, path) {
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null; // Handle array of path values

  path = (0, _inspect.isArray)(path) ? path.join('.') : path; // If no path or no object passed

  if (!path || !(0, _inspect.isObject)(obj)) {
    return defaultValue;
  } // Handle edge case where user has dot(s) in top-level item field key
  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2762
  // Switched to `in` operator vs `hasOwnProperty` to handle obj.prototype getters
  // https://github.com/bootstrap-vue/bootstrap-vue/issues/3463


  if (path in obj) {
    return obj[path];
  } // Handle string array notation (numeric indices only)


  path = String(path).replace(/\[(\d+)]/g, '.$1');
  var steps = path.split('.').filter(Boolean); // Handle case where someone passes a string of only dots

  if (steps.length === 0) {
    return defaultValue;
  } // Traverse path in object to find result
  // We use `!=` vs `!==` to test for both `null` and `undefined`
  // Switched to `in` operator vs `hasOwnProperty` to handle obj.prototype getters
  // https://github.com/bootstrap-vue/bootstrap-vue/issues/3463


  return steps.every(function (step) {
    return (0, _inspect.isObject)(obj) && step in obj && (obj = obj[step]) != null;
  }) ? obj : defaultValue;
};

var _default = get;
exports.default = _default;
},{"./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/utils/config-defaults.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _object = require("./object");

// --- General BootstrapVue configuration ---
// NOTES
//
// The global config SHALL NOT be used to set defaults for Boolean props, as the props
// would loose their semantic meaning, and force people writing 3rd party components to
// explicity set a true or false value using the v-bind syntax on boolean props
//
// Supported config values (depending on the prop's supported type(s)):
// `String`, `Array`, `Object`, `null` or `undefined`
// BREAKPOINT DEFINITIONS
//
// Some components (`<b-col>` and `<b-form-group>`) generate props based on breakpoints,
// and this occurs when the component is first loaded (evaluated), which may happen
// before the config is created/modified
//
// To get around this we make these components' props async (lazy evaluation)
// The component definition is only called/executed when the first access to the
// component is used (and cached on subsequent uses)
// PROP DEFAULTS
//
// For default values on props, we use the default value factory function approach so
// that the default values are pulled in at each component instantiation
//
//  props: {
//    variant: {
//      type: String,
//      default: () => getConfigComponent('BAlert', 'variant')
//    }
//  }
//
// We also provide a cached getter for breakpoints, which are "frozen" on first access
// prettier-ignore
var _default = (0, _object.deepFreeze)({
  // Breakpoints
  breakpoints: ['xs', 'sm', 'md', 'lg', 'xl'],
  // Form controls
  formControls: {
    size: null
  },
  // Component specific defaults are keyed by the component
  // name (PascalCase) and prop name (camelCase)
  BAlert: {
    dismissLabel: 'Close',
    variant: 'info'
  },
  BBadge: {
    variant: 'secondary'
  },
  BButton: {
    size: null,
    variant: 'secondary'
  },
  BButtonClose: {
    // `textVariant` is `null` to inherit the current text color
    textVariant: null,
    ariaLabel: 'Close'
  },
  BCardSubTitle: {
    // `<b-card>` and `<b-card-body>` also inherit this prop
    subTitleTextVariant: 'muted'
  },
  BCarousel: {
    labelPrev: 'Previous Slide',
    labelNext: 'Next Slide',
    labelGotoSlide: 'Goto Slide',
    labelIndicators: 'Select a slide to display'
  },
  BDropdown: {
    toggleText: 'Toggle Dropdown',
    size: null,
    variant: 'secondary',
    splitVariant: null
  },
  BFormFile: {
    browseText: 'Browse',
    // Chrome default file prompt
    placeholder: 'No file chosen',
    dropPlaceholder: 'Drop files here'
  },
  BFormText: {
    textVariant: 'muted'
  },
  BImg: {
    blankColor: 'transparent'
  },
  BImgLazy: {
    blankColor: 'transparent'
  },
  BInputGroup: {
    size: null
  },
  BJumbotron: {
    bgVariant: null,
    borderVariant: null,
    textVariant: null
  },
  BListGroupItem: {
    variant: null
  },
  BModal: {
    titleTag: 'h5',
    size: 'md',
    headerBgVariant: null,
    headerBorderVariant: null,
    headerTextVariant: null,
    headerCloseVariant: null,
    bodyBgVariant: null,
    bodyTextVariant: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerTextVariant: null,
    cancelTitle: 'Cancel',
    cancelVariant: 'secondary',
    okTitle: 'OK',
    okVariant: 'primary',
    headerCloseLabel: 'Close'
  },
  BNavbar: {
    variant: null
  },
  BNavbarToggle: {
    label: 'Toggle navigation'
  },
  BPagination: {
    size: null
  },
  BPaginationNav: {
    size: null
  },
  BPopover: {
    boundary: 'scrollParent',
    boundaryPadding: 5,
    customClass: null,
    delay: 50,
    variant: null
  },
  BProgress: {
    variant: null
  },
  BProgressBar: {
    variant: null
  },
  BSpinner: {
    variant: null
  },
  BTable: {
    selectedVariant: 'primary',
    headVariant: null,
    footVariant: null
  },
  BToast: {
    toaster: 'b-toaster-top-right',
    autoHideDelay: 5000,
    variant: null,
    toastClass: null,
    headerClass: null,
    bodyClass: null
  },
  BToaster: {
    ariaLive: null,
    ariaAtomic: null,
    role: null
  },
  BTooltip: {
    boundary: 'scrollParent',
    boundaryPadding: 5,
    customClass: null,
    delay: 50,
    variant: null
  }
});

exports.default = _default;
},{"./object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/utils/config-set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetConfig = exports.setConfig = void 0;

var _vue = _interopRequireDefault(require("./vue"));

var _cloneDeep = _interopRequireDefault(require("./clone-deep"));

var _get = _interopRequireDefault(require("./get"));

var _warn = _interopRequireDefault(require("./warn"));

var _inspect = require("./inspect");

var _object = require("./object");

var _configDefaults = _interopRequireDefault(require("./config-defaults"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

// --- Constants ---
var PROP_NAME = '$bvConfig'; // Config manager class

var BvConfig =
/*#__PURE__*/
function () {
  function BvConfig() {
    _classCallCheck(this, BvConfig); // TODO: pre-populate with default config values (needs updated tests)
    // this.$_config = cloneDeep(DEFAULTS)


    this.$_config = {};
    this.$_cachedBreakpoints = null;
  }

  _createClass(BvConfig, [{
    key: "getDefaults",
    // Returns the defaults
    value: function getDefaults()
    /* istanbul ignore next */
    {
      return this.defaults;
    } // Method to merge in user config parameters

  }, {
    key: "setConfig",
    value: function setConfig() {
      var _this = this;

      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (!(0, _inspect.isPlainObject)(config)) {
        /* istanbul ignore next */
        return;
      }

      var configKeys = (0, _object.getOwnPropertyNames)(config);
      configKeys.forEach(function (cmpName) {
        /* istanbul ignore next */
        if (!(0, _object.hasOwnProperty)(_configDefaults.default, cmpName)) {
          (0, _warn.default)("config: unknown config property \"".concat(cmpName, "\""));
          return;
        }

        var cmpConfig = config[cmpName];

        if (cmpName === 'breakpoints') {
          // Special case for breakpoints
          var breakpoints = config.breakpoints;
          /* istanbul ignore if */

          if (!(0, _inspect.isArray)(breakpoints) || breakpoints.length < 2 || breakpoints.some(function (b) {
            return !(0, _inspect.isString)(b) || b.length === 0;
          })) {
            (0, _warn.default)('config: "breakpoints" must be an array of at least 2 breakpoint names');
          } else {
            _this.$_config.breakpoints = (0, _cloneDeep.default)(breakpoints);
          }
        } else if ((0, _inspect.isPlainObject)(cmpConfig)) {
          // Component prop defaults
          var props = (0, _object.getOwnPropertyNames)(cmpConfig);
          props.forEach(function (prop) {
            /* istanbul ignore if */
            if (!(0, _object.hasOwnProperty)(_configDefaults.default[cmpName], prop)) {
              (0, _warn.default)("config: unknown config property \"".concat(cmpName, ".").concat(prop, "\""));
            } else {
              // TODO: If we pre-populate the config with defaults, we can skip this line
              _this.$_config[cmpName] = _this.$_config[cmpName] || {};

              if (!(0, _inspect.isUndefined)(cmpConfig[prop])) {
                _this.$_config[cmpName][prop] = (0, _cloneDeep.default)(cmpConfig[prop]);
              }
            }
          });
        }
      });
    } // Clear the config. For testing purposes only

  }, {
    key: "resetConfig",
    value: function resetConfig() {
      this.$_config = {};
    } // Returns a deep copy of the user config

  }, {
    key: "getConfig",
    value: function getConfig() {
      return (0, _cloneDeep.default)(this.$_config);
    }
  }, {
    key: "getConfigValue",
    value: function getConfigValue(key) {
      // First we try the user config, and if key not found we fall back to default value
      // NOTE: If we deep clone DEFAULTS into config, then we can skip the fallback for get
      return (0, _cloneDeep.default)((0, _get.default)(this.$_config, key, (0, _get.default)(_configDefaults.default, key)));
    }
  }, {
    key: "defaults",
    get: function get()
    /* istanbul ignore next */
    {
      return _configDefaults.default;
    }
  }], [{
    key: "Defaults",
    get: function get()
    /* istanbul ignore next */
    {
      return _configDefaults.default;
    }
  }]);

  return BvConfig;
}(); // Method for applying a global config


var setConfig = function setConfig() {
  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var Vue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _vue.default; // Ensure we have a $bvConfig Object on the Vue prototype.
  // We set on Vue and OurVue just in case consumer has not set an alias of `vue`.

  Vue.prototype[PROP_NAME] = _vue.default.prototype[PROP_NAME] = Vue.prototype[PROP_NAME] || _vue.default.prototype[PROP_NAME] || new BvConfig(); // Apply the config values

  Vue.prototype[PROP_NAME].setConfig(config);
}; // Method for resetting the user config. Exported for testing purposes only.


exports.setConfig = setConfig;

var resetConfig = function resetConfig() {
  if (_vue.default.prototype[PROP_NAME] && _vue.default.prototype[PROP_NAME].resetConfig) {
    _vue.default.prototype[PROP_NAME].resetConfig();
  }
};

exports.resetConfig = resetConfig;
},{"./vue":"node_modules/bootstrap-vue/esm/utils/vue.js","./clone-deep":"node_modules/bootstrap-vue/esm/utils/clone-deep.js","./get":"node_modules/bootstrap-vue/esm/utils/get.js","./warn":"node_modules/bootstrap-vue/esm/utils/warn.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./object":"node_modules/bootstrap-vue/esm/utils/object.js","./config-defaults":"node_modules/bootstrap-vue/esm/utils/config-defaults.js"}],"node_modules/bootstrap-vue/esm/utils/plugins.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.vueUse = exports.registerDirectives = exports.registerDirective = exports.registerComponents = exports.registerComponent = exports.registerPlugins = exports.pluginFactory = exports.installFactory = exports.checkMultipleVue = void 0;

var _vue = _interopRequireDefault(require("./vue"));

var _warn = _interopRequireDefault(require("./warn"));

var _configSet = require("./config-set");

var _env = require("./env");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/**
 * Checks if there are multiple instances of Vue, and warns (once) about possible issues.
 * @param {object} Vue
 */
var checkMultipleVue = function () {
  var checkMultipleVueWarned = false;
  var MULTIPLE_VUE_WARNING = ['Multiple instances of Vue detected!', 'You may need to set up an alias for Vue in your bundler config.', 'See: https://bootstrap-vue.js.org/docs#using-module-bundlers'].join('\n');
  return function (Vue) {
    /* istanbul ignore next */
    if (!checkMultipleVueWarned && _vue.default !== Vue && !_env.isJSDOM) {
      (0, _warn.default)(MULTIPLE_VUE_WARNING);
    }

    checkMultipleVueWarned = true;
  };
}();
/**
 * Plugin install factory function.
 * @param {object} { components, directives }
 * @returns {function} plugin install function
 */


exports.checkMultipleVue = checkMultipleVue;

var installFactory = function installFactory() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      components = _ref.components,
      directives = _ref.directives,
      plugins = _ref.plugins;

  var install = function install(Vue) {
    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (install.installed) {
      /* istanbul ignore next */
      return;
    }

    install.installed = true;
    checkMultipleVue(Vue);
    (0, _configSet.setConfig)(config, Vue);
    registerComponents(Vue, components);
    registerDirectives(Vue, directives);
    registerPlugins(Vue, plugins);
  };

  install.installed = false;
  return install;
};
/**
 * Plugin object factory function.
 * @param {object} { components, directives, plugins }
 * @returns {object} plugin install object
 */


exports.installFactory = installFactory;

var pluginFactory = function pluginFactory() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var extend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return _objectSpread({}, extend, {
    install: installFactory(opts)
  });
};
/**
 * Load a group of plugins.
 * @param {object} Vue
 * @param {object} Plugin definitions
 */


exports.pluginFactory = pluginFactory;

var registerPlugins = function registerPlugins(Vue) {
  var plugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  for (var plugin in plugins) {
    if (plugin && plugins[plugin]) {
      Vue.use(plugins[plugin]);
    }
  }
};
/**
 * Load a component.
 * @param {object} Vue
 * @param {string} Component name
 * @param {object} Component definition
 */


exports.registerPlugins = registerPlugins;

var registerComponent = function registerComponent(Vue, name, def) {
  if (Vue && name && def) {
    Vue.component(name, def);
  }
};
/**
 * Load a group of components.
 * @param {object} Vue
 * @param {object} Object of component definitions
 */


exports.registerComponent = registerComponent;

var registerComponents = function registerComponents(Vue) {
  var components = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  for (var component in components) {
    registerComponent(Vue, component, components[component]);
  }
};
/**
 * Load a directive.
 * @param {object} Vue
 * @param {string} Directive name
 * @param {object} Directive definition
 */


exports.registerComponents = registerComponents;

var registerDirective = function registerDirective(Vue, name, def) {
  if (Vue && name && def) {
    // Ensure that any leading V is removed from the
    // name, as Vue adds it automatically
    Vue.directive(name.replace(/^VB/, 'B'), def);
  }
};
/**
 * Load a group of directives.
 * @param {object} Vue
 * @param {object} Object of directive definitions
 */


exports.registerDirective = registerDirective;

var registerDirectives = function registerDirectives(Vue) {
  var directives = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  for (var directive in directives) {
    registerDirective(Vue, directive, directives[directive]);
  }
};
/**
 * Install plugin if window.Vue available
 * @param {object} Plugin definition
 */


exports.registerDirectives = registerDirectives;

var vueUse = function vueUse(VuePlugin) {
  /* istanbul ignore next */
  if (_env.hasWindowSupport && window.Vue) {
    window.Vue.use(VuePlugin);
  }
  /* istanbul ignore next */


  if (_env.hasWindowSupport && VuePlugin.NAME) {
    window[VuePlugin.NAME] = VuePlugin;
  }
};

exports.vueUse = vueUse;
},{"./vue":"node_modules/bootstrap-vue/esm/utils/vue.js","./warn":"node_modules/bootstrap-vue/esm/utils/warn.js","./config-set":"node_modules/bootstrap-vue/esm/utils/config-set.js","./env":"node_modules/bootstrap-vue/esm/utils/env.js"}],"node_modules/bootstrap-vue/esm/utils/memoize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _object = require("./object");

var memoize = function memoize(fn) {
  var cache = (0, _object.create)(null);
  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var argsKey = JSON.stringify(args);
    return cache[argsKey] = cache[argsKey] || fn.apply(null, args);
  };
};

var _default = memoize;
exports.default = _default;
},{"./object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/utils/config.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBreakpointsDownCached = exports.getBreakpointsDown = exports.getBreakpointsUpCached = exports.getBreakpointsUp = exports.getBreakpointsCached = exports.getBreakpoints = exports.getComponentConfig = exports.getConfigValue = exports.getConfig = void 0;

var _vue = _interopRequireDefault(require("./vue"));

var _cloneDeep = _interopRequireDefault(require("./clone-deep"));

var _get = _interopRequireDefault(require("./get"));

var _memoize = _interopRequireDefault(require("./memoize"));

var _configDefaults = _interopRequireDefault(require("./config-defaults"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// --- Constants ---
var PROP_NAME = '$bvConfig';
var VueProto = _vue.default.prototype; // --- Getter methods ---
// All methods return a deep clone (immutable) copy of the config
// value, to prevent mutation of the user config object.
// Get the current user config. For testing purposes only

var getConfig = function getConfig() {
  return VueProto[PROP_NAME] ? VueProto[PROP_NAME].getConfig() : {};
}; // Method to grab a config value based on a dotted/array notation key


exports.getConfig = getConfig;

var getConfigValue = function getConfigValue(key) {
  return VueProto[PROP_NAME] ? VueProto[PROP_NAME].getConfigValue(key) : (0, _cloneDeep.default)((0, _get.default)(_configDefaults.default, key));
}; // Method to grab a config value for a particular component


exports.getConfigValue = getConfigValue;

var getComponentConfig = function getComponentConfig(cmpName) {
  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // Return the particular config value for key for if specified,
  // otherwise we return the full config (or an empty object if not found)

  return key ? getConfigValue("".concat(cmpName, ".").concat(key)) : getConfigValue(cmpName) || {};
}; // Convenience method for getting all breakpoint names


exports.getComponentConfig = getComponentConfig;

var getBreakpoints = function getBreakpoints() {
  return getConfigValue('breakpoints');
}; // Private function for caching / locking-in breakpoint names


exports.getBreakpoints = getBreakpoints;

var _getBreakpointsCached = (0, _memoize.default)(function () {
  return getBreakpoints();
}); // Convenience method for getting all breakpoint names.
// Caches the results after first access.


var getBreakpointsCached = function getBreakpointsCached() {
  return (0, _cloneDeep.default)(_getBreakpointsCached());
}; // Convenience method for getting breakpoints with
// the smallest breakpoint set as ''.
// Useful for components that create breakpoint specific props.


exports.getBreakpointsCached = getBreakpointsCached;

var getBreakpointsUp = function getBreakpointsUp() {
  var breakpoints = getBreakpoints();
  breakpoints[0] = '';
  return breakpoints;
}; // Convenience method for getting breakpoints with
// the smallest breakpoint set as ''.
// Useful for components that create breakpoint specific props.
// Caches the results after first access.


exports.getBreakpointsUp = getBreakpointsUp;
var getBreakpointsUpCached = (0, _memoize.default)(function () {
  var breakpoints = getBreakpointsCached();
  breakpoints[0] = '';
  return breakpoints;
}); // Convenience method for getting breakpoints with
// the largest breakpoint set as ''.
// Useful for components that create breakpoint specific props.

exports.getBreakpointsUpCached = getBreakpointsUpCached;

var getBreakpointsDown = function getBreakpointsDown() {
  var breakpoints = getBreakpoints();
  breakpoints[breakpoints.length - 1] = '';
  return breakpoints;
}; // Convenience method for getting breakpoints with
// the largest breakpoint set as ''.
// Useful for components that create breakpoint specific props.
// Caches the results after first access.

/* istanbul ignore next: we don't use this method anywhere, yet */


exports.getBreakpointsDown = getBreakpointsDown;

var getBreakpointsDownCached = function getBreakpointsDownCached()
/* istanbul ignore next */
{
  var breakpoints = getBreakpointsCached();
  breakpoints[breakpoints.length - 1] = '';
  return breakpoints;
};

exports.getBreakpointsDownCached = getBreakpointsDownCached;
},{"./vue":"node_modules/bootstrap-vue/esm/utils/vue.js","./clone-deep":"node_modules/bootstrap-vue/esm/utils/clone-deep.js","./get":"node_modules/bootstrap-vue/esm/utils/get.js","./memoize":"node_modules/bootstrap-vue/esm/utils/memoize.js","./config-defaults":"node_modules/bootstrap-vue/esm/utils/config-defaults.js"}],"node_modules/bootstrap-vue/esm/utils/dom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.position = exports.offset = exports.getSel = exports.getCS = exports.getBCR = exports.hasAttr = exports.getAttr = exports.removeAttr = exports.setAttr = exports.hasClass = exports.removeClass = exports.addClass = exports.getById = exports.contains = exports.closest = exports.matches = exports.select = exports.selectAll = exports.reflow = exports.isDisabled = exports.isVisible = exports.isElement = exports.eventOff = exports.eventOn = exports.parseEventOptions = exports.MutationObs = exports.requestAF = exports.closestEl = exports.matchesEl = void 0;

var _array = require("./array");

var _env = require("./env");

var _inspect = require("../utils/inspect");

// --- Constants ---
var w = _env.hasWindowSupport ? window : {};
var d = _env.hasDocumentSupport ? document : {};
var elProto = typeof Element !== 'undefined' ? Element.prototype : {}; // --- Normalization utils ---
// See: https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill

/* istanbul ignore next */

var matchesEl = elProto.matches || elProto.msMatchesSelector || elProto.webkitMatchesSelector; // See: https://developer.mozilla.org/en-US/docs/Web/API/Element/closest

/* istanbul ignore next */

exports.matchesEl = matchesEl;

var closestEl = elProto.closest || function (sel)
/* istanbul ignore next */
{
  var el = this;

  do {
    // Use our "patched" matches function
    if (matches(el, sel)) {
      return el;
    }

    el = el.parentElement || el.parentNode;
  } while (!(0, _inspect.isNull)(el) && el.nodeType === Node.ELEMENT_NODE);

  return null;
}; // `requestAnimationFrame()` convenience method


exports.closestEl = closestEl;

var requestAF = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.mozRequestAnimationFrame || w.msRequestAnimationFrame || w.oRequestAnimationFrame || // Fallback, but not a true polyfill
// Only needed for Opera Mini

/* istanbul ignore next */
function (cb) {
  return setTimeout(cb, 16);
};

exports.requestAF = requestAF;
var MutationObs = w.MutationObserver || w.WebKitMutationObserver || w.MozMutationObserver || null; // --- Utils ---
// Normalize event options based on support of passive option
// Exported only for testing purposes

exports.MutationObs = MutationObs;

var parseEventOptions = function parseEventOptions(options) {
  /* istanbul ignore else: can't test in JSDOM, as it supports passive */
  if (_env.hasPassiveEventSupport) {
    return (0, _inspect.isObject)(options) ? options : {
      useCapture: Boolean(options || false)
    };
  } else {
    // Need to translate to actual Boolean value
    return Boolean((0, _inspect.isObject)(options) ? options.useCapture : options);
  }
}; // Attach an event listener to an element


exports.parseEventOptions = parseEventOptions;

var eventOn = function eventOn(el, evtName, handler, options) {
  if (el && el.addEventListener) {
    el.addEventListener(evtName, handler, parseEventOptions(options));
  }
}; // Remove an event listener from an element


exports.eventOn = eventOn;

var eventOff = function eventOff(el, evtName, handler, options) {
  if (el && el.removeEventListener) {
    el.removeEventListener(evtName, handler, parseEventOptions(options));
  }
}; // Determine if an element is an HTML Element


exports.eventOff = eventOff;

var isElement = function isElement(el) {
  return Boolean(el && el.nodeType === Node.ELEMENT_NODE);
}; // Determine if an HTML element is visible - Faster than CSS check


exports.isElement = isElement;

var isVisible = function isVisible(el) {
  if (!isElement(el) || !contains(d.body, el)) {
    return false;
  }

  if (el.style.display === 'none') {
    // We do this check to help with vue-test-utils when using v-show

    /* istanbul ignore next */
    return false;
  } // All browsers support getBoundingClientRect(), except JSDOM as it returns all 0's for values :(
  // So any tests that need isVisible will fail in JSDOM
  // Except when we override the getBCR prototype in some tests


  var bcr = getBCR(el);
  return Boolean(bcr && bcr.height > 0 && bcr.width > 0);
}; // Determine if an element is disabled


exports.isVisible = isVisible;

var isDisabled = function isDisabled(el) {
  return !isElement(el) || el.disabled || Boolean(getAttr(el, 'disabled')) || hasClass(el, 'disabled');
}; // Cause/wait-for an element to reflow it's content (adjusting it's height/width)


exports.isDisabled = isDisabled;

var reflow = function reflow(el) {
  // Requesting an elements offsetHight will trigger a reflow of the element content

  /* istanbul ignore next: reflow doesn't happen in JSDOM */
  return isElement(el) && el.offsetHeight;
}; // Select all elements matching selector. Returns `[]` if none found


exports.reflow = reflow;

var selectAll = function selectAll(selector, root) {
  return (0, _array.from)((isElement(root) ? root : d).querySelectorAll(selector));
}; // Select a single element, returns `null` if not found


exports.selectAll = selectAll;

var select = function select(selector, root) {
  return (isElement(root) ? root : d).querySelector(selector) || null;
}; // Determine if an element matches a selector


exports.select = select;

var matches = function matches(el, selector) {
  if (!isElement(el)) {
    return false;
  }

  return matchesEl.call(el, selector);
}; // Finds closest element matching selector. Returns `null` if not found


exports.matches = matches;

var closest = function closest(selector, root) {
  var includeRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (!isElement(root)) {
    return null;
  }

  var el = closestEl.call(root, selector); // Native closest behaviour when `includeRoot` is truthy,
  // else emulate jQuery closest and return `null` if match is
  // the passed in root element when `includeRoot` is falsey

  return includeRoot ? el : el === root ? null : el;
}; // Returns true if the parent element contains the child element


exports.closest = closest;

var contains = function contains(parent, child) {
  if (!parent || !(0, _inspect.isFunction)(parent.contains)) {
    return false;
  }

  return parent.contains(child);
}; // Get an element given an ID


exports.contains = contains;

var getById = function getById(id) {
  return d.getElementById(/^#/.test(id) ? id.slice(1) : id) || null;
}; // Add a class to an element


exports.getById = getById;

var addClass = function addClass(el, className) {
  // We are checking for `el.classList` existence here since IE 11
  // returns `undefined` for some elements (e.g. SVG elements)
  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2713
  if (className && isElement(el) && el.classList) {
    el.classList.add(className);
  }
}; // Remove a class from an element


exports.addClass = addClass;

var removeClass = function removeClass(el, className) {
  // We are checking for `el.classList` existence here since IE 11
  // returns `undefined` for some elements (e.g. SVG elements)
  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2713
  if (className && isElement(el) && el.classList) {
    el.classList.remove(className);
  }
}; // Test if an element has a class


exports.removeClass = removeClass;

var hasClass = function hasClass(el, className) {
  // We are checking for `el.classList` existence here since IE 11
  // returns `undefined` for some elements (e.g. SVG elements)
  // See https://github.com/bootstrap-vue/bootstrap-vue/issues/2713
  if (className && isElement(el) && el.classList) {
    return el.classList.contains(className);
  }

  return false;
}; // Set an attribute on an element


exports.hasClass = hasClass;

var setAttr = function setAttr(el, attr, val) {
  if (attr && isElement(el)) {
    el.setAttribute(attr, val);
  }
}; // Remove an attribute from an element


exports.setAttr = setAttr;

var removeAttr = function removeAttr(el, attr) {
  if (attr && isElement(el)) {
    el.removeAttribute(attr);
  }
}; // Get an attribute value from an element
// Returns `null` if not found


exports.removeAttr = removeAttr;

var getAttr = function getAttr(el, attr) {
  return attr && isElement(el) ? el.getAttribute(attr) : null;
}; // Determine if an attribute exists on an element
// Returns `true` or `false`, or `null` if element not found


exports.getAttr = getAttr;

var hasAttr = function hasAttr(el, attr) {
  return attr && isElement(el) ? el.hasAttribute(attr) : null;
}; // Return the Bounding Client Rect of an element
// Returns `null` if not an element

/* istanbul ignore next: getBoundingClientRect() doesn't work in JSDOM */


exports.hasAttr = hasAttr;

var getBCR = function getBCR(el) {
  return isElement(el) ? el.getBoundingClientRect() : null;
}; // Get computed style object for an element

/* istanbul ignore next: getComputedStyle() doesn't work in JSDOM */


exports.getBCR = getBCR;

var getCS = function getCS(el) {
  return _env.hasWindowSupport && isElement(el) ? w.getComputedStyle(el) : {};
}; // Returns a `Selection` object representing the range of text selected
// Returns `null` if no window support is given

/* istanbul ignore next: getSelection() doesn't work in JSDOM */


exports.getCS = getCS;

var getSel = function getSel() {
  return _env.hasWindowSupport && w.getSelection ? w.getSelection() : null;
}; // Return an element's offset with respect to document element
// https://j11y.io/jquery/#v=git&fn=jQuery.fn.offset


exports.getSel = getSel;

var offset = function offset(el)
/* istanbul ignore next: getBoundingClientRect(), getClientRects() doesn't work in JSDOM */
{
  var _offset = {
    top: 0,
    left: 0
  };

  if (!isElement(el) || el.getClientRects().length === 0) {
    return _offset;
  }

  var bcr = getBCR(el);

  if (bcr) {
    var win = el.ownerDocument.defaultView;
    _offset.top = bcr.top + win.pageYOffset;
    _offset.left = bcr.left + win.pageXOffset;
  }

  return _offset;
}; // Return an element's offset with respect to to it's offsetParent
// https://j11y.io/jquery/#v=git&fn=jQuery.fn.position


exports.offset = offset;

var position = function position(el)
/* istanbul ignore next: getBoundingClientRect() doesn't work in JSDOM */
{
  var _offset = {
    top: 0,
    left: 0
  };

  if (!isElement(el)) {
    return _offset;
  }

  var parentOffset = {
    top: 0,
    left: 0
  };
  var elStyles = getCS(el);

  if (elStyles.position === 'fixed') {
    _offset = getBCR(el) || _offset;
  } else {
    _offset = offset(el);
    var doc = el.ownerDocument;
    var offsetParent = el.offsetParent || doc.documentElement;

    while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && getCS(offsetParent).position === 'static') {
      offsetParent = offsetParent.parentNode;
    }

    if (offsetParent && offsetParent !== el && offsetParent.nodeType === Node.ELEMENT_NODE) {
      parentOffset = offset(offsetParent);
      var offsetParentStyles = getCS(offsetParent);
      parentOffset.top += parseFloat(offsetParentStyles.borderTopWidth);
      parentOffset.left += parseFloat(offsetParentStyles.borderLeftWidth);
    }
  }

  return {
    top: _offset.top - parentOffset.top - parseFloat(elStyles.marginTop),
    left: _offset.left - parentOffset.left - parseFloat(elStyles.marginLeft)
  };
};

exports.position = position;
},{"./array":"node_modules/bootstrap-vue/esm/utils/array.js","./env":"node_modules/bootstrap-vue/esm/utils/env.js","../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/vue-functional-data-merge/dist/lib.esm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeData = a;

var e = function () {
  return (e = Object.assign || function (e) {
    for (var t, r = 1, s = arguments.length; r < s; r++) for (var a in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);

    return e;
  }).apply(this, arguments);
},
    t = {
  kebab: /-(\w)/g,
  styleProp: /:(.*)/,
  styleList: /;(?![^(]*\))/g
};

function r(e, t) {
  return t ? t.toUpperCase() : "";
}

function s(e) {
  for (var s, a = {}, c = 0, o = e.split(t.styleList); c < o.length; c++) {
    var n = o[c].split(t.styleProp),
        i = n[0],
        l = n[1];
    (i = i.trim()) && ("string" == typeof l && (l = l.trim()), a[(s = i, s.replace(t.kebab, r))] = l);
  }

  return a;
}

function a() {
  for (var t, r, a = {}, c = arguments.length; c--;) for (var o = 0, n = Object.keys(arguments[c]); o < n.length; o++) switch (t = n[o]) {
    case "class":
    case "style":
    case "directives":
      if (Array.isArray(a[t]) || (a[t] = []), "style" === t) {
        var i = void 0;
        i = Array.isArray(arguments[c].style) ? arguments[c].style : [arguments[c].style];

        for (var l = 0; l < i.length; l++) {
          var y = i[l];
          "string" == typeof y && (i[l] = s(y));
        }

        arguments[c].style = i;
      }

      a[t] = a[t].concat(arguments[c][t]);
      break;

    case "staticClass":
      if (!arguments[c][t]) break;
      void 0 === a[t] && (a[t] = ""), a[t] && (a[t] += " "), a[t] += arguments[c][t].trim();
      break;

    case "on":
    case "nativeOn":
      a[t] || (a[t] = {});

      for (var p = 0, f = Object.keys(arguments[c][t] || {}); p < f.length; p++) r = f[p], a[t][r] ? a[t][r] = [].concat(a[t][r], arguments[c][t][r]) : a[t][r] = arguments[c][t][r];

      break;

    case "attrs":
    case "props":
    case "domProps":
    case "scopedSlots":
    case "staticStyle":
    case "hook":
    case "transition":
      a[t] || (a[t] = {}), a[t] = e({}, arguments[c][t], a[t]);
      break;

    case "slot":
    case "key":
    case "ref":
    case "tag":
    case "show":
    case "keepAlive":
    default:
      a[t] || (a[t] = arguments[c][t]);
  }

  return a;
}
},{}],"node_modules/bootstrap-vue/esm/utils/bv-transition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BVTransition = void 0;

var _vue = _interopRequireDefault(require("./vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _inspect = require("./inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // Generic Bootstrap v4 fade (no-fade) transition component
//
// Assumes that `show` class is not required when
// the transition has finished the enter transition
// (show and fade classes are only applied during transition)


var NO_FADE_PROPS = {
  name: '',
  enterClass: '',
  enterActiveClass: '',
  enterToClass: 'show',
  leaveClass: 'show',
  leaveActiveClass: '',
  leaveToClass: ''
};

var FADE_PROPS = _objectSpread({}, NO_FADE_PROPS, {
  enterActiveClass: 'fade',
  leaveActiveClass: 'fade'
});

var BVTransition =
/*#__PURE__*/
_vue.default.extend({
  name: 'BVTransition',
  functional: true,
  props: {
    noFade: {
      // Only applicable to the built in transition
      // Has no effect if `trans-props` provided
      type: Boolean,
      default: false
    },
    appear: {
      // Has no effect if `trans-props` provided
      type: Boolean,
      default: false
    },
    mode: {
      // Can be overridden by user supplied trans-props
      type: String // default: undefined

    },
    // For user supplied transitions (if needed)
    transProps: {
      type: Object,
      default: null
    }
  },
  render: function render(h, _ref) {
    var children = _ref.children,
        data = _ref.data,
        listeners = _ref.listeners,
        props = _ref.props;
    var transProps = props.transProps;

    if (!(0, _inspect.isPlainObject)(transProps)) {
      transProps = props.noFade ? NO_FADE_PROPS : FADE_PROPS;

      if (props.appear) {
        // Default the appear classes to equal the enter classes
        transProps = _objectSpread({}, transProps, {
          appear: true,
          appearClass: transProps.enterClass,
          appearActiveClass: transProps.enterActiveClass,
          appearToClass: transProps.enterToClass
        });
      }
    }

    transProps = _objectSpread({
      mode: props.mode
    }, transProps, {
      // We always need `css` true
      css: true
    });
    return h('transition', // Any transition event listeners will get merged here
    (0, _vueFunctionalDataMerge.mergeData)(data, {
      props: transProps
    }), children);
  }
});

exports.BVTransition = BVTransition;
var _default = BVTransition;
exports.default = _default;
},{"./vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/utils/normalize-slot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.normalizeSlot = exports.hasNormalizedSlot = void 0;

var _array = require("./array");

var _inspect = require("./inspect");

// Note for functional components:
// In functional components, `slots` is a function so it must be called
// first before passing to the below methods. `scopedSlots` is always an
// object and may be undefined (for Vue < 2.6.x)

/**
 * Returns true if either scoped or unscoped named slot exists
 *
 * @param {String, Array} name or name[]
 * @param {Object} scopedSlots
 * @param {Object} slots
 * @returns {Array|undefined} VNodes
 */
var hasNormalizedSlot = function hasNormalizedSlot(names) {
  var $scopedSlots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var $slots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}; // Ensure names is an array

  names = (0, _array.concat)(names).filter(Boolean); // Returns true if the either a $scopedSlot or $slot exists with the specified name

  return names.some(function (name) {
    return $scopedSlots[name] || $slots[name];
  });
};
/**
 * Returns VNodes for named slot either scoped or unscoped
 *
 * @param {String, Array} name or name[]
 * @param {String} scope
 * @param {Object} scopedSlots
 * @param {Object} slots
 * @returns {Array|undefined} VNodes
 */


exports.hasNormalizedSlot = hasNormalizedSlot;

var normalizeSlot = function normalizeSlot(names) {
  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var $scopedSlots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var $slots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {}; // Ensure names is an array

  names = (0, _array.concat)(names).filter(Boolean);
  var slot;

  for (var i = 0; i < names.length && !slot; i++) {
    var name = names[i];
    slot = $scopedSlots[name] || $slots[name];
  } // Note: in Vue 2.6.x, all named slots are also scoped slots


  return (0, _inspect.isFunction)(slot) ? slot(scope) : slot;
}; // Named exports


exports.normalizeSlot = normalizeSlot;
// Default export (backwards compatibility)
var _default = normalizeSlot;
exports.default = _default;
},{"./array":"node_modules/bootstrap-vue/esm/utils/array.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _normalizeSlot2 = require("../utils/normalize-slot");

var _array = require("../utils/array");

var _default = {
  methods: {
    hasNormalizedSlot: function hasNormalizedSlot(names) {
      // Returns true if the either a $scopedSlot or $slot exists with the specified name
      // `names` can be a string name or an array of names
      return (0, _normalizeSlot2.hasNormalizedSlot)(names, this.$scopedSlots, this.$slots);
    },
    normalizeSlot: function normalizeSlot(names) {
      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Returns an array of rendered VNodes if slot found.
      // Returns undefined if not found.
      // `names` can be a string name or an array of names

      var vNodes = (0, _normalizeSlot2.normalizeSlot)(names, scope, this.$scopedSlots, this.$slots);
      return vNodes ? (0, _array.concat)(vNodes) : vNodes;
    }
  }
};
exports.default = _default;
},{"../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js","../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js"}],"node_modules/bootstrap-vue/esm/components/button/button-close.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BButtonClose = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _inspect = require("../../utils/inspect");

var _normalizeSlot = require("../../utils/normalize-slot");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BButtonClose';
var props = {
  disabled: {
    type: Boolean,
    default: false
  },
  ariaLabel: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'ariaLabel');
    }
  },
  textVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'textVariant');
    }
  }
}; // @vue/component

var BButtonClose =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        listeners = _ref.listeners,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots;
    var $slots = slots();
    var $scopedSlots = scopedSlots || {};
    var componentData = {
      staticClass: 'close',
      class: _defineProperty({}, "text-".concat(props.textVariant), props.textVariant),
      attrs: {
        type: 'button',
        disabled: props.disabled,
        'aria-label': props.ariaLabel ? String(props.ariaLabel) : null
      },
      on: {
        click: function click(evt) {
          // Ensure click on button HTML content is also disabled

          /* istanbul ignore if: bug in JSDOM still emits click on inner element */
          if (props.disabled && (0, _inspect.isEvent)(evt)) {
            evt.stopPropagation();
            evt.preventDefault();
          }
        }
      }
    }; // Careful not to override the default slot with innerHTML

    if (!(0, _normalizeSlot.hasNormalizedSlot)('default', $scopedSlots, $slots)) {
      componentData.domProps = {
        innerHTML: '&times;'
      };
    }

    return h('button', (0, _vueFunctionalDataMerge.mergeData)(data, componentData), (0, _normalizeSlot.normalizeSlot)('default', {}, $scopedSlots, $slots));
  }
});

exports.BButtonClose = BButtonClose;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/alert/alert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BAlert = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

var _bvTransition = _interopRequireDefault(require("../../utils/bv-transition"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _buttonClose = require("../button/button-close");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BAlert'; // Convert `show` value to a number

var parseCountDown = function parseCountDown(show) {
  if (show === '' || (0, _inspect.isBoolean)(show)) {
    return 0;
  }

  show = parseInt(show, 10);
  return show > 0 ? show : 0;
}; // Convert `show` value to a boolean


var parseShow = function parseShow(show) {
  if (show === '' || show === true) {
    return true;
  }

  if (parseInt(show, 10) < 1) {
    // Boolean will always return false for the above comparison
    return false;
  }

  return Boolean(show);
}; // Is a value number like (i.e. a number or a number as string)


var isNumericLike = function isNumericLike(value) {
  return !isNaN(parseInt(value, 10));
}; // @vue/component


var BAlert =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_normalizeSlot.default],
  model: {
    prop: 'show',
    event: 'input'
  },
  props: {
    variant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'variant');
      }
    },
    dismissible: {
      type: Boolean,
      default: false
    },
    dismissLabel: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'dismissLabel');
      }
    },
    show: {
      type: [Boolean, Number, String],
      default: false
    },
    fade: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      countDownTimerId: null,
      countDown: 0,
      // If initially shown, we need to set these for SSR
      localShow: parseShow(this.show)
    };
  },
  watch: {
    show: function show(newVal) {
      this.countDown = parseCountDown(newVal);
      this.localShow = parseShow(newVal);
    },
    countDown: function countDown(newVal) {
      var _this = this;

      this.clearTimer();

      if (isNumericLike(this.show)) {
        // Ignore if this.show transitions to a boolean value.
        this.$emit('dismiss-count-down', newVal);

        if (this.show !== newVal) {
          // Update the v-model if needed
          this.$emit('input', newVal);
        }

        if (newVal > 0) {
          this.localShow = true;
          this.countDownTimerId = setTimeout(function () {
            _this.countDown--;
          }, 1000);
        } else {
          // Slightly delay the hide to allow any UI updates
          this.$nextTick(function () {
            (0, _dom.requestAF)(function () {
              _this.localShow = false;
            });
          });
        }
      }
    },
    localShow: function localShow(newVal) {
      if (!newVal && (this.dismissible || isNumericLike(this.show))) {
        // Only emit dismissed events for dismissible or auto dismissing alerts
        this.$emit('dismissed');
      }

      if (!isNumericLike(this.show) && this.show !== newVal) {
        // Only emit booleans if we weren't passed a number via `this.show`
        this.$emit('input', newVal);
      }
    }
  },
  created: function created() {
    this.countDown = parseCountDown(this.show);
    this.localShow = parseShow(this.show);
  },
  mounted: function mounted() {
    this.countDown = parseCountDown(this.show);
    this.localShow = parseShow(this.show);
  },
  beforeDestroy: function beforeDestroy() {
    this.clearTimer();
  },
  methods: {
    dismiss: function dismiss() {
      this.clearTimer();
      this.countDown = 0;
      this.localShow = false;
    },
    clearTimer: function clearTimer() {
      if (this.countDownTimerId) {
        clearInterval(this.countDownTimerId);
        this.countDownTimerId = null;
      }
    }
  },
  render: function render(h) {
    var $alert; // undefined

    if (this.localShow) {
      var $dismissBtn = h();

      if (this.dismissible) {
        // Add dismiss button
        $dismissBtn = h(_buttonClose.BButtonClose, {
          attrs: {
            'aria-label': this.dismissLabel
          },
          on: {
            click: this.dismiss
          }
        }, [this.normalizeSlot('dismiss')]);
      }

      $alert = h('div', {
        key: this._uid,
        staticClass: 'alert',
        class: _defineProperty({
          'alert-dismissible': this.dismissible
        }, "alert-".concat(this.variant), this.variant),
        attrs: {
          role: 'alert',
          'aria-live': 'polite',
          'aria-atomic': true
        }
      }, [$dismissBtn, this.normalizeSlot('default')]);
      $alert = [$alert];
    }

    return h(_bvTransition.default, {
      props: {
        noFade: !this.fade
      }
    }, $alert);
  }
});

exports.BAlert = BAlert;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/bv-transition":"node_modules/bootstrap-vue/esm/utils/bv-transition.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../button/button-close":"node_modules/bootstrap-vue/esm/components/button/button-close.js"}],"node_modules/bootstrap-vue/esm/components/alert/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BAlert", {
  enumerable: true,
  get: function () {
    return _alert.BAlert;
  }
});
exports.AlertPlugin = void 0;

var _alert = require("./alert");

var _plugins = require("../../utils/plugins");

var AlertPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BAlert: _alert.BAlert
  }
});
exports.AlertPlugin = AlertPlugin;
},{"./alert":"node_modules/bootstrap-vue/esm/components/alert/alert.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var identity = function identity(x) {
  return x;
};

var _default = identity;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/utils/pluck-props.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _identity = _interopRequireDefault(require("./identity"));

var _inspect = require("./inspect");

var _object = require("./object");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Given an array of properties or an object of property keys,
 * plucks all the values off the target object, returning a new object
 * that has props that reference the original prop values
 *
 * @param {{}|string[]} keysToPluck
 * @param {{}} objToPluck
 * @param {Function} transformFn
 * @return {{}}
 */
var pluckProps = function pluckProps(keysToPluck, objToPluck) {
  var transformFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _identity.default;
  return ((0, _inspect.isArray)(keysToPluck) ? keysToPluck.slice() : (0, _object.keys)(keysToPluck)).reduce(function (memo, prop) {
    memo[transformFn(prop)] = objToPluck[prop];
    return memo;
  }, {});
};

var _default = pluckProps;
exports.default = _default;
},{"./identity":"node_modules/bootstrap-vue/esm/utils/identity.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/utils/to-string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("./inspect");

/**
 * Convert a value to a string that can be rendered.
 */
var toString = function toString(val) {
  var spaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
  return (0, _inspect.isUndefinedOrNull)(val) ? '' : (0, _inspect.isArray)(val) || (0, _inspect.isPlainObject)(val) && val.toString === Object.prototype.toString ? JSON.stringify(val, null, spaces) : String(val);
};

var _default = toString;
exports.default = _default;
},{"./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/utils/router.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.computeHref = exports.computeRel = exports.computeTag = exports.isRouterLink = exports.parseQuery = exports.stringifyQueryObj = void 0;

var _toString = _interopRequireDefault(require("./to-string"));

var _inspect = require("./inspect");

var _object = require("./object");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ANCHOR_TAG = 'a'; // Precompile RegExp

var commaRE = /%2C/g;
var encodeReserveRE = /[!'()*]/g; // Method to replace reserved chars

var encodeReserveReplacer = function encodeReserveReplacer(c) {
  return '%' + c.charCodeAt(0).toString(16);
}; // Fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas


var encode = function encode(str) {
  return encodeURIComponent((0, _toString.default)(str)).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');
};

var decode = decodeURIComponent; // Stringifies an object of query parameters
// See: https://github.com/vuejs/vue-router/blob/dev/src/util/query.js

var stringifyQueryObj = function stringifyQueryObj(obj) {
  if (!(0, _inspect.isPlainObject)(obj)) {
    return '';
  }

  var query = (0, _object.keys)(obj).map(function (key) {
    var val = obj[key];

    if ((0, _inspect.isUndefined)(val)) {
      return '';
    } else if ((0, _inspect.isNull)(val)) {
      return encode(key);
    } else if ((0, _inspect.isArray)(val)) {
      return val.reduce(function (results, val2) {
        if ((0, _inspect.isNull)(val2)) {
          results.push(encode(key));
        } else if (!(0, _inspect.isUndefined)(val2)) {
          // Faster than string interpolation
          results.push(encode(key) + '=' + encode(val2));
        }

        return results;
      }, []).join('&');
    } // Faster than string interpolation


    return encode(key) + '=' + encode(val);
  })
  /* must check for length, as we only want to filter empty strings, not things that look falsey! */
  .filter(function (x) {
    return x.length > 0;
  }).join('&');
  return query ? "?".concat(query) : '';
};

exports.stringifyQueryObj = stringifyQueryObj;

var parseQuery = function parseQuery(query) {
  var parsed = {};
  query = (0, _toString.default)(query).trim().replace(/^(\?|#|&)/, '');

  if (!query) {
    return parsed;
  }

  query.split('&').forEach(function (param) {
    var parts = param.replace(/\+/g, ' ').split('=');
    var key = decode(parts.shift());
    var val = parts.length > 0 ? decode(parts.join('=')) : null;

    if ((0, _inspect.isUndefined)(parsed[key])) {
      parsed[key] = val;
    } else if ((0, _inspect.isArray)(parsed[key])) {
      parsed[key].push(val);
    } else {
      parsed[key] = [parsed[key], val];
    }
  });
  return parsed;
};

exports.parseQuery = parseQuery;

var isRouterLink = function isRouterLink(tag) {
  return (0, _toString.default)(tag).toLowerCase() !== ANCHOR_TAG;
};

exports.isRouterLink = isRouterLink;

var computeTag = function computeTag() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      to = _ref.to,
      disabled = _ref.disabled;

  var thisOrParent = arguments.length > 1 ? arguments[1] : undefined;
  return thisOrParent.$router && to && !disabled ? thisOrParent.$nuxt ? 'nuxt-link' : 'router-link' : ANCHOR_TAG;
};

exports.computeTag = computeTag;

var computeRel = function computeRel() {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      target = _ref2.target,
      rel = _ref2.rel;

  if (target === '_blank' && (0, _inspect.isNull)(rel)) {
    return 'noopener';
  }

  return rel || null;
};

exports.computeRel = computeRel;

var computeHref = function computeHref() {
  var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      href = _ref3.href,
      to = _ref3.to;

  var tag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ANCHOR_TAG;
  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '#';
  var toFallback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '/'; // We've already checked the $router in computeTag(), so isRouterLink() indicates a live router.
  // When deferring to Vue Router's router-link, don't use the href attribute at all.
  // We return null, and then remove href from the attributes passed to router-link

  if (isRouterLink(tag)) {
    return null;
  } // Return `href` when explicitly provided


  if (href) {
    return href;
  } // Reconstruct `href` when `to` used, but no router


  if (to) {
    // Fallback to `to` prop (if `to` is a string)
    if ((0, _inspect.isString)(to)) {
      return to || toFallback;
    } // Fallback to `to.path + to.query + to.hash` prop (if `to` is an object)


    if ((0, _inspect.isPlainObject)(to) && (to.path || to.query || to.hash)) {
      var path = (0, _toString.default)(to.path);
      var query = stringifyQueryObj(to.query);
      var hash = (0, _toString.default)(to.hash);
      hash = !hash || hash.charAt(0) === '#' ? hash : "#".concat(hash);
      return "".concat(path).concat(query).concat(hash) || toFallback;
    }
  } // If nothing is provided return the fallback


  return fallback;
};

exports.computeHref = computeHref;
},{"./to-string":"node_modules/bootstrap-vue/esm/utils/to-string.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/components/link/link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BLink = exports.props = exports.propsFactory = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _array = require("../../utils/array");

var _inspect = require("../../utils/inspect");

var _router = require("../../utils/router");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/**
 * The Link component is used in many other BV components.
 * As such, sharing its props makes supporting all its features easier.
 * However, some components need to modify the defaults for their own purpose.
 * Prefer sharing a fresh copy of the props to ensure mutations
 * do not affect other component references to the props.
 *
 * https://github.com/vuejs/vue-router/blob/dev/src/components/link.js
 * @return {{}}
 */
var propsFactory = function propsFactory() {
  return {
    href: {
      type: String,
      default: null
    },
    rel: {
      type: String,
      default: null
    },
    target: {
      type: String,
      default: '_self'
    },
    active: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    // router-link specific props
    to: {
      type: [String, Object],
      default: null
    },
    append: {
      type: Boolean,
      default: false
    },
    replace: {
      type: Boolean,
      default: false
    },
    event: {
      type: [String, Array],
      default: 'click'
    },
    activeClass: {
      type: String // default: undefined

    },
    exact: {
      type: Boolean,
      default: false
    },
    exactActiveClass: {
      type: String // default: undefined

    },
    routerTag: {
      type: String,
      default: 'a'
    },
    // nuxt-link specific prop(s)
    noPrefetch: {
      type: Boolean,
      default: false
    }
  };
};

exports.propsFactory = propsFactory;
var props = propsFactory(); // @vue/component

exports.props = props;

var BLink =
/*#__PURE__*/
_vue.default.extend({
  name: 'BLink',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  props: propsFactory(),
  computed: {
    computedTag: function computedTag() {
      // We don't pass `this` as the first arg as we need reactivity of the props
      return (0, _router.computeTag)({
        to: this.to,
        disabled: this.disabled
      }, this);
    },
    isRouterLink: function isRouterLink() {
      return (0, _router.isRouterLink)(this.computedTag);
    },
    computedRel: function computedRel() {
      // We don't pass `this` as the first arg as we need reactivity of the props
      return (0, _router.computeRel)({
        target: this.target,
        rel: this.rel
      });
    },
    computedHref: function computedHref() {
      // We don't pass `this` as the first arg as we need reactivity of the props
      return (0, _router.computeHref)({
        to: this.to,
        href: this.href
      }, this.computedTag);
    },
    computedProps: function computedProps() {
      return this.isRouterLink ? _objectSpread({}, this.$props, {
        tag: this.routerTag
      }) : {};
    }
  },
  methods: {
    onClick: function onClick(evt) {
      var _arguments = arguments;
      var evtIsEvent = (0, _inspect.isEvent)(evt);
      var isRouterLink = this.isRouterLink;
      var suppliedHandler = this.$listeners.click;

      if (evtIsEvent && this.disabled) {
        // Stop event from bubbling up
        evt.stopPropagation(); // Kill the event loop attached to this specific `EventTarget`
        // Needed to prevent `vue-router` for doing it's thing

        evt.stopImmediatePropagation();
      } else {
        /* istanbul ignore next: difficult to test, but we know it works */
        if (isRouterLink && evt.currentTarget.__vue__) {
          // Router links do not emit instance `click` events, so we
          // add in an $emit('click', evt) on it's vue instance
          evt.currentTarget.__vue__.$emit('click', evt);
        } // Call the suppliedHandler(s), if any provided


        (0, _array.concat)(suppliedHandler).filter(function (h) {
          return (0, _inspect.isFunction)(h);
        }).forEach(function (handler) {
          handler.apply(void 0, _toConsumableArray(_arguments));
        }); // Emit the global $root click event

        this.$root.$emit('clicked::link', evt);
      } // Stop scroll-to-top behavior or navigation on
      // regular links when href is just '#'


      if (evtIsEvent && (this.disabled || !isRouterLink && this.computedHref === '#')) {
        evt.preventDefault();
      }
    },
    focus: function focus() {
      if (this.$el && this.$el.focus) {
        this.$el.focus();
      }
    },
    blur: function blur() {
      if (this.$el && this.$el.blur) {
        this.$el.blur();
      }
    }
  },
  render: function render(h) {
    var tag = this.computedTag;
    var rel = this.computedRel;
    var href = this.computedHref;
    var isRouterLink = this.isRouterLink;
    var componentData = {
      class: {
        active: this.active,
        disabled: this.disabled
      },
      attrs: _objectSpread({}, this.$attrs, {
        rel: rel,
        target: this.target,
        tabindex: this.disabled ? '-1' : (0, _inspect.isUndefined)(this.$attrs.tabindex) ? null : this.$attrs.tabindex,
        'aria-disabled': this.disabled ? 'true' : null
      }),
      props: this.computedProps
    }; // Add the event handlers. We must use `navtiveOn` for
    // `<router-link>`/`<nuxt-link>` instead of `on`

    componentData[isRouterLink ? 'nativeOn' : 'on'] = _objectSpread({}, this.$listeners, {
      // We want to overwrite any click handler since our callback
      // will invoke the user supplied handler(s) if `!this.disabled`
      click: this.onClick
    }); // If href attribute exists on <router-link> (even undefined or null) it fails working on
    // SSR, so we explicitly add it here if needed (i.e. if computedHref() is truthy)

    if (href) {
      componentData.attrs.href = href;
    } else {
      // Ensure the prop HREF does not exist for router links
      delete componentData.props.href;
    }

    return h(tag, componentData, this.normalizeSlot('default'));
  }
});

exports.BLink = BLink;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/router":"node_modules/bootstrap-vue/esm/utils/router.js"}],"node_modules/bootstrap-vue/esm/components/badge/badge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BBadge = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BBadge';
var linkProps = (0, _link.propsFactory)();
delete linkProps.href.default;
delete linkProps.to.default;

var props = _objectSpread({}, linkProps, {
  tag: {
    type: String,
    default: 'span'
  },
  variant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'variant');
    }
  },
  pill: {
    type: Boolean,
    default: false
  }
}); // @vue/component


exports.props = props;

var BBadge =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var tag = !props.href && !props.to ? props.tag : _link.BLink;
    var componentData = {
      staticClass: 'badge',
      class: [props.variant ? "badge-".concat(props.variant) : 'badge-secondary', {
        'badge-pill': Boolean(props.pill),
        active: props.active,
        disabled: props.disabled
      }],
      props: (0, _pluckProps.default)(linkProps, props)
    };
    return h(tag, (0, _vueFunctionalDataMerge.mergeData)(data, componentData), children);
  }
});

exports.BBadge = BBadge;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/badge/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BBadge", {
  enumerable: true,
  get: function () {
    return _badge.BBadge;
  }
});
exports.BadgePlugin = void 0;

var _badge = require("./badge");

var _plugins = require("../../utils/plugins");

var BadgePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BBadge: _badge.BBadge
  }
});
exports.BadgePlugin = BadgePlugin;
},{"./badge":"node_modules/bootstrap-vue/esm/components/badge/badge.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/html.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.htmlOrText = exports.stripTags = void 0;
var stripTagsRegex = /(<([^>]+)>)/gi; // Removes any thing that looks like an HTML tag from the supplied string

var stripTags = function stripTags() {
  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return String(text).replace(stripTagsRegex, '');
}; // Generate a domProps object for either innerHTML, textContent or nothing


exports.stripTags = stripTags;

var htmlOrText = function htmlOrText(innerHTML, textContent) {
  return innerHTML ? {
    innerHTML: innerHTML
  } : textContent ? {
    textContent: textContent
  } : {};
};

exports.htmlOrText = htmlOrText;
},{}],"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BBreadcrumbLink = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _html = require("../../utils/html");

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = _objectSpread({}, (0, _link.propsFactory)(), {
  text: {
    type: String,
    default: null
  },
  html: {
    type: String,
    default: null
  },
  ariaCurrent: {
    type: String,
    default: 'location'
  }
}); // @vue/component


exports.props = props;

var BBreadcrumbLink =
/*#__PURE__*/
_vue.default.extend({
  name: 'BBreadcrumbLink',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var suppliedProps = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var tag = suppliedProps.active ? 'span' : _link.BLink;
    var componentData = {
      props: (0, _pluckProps.default)(props, suppliedProps)
    };

    if (suppliedProps.active) {
      componentData.attrs = {
        'aria-current': suppliedProps.ariaCurrent
      };
    }

    if (!children) {
      componentData.domProps = (0, _html.htmlOrText)(suppliedProps.html, suppliedProps.text);
    }

    return h(tag, (0, _vueFunctionalDataMerge.mergeData)(data, componentData), children);
  }
});

exports.BBreadcrumbLink = BBreadcrumbLink;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-item.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BBreadcrumbItem = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _breadcrumbLink = require("./breadcrumb-link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @vue/component
var BBreadcrumbItem =
/*#__PURE__*/
_vue.default.extend({
  name: 'BBreadcrumbItem',
  functional: true,
  props: _breadcrumbLink.props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'breadcrumb-item',
      class: {
        active: props.active
      }
    }), [h(_breadcrumbLink.BBreadcrumbLink, {
      props: props
    }, children)]);
  }
});

exports.BBreadcrumbItem = BBreadcrumbItem;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","./breadcrumb-link":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-link.js"}],"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BBreadcrumb = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _toString = _interopRequireDefault(require("../../utils/to-string"));

var _inspect = require("../../utils/inspect");

var _breadcrumbItem = require("./breadcrumb-item");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  items: {
    type: Array,
    default: null
  }
}; // @vue/component

exports.props = props;

var BBreadcrumb =
/*#__PURE__*/
_vue.default.extend({
  name: 'BBreadcrumb',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var childNodes = children; // Build child nodes from items if given.

    if ((0, _inspect.isArray)(props.items)) {
      var activeDefined = false;
      childNodes = props.items.map(function (item, idx) {
        if (!(0, _inspect.isObject)(item)) {
          item = {
            text: (0, _toString.default)(item)
          };
        } // Copy the value here so we can normalize it.


        var active = item.active;

        if (active) {
          activeDefined = true;
        }

        if (!active && !activeDefined) {
          // Auto-detect active by position in list.
          active = idx + 1 === props.items.length;
        }

        return h(_breadcrumbItem.BBreadcrumbItem, {
          props: _objectSpread({}, item, {
            active: active
          })
        });
      });
    }

    return h('ol', (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'breadcrumb'
    }), childNodes);
  }
});

exports.BBreadcrumb = BBreadcrumb;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/to-string":"node_modules/bootstrap-vue/esm/utils/to-string.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./breadcrumb-item":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-item.js"}],"node_modules/bootstrap-vue/esm/components/breadcrumb/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BBreadcrumb", {
  enumerable: true,
  get: function () {
    return _breadcrumb.BBreadcrumb;
  }
});
Object.defineProperty(exports, "BBreadcrumbItem", {
  enumerable: true,
  get: function () {
    return _breadcrumbItem.BBreadcrumbItem;
  }
});
Object.defineProperty(exports, "BBreadcrumbLink", {
  enumerable: true,
  get: function () {
    return _breadcrumbLink.BBreadcrumbLink;
  }
});
exports.BreadcrumbPlugin = void 0;

var _breadcrumb = require("./breadcrumb");

var _breadcrumbItem = require("./breadcrumb-item");

var _breadcrumbLink = require("./breadcrumb-link");

var _plugins = require("../../utils/plugins");

var BreadcrumbPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BBreadcrumb: _breadcrumb.BBreadcrumb,
    BBreadcrumbItem: _breadcrumbItem.BBreadcrumbItem,
    BBreadcrumbLink: _breadcrumbLink.BBreadcrumbLink
  }
});
exports.BreadcrumbPlugin = BreadcrumbPlugin;
},{"./breadcrumb":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb.js","./breadcrumb-item":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-item.js","./breadcrumb-link":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-link.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/button/button.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BButton = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// --- Constants --
var NAME = 'BButton';
var btnProps = {
  block: {
    type: Boolean,
    default: false
  },
  disabled: {
    type: Boolean,
    default: false
  },
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'size');
    }
  },
  variant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'variant');
    }
  },
  type: {
    type: String,
    default: 'button'
  },
  tag: {
    type: String,
    default: 'button'
  },
  pill: {
    type: Boolean,
    default: false
  },
  squared: {
    type: Boolean,
    default: false
  },
  pressed: {
    // tri-state prop: true, false or null
    // => on, off, not a toggle
    type: Boolean,
    default: null
  }
};
var linkProps = (0, _link.propsFactory)();
delete linkProps.href.default;
delete linkProps.to.default;
var linkPropKeys = (0, _object.keys)(linkProps);

var props = _objectSpread({}, linkProps, {}, btnProps); // --- Helper methods ---
// Focus handler for toggle buttons.  Needs class of 'focus' when focused.


exports.props = props;

var handleFocus = function handleFocus(evt) {
  if (evt.type === 'focusin') {
    (0, _dom.addClass)(evt.target, 'focus');
  } else if (evt.type === 'focusout') {
    (0, _dom.removeClass)(evt.target, 'focus');
  }
}; // Is the requested button a link?


var isLink = function isLink(props) {
  // If tag prop is set to `a`, we use a b-link to get proper disabled handling
  return Boolean(props.href || props.to || props.tag && String(props.tag).toLowerCase() === 'a');
}; // Is the button to be a toggle button?


var isToggle = function isToggle(props) {
  return (0, _inspect.isBoolean)(props.pressed);
}; // Is the button "really" a button?


var isButton = function isButton(props) {
  if (isLink(props)) {
    return false;
  } else if (props.tag && String(props.tag).toLowerCase() !== 'button') {
    return false;
  }

  return true;
}; // Is the requested tag not a button or link?


var isNonStandardTag = function isNonStandardTag(props) {
  return !isLink(props) && !isButton(props);
}; // Compute required classes (non static classes)


var computeClass = function computeClass(props) {
  var _ref;

  return ["btn-".concat(props.variant || (0, _config.getComponentConfig)(NAME, 'variant')), (_ref = {}, _defineProperty(_ref, "btn-".concat(props.size), Boolean(props.size)), _defineProperty(_ref, 'btn-block', props.block), _defineProperty(_ref, 'rounded-pill', props.pill), _defineProperty(_ref, 'rounded-0', props.squared && !props.pill), _defineProperty(_ref, "disabled", props.disabled), _defineProperty(_ref, "active", props.pressed), _ref)];
}; // Compute the link props to pass to b-link (if required)


var computeLinkProps = function computeLinkProps(props) {
  return isLink(props) ? (0, _pluckProps.default)(linkPropKeys, props) : null;
}; // Compute the attributes for a button


var computeAttrs = function computeAttrs(props, data) {
  var button = isButton(props);
  var link = isLink(props);
  var toggle = isToggle(props);
  var nonStdTag = isNonStandardTag(props);
  var role = data.attrs && data.attrs.role ? data.attrs.role : null;
  var tabindex = data.attrs ? data.attrs.tabindex : null;

  if (nonStdTag) {
    tabindex = '0';
  }

  return {
    // Type only used for "real" buttons
    type: button && !link ? props.type : null,
    // Disabled only set on "real" buttons
    disabled: button ? props.disabled : null,
    // We add a role of button when the tag is not a link or button for ARIA.
    // Don't bork any role provided in data.attrs when isLink or isButton
    role: nonStdTag ? 'button' : role,
    // We set the aria-disabled state for non-standard tags
    'aria-disabled': nonStdTag ? String(props.disabled) : null,
    // For toggles, we need to set the pressed state for ARIA
    'aria-pressed': toggle ? String(props.pressed) : null,
    // autocomplete off is needed in toggle mode to prevent some browsers from
    // remembering the previous setting when using the back button.
    autocomplete: toggle ? 'off' : null,
    // Tab index is used when the component is not a button.
    // Links are tabbable, but don't allow disabled, while non buttons or links
    // are not tabbable, so we mimic that functionality by disabling tabbing
    // when disabled, and adding a tabindex of '0' to non buttons or non links.
    tabindex: props.disabled && !button ? '-1' : tabindex
  };
}; // @vue/component


var BButton =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref2) {
    var props = _ref2.props,
        data = _ref2.data,
        listeners = _ref2.listeners,
        children = _ref2.children;
    var toggle = isToggle(props);
    var link = isLink(props);
    var on = {
      click: function click(evt) {
        /* istanbul ignore if: blink/button disabled should handle this */
        if (props.disabled && (0, _inspect.isEvent)(evt)) {
          evt.stopPropagation();
          evt.preventDefault();
        } else if (toggle && listeners && listeners['update:pressed']) {
          // Send .sync updates to any "pressed" prop (if .sync listeners)
          // Concat will normalize the value to an array
          // without double wrapping an array value in an array.
          (0, _array.concat)(listeners['update:pressed']).forEach(function (fn) {
            if ((0, _inspect.isFunction)(fn)) {
              fn(!props.pressed);
            }
          });
        }
      }
    };

    if (toggle) {
      on.focusin = handleFocus;
      on.focusout = handleFocus;
    }

    var componentData = {
      staticClass: 'btn',
      class: computeClass(props),
      props: computeLinkProps(props),
      attrs: computeAttrs(props, data),
      on: on
    };
    return h(link ? _link.BLink : props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, componentData), children);
  }
});

exports.BButton = BButton;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/button/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BButton", {
  enumerable: true,
  get: function () {
    return _button.BButton;
  }
});
Object.defineProperty(exports, "BButtonClose", {
  enumerable: true,
  get: function () {
    return _buttonClose.BButtonClose;
  }
});
exports.ButtonPlugin = void 0;

var _button = require("./button");

var _buttonClose = require("./button-close");

var _plugins = require("../../utils/plugins");

var ButtonPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BButton: _button.BButton,
    BBtn: _button.BButton,
    BButtonClose: _buttonClose.BButtonClose,
    BBtnClose: _buttonClose.BButtonClose
  }
});
exports.ButtonPlugin = ButtonPlugin;
},{"./button":"node_modules/bootstrap-vue/esm/components/button/button.js","./button-close":"node_modules/bootstrap-vue/esm/components/button/button-close.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/button-group/button-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BButtonGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BButtonGroup';
var props = {
  vertical: {
    type: Boolean,
    default: false
  },
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)('BButton', 'size');
    }
  },
  tag: {
    type: String,
    default: 'div'
  },
  ariaRole: {
    type: String,
    default: 'group'
  }
}; // @vue/component

exports.props = props;

var BButtonGroup =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: _defineProperty({
        'btn-group': !props.vertical,
        'btn-group-vertical': props.vertical
      }, "btn-group-".concat(props.size), Boolean(props.size)),
      attrs: {
        role: props.ariaRole
      }
    }), children);
  }
});

exports.BButtonGroup = BButtonGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js"}],"node_modules/bootstrap-vue/esm/components/button-group/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BButtonGroup", {
  enumerable: true,
  get: function () {
    return _buttonGroup.BButtonGroup;
  }
});
exports.ButtonGroupPlugin = void 0;

var _buttonGroup = require("./button-group");

var _plugins = require("../../utils/plugins");

var ButtonGroupPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BButtonGroup: _buttonGroup.BButtonGroup,
    BBtnGroup: _buttonGroup.BButtonGroup
  }
});
exports.ButtonGroupPlugin = ButtonGroupPlugin;
},{"./button-group":"node_modules/bootstrap-vue/esm/components/button-group/button-group.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/key-codes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Key Codes (events)
 */
var KEY_CODES = {
  SPACE: 32,
  ENTER: 13,
  ESC: 27,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  PAGEUP: 33,
  PAGEDOWN: 34,
  HOME: 36,
  END: 35,
  TAB: 9,
  SHIFT: 16,
  CTRL: 17,
  BACKSPACE: 8,
  ALT: 18,
  PAUSE: 19,
  BREAK: 19,
  INSERT: 45,
  INS: 45,
  DELETE: 46
};
var _default = KEY_CODES;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/button-toolbar/button-toolbar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BButtonToolbar = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _dom = require("../../utils/dom");

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _keyCodes = _interopRequireDefault(require("../../utils/key-codes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ITEM_SELECTOR = ['.btn:not(.disabled):not([disabled]):not(.dropdown-item)', '.form-control:not(.disabled):not([disabled])', 'select:not(.disabled):not([disabled])', 'input[type="checkbox"]:not(.disabled)', 'input[type="radio"]:not(.disabled)'].join(','); // @vue/component

var BButtonToolbar =
/*#__PURE__*/
_vue.default.extend({
  name: 'BButtonToolbar',
  mixins: [_normalizeSlot.default],
  props: {
    justify: {
      type: Boolean,
      default: false
    },
    keyNav: {
      type: Boolean,
      default: false
    }
  },
  mounted: function mounted() {
    if (this.keyNav) {
      // Pre-set the tabindexes if the markup does not include tabindex="-1" on the toolbar items
      this.getItems();
    }
  },
  methods: {
    onFocusin: function onFocusin(evt) {
      if (evt.target === this.$el) {
        evt.preventDefault();
        evt.stopPropagation();
        this.focusFirst(evt);
      }
    },
    stop: function stop(evt) {
      evt.preventDefault();
      evt.stopPropagation();
    },
    onKeydown: function onKeydown(evt) {
      if (!this.keyNav) {
        /* istanbul ignore next: should never happen */
        return;
      }

      var key = evt.keyCode;
      var shift = evt.shiftKey;

      if (key === _keyCodes.default.UP || key === _keyCodes.default.LEFT) {
        this.stop(evt);
        shift ? this.focusFirst(evt) : this.focusPrev(evt);
      } else if (key === _keyCodes.default.DOWN || key === _keyCodes.default.RIGHT) {
        this.stop(evt);
        shift ? this.focusLast(evt) : this.focusNext(evt);
      }
    },
    setItemFocus: function setItemFocus(item) {
      item && item.focus && item.focus();
    },
    focusFirst: function focusFirst(evt) {
      var items = this.getItems();
      this.setItemFocus(items[0]);
    },
    focusPrev: function focusPrev(evt) {
      var items = this.getItems();
      var index = items.indexOf(evt.target);

      if (index > -1) {
        items = items.slice(0, index).reverse();
        this.setItemFocus(items[0]);
      }
    },
    focusNext: function focusNext(evt) {
      var items = this.getItems();
      var index = items.indexOf(evt.target);

      if (index > -1) {
        items = items.slice(index + 1);
        this.setItemFocus(items[0]);
      }
    },
    focusLast: function focusLast(evt) {
      var items = this.getItems().reverse();
      this.setItemFocus(items[0]);
    },
    getItems: function getItems() {
      var items = (0, _dom.selectAll)(ITEM_SELECTOR, this.$el);
      items.forEach(function (item) {
        // Ensure tabfocus is -1 on any new elements
        item.tabIndex = -1;
      });
      return items.filter(function (el) {
        return (0, _dom.isVisible)(el);
      });
    }
  },
  render: function render(h) {
    return h('div', {
      staticClass: 'btn-toolbar',
      class: {
        'justify-content-between': this.justify
      },
      attrs: {
        role: 'toolbar',
        tabindex: this.keyNav ? '0' : null
      },
      on: this.keyNav ? {
        focusin: this.onFocusin,
        keydown: this.onKeydown
      } : {}
    }, [this.normalizeSlot('default')]);
  }
});

exports.BButtonToolbar = BButtonToolbar;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js"}],"node_modules/bootstrap-vue/esm/components/button-toolbar/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BButtonToolbar", {
  enumerable: true,
  get: function () {
    return _buttonToolbar.BButtonToolbar;
  }
});
exports.ButtonToolbarPlugin = void 0;

var _buttonToolbar = require("./button-toolbar");

var _plugins = require("../../utils/plugins");

var ButtonToolbarPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BButtonToolbar: _buttonToolbar.BButtonToolbar,
    BBtnToolbar: _buttonToolbar.BButtonToolbar
  }
});
exports.ButtonToolbarPlugin = ButtonToolbarPlugin;
},{"./button-toolbar":"node_modules/bootstrap-vue/esm/components/button-toolbar/button-toolbar.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/upper-first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("./inspect");

/**
 * Transform the first character to uppercase
 * @param {string} str
 */
var upperFirst = function upperFirst(str) {
  if (!(0, _inspect.isString)(str)) {
    str = String(str);
  }

  str = str.trim();
  return str.charAt(0).toUpperCase() + str.slice(1);
};

var _default = upperFirst;
exports.default = _default;
},{"./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/utils/prefix-prop-name.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _upperFirst = _interopRequireDefault(require("./upper-first"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {string} prefix
 * @param {string} value
 */
var prefixPropName = function prefixPropName(prefix, value) {
  return prefix + (0, _upperFirst.default)(value);
};

var _default = prefixPropName;
exports.default = _default;
},{"./upper-first":"node_modules/bootstrap-vue/esm/utils/upper-first.js"}],"node_modules/bootstrap-vue/esm/utils/lower-first.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @param {string} str
 */
var lowerFirst = function lowerFirst(str) {
  str = String(str);
  return str.charAt(0).toLowerCase() + str.slice(1);
};

var _default = lowerFirst;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/utils/unprefix-prop-name.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lowerFirst = _interopRequireDefault(require("./lower-first"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {string} prefix
 * @param {string} value
 */
var unprefixPropName = function unprefixPropName(prefix, value) {
  return (0, _lowerFirst.default)(value.replace(prefix, ''));
};

var _default = unprefixPropName;
exports.default = _default;
},{"./lower-first":"node_modules/bootstrap-vue/esm/utils/lower-first.js"}],"node_modules/bootstrap-vue/esm/utils/copy-props.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _identity = _interopRequireDefault(require("./identity"));

var _inspect = require("./inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/**
 * Copies props from one array/object to a new array/object. Prop values
 * are also cloned as new references to prevent possible mutation of original
 * prop object values. Optionally accepts a function to transform the prop name.
 *
 * @param {[]|{}} props
 * @param {Function} transformFn
 */
var copyProps = function copyProps(props) {
  var transformFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _identity.default;

  if ((0, _inspect.isArray)(props)) {
    return props.map(transformFn);
  } // Props as an object.


  var copied = {};

  for (var prop in props) {
    /* istanbul ignore else */
    // eslint-disable-next-line no-prototype-builtins
    if (props.hasOwnProperty(prop)) {
      // If the prop value is an object, do a shallow clone to prevent
      // potential mutations to the original object.
      copied[transformFn(prop)] = (0, _inspect.isObject)(props[prop]) ? _objectSpread({}, props[prop]) : props[prop];
    }
  }

  return copied;
};

var _default = copyProps;
exports.default = _default;
},{"./identity":"node_modules/bootstrap-vue/esm/utils/identity.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/mixins/card.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// @vue/component
var _default = {
  props: {
    tag: {
      type: String,
      default: 'div'
    },
    bgVariant: {
      type: String,
      default: null
    },
    borderVariant: {
      type: String,
      default: null
    },
    textVariant: {
      type: String,
      default: null
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/card/card-title.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardTitle = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  title: {
    type: String,
    default: ''
  },
  titleTag: {
    type: String,
    default: 'h4'
  }
}; // @vue/component

exports.props = props;

var BCardTitle =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardTitle',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.titleTag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card-title'
    }), children || props.title);
  }
});

exports.BCardTitle = BCardTitle;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/card/card-sub-title.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardSubTitle = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BCardSubTitle';
var props = {
  subTitle: {
    type: String,
    default: ''
  },
  subTitleTag: {
    type: String,
    default: 'h6'
  },
  subTitleTextVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'subTitleTextVariant');
    }
  }
}; // @vue/component

exports.props = props;

var BCardSubTitle =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.subTitleTag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card-subtitle',
      class: [props.subTitleTextVariant ? "text-".concat(props.subTitleTextVariant) : null]
    }), children || props.subTitle);
  }
});

exports.BCardSubTitle = BCardSubTitle;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js"}],"node_modules/bootstrap-vue/esm/components/card/card-body.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardBody = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _prefixPropName = _interopRequireDefault(require("../../utils/prefix-prop-name"));

var _copyProps = _interopRequireDefault(require("../../utils/copy-props"));

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _card = _interopRequireDefault(require("../../mixins/card"));

var _cardTitle = require("./card-title");

var _cardSubTitle = require("./card-sub-title");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = _objectSpread({}, (0, _copyProps.default)(_card.default.props, _prefixPropName.default.bind(null, 'body')), {
  bodyClass: {
    type: [String, Object, Array],
    default: null
  }
}, _cardTitle.props, {}, _cardSubTitle.props, {
  overlay: {
    type: Boolean,
    default: false
  }
}); // @vue/component


exports.props = props;

var BCardBody =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardBody',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _ref2;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var cardTitle = h();
    var cardSubTitle = h();
    var cardContent = children || [h()];

    if (props.title) {
      cardTitle = h(_cardTitle.BCardTitle, {
        props: (0, _pluckProps.default)(_cardTitle.props, props)
      });
    }

    if (props.subTitle) {
      cardSubTitle = h(_cardSubTitle.BCardSubTitle, {
        props: (0, _pluckProps.default)(_cardSubTitle.props, props),
        class: ['mb-2']
      });
    }

    return h(props.bodyTag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card-body',
      class: [(_ref2 = {
        'card-img-overlay': props.overlay
      }, _defineProperty(_ref2, "bg-".concat(props.bodyBgVariant), Boolean(props.bodyBgVariant)), _defineProperty(_ref2, "border-".concat(props.bodyBorderVariant), Boolean(props.bodyBorderVariant)), _defineProperty(_ref2, "text-".concat(props.bodyTextVariant), Boolean(props.bodyTextVariant)), _ref2), props.bodyClass || {}]
    }), [cardTitle, cardSubTitle].concat(_toConsumableArray(cardContent)));
  }
});

exports.BCardBody = BCardBody;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/prefix-prop-name":"node_modules/bootstrap-vue/esm/utils/prefix-prop-name.js","../../utils/copy-props":"node_modules/bootstrap-vue/esm/utils/copy-props.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../../mixins/card":"node_modules/bootstrap-vue/esm/mixins/card.js","./card-title":"node_modules/bootstrap-vue/esm/components/card/card-title.js","./card-sub-title":"node_modules/bootstrap-vue/esm/components/card/card-sub-title.js"}],"node_modules/bootstrap-vue/esm/components/card/card-header.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardHeader = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _prefixPropName = _interopRequireDefault(require("../../utils/prefix-prop-name"));

var _copyProps = _interopRequireDefault(require("../../utils/copy-props"));

var _html = require("../../utils/html");

var _card = _interopRequireDefault(require("../../mixins/card"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = _objectSpread({}, (0, _copyProps.default)(_card.default.props, _prefixPropName.default.bind(null, 'header')), {
  header: {
    type: String,
    default: null
  },
  headerHtml: {
    type: String,
    default: null
  },
  headerClass: {
    type: [String, Object, Array],
    default: null
  }
}); // @vue/component


exports.props = props;

var BCardHeader =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardHeader',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _ref2;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.headerTag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card-header',
      class: [props.headerClass, (_ref2 = {}, _defineProperty(_ref2, "bg-".concat(props.headerBgVariant), Boolean(props.headerBgVariant)), _defineProperty(_ref2, "border-".concat(props.headerBorderVariant), Boolean(props.headerBorderVariant)), _defineProperty(_ref2, "text-".concat(props.headerTextVariant), Boolean(props.headerTextVariant)), _ref2)]
    }), children || [h('div', {
      domProps: (0, _html.htmlOrText)(props.headerHtml, props.header)
    })]);
  }
});

exports.BCardHeader = BCardHeader;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/prefix-prop-name":"node_modules/bootstrap-vue/esm/utils/prefix-prop-name.js","../../utils/copy-props":"node_modules/bootstrap-vue/esm/utils/copy-props.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../mixins/card":"node_modules/bootstrap-vue/esm/mixins/card.js"}],"node_modules/bootstrap-vue/esm/components/card/card-footer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardFooter = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _prefixPropName = _interopRequireDefault(require("../../utils/prefix-prop-name"));

var _copyProps = _interopRequireDefault(require("../../utils/copy-props"));

var _html = require("../../utils/html");

var _card = _interopRequireDefault(require("../../mixins/card"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = _objectSpread({}, (0, _copyProps.default)(_card.default.props, _prefixPropName.default.bind(null, 'footer')), {
  footer: {
    type: String,
    default: null
  },
  footerHtml: {
    type: String,
    default: null
  },
  footerClass: {
    type: [String, Object, Array],
    default: null
  }
}); // @vue/component


exports.props = props;

var BCardFooter =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardFooter',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _ref2;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.footerTag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card-footer',
      class: [props.footerClass, (_ref2 = {}, _defineProperty(_ref2, "bg-".concat(props.footerBgVariant), Boolean(props.footerBgVariant)), _defineProperty(_ref2, "border-".concat(props.footerBorderVariant), Boolean(props.footerBorderVariant)), _defineProperty(_ref2, "text-".concat(props.footerTextVariant), Boolean(props.footerTextVariant)), _ref2)]
    }), children || [h('div', {
      domProps: (0, _html.htmlOrText)(props.footerHtml, props.footer)
    })]);
  }
});

exports.BCardFooter = BCardFooter;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/prefix-prop-name":"node_modules/bootstrap-vue/esm/utils/prefix-prop-name.js","../../utils/copy-props":"node_modules/bootstrap-vue/esm/utils/copy-props.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../mixins/card":"node_modules/bootstrap-vue/esm/mixins/card.js"}],"node_modules/bootstrap-vue/esm/components/card/card-img.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardImg = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  src: {
    type: String,
    default: null,
    required: true
  },
  alt: {
    type: String,
    default: null
  },
  top: {
    type: Boolean,
    default: false
  },
  bottom: {
    type: Boolean,
    default: false
  },
  start: {
    type: Boolean,
    default: false
  },
  left: {
    // alias of 'start'
    type: Boolean,
    default: false
  },
  end: {
    type: Boolean,
    default: false
  },
  right: {
    // alias of 'end'
    type: Boolean,
    default: false
  },
  height: {
    type: [Number, String],
    default: null
  },
  width: {
    type: [Number, String],
    default: null
  }
}; // @vue/component

exports.props = props;

var BCardImg =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardImg',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data;
    var baseClass = 'card-img';

    if (props.top) {
      baseClass += '-top';
    } else if (props.right || props.end) {
      baseClass += '-right';
    } else if (props.bottom) {
      baseClass += '-bottom';
    } else if (props.left || props.start) {
      baseClass += '-left';
    }

    return h('img', (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: [baseClass],
      attrs: {
        src: props.src,
        alt: props.alt,
        height: props.height,
        width: props.width
      }
    }));
  }
});

exports.BCardImg = BCardImg;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/card/card.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCard = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _prefixPropName = _interopRequireDefault(require("../../utils/prefix-prop-name"));

var _unprefixPropName = _interopRequireDefault(require("../../utils/unprefix-prop-name"));

var _copyProps = _interopRequireDefault(require("../../utils/copy-props"));

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _normalizeSlot = require("../../utils/normalize-slot");

var _card = _interopRequireDefault(require("../../mixins/card"));

var _cardBody = require("./card-body");

var _cardHeader = require("./card-header");

var _cardFooter = require("./card-footer");

var _cardImg = require("./card-img");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var cardImgProps = (0, _copyProps.default)(_cardImg.props, _prefixPropName.default.bind(null, 'img'));
cardImgProps.imgSrc.required = false;

var props = _objectSpread({}, _cardBody.props, {}, _cardHeader.props, {}, _cardFooter.props, {}, cardImgProps, {}, (0, _copyProps.default)(_card.default.props), {
  align: {
    type: String,
    default: null
  },
  noBody: {
    type: Boolean,
    default: false
  }
}); // @vue/component


exports.props = props;

var BCard =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCard',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots;
    var $slots = slots(); // Vue < 2.6.x may return undefined for scopedSlots

    var $scopedSlots = scopedSlots || {}; // Create placeholder elements for each section

    var imgFirst = h();
    var header = h();
    var content = h();
    var footer = h();
    var imgLast = h();

    if (props.imgSrc) {
      var img = h(_cardImg.BCardImg, {
        props: (0, _pluckProps.default)(cardImgProps, props, _unprefixPropName.default.bind(null, 'img'))
      });

      if (props.imgBottom) {
        imgLast = img;
      } else {
        imgFirst = img;
      }
    }

    if (props.header || (0, _normalizeSlot.hasNormalizedSlot)('header', $scopedSlots, $slots)) {
      header = h(_cardHeader.BCardHeader, {
        props: (0, _pluckProps.default)(_cardHeader.props, props)
      }, (0, _normalizeSlot.normalizeSlot)('header', {}, $scopedSlots, $slots));
    }

    content = (0, _normalizeSlot.normalizeSlot)('default', {}, $scopedSlots, $slots) || [];

    if (!props.noBody) {
      // Wrap content in card-body
      content = [h(_cardBody.BCardBody, {
        props: (0, _pluckProps.default)(_cardBody.props, props)
      }, _toConsumableArray(content))];
    }

    if (props.footer || (0, _normalizeSlot.hasNormalizedSlot)('footer', $scopedSlots, $slots)) {
      footer = h(_cardFooter.BCardFooter, {
        props: (0, _pluckProps.default)(_cardFooter.props, props)
      }, (0, _normalizeSlot.normalizeSlot)('footer', {}, $scopedSlots, $slots));
    }

    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card',
      class: (_class = {
        'flex-row': props.imgLeft || props.imgStart,
        'flex-row-reverse': (props.imgRight || props.imgEnd) && !(props.imgLeft || props.imgStart)
      }, _defineProperty(_class, "text-".concat(props.align), Boolean(props.align)), _defineProperty(_class, "bg-".concat(props.bgVariant), Boolean(props.bgVariant)), _defineProperty(_class, "border-".concat(props.borderVariant), Boolean(props.borderVariant)), _defineProperty(_class, "text-".concat(props.textVariant), Boolean(props.textVariant)), _class)
    }), [imgFirst, header].concat(_toConsumableArray(content), [footer, imgLast]));
  }
});

exports.BCard = BCard;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/prefix-prop-name":"node_modules/bootstrap-vue/esm/utils/prefix-prop-name.js","../../utils/unprefix-prop-name":"node_modules/bootstrap-vue/esm/utils/unprefix-prop-name.js","../../utils/copy-props":"node_modules/bootstrap-vue/esm/utils/copy-props.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js","../../mixins/card":"node_modules/bootstrap-vue/esm/mixins/card.js","./card-body":"node_modules/bootstrap-vue/esm/components/card/card-body.js","./card-header":"node_modules/bootstrap-vue/esm/components/card/card-header.js","./card-footer":"node_modules/bootstrap-vue/esm/components/card/card-footer.js","./card-img":"node_modules/bootstrap-vue/esm/components/card/card-img.js"}],"node_modules/bootstrap-vue/esm/utils/loose-equal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _object = require("./object");

var _inspect = require("./inspect");

// Assumes both a and b are arrays!
// Handles when arrays are "sparse" (array.every(...) doesn't handle sparse)
var compareArrays = function compareArrays(a, b) {
  if (a.length !== b.length) {
    return false;
  }

  var equal = true;

  for (var i = 0; equal && i < a.length; i++) {
    equal = looseEqual(a[i], b[i]);
  }

  return equal;
};
/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 * Returns boolean true or false
 */


var looseEqual = function looseEqual(a, b) {
  if (a === b) {
    return true;
  }

  var aValidType = (0, _inspect.isDate)(a);
  var bValidType = (0, _inspect.isDate)(b);

  if (aValidType || bValidType) {
    return aValidType && bValidType ? a.getTime() === b.getTime() : false;
  }

  aValidType = (0, _inspect.isArray)(a);
  bValidType = (0, _inspect.isArray)(b);

  if (aValidType || bValidType) {
    return aValidType && bValidType ? compareArrays(a, b) : false;
  }

  aValidType = (0, _inspect.isObject)(a);
  bValidType = (0, _inspect.isObject)(b);

  if (aValidType || bValidType) {
    /* istanbul ignore if: this if will probably never be called */
    if (!aValidType || !bValidType) {
      return false;
    }

    var aKeysCount = (0, _object.keys)(a).length;
    var bKeysCount = (0, _object.keys)(b).length;

    if (aKeysCount !== bKeysCount) {
      return false;
    }

    for (var key in a) {
      // eslint-disable-next-line no-prototype-builtins
      var aHasKey = a.hasOwnProperty(key); // eslint-disable-next-line no-prototype-builtins

      var bHasKey = b.hasOwnProperty(key);

      if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) {
        return false;
      }
    }
  }

  return String(a) === String(b);
};

var _default = looseEqual;
exports.default = _default;
},{"./object":"node_modules/bootstrap-vue/esm/utils/object.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/directives/visible.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VBVisible = void 0;

var _looseEqual = _interopRequireDefault(require("../utils/loose-equal"));

var _dom = require("../utils/dom");

var _inspect = require("../utils/inspect");

var _object = require("../utils/object");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
} // v-b-visible
// Private visibility check directive
// Based on IntersectionObserver
//
// Usage:
//  v-b-visibility.<margin>.<once>="<callback>"
//
//  Value:
//  <callback>: method to be called when visibility state changes, receives one arg:
//     true:  element is visible
//     false: element is not visible
//     null:  IntersectionObserver not supported
//
//  Modifiers:
//    <margin>: a positive decimal value of pixels away from viewport edge
//              before being considered "visible". default is 0
//    <once>:   keyword 'once', meaning when the element becomes visible and
//              callback is called observation/notification will stop.
//
// When used in a render function:
// export default {
//   directives: { 'b-visible': VBVisible },
//   render(h) {
//     h(
//       'div',
//       {
//         directives: [
//           { name: 'b-visible', value=this.callback, modifiers: { '123':true, 'once':true } }
//         ]
//       }
//     )
//   }


var OBSERVER_PROP_NAME = '__bv__visibility_observer';

var VisibilityObserver =
/*#__PURE__*/
function () {
  function VisibilityObserver(el, options, vnode) {
    _classCallCheck(this, VisibilityObserver);

    this.el = el;
    this.callback = options.callback;
    this.margin = options.margin || 0;
    this.once = options.once || false;
    this.observer = null;
    this.visible = undefined;
    this.doneOnce = false; // Create the observer instance (if possible)

    this.createObserver(vnode);
  }

  _createClass(VisibilityObserver, [{
    key: "createObserver",
    value: function createObserver(vnode) {
      var _this = this; // Remove any previous observer


      if (this.observer) {
        /* istanbul ignore next */
        this.stop();
      } // Should only be called once and `callback` prop should be a function


      if (this.doneOnce || !(0, _inspect.isFunction)(this.callback)) {
        /* istanbul ignore next */
        return;
      } // Create the observer instance


      try {
        // Future: Possibly add in other modifiers for left/right/top/bottom
        // offsets, root element reference, and thresholds
        this.observer = new IntersectionObserver(this.handler.bind(this), {
          // `null` = 'viewport'
          root: null,
          // Pixels away from view port to consider "visible"
          rootMargin: this.margin,
          // Intersection ratio of el and root (as a value from 0 to 1)
          threshold: 0
        });
      } catch (_unused) {
        // No IntersectionObserver support, so just stop trying to observe
        this.doneOnce = true;
        this.observer = undefined;
        this.callback(null);
        return;
      } // Start observing in a `$nextTick()` (to allow DOM to complete rendering)

      /* istanbul ignore next: IntersectionObserver not supported in JSDOM */


      vnode.context.$nextTick(function () {
        (0, _dom.requestAF)(function () {
          // Placed in an `if` just in case we were destroyed before
          // this `requestAnimationFrame` runs
          if (_this.observer) {
            _this.observer.observe(_this.el);
          }
        });
      });
    }
  }, {
    key: "handler",
    value: function handler(entries)
    /* istanbul ignore next: IntersectionObserver not supported in JSDOM */
    {
      var entry = entries ? entries[0] : {};
      var isIntersecting = Boolean(entry.isIntersecting || entry.intersectionRatio > 0.0);

      if (isIntersecting !== this.visible) {
        this.visible = isIntersecting;
        this.callback(isIntersecting);

        if (this.once && this.visible) {
          this.doneOnce = true;
          this.stop();
        }
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      var observer = this.observer;
      /* istanbul ignore next */

      if (observer && observer.disconnect) {
        observer.disconnect();
      }

      this.observer = null;
    }
  }]);

  return VisibilityObserver;
}();

var destroy = function destroy(el) {
  var observer = el[OBSERVER_PROP_NAME];

  if (observer && observer.stop) {
    observer.stop();
  }

  delete el[OBSERVER_PROP_NAME];
};

var bind = function bind(el, _ref, vnode) {
  var value = _ref.value,
      modifiers = _ref.modifiers; // `value` is the callback function

  var options = {
    margin: '0px',
    once: false,
    callback: value
  }; // Parse modifiers

  (0, _object.keys)(modifiers).forEach(function (mod) {
    /* istanbul ignore else: Until <b-img-lazy> is switched to use this directive */
    if (/^\d+$/.test(mod)) {
      options.margin = "".concat(mod, "px");
    } else if (mod.toLowerCase() === 'once') {
      options.once = true;
    }
  }); // Destroy any previous observer

  destroy(el); // Create new observer

  el[OBSERVER_PROP_NAME] = new VisibilityObserver(el, options, vnode); // Store the current modifiers on the object (cloned)

  el[OBSERVER_PROP_NAME]._prevModifiers = _objectSpread({}, modifiers);
}; // When the directive options may have been updated (or element)


var componentUpdated = function componentUpdated(el, _ref2, vnode) {
  var value = _ref2.value,
      oldValue = _ref2.oldValue,
      modifiers = _ref2.modifiers; // Compare value/oldValue and modifiers to see if anything has changed
  // and if so, destroy old observer and create new observer

  /* istanbul ignore next */

  if (value !== oldValue || !el[OBSERVER_PROP_NAME] || !(0, _looseEqual.default)(modifiers, el[OBSERVER_PROP_NAME]._prevModifiers)) {
    // Re-bind on element
    bind(el, {
      value: value,
      modifiers: modifiers
    }, vnode);
  }
}; // When directive un-binds from element


var unbind = function unbind(el) {
  // Remove the observer
  destroy(el);
}; // Export the directive


var VBVisible = {
  bind: bind,
  componentUpdated: componentUpdated,
  unbind: unbind
};
exports.VBVisible = VBVisible;
},{"../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/components/image/img.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BImg = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _inspect = require("../../utils/inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// --- Constants --
var NAME = 'BImg'; // Blank image with fill template

var BLANK_TEMPLATE = '<svg width="%{w}" height="%{h}" ' + 'xmlns="http://www.w3.org/2000/svg" ' + 'viewBox="0 0 %{w} %{h}" preserveAspectRatio="none">' + '<rect width="100%" height="100%" style="fill:%{f};"></rect>' + '</svg>';
var props = {
  src: {
    type: String,
    default: null
  },
  alt: {
    type: String,
    default: null
  },
  width: {
    type: [Number, String],
    default: null
  },
  height: {
    type: [Number, String],
    default: null
  },
  block: {
    type: Boolean,
    default: false
  },
  fluid: {
    type: Boolean,
    default: false
  },
  fluidGrow: {
    // Gives fluid images class `w-100` to make them grow to fit container
    type: Boolean,
    default: false
  },
  rounded: {
    // rounded can be:
    //   false: no rounding of corners
    //   true: slightly rounded corners
    //   'top': top corners rounded
    //   'right': right corners rounded
    //   'bottom': bottom corners rounded
    //   'left': left corners rounded
    //   'circle': circle/oval
    //   '0': force rounding off
    type: [Boolean, String],
    default: false
  },
  thumbnail: {
    type: Boolean,
    default: false
  },
  left: {
    type: Boolean,
    default: false
  },
  right: {
    type: Boolean,
    default: false
  },
  center: {
    type: Boolean,
    default: false
  },
  blank: {
    type: Boolean,
    default: false
  },
  blankColor: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'blankColor');
    }
  }
}; // --- Helper methods ---

exports.props = props;

var makeBlankImgSrc = function makeBlankImgSrc(width, height, color) {
  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', String(width)).replace('%{h}', String(height)).replace('%{f}', color));
  return "data:image/svg+xml;charset=UTF-8,".concat(src);
}; // @vue/component


var BImg =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data;
    var src = props.src;
    var width = parseInt(props.width, 10) ? parseInt(props.width, 10) : null;
    var height = parseInt(props.height, 10) ? parseInt(props.height, 10) : null;
    var align = null;
    var block = props.block;

    if (props.blank) {
      if (!height && Boolean(width)) {
        height = width;
      } else if (!width && Boolean(height)) {
        width = height;
      }

      if (!width && !height) {
        width = 1;
        height = 1;
      } // Make a blank SVG image


      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent');
    }

    if (props.left) {
      align = 'float-left';
    } else if (props.right) {
      align = 'float-right';
    } else if (props.center) {
      align = 'mx-auto';
      block = true;
    }

    return h('img', (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        src: src,
        alt: props.alt,
        width: width ? String(width) : null,
        height: height ? String(height) : null
      },
      class: (_class = {
        'img-thumbnail': props.thumbnail,
        'img-fluid': props.fluid || props.fluidGrow,
        'w-100': props.fluidGrow,
        rounded: props.rounded === '' || props.rounded === true
      }, _defineProperty(_class, "rounded-".concat(props.rounded), (0, _inspect.isString)(props.rounded) && props.rounded !== ''), _defineProperty(_class, align, Boolean(align)), _defineProperty(_class, 'd-block', block), _class)
    }));
  }
});

exports.BImg = BImg;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/image/img-lazy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BImgLazy = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _config = require("../../utils/config");

var _env = require("../../utils/env");

var _visible = require("../../directives/visible");

var _img = require("./img");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BImgLazy';
var props = {
  src: {
    type: String,
    default: null,
    required: true
  },
  alt: {
    type: String,
    default: null
  },
  width: {
    type: [Number, String],
    default: null
  },
  height: {
    type: [Number, String],
    default: null
  },
  blankSrc: {
    // If null, a blank image is generated
    type: String,
    default: null
  },
  blankColor: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'blankColor');
    }
  },
  blankWidth: {
    type: [Number, String],
    default: null
  },
  blankHeight: {
    type: [Number, String],
    default: null
  },
  show: {
    type: Boolean,
    default: false
  },
  fluid: {
    type: Boolean,
    default: false
  },
  fluidGrow: {
    type: Boolean,
    default: false
  },
  block: {
    type: Boolean,
    default: false
  },
  thumbnail: {
    type: Boolean,
    default: false
  },
  rounded: {
    type: [Boolean, String],
    default: false
  },
  left: {
    type: Boolean,
    default: false
  },
  right: {
    type: Boolean,
    default: false
  },
  center: {
    type: Boolean,
    default: false
  },
  offset: {
    // Distance away from viewport (in pixels) before being
    // considered "visible"
    type: [Number, String],
    default: 360
  }
}; // @vue/component

exports.props = props;

var BImgLazy =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  directives: {
    bVisible: _visible.VBVisible
  },
  props: props,
  data: function data() {
    return {
      isShown: this.show
    };
  },
  computed: {
    computedSrc: function computedSrc() {
      return !this.blankSrc || this.isShown ? this.src : this.blankSrc;
    },
    computedBlank: function computedBlank() {
      return !(this.isShown || this.blankSrc);
    },
    computedWidth: function computedWidth() {
      return this.isShown ? this.width : this.blankWidth || this.width;
    },
    computedHeight: function computedHeight() {
      return this.isShown ? this.height : this.blankHeight || this.height;
    }
  },
  watch: {
    show: function show(newVal, oldVal) {
      if (newVal !== oldVal) {
        // If IntersectionObserver support is not available, image is always shown
        var visible = _env.hasIntersectionObserverSupport ? newVal : true;
        this.isShown = visible;

        if (visible !== newVal) {
          // Ensure the show prop is synced (when no IntersectionObserver)
          this.$nextTick(this.updateShowProp);
        }
      }
    },
    isShown: function isShown(newVal, oldVal) {
      if (newVal !== oldVal) {
        // Update synched show prop
        this.updateShowProp();
      }
    }
  },
  mounted: function mounted() {
    // If IntersectionObserver is not available, image is always shown
    this.isShown = _env.hasIntersectionObserverSupport ? this.show : true;
  },
  methods: {
    updateShowProp: function updateShowProp() {
      this.$emit('update:show', this.isShown);
    },
    doShow: function doShow(visible) {
      // If IntersectionObserver is not supported, the callback
      // will be called with `null` rather than `true` or `false`
      if ((visible || visible === null) && !this.isShown) {
        this.isShown = true;
      }
    }
  },
  render: function render(h) {
    var directives = [];

    if (!this.isShown) {
      var _modifiers; // We only add the visible directive if we are not shown


      directives.push({
        // Visible directive will silently do nothing if
        // IntersectionObserver is not supported
        name: 'b-visible',
        // Value expects a callback (passed one arg of `visible` = `true` or `false`)
        value: this.doShow,
        modifiers: (_modifiers = {}, _defineProperty(_modifiers, "".concat(parseInt(this.offset, 10) || 0), true), _defineProperty(_modifiers, "once", true), _modifiers)
      });
    }

    return h(_img.BImg, {
      directives: directives,
      props: {
        // Computed value props
        src: this.computedSrc,
        blank: this.computedBlank,
        width: this.computedWidth,
        height: this.computedHeight,
        // Passthrough props
        alt: this.alt,
        blankColor: this.blankColor,
        fluid: this.fluid,
        fluidGrow: this.fluidGrow,
        block: this.block,
        thumbnail: this.thumbnail,
        rounded: this.rounded,
        left: this.left,
        right: this.right,
        center: this.center
      }
    });
  }
});

exports.BImgLazy = BImgLazy;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../directives/visible":"node_modules/bootstrap-vue/esm/directives/visible.js","./img":"node_modules/bootstrap-vue/esm/components/image/img.js"}],"node_modules/bootstrap-vue/esm/components/card/card-img-lazy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardImgLazy = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _object = require("../../utils/object");

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _imgLazy = require("../image/img-lazy");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Copy of `<b-img-lazy>` props, and remove conflicting/non-applicable props
// The `omit()` util creates a new object, so we can just pass the original props
var lazyProps = (0, _object.omit)(_imgLazy.props, ['left', 'right', 'center', 'block', 'rounded', 'thumbnail', 'fluid', 'fluidGrow']);

var props = _objectSpread({}, lazyProps, {
  top: {
    type: Boolean,
    default: false
  },
  bottom: {
    type: Boolean,
    default: false
  },
  start: {
    type: Boolean,
    default: false
  },
  left: {
    // alias of 'start'
    type: Boolean,
    default: false
  },
  end: {
    type: Boolean,
    default: false
  },
  right: {
    // alias of 'end'
    type: Boolean,
    default: false
  }
}); // @vue/component


exports.props = props;

var BCardImgLazy =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardImgLazy',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data;
    var baseClass = 'card-img';

    if (props.top) {
      baseClass += '-top';
    } else if (props.right || props.end) {
      baseClass += '-right';
    } else if (props.bottom) {
      baseClass += '-bottom';
    } else if (props.left || props.start) {
      baseClass += '-left';
    } // False out the left/center/right props before passing to b-img-lazy


    var lazyProps = _objectSpread({}, props, {
      left: false,
      right: false,
      center: false
    });

    return h(_imgLazy.BImgLazy, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: [baseClass],
      props: lazyProps
    }));
  }
});

exports.BCardImgLazy = BCardImgLazy;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../image/img-lazy":"node_modules/bootstrap-vue/esm/components/image/img-lazy.js"}],"node_modules/bootstrap-vue/esm/components/card/card-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardText = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  textTag: {
    type: String,
    default: 'p'
  }
}; // @vue/component

exports.props = props;

var BCardText =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardText',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.textTag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'card-text'
    }), children);
  }
});

exports.BCardText = BCardText;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/card/card-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCardGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'div'
  },
  deck: {
    type: Boolean,
    default: false
  },
  columns: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BCardGroup =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCardGroup',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var baseClass = 'card-group';

    if (props.deck) {
      baseClass = 'card-deck';
    } else if (props.columns) {
      baseClass = 'card-columns';
    }

    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: baseClass
    }), children);
  }
});

exports.BCardGroup = BCardGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/card/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BCard", {
  enumerable: true,
  get: function () {
    return _card.BCard;
  }
});
Object.defineProperty(exports, "BCardHeader", {
  enumerable: true,
  get: function () {
    return _cardHeader.BCardHeader;
  }
});
Object.defineProperty(exports, "BCardBody", {
  enumerable: true,
  get: function () {
    return _cardBody.BCardBody;
  }
});
Object.defineProperty(exports, "BCardTitle", {
  enumerable: true,
  get: function () {
    return _cardTitle.BCardTitle;
  }
});
Object.defineProperty(exports, "BCardSubTitle", {
  enumerable: true,
  get: function () {
    return _cardSubTitle.BCardSubTitle;
  }
});
Object.defineProperty(exports, "BCardFooter", {
  enumerable: true,
  get: function () {
    return _cardFooter.BCardFooter;
  }
});
Object.defineProperty(exports, "BCardImg", {
  enumerable: true,
  get: function () {
    return _cardImg.BCardImg;
  }
});
Object.defineProperty(exports, "BCardImgLazy", {
  enumerable: true,
  get: function () {
    return _cardImgLazy.BCardImgLazy;
  }
});
Object.defineProperty(exports, "BCardText", {
  enumerable: true,
  get: function () {
    return _cardText.BCardText;
  }
});
Object.defineProperty(exports, "BCardGroup", {
  enumerable: true,
  get: function () {
    return _cardGroup.BCardGroup;
  }
});
exports.CardPlugin = void 0;

var _card = require("./card");

var _cardHeader = require("./card-header");

var _cardBody = require("./card-body");

var _cardTitle = require("./card-title");

var _cardSubTitle = require("./card-sub-title");

var _cardFooter = require("./card-footer");

var _cardImg = require("./card-img");

var _cardImgLazy = require("./card-img-lazy");

var _cardText = require("./card-text");

var _cardGroup = require("./card-group");

var _plugins = require("../../utils/plugins");

var CardPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BCard: _card.BCard,
    BCardHeader: _cardHeader.BCardHeader,
    BCardBody: _cardBody.BCardBody,
    BCardTitle: _cardTitle.BCardTitle,
    BCardSubTitle: _cardSubTitle.BCardSubTitle,
    BCardFooter: _cardFooter.BCardFooter,
    BCardImg: _cardImg.BCardImg,
    BCardImgLazy: _cardImgLazy.BCardImgLazy,
    BCardText: _cardText.BCardText,
    BCardGroup: _cardGroup.BCardGroup
  }
});
exports.CardPlugin = CardPlugin;
},{"./card":"node_modules/bootstrap-vue/esm/components/card/card.js","./card-header":"node_modules/bootstrap-vue/esm/components/card/card-header.js","./card-body":"node_modules/bootstrap-vue/esm/components/card/card-body.js","./card-title":"node_modules/bootstrap-vue/esm/components/card/card-title.js","./card-sub-title":"node_modules/bootstrap-vue/esm/components/card/card-sub-title.js","./card-footer":"node_modules/bootstrap-vue/esm/components/card/card-footer.js","./card-img":"node_modules/bootstrap-vue/esm/components/card/card-img.js","./card-img-lazy":"node_modules/bootstrap-vue/esm/components/card/card-img-lazy.js","./card-text":"node_modules/bootstrap-vue/esm/components/card/card-text.js","./card-group":"node_modules/bootstrap-vue/esm/components/card/card-group.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var noop = function noop() {};

var _default = noop;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/utils/observe-dom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dom = require("./dom");

var _warn = require("./warn");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/**
 * Observe a DOM element changes, falls back to eventListener mode
 * @param {Element} el The DOM element to observe
 * @param {Function} callback callback to be called on change
 * @param {object} [opts={childList: true, subtree: true}] observe options
 * @see http://stackoverflow.com/questions/3219758
 */
var observeDom = function observeDom(el, callback, opts)
/* istanbul ignore next: difficult to test in JSDOM */
{
  // Handle cases where we might be passed a Vue instance
  el = el ? el.$el || el : null; // Early exit when we have no element

  /* istanbul ignore next: difficult to test in JSDOM */

  if (!(0, _dom.isElement)(el)) {
    return null;
  } // Exit and throw a warning when `MutationObserver` isn't available


  if ((0, _warn.warnNoMutationObserverSupport)('observeDom')) {
    return null;
  } // Define a new observer


  var obs = new _dom.MutationObs(function (mutations) {
    var changed = false; // A mutation can contain several change records, so we loop
    // through them to see what has changed
    // We break out of the loop early if any "significant" change
    // has been detected

    for (var i = 0; i < mutations.length && !changed; i++) {
      // The mutation record
      var mutation = mutations[i]; // Mutation type

      var type = mutation.type; // DOM node (could be any DOM node type - HTMLElement, Text, comment, etc.)

      var target = mutation.target; // Detect whether a change happened based on type and target

      if (type === 'characterData' && target.nodeType === Node.TEXT_NODE) {
        // We ignore nodes that are not TEXT (i.e. comments, etc)
        // as they don't change layout
        changed = true;
      } else if (type === 'attributes') {
        changed = true;
      } else if (type === 'childList' && (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)) {
        // This includes HTMLElement and text nodes being
        // added/removed/re-arranged
        changed = true;
      }
    } // We only call the callback if a change that could affect
    // layout/size truely happened


    if (changed) {
      callback();
    }
  }); // Have the observer observe foo for changes in children, etc

  obs.observe(el, _objectSpread({
    childList: true,
    subtree: true
  }, opts)); // We return a reference to the observer so that `obs.disconnect()`
  // can be called if necessary
  // To reduce overhead when the root element is hidden

  return obs;
};

var _default = observeDom;
exports.default = _default;
},{"./dom":"node_modules/bootstrap-vue/esm/utils/dom.js","./warn":"node_modules/bootstrap-vue/esm/utils/warn.js"}],"node_modules/bootstrap-vue/esm/mixins/id.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * SSR Safe Client Side ID attribute generation
 * id's can only be generated client side, after mount.
 * this._uid is not synched between server and client.
 */
// @vue/component
var _default = {
  props: {
    id: {
      type: String,
      default: null
    }
  },
  data: function data() {
    return {
      localId_: null
    };
  },
  computed: {
    safeId: function safeId() {
      // Computed property that returns a dynamic function for creating the ID.
      // Reacts to changes in both .id and .localId_ And regens a new function
      var id = this.id || this.localId_; // We return a function that accepts an optional suffix string
      // So this computed prop looks and works like a method!!!
      // But benefits from Vue's Computed prop caching

      var fn = function fn(suffix) {
        if (!id) {
          return null;
        }

        suffix = String(suffix || '').replace(/\s+/g, '_');
        return suffix ? id + '_' + suffix : id;
      };

      return fn;
    }
  },
  mounted: function mounted() {
    var _this = this; // mounted only occurs client side


    this.$nextTick(function () {
      // Update dom with auto ID after dom loaded to prevent
      // SSR hydration errors.
      _this.localId_ = "__BVID__".concat(_this._uid);
    });
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/carousel/carousel.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCarousel = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _keyCodes = _interopRequireDefault(require("../../utils/key-codes"));

var _noop = _interopRequireDefault(require("../../utils/noop"));

var _observeDom = _interopRequireDefault(require("../../utils/observe-dom"));

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _env = require("../../utils/env");

var _inspect = require("../../utils/inspect");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BCarousel'; // Slide directional classes

var DIRECTION = {
  next: {
    dirClass: 'carousel-item-left',
    overlayClass: 'carousel-item-next'
  },
  prev: {
    dirClass: 'carousel-item-right',
    overlayClass: 'carousel-item-prev'
  }
}; // Fallback Transition duration (with a little buffer) in ms

var TRANS_DURATION = 600 + 50; // Time for mouse compat events to fire after touch

var TOUCH_EVENT_COMPAT_WAIT = 500; // Number of pixels to consider touch move a swipe

var SWIPE_THRESHOLD = 40; // PointerEvent pointer types

var PointerType = {
  TOUCH: 'touch',
  PEN: 'pen'
}; // Transition Event names

var TransitionEndEvents = {
  WebkitTransition: 'webkitTransitionEnd',
  MozTransition: 'transitionend',
  OTransition: 'otransitionend oTransitionEnd',
  transition: 'transitionend'
};
var EventOptions = {
  passive: true,
  capture: false
}; // Return the browser specific transitionEnd event name

var getTransitionEndEvent = function getTransitionEndEvent(el) {
  for (var name in TransitionEndEvents) {
    if (!(0, _inspect.isUndefined)(el.style[name])) {
      return TransitionEndEvents[name];
    }
  } // Fallback

  /* istanbul ignore next */


  return null;
}; // @vue/component


var BCarousel =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_id.default, _normalizeSlot.default],
  provide: function provide() {
    return {
      bvCarousel: this
    };
  },
  model: {
    prop: 'value',
    event: 'input'
  },
  props: {
    labelPrev: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'labelPrev');
      }
    },
    labelNext: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'labelNext');
      }
    },
    labelGotoSlide: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'labelGotoSlide');
      }
    },
    labelIndicators: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'labelIndicators');
      }
    },
    interval: {
      type: Number,
      default: 5000
    },
    indicators: {
      type: Boolean,
      default: false
    },
    controls: {
      type: Boolean,
      default: false
    },
    noAnimation: {
      // Disable slide/fade animation
      type: Boolean,
      default: false
    },
    fade: {
      // Enable cross-fade animation instead of slide animation
      type: Boolean,
      default: false
    },
    noWrap: {
      // Disable wrapping/looping when start/end is reached
      type: Boolean,
      default: false
    },
    noTouch: {
      // Sniffed by carousel-slide
      type: Boolean,
      default: false
    },
    noHoverPause: {
      // Disable pause on hover
      type: Boolean,
      default: false
    },
    imgWidth: {
      // Sniffed by carousel-slide
      type: [Number, String] // default: undefined

    },
    imgHeight: {
      // Sniffed by carousel-slide
      type: [Number, String] // default: undefined

    },
    background: {
      type: String // default: undefined

    },
    value: {
      type: Number,
      default: 0
    }
  },
  data: function data() {
    return {
      index: this.value || 0,
      isSliding: false,
      transitionEndEvent: null,
      slides: [],
      direction: null,
      isPaused: !(parseInt(this.interval, 10) > 0),
      // Touch event handling values
      touchStartX: 0,
      touchDeltaX: 0
    };
  },
  computed: {
    numSlides: function numSlides() {
      return this.slides.length;
    }
  },
  watch: {
    value: function value(newVal, oldVal) {
      if (newVal !== oldVal) {
        this.setSlide(parseInt(newVal, 10) || 0);
      }
    },
    interval: function interval(newVal, oldVal) {
      if (newVal === oldVal) {
        /* istanbul ignore next */
        return;
      }

      if (!newVal) {
        // Pausing slide show
        this.pause(false);
      } else {
        // Restarting or Changing interval
        this.pause(true);
        this.start(false);
      }
    },
    isPaused: function isPaused(newVal, oldVal) {
      if (newVal !== oldVal) {
        this.$emit(newVal ? 'paused' : 'unpaused');
      }
    },
    index: function index(to, from) {
      if (to === from || this.isSliding) {
        /* istanbul ignore next */
        return;
      }

      this.doSlide(to, from);
    }
  },
  created: function created() {
    // Create private non-reactive props
    this._intervalId = null;
    this._animationTimeout = null;
    this._touchTimeout = null; // Set initial paused state

    this.isPaused = !(parseInt(this.interval, 10) > 0);
  },
  mounted: function mounted() {
    // Cache current browser transitionend event name
    this.transitionEndEvent = getTransitionEndEvent(this.$el) || null; // Get all slides

    this.updateSlides(); // Observe child changes so we can update slide list

    (0, _observeDom.default)(this.$refs.inner, this.updateSlides.bind(this), {
      subtree: false,
      childList: true,
      attributes: true,
      attributeFilter: ['id']
    });
  },
  beforeDestroy: function beforeDestroy() {
    clearTimeout(this._animationTimeout);
    clearTimeout(this._touchTimeout);
    clearInterval(this._intervalId);
    this._intervalId = null;
    this._animationTimeout = null;
    this._touchTimeout = null;
  },
  methods: {
    // Set slide
    setSlide: function setSlide(slide) {
      var _this = this;

      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // Don't animate when page is not visible

      /* istanbul ignore if: difficult to test */

      if (_env.isBrowser && document.visibilityState && document.hidden) {
        return;
      }

      var noWrap = this.noWrap;
      var numSlides = this.numSlides; // Make sure we have an integer (you never know!)

      slide = Math.floor(slide); // Don't do anything if nothing to slide to

      if (numSlides === 0) {
        return;
      } // Don't change slide while transitioning, wait until transition is done


      if (this.isSliding) {
        // Schedule slide after sliding complete
        this.$once('sliding-end', function () {
          return _this.setSlide(slide, direction);
        });
        return;
      }

      this.direction = direction; // Set new slide index
      // Wrap around if necessary (if no-wrap not enabled)

      this.index = slide >= numSlides ? noWrap ? numSlides - 1 : 0 : slide < 0 ? noWrap ? 0 : numSlides - 1 : slide; // Ensure the v-model is synched up if no-wrap is enabled
      // and user tried to slide pass either ends

      if (noWrap && this.index !== slide && this.index !== this.value) {
        this.$emit('input', this.index);
      }
    },
    // Previous slide
    prev: function prev() {
      this.setSlide(this.index - 1, 'prev');
    },
    // Next slide
    next: function next() {
      this.setSlide(this.index + 1, 'next');
    },
    // Pause auto rotation
    pause: function pause(evt) {
      if (!evt) {
        this.isPaused = true;
      }

      if (this._intervalId) {
        clearInterval(this._intervalId);
        this._intervalId = null;
      }
    },
    // Start auto rotate slides
    start: function start(evt) {
      if (!evt) {
        this.isPaused = false;
      }
      /* istanbul ignore next: most likely will never happen, but just in case */


      if (this._intervalId) {
        clearInterval(this._intervalId);
        this._intervalId = null;
      } // Don't start if no interval, or less than 2 slides


      if (this.interval && this.numSlides > 1) {
        this._intervalId = setInterval(this.next, Math.max(1000, this.interval));
      }
    },
    // Restart auto rotate slides when focus/hover leaves the carousel
    restart: function restart(evt)
    /* istanbul ignore next: difficult to test */
    {
      if (!this.$el.contains(document.activeElement)) {
        this.start();
      }
    },
    doSlide: function doSlide(to, from) {
      var _this2 = this;

      var isCycling = Boolean(this.interval); // Determine sliding direction

      var direction = this.calcDirection(this.direction, from, to);
      var overlayClass = direction.overlayClass;
      var dirClass = direction.dirClass; // Determine current and next slides

      var currentSlide = this.slides[from];
      var nextSlide = this.slides[to]; // Don't do anything if there aren't any slides to slide to

      if (!currentSlide || !nextSlide) {
        /* istanbul ignore next */
        return;
      } // Start animating


      this.isSliding = true;

      if (isCycling) {
        this.pause(false);
      }

      this.$emit('sliding-start', to); // Update v-model

      this.$emit('input', this.index);

      if (this.noAnimation) {
        (0, _dom.addClass)(nextSlide, 'active');
        (0, _dom.removeClass)(currentSlide, 'active');
        this.isSliding = false; // Notify ourselves that we're done sliding (slid)

        this.$nextTick(function () {
          return _this2.$emit('sliding-end', to);
        });
      } else {
        (0, _dom.addClass)(nextSlide, overlayClass); // Trigger a reflow of next slide

        (0, _dom.reflow)(nextSlide);
        (0, _dom.addClass)(currentSlide, dirClass);
        (0, _dom.addClass)(nextSlide, dirClass); // Transition End handler

        var called = false;
        /* istanbul ignore next: difficult to test */

        var onceTransEnd = function onceTransEnd(evt) {
          if (called) {
            return;
          }

          called = true;
          /* istanbul ignore if: transition events cant be tested in JSDOM */

          if (_this2.transitionEndEvent) {
            var events = _this2.transitionEndEvent.split(/\s+/);

            events.forEach(function (evt) {
              return (0, _dom.eventOff)(currentSlide, evt, onceTransEnd, EventOptions);
            });
          }

          _this2._animationTimeout = null;
          (0, _dom.removeClass)(nextSlide, dirClass);
          (0, _dom.removeClass)(nextSlide, overlayClass);
          (0, _dom.addClass)(nextSlide, 'active');
          (0, _dom.removeClass)(currentSlide, 'active');
          (0, _dom.removeClass)(currentSlide, dirClass);
          (0, _dom.removeClass)(currentSlide, overlayClass);
          (0, _dom.setAttr)(currentSlide, 'aria-current', 'false');
          (0, _dom.setAttr)(nextSlide, 'aria-current', 'true');
          (0, _dom.setAttr)(currentSlide, 'aria-hidden', 'true');
          (0, _dom.setAttr)(nextSlide, 'aria-hidden', 'false');
          _this2.isSliding = false;
          _this2.direction = null; // Notify ourselves that we're done sliding (slid)

          _this2.$nextTick(function () {
            return _this2.$emit('sliding-end', to);
          });
        }; // Set up transitionend handler

        /* istanbul ignore if: transition events cant be tested in JSDOM */


        if (this.transitionEndEvent) {
          var events = this.transitionEndEvent.split(/\s+/);
          events.forEach(function (event) {
            return (0, _dom.eventOn)(currentSlide, event, onceTransEnd, EventOptions);
          });
        } // Fallback to setTimeout()


        this._animationTimeout = setTimeout(onceTransEnd, TRANS_DURATION);
      }

      if (isCycling) {
        this.start(false);
      }
    },
    // Update slide list
    updateSlides: function updateSlides() {
      this.pause(true); // Get all slides as DOM elements

      this.slides = (0, _dom.selectAll)('.carousel-item', this.$refs.inner);
      var numSlides = this.slides.length; // Keep slide number in range

      var index = Math.max(0, Math.min(Math.floor(this.index), numSlides - 1));
      this.slides.forEach(function (slide, idx) {
        var n = idx + 1;

        if (idx === index) {
          (0, _dom.addClass)(slide, 'active');
          (0, _dom.setAttr)(slide, 'aria-current', 'true');
        } else {
          (0, _dom.removeClass)(slide, 'active');
          (0, _dom.setAttr)(slide, 'aria-current', 'false');
        }

        (0, _dom.setAttr)(slide, 'aria-posinset', String(n));
        (0, _dom.setAttr)(slide, 'aria-setsize', String(numSlides));
      }); // Set slide as active

      this.setSlide(index);
      this.start(this.isPaused);
    },
    calcDirection: function calcDirection() {
      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var curIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var nextIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

      if (!direction) {
        return nextIndex > curIndex ? DIRECTION.next : DIRECTION.prev;
      }

      return DIRECTION[direction];
    },
    handleClick: function handleClick(evt, fn) {
      var keyCode = evt.keyCode;

      if (evt.type === 'click' || keyCode === _keyCodes.default.SPACE || keyCode === _keyCodes.default.ENTER) {
        evt.preventDefault();
        evt.stopPropagation();
        fn();
      }
    },
    handleSwipe: function handleSwipe()
    /* istanbul ignore next: JSDOM doesn't support touch events */
    {
      var absDeltaX = Math.abs(this.touchDeltaX);

      if (absDeltaX <= SWIPE_THRESHOLD) {
        return;
      }

      var direction = absDeltaX / this.touchDeltaX; // Reset touch delta X
      // https://github.com/twbs/bootstrap/pull/28558

      this.touchDeltaX = 0;

      if (direction > 0) {
        // Swipe left
        this.prev();
      } else if (direction < 0) {
        // Swipe right
        this.next();
      }
    },
    touchStart: function touchStart(evt)
    /* istanbul ignore next: JSDOM doesn't support touch events */
    {
      if (_env.hasPointerEventSupport && PointerType[evt.pointerType.toUpperCase()]) {
        this.touchStartX = evt.clientX;
      } else if (!_env.hasPointerEventSupport) {
        this.touchStartX = evt.touches[0].clientX;
      }
    },
    touchMove: function touchMove(evt)
    /* istanbul ignore next: JSDOM doesn't support touch events */
    {
      // Ensure swiping with one touch and not pinching
      if (evt.touches && evt.touches.length > 1) {
        this.touchDeltaX = 0;
      } else {
        this.touchDeltaX = evt.touches[0].clientX - this.touchStartX;
      }
    },
    touchEnd: function touchEnd(evt)
    /* istanbul ignore next: JSDOM doesn't support touch events */
    {
      if (_env.hasPointerEventSupport && PointerType[evt.pointerType.toUpperCase()]) {
        this.touchDeltaX = evt.clientX - this.touchStartX;
      }

      this.handleSwipe(); // If it's a touch-enabled device, mouseenter/leave are fired as
      // part of the mouse compatibility events on first tap - the carousel
      // would stop cycling until user tapped out of it;
      // here, we listen for touchend, explicitly pause the carousel
      // (as if it's the second time we tap on it, mouseenter compat event
      // is NOT fired) and after a timeout (to allow for mouse compatibility
      // events to fire) we explicitly restart cycling

      this.pause(false);

      if (this._touchTimeout) {
        clearTimeout(this._touchTimeout);
      }

      this._touchTimeout = setTimeout(this.start, TOUCH_EVENT_COMPAT_WAIT + Math.max(1000, this.interval));
    }
  },
  render: function render(h) {
    var _this3 = this; // Wrapper for slides


    var inner = h('div', {
      ref: 'inner',
      class: ['carousel-inner'],
      attrs: {
        id: this.safeId('__BV_inner_'),
        role: 'list'
      }
    }, [this.normalizeSlot('default')]); // Prev and next controls

    var controls = h();

    if (this.controls) {
      var prevHandler = function prevHandler(evt) {
        /* istanbul ignore next */
        if (!_this3.isSliding) {
          _this3.handleClick(evt, _this3.prev);
        } else {
          evt.preventDefault();
        }
      };

      var nextHandler = function nextHandler(evt) {
        /* istanbul ignore next */
        if (!_this3.isSliding) {
          _this3.handleClick(evt, _this3.next);
        } else {
          evt.preventDefault();
        }
      };

      controls = [h('a', {
        class: ['carousel-control-prev'],
        attrs: {
          href: '#',
          role: 'button',
          'aria-controls': this.safeId('__BV_inner_'),
          'aria-disabled': this.isSliding ? 'true' : null
        },
        on: {
          click: prevHandler,
          keydown: prevHandler
        }
      }, [h('span', {
        class: ['carousel-control-prev-icon'],
        attrs: {
          'aria-hidden': 'true'
        }
      }), h('span', {
        class: ['sr-only']
      }, [this.labelPrev])]), h('a', {
        class: ['carousel-control-next'],
        attrs: {
          href: '#',
          role: 'button',
          'aria-controls': this.safeId('__BV_inner_'),
          'aria-disabled': this.isSliding ? 'true' : null
        },
        on: {
          click: nextHandler,
          keydown: nextHandler
        }
      }, [h('span', {
        class: ['carousel-control-next-icon'],
        attrs: {
          'aria-hidden': 'true'
        }
      }), h('span', {
        class: ['sr-only']
      }, [this.labelNext])])];
    } // Indicators


    var indicators = h('ol', {
      class: ['carousel-indicators'],
      directives: [{
        name: 'show',
        rawName: 'v-show',
        value: this.indicators,
        expression: 'indicators'
      }],
      attrs: {
        id: this.safeId('__BV_indicators_'),
        'aria-hidden': this.indicators ? 'false' : 'true',
        'aria-label': this.labelIndicators,
        'aria-owns': this.safeId('__BV_inner_')
      }
    }, this.slides.map(function (slide, n) {
      return h('li', {
        key: "slide_".concat(n),
        class: {
          active: n === _this3.index
        },
        attrs: {
          role: 'button',
          id: _this3.safeId("__BV_indicator_".concat(n + 1, "_")),
          tabindex: _this3.indicators ? '0' : '-1',
          'aria-current': n === _this3.index ? 'true' : 'false',
          'aria-label': "".concat(_this3.labelGotoSlide, " ").concat(n + 1),
          'aria-describedby': _this3.slides[n].id || null,
          'aria-controls': _this3.safeId('__BV_inner_')
        },
        on: {
          click: function click(evt) {
            _this3.handleClick(evt, function () {
              _this3.setSlide(n);
            });
          },
          keydown: function keydown(evt) {
            _this3.handleClick(evt, function () {
              _this3.setSlide(n);
            });
          }
        }
      });
    }));
    var on = {
      mouseenter: this.noHoverPause ? _noop.default : this.pause,
      mouseleave: this.noHoverPause ? _noop.default : this.restart,
      focusin: this.pause,
      focusout: this.restart,
      keydown: function keydown(evt) {
        if (/input|textarea/i.test(evt.target.tagName)) {
          /* istanbul ignore next */
          return;
        }

        var keyCode = evt.keyCode;

        if (keyCode === _keyCodes.default.LEFT || keyCode === _keyCodes.default.RIGHT) {
          evt.preventDefault();
          evt.stopPropagation();

          _this3[keyCode === _keyCodes.default.LEFT ? 'prev' : 'next']();
        }
      }
    }; // Touch support event handlers for environment

    if (!this.noTouch && _env.hasTouchSupport) {
      // Attach appropriate listeners (prepend event name with '&' for passive mode)

      /* istanbul ignore next: JSDOM doesn't support touch events */
      if (_env.hasPointerEventSupport) {
        on['&pointerdown'] = this.touchStart;
        on['&pointerup'] = this.touchEnd;
      } else {
        on['&touchstart'] = this.touchStart;
        on['&touchmove'] = this.touchMove;
        on['&touchend'] = this.touchEnd;
      }
    } // Return the carousel


    return h('div', {
      staticClass: 'carousel',
      class: {
        slide: !this.noAnimation,
        'carousel-fade': !this.noAnimation && this.fade,
        'pointer-event': !this.noTouch && _env.hasTouchSupport && _env.hasPointerEventSupport
      },
      style: {
        background: this.background
      },
      attrs: {
        role: 'region',
        id: this.safeId(),
        'aria-busy': this.isSliding ? 'true' : 'false'
      },
      on: on
    }, [inner, controls, indicators]);
  }
});

exports.BCarousel = BCarousel;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../../utils/noop":"node_modules/bootstrap-vue/esm/utils/noop.js","../../utils/observe-dom":"node_modules/bootstrap-vue/esm/utils/observe-dom.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/carousel/carousel-slide.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCarouselSlide = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _env = require("../../utils/env");

var _html = require("../../utils/html");

var _img = require("../image/img");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  imgSrc: {
    type: String // default: undefined

  },
  imgAlt: {
    type: String // default: undefined

  },
  imgWidth: {
    type: [Number, String] // default: undefined

  },
  imgHeight: {
    type: [Number, String] // default: undefined

  },
  imgBlank: {
    type: Boolean,
    default: false
  },
  imgBlankColor: {
    type: String,
    default: 'transparent'
  },
  contentVisibleUp: {
    type: String
  },
  contentTag: {
    type: String,
    default: 'div'
  },
  caption: {
    type: String
  },
  captionHtml: {
    type: String
  },
  captionTag: {
    type: String,
    default: 'h3'
  },
  text: {
    type: String
  },
  textHtml: {
    type: String
  },
  textTag: {
    type: String,
    default: 'p'
  },
  background: {
    type: String
  }
}; // @vue/component

exports.props = props;

var BCarouselSlide =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCarouselSlide',
  mixins: [_id.default, _normalizeSlot.default],
  inject: {
    bvCarousel: {
      default: function _default() {
        return {
          // Explicitly disable touch if not a child of carousel
          noTouch: true
        };
      }
    }
  },
  props: props,
  computed: {
    contentClasses: function contentClasses() {
      return [this.contentVisibleUp ? 'd-none' : '', this.contentVisibleUp ? "d-".concat(this.contentVisibleUp, "-block") : ''];
    },
    computedWidth: function computedWidth() {
      // Use local width, or try parent width
      return this.imgWidth || this.bvCarousel.imgWidth || null;
    },
    computedHeight: function computedHeight() {
      // Use local height, or try parent height
      return this.imgHeight || this.bvCarousel.imgHeight || null;
    }
  },
  render: function render(h) {
    var noDrag = !this.bvCarousel.noTouch && _env.hasTouchSupport;
    var img = this.normalizeSlot('img');

    if (!img && (this.imgSrc || this.imgBlank)) {
      img = h(_img.BImg, {
        props: {
          fluidGrow: true,
          block: true,
          src: this.imgSrc,
          blank: this.imgBlank,
          blankColor: this.imgBlankColor,
          width: this.computedWidth,
          height: this.computedHeight,
          alt: this.imgAlt
        },
        // Touch support event handler
        on: noDrag ? {
          dragstart: function dragstart(e) {
            /* istanbul ignore next: difficult to test in JSDOM */
            e.preventDefault();
          }
        } : {}
      });
    }

    if (!img) {
      img = h();
    }

    var content = h();
    var contentChildren = [this.caption || this.captionHtml ? h(this.captionTag, {
      domProps: (0, _html.htmlOrText)(this.captionHtml, this.caption)
    }) : false, this.text || this.textHtml ? h(this.textTag, {
      domProps: (0, _html.htmlOrText)(this.textHtml, this.text)
    }) : false, this.normalizeSlot('default') || false];

    if (contentChildren.some(Boolean)) {
      content = h(this.contentTag, {
        staticClass: 'carousel-caption',
        class: this.contentClasses
      }, contentChildren.map(function (i) {
        return i || h();
      }));
    }

    return h('div', {
      staticClass: 'carousel-item',
      style: {
        background: this.background || this.bvCarousel.background || null
      },
      attrs: {
        id: this.safeId(),
        role: 'listitem'
      }
    }, [img, content]);
  }
});

exports.BCarouselSlide = BCarouselSlide;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../image/img":"node_modules/bootstrap-vue/esm/components/image/img.js"}],"node_modules/bootstrap-vue/esm/components/carousel/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BCarousel", {
  enumerable: true,
  get: function () {
    return _carousel.BCarousel;
  }
});
Object.defineProperty(exports, "BCarouselSlide", {
  enumerable: true,
  get: function () {
    return _carouselSlide.BCarouselSlide;
  }
});
exports.CarouselPlugin = void 0;

var _carousel = require("./carousel");

var _carouselSlide = require("./carousel-slide");

var _plugins = require("../../utils/plugins");

var CarouselPlugin =
/*#__PURE*/
(0, _plugins.pluginFactory)({
  components: {
    BCarousel: _carousel.BCarousel,
    BCarouselSlide: _carouselSlide.BCarouselSlide
  }
});
exports.CarouselPlugin = CarouselPlugin;
},{"./carousel":"node_modules/bootstrap-vue/esm/components/carousel/carousel.js","./carousel-slide":"node_modules/bootstrap-vue/esm/components/carousel/carousel-slide.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Issue #569: collapse::toggle::state triggered too many times
 * @link https://github.com/bootstrap-vue/bootstrap-vue/issues/569
 */
// @vue/component
var _default = {
  methods: {
    /**
     * Safely register event listeners on the root Vue node.
     * While Vue automatically removes listeners for individual components,
     * when a component registers a listener on root and is destroyed,
     * this orphans a callback because the node is gone,
     * but the root does not clear the callback.
     *
     * When registering a $root listener, it also registers a listener on
     * the component's `beforeDestroy` hook to automatically remove the
     * event listener from the $root instance.
     *
     * @param {string} event
     * @param {function} callback
     * @chainable
     */
    listenOnRoot: function listenOnRoot(event, callback) {
      var _this = this;

      this.$root.$on(event, callback);
      this.$on('hook:beforeDestroy', function () {
        _this.$root.$off(event, callback);
      }); // Return this for easy chaining

      return this;
    },

    /**
     * Safely register a $once event listener on the root Vue node.
     * While Vue automatically removes listeners for individual components,
     * when a component registers a listener on root and is destroyed,
     * this orphans a callback because the node is gone,
     * but the root does not clear the callback.
     *
     * When registering a $root listener, it also registers a listener on
     * the component's `beforeDestroy` hook to automatically remove the
     * event listener from the $root instance.
     *
     * @param {string} event
     * @param {function} callback
     * @chainable
     */
    listenOnRootOnce: function listenOnRootOnce(event, callback) {
      var _this2 = this;

      this.$root.$once(event, callback);
      this.$on('hook:beforeDestroy', function () {
        _this2.$root.$off(event, callback);
      }); // Return this for easy chaining

      return this;
    },

    /**
     * Convenience method for calling vm.$emit on vm.$root.
     * @param {string} event
     * @param {*} args
     * @chainable
     */
    emitOnRoot: function emitOnRoot(event) {
      var _this$$root;

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      (_this$$root = this.$root).$emit.apply(_this$$root, [event].concat(args)); // Return this for easy chaining


      return this;
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/collapse/collapse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCollapse = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _listenOnRoot = _interopRequireDefault(require("../../mixins/listen-on-root"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _env = require("../../utils/env");

var _dom = require("../../utils/dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Events we emit on $root
var EVENT_STATE = 'bv::collapse::state';
var EVENT_ACCORDION = 'bv::collapse::accordion'; // Private event we emit on `$root` to ensure the toggle state is
// always synced. It gets emitted even if the state has not changed!
// This event is NOT to be documented as people should not be using it

var EVENT_STATE_SYNC = 'bv::collapse::sync::state'; // Events we listen to on `$root`

var EVENT_TOGGLE = 'bv::toggle::collapse';
var EVENT_STATE_REQUEST = 'bv::request::collapse::state'; // Event listener options

var EventOptions = {
  passive: true,
  capture: false
}; // @vue/component

var BCollapse =
/*#__PURE__*/
_vue.default.extend({
  name: 'BCollapse',
  mixins: [_id.default, _listenOnRoot.default, _normalizeSlot.default],
  model: {
    prop: 'visible',
    event: 'input'
  },
  props: {
    isNav: {
      type: Boolean,
      default: false
    },
    accordion: {
      type: String,
      default: null
    },
    visible: {
      type: Boolean,
      default: false
    },
    tag: {
      type: String,
      default: 'div'
    }
  },
  data: function data() {
    return {
      show: this.visible,
      transitioning: false
    };
  },
  computed: {
    classObject: function classObject() {
      return {
        'navbar-collapse': this.isNav,
        collapse: !this.transitioning,
        show: this.show && !this.transitioning
      };
    }
  },
  watch: {
    visible: function visible(newVal) {
      if (newVal !== this.show) {
        this.show = newVal;
      }
    },
    show: function show(newVal, oldVal) {
      if (newVal !== oldVal) {
        this.emitState();
      }
    }
  },
  created: function created() {
    this.show = this.visible;
  },
  mounted: function mounted() {
    var _this = this;

    this.show = this.visible; // Listen for toggle events to open/close us

    this.listenOnRoot(EVENT_TOGGLE, this.handleToggleEvt); // Listen to other collapses for accordion events

    this.listenOnRoot(EVENT_ACCORDION, this.handleAccordionEvt);

    if (this.isNav) {
      // Set up handlers
      this.setWindowEvents(true);
      this.handleResize();
    }

    this.$nextTick(function () {
      _this.emitState();
    }); // Listen for "Sync state" requests from `v-b-toggle`

    this.listenOnRoot(EVENT_STATE_REQUEST, function (id) {
      if (id === _this.safeId()) {
        _this.$nextTick(_this.emitSync);
      }
    });
  },
  updated: function updated() {
    // Emit a private event every time this component updates to ensure
    // the toggle button is in sync with the collapse's state
    // It is emitted regardless if the visible state changes
    this.emitSync();
  },
  deactivated: function deactivated()
  /* istanbul ignore next */
  {
    if (this.isNav) {
      this.setWindowEvents(false);
    }
  },
  activated: function activated()
  /* istanbul ignore next */
  {
    if (this.isNav) {
      this.setWindowEvents(true);
    }

    this.emitSync();
  },
  beforeDestroy: function beforeDestroy() {
    // Trigger state emit if needed
    this.show = false;

    if (this.isNav && _env.isBrowser) {
      this.setWindowEvents(false);
    }
  },
  methods: {
    setWindowEvents: function setWindowEvents(on) {
      var method = on ? _dom.eventOn : _dom.eventOff;
      method(window, 'resize', this.handleResize, EventOptions);
      method(window, 'orientationchange', this.handleResize, EventOptions);
    },
    toggle: function toggle() {
      this.show = !this.show;
    },
    onEnter: function onEnter(el) {
      el.style.height = 0;
      (0, _dom.reflow)(el);
      el.style.height = el.scrollHeight + 'px';
      this.transitioning = true; // This should be moved out so we can add cancellable events

      this.$emit('show');
    },
    onAfterEnter: function onAfterEnter(el) {
      el.style.height = null;
      this.transitioning = false;
      this.$emit('shown');
    },
    onLeave: function onLeave(el) {
      el.style.height = 'auto';
      el.style.display = 'block';
      el.style.height = (0, _dom.getBCR)(el).height + 'px';
      (0, _dom.reflow)(el);
      this.transitioning = true;
      el.style.height = 0; // This should be moved out so we can add cancellable events

      this.$emit('hide');
    },
    onAfterLeave: function onAfterLeave(el) {
      el.style.height = null;
      this.transitioning = false;
      this.$emit('hidden');
    },
    emitState: function emitState() {
      this.$emit('input', this.show); // Let v-b-toggle know the state of this collapse

      this.$root.$emit(EVENT_STATE, this.safeId(), this.show);

      if (this.accordion && this.show) {
        // Tell the other collapses in this accordion to close
        this.$root.$emit(EVENT_ACCORDION, this.safeId(), this.accordion);
      }
    },
    emitSync: function emitSync() {
      // Emit a private event every time this component updates to ensure
      // the toggle button is in sync with the collapse's state
      // It is emitted regardless if the visible state changes
      this.$root.$emit(EVENT_STATE_SYNC, this.safeId(), this.show);
    },
    checkDisplayBlock: function checkDisplayBlock() {
      // Check to see if the collapse has `display: block !important;` set.
      // We can't set `display: none;` directly on this.$el, as it would
      // trigger a new transition to start (or cancel a current one).
      var restore = (0, _dom.hasClass)(this.$el, 'show');
      (0, _dom.removeClass)(this.$el, 'show');
      var isBlock = (0, _dom.getCS)(this.$el).display === 'block';
      restore && (0, _dom.addClass)(this.$el, 'show');
      return isBlock;
    },
    clickHandler: function clickHandler(evt) {
      // If we are in a nav/navbar, close the collapse when non-disabled link clicked
      var el = evt.target;

      if (!this.isNav || !el || (0, _dom.getCS)(this.$el).display !== 'block') {
        /* istanbul ignore next: can't test getComputedStyle in JSDOM */
        return;
      }

      if ((0, _dom.matches)(el, '.nav-link,.dropdown-item') || (0, _dom.closest)('.nav-link,.dropdown-item', el)) {
        if (!this.checkDisplayBlock()) {
          // Only close the collapse if it is not forced to be 'display: block !important;'
          this.show = false;
        }
      }
    },
    handleToggleEvt: function handleToggleEvt(target) {
      if (target !== this.safeId()) {
        return;
      }

      this.toggle();
    },
    handleAccordionEvt: function handleAccordionEvt(openedId, accordion) {
      if (!this.accordion || accordion !== this.accordion) {
        return;
      }

      if (openedId === this.safeId()) {
        // Open this collapse if not shown
        if (!this.show) {
          this.toggle();
        }
      } else {
        // Close this collapse if shown
        if (this.show) {
          this.toggle();
        }
      }
    },
    handleResize: function handleResize() {
      // Handler for orientation/resize to set collapsed state in nav/navbar
      this.show = (0, _dom.getCS)(this.$el).display === 'block';
    }
  },
  render: function render(h) {
    var content = h(this.tag, {
      class: this.classObject,
      directives: [{
        name: 'show',
        value: this.show
      }],
      attrs: {
        id: this.safeId()
      },
      on: {
        click: this.clickHandler
      }
    }, [this.normalizeSlot('default')]);
    return h('transition', {
      props: {
        enterClass: '',
        enterActiveClass: 'collapsing',
        enterToClass: '',
        leaveClass: '',
        leaveActiveClass: 'collapsing',
        leaveToClass: ''
      },
      on: {
        enter: this.onEnter,
        afterEnter: this.onAfterEnter,
        leave: this.onLeave,
        afterLeave: this.onAfterLeave
      }
    }, [content]);
  }
});

exports.BCollapse = BCollapse;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/listen-on-root":"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js"}],"node_modules/bootstrap-vue/esm/utils/target.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getTargets = exports.unbindTargets = exports.bindTargets = void 0;

var _object = require("./object");

var _dom = require("./dom");

var allListenTypes = {
  hover: true,
  click: true,
  focus: true
};
var BVBoundListeners = '__BV_boundEventListeners__';

var getTargets = function getTargets(binding) {
  var targets = (0, _object.keys)(binding.modifiers || {}).filter(function (t) {
    return !allListenTypes[t];
  });

  if (binding.value) {
    targets.push(binding.value);
  }

  return targets;
};

exports.getTargets = getTargets;

var bindTargets = function bindTargets(vnode, binding, listenTypes, fn) {
  var targets = getTargets(binding);

  var listener = function listener() {
    fn({
      targets: targets,
      vnode: vnode
    });
  };

  (0, _object.keys)(allListenTypes).forEach(function (type) {
    if (listenTypes[type] || binding.modifiers[type]) {
      (0, _dom.eventOn)(vnode.elm, type, listener);
      var boundListeners = vnode.elm[BVBoundListeners] || {};
      boundListeners[type] = boundListeners[type] || [];
      boundListeners[type].push(listener);
      vnode.elm[BVBoundListeners] = boundListeners;
    }
  }); // Return the list of targets

  return targets;
};

exports.bindTargets = bindTargets;

var unbindTargets = function unbindTargets(vnode, binding, listenTypes) {
  (0, _object.keys)(allListenTypes).forEach(function (type) {
    if (listenTypes[type] || binding.modifiers[type]) {
      var boundListeners = vnode.elm[BVBoundListeners] && vnode.elm[BVBoundListeners][type];

      if (boundListeners) {
        boundListeners.forEach(function (listener) {
          return (0, _dom.eventOff)(vnode.elm, type, listener);
        });
        delete vnode.elm[BVBoundListeners][type];
      }
    }
  });
};

exports.unbindTargets = unbindTargets;
var _default = bindTargets;
exports.default = _default;
},{"./object":"node_modules/bootstrap-vue/esm/utils/object.js","./dom":"node_modules/bootstrap-vue/esm/utils/dom.js"}],"node_modules/bootstrap-vue/esm/directives/toggle/toggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VBToggle = void 0;

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

var _dom = require("../../utils/dom");

var _env = require("../../utils/env");

var _target = require("../../utils/target");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Target listen types
var listenTypes = {
  click: true
}; // Property key for handler storage

var BV_TOGGLE = '__BV_toggle__';
var BV_TOGGLE_STATE = '__BV_toggle_STATE__';
var BV_TOGGLE_CONTROLS = '__BV_toggle_CONTROLS__';
var BV_TOGGLE_TARGETS = '__BV_toggle_TARGETS__'; // Emitted control event for collapse (emitted to collapse)

var EVENT_TOGGLE = 'bv::toggle::collapse'; // Listen to event for toggle state update (emitted by collapse)

var EVENT_STATE = 'bv::collapse::state'; // Private event emitted on $root to ensure the toggle state is always synced.
// Gets emitted even if the state of b-collapse has not changed.
// This event is NOT to be documented as people should not be using it.

var EVENT_STATE_SYNC = 'bv::collapse::sync::state'; // Private event we send to collapse to request state update sync event

var EVENT_STATE_REQUEST = 'bv::request::collapse::state'; // Reset and remove a property from the provided element

var resetProp = function resetProp(el, prop) {
  el[prop] = null;
  delete el[prop];
}; // Handle targets update


var handleTargets = function handleTargets(_ref) {
  var targets = _ref.targets,
      vnode = _ref.vnode;
  targets.forEach(function (target) {
    vnode.context.$root.$emit(EVENT_TOGGLE, target);
  });
}; // Handle directive updates

/* istanbul ignore next: not easy to test */


var handleUpdate = function handleUpdate(el, binding, vnode) {
  if (!_env.isBrowser) {
    return;
  }

  if (!(0, _looseEqual.default)((0, _target.getTargets)(binding), el[BV_TOGGLE_TARGETS])) {
    // Targets have changed, so update accordingly
    (0, _target.unbindTargets)(vnode, binding, listenTypes);
    var targets = (0, _target.bindTargets)(vnode, binding, listenTypes, handleTargets); // Update targets array to element

    el[BV_TOGGLE_TARGETS] = targets; // Add aria attributes to element

    el[BV_TOGGLE_CONTROLS] = targets.join(' '); // ensure aria-controls is up to date

    (0, _dom.setAttr)(el, 'aria-controls', el[BV_TOGGLE_CONTROLS]); // Request a state update from targets so that we can ensure
    // expanded state is correct

    targets.forEach(function (target) {
      vnode.context.$root.$emit(EVENT_STATE_REQUEST, target);
    });
  } // Ensure the collapse class and aria-* attributes persist
  // after element is updated (either by parent re-rendering
  // or changes to this element or it's contents


  if (el[BV_TOGGLE_STATE] === true) {
    (0, _dom.addClass)(el, 'collapsed');
    (0, _dom.setAttr)(el, 'aria-expanded', 'true');
  } else if (el[BV_TOGGLE_STATE] === false) {
    (0, _dom.removeClass)(el, 'collapsed');
    (0, _dom.setAttr)(el, 'aria-expanded', 'false');
  }

  (0, _dom.setAttr)(el, 'aria-controls', el[BV_TOGGLE_CONTROLS]);
};
/*
 * Export our directive
 */


var VBToggle = {
  bind: function bind(el, binding, vnode) {
    var targets = (0, _target.bindTargets)(vnode, binding, listenTypes, handleTargets);

    if (_env.isBrowser && vnode.context && targets.length > 0) {
      // Add targets array to element
      el[BV_TOGGLE_TARGETS] = targets; // Add aria attributes to element

      el[BV_TOGGLE_CONTROLS] = targets.join(' '); // State is initially collapsed until we receive a state event

      el[BV_TOGGLE_STATE] = false;
      (0, _dom.setAttr)(el, 'aria-controls', el[BV_TOGGLE_CONTROLS]);
      (0, _dom.setAttr)(el, 'aria-expanded', 'false'); // If element is not a button, we add `role="button"` for accessibility

      if (el.tagName !== 'BUTTON' && !(0, _dom.hasAttr)(el, 'role')) {
        (0, _dom.setAttr)(el, 'role', 'button');
      } // Toggle state handler


      var toggleDirectiveHandler = function toggleDirectiveHandler(id, state) {
        var targets = el[BV_TOGGLE_TARGETS] || [];

        if (targets.indexOf(id) !== -1) {
          // Set aria-expanded state
          (0, _dom.setAttr)(el, 'aria-expanded', state ? 'true' : 'false'); // Set/Clear 'collapsed' class state

          el[BV_TOGGLE_STATE] = state;

          if (state) {
            (0, _dom.removeClass)(el, 'collapsed');
          } else {
            (0, _dom.addClass)(el, 'collapsed');
          }
        }
      }; // Store the toggle handler on the element


      el[BV_TOGGLE] = toggleDirectiveHandler; // Listen for toggle state changes (public)

      vnode.context.$root.$on(EVENT_STATE, el[BV_TOGGLE]); // Listen for toggle state sync (private)

      vnode.context.$root.$on(EVENT_STATE_SYNC, el[BV_TOGGLE]);
    }
  },
  componentUpdated: handleUpdate,
  updated: handleUpdate,
  unbind: function unbind(el, binding, vnode)
  /* istanbul ignore next */
  {
    (0, _target.unbindTargets)(vnode, binding, listenTypes); // Remove our $root listener

    if (el[BV_TOGGLE]) {
      vnode.context.$root.$off(EVENT_STATE, el[BV_TOGGLE]);
      vnode.context.$root.$off(EVENT_STATE_SYNC, el[BV_TOGGLE]);
    } // Reset custom  props


    resetProp(el, BV_TOGGLE);
    resetProp(el, BV_TOGGLE_STATE);
    resetProp(el, BV_TOGGLE_CONTROLS);
    resetProp(el, BV_TOGGLE_TARGETS); // Reset classes/attrs

    (0, _dom.removeClass)(el, 'collapsed');
    (0, _dom.removeAttr)(el, 'aria-expanded');
    (0, _dom.removeAttr)(el, 'aria-controls');
    (0, _dom.removeAttr)(el, 'role');
  }
};
exports.VBToggle = VBToggle;
},{"../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/target":"node_modules/bootstrap-vue/esm/utils/target.js"}],"node_modules/bootstrap-vue/esm/components/collapse/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BCollapse", {
  enumerable: true,
  get: function () {
    return _collapse.BCollapse;
  }
});
exports.CollapsePlugin = void 0;

var _collapse = require("./collapse");

var _toggle = require("../../directives/toggle/toggle");

var _plugins = require("../../utils/plugins");

var CollapsePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BCollapse: _collapse.BCollapse
  },
  directives: {
    VBToggle: _toggle.VBToggle
  }
});
exports.CollapsePlugin = CollapsePlugin;
},{"./collapse":"node_modules/bootstrap-vue/esm/components/collapse/collapse.js","../../directives/toggle/toggle":"node_modules/bootstrap-vue/esm/directives/toggle/toggle.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/popper.js/dist/esm/popper.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.15.0
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';
var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
var timeoutDuration = 0;

for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
    timeoutDuration = 1;
    break;
  }
}

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }

    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/

var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */

function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */


function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  } // NOTE: 1 DOM access here


  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */


function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }

  return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */


function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;

    case '#document':
      return element.body;
  } // Firefox want us to check `-x` and `-y` variations as well


  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */

function isIE(version) {
  if (version === 11) {
    return isIE11;
  }

  if (version === 10) {
    return isIE10;
  }

  return isIE11 || isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */


function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here

  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent

  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  } // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...


  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }

  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */


function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */


function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  } // Here we make sure to give as "start" the element that comes first in the DOM


  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1; // Get common ancestor container

  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  } // one of the nodes is inside shadowDOM, find which one


  var element1root = getRoot(element1);

  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */


function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */


function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */


function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */


function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */


function getBoundingClientRect(element) {
  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11

  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  }; // subtract scrollbar size from sizes

  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.right - result.left;
  var height = sizes.height || element.clientHeight || result.bottom - result.top;
  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons

  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);
  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc

  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }

  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.

  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop, 10);
    var marginLeft = parseFloat(styles.marginLeft, 10);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them

    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };
  return getClientRect(offset);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */


function isFixed(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }

  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }

  var parentNode = getParentNode(element);

  if (!parentNode) {
    return false;
  }

  return isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */


function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }

  var el = element.parentElement;

  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }

  return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */


function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here

  var boundaries = {
    top: 0,
    left: 0
  };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case

  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;

    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));

      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation

    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  } // Add paddings


  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;
  return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });
  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split('-')[1];
  return computedPlacement + (variation ? '-' + variation : '');
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */


function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */


function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */


function getOppositePlacement(placement) {
  var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
  };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */


function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0]; // Get popper node sizes

  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object

  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  }; // depending by the popper placement we have to compute its offsets slightly differently

  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;

  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  } // use `filter` to obtain the same behavior of `find`


  return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  } // use `find` + `indexOf` if `findIndex` isn't supported


  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */


function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }

    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation

    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */


function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  }; // compute reference element offsets

  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`

  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed; // compute the popper offsets

  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers

  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback

  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */


function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */


function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;

    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }

  return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */


function destroy() {
  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled

  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it

  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }

  return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */


function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, {
    passive: true
  });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }

  scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, {
    passive: true
  }); // Scroll event listener on scroll parents

  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */


function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents

  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  }); // Reset state

  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */


function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */


function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = ''; // add unit if the value is numeric and is one of the following

    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }

    element.style[prop] = styles[prop] + unit;
  });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];

    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */


function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element

  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties

  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */


function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations

  setStyles(popper, {
    position: options.positionFixed ? 'fixed' : 'absolute'
  });
  return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */


function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);
  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;

  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }

  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles

  var styles = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed

  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.

  var left = void 0,
      top = void 0;

  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }

  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }

  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  } // Attributes


  var attributes = {
    'x-placement': data.placement
  }; // Update `data` attributes, styles and arrowStyles

  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */


function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';

    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }

  return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function arrow(data, options) {
  var _data$offsets$arrow; // arrow depends on keepTogether in order to work


  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector

  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier

    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isVertical = ['left', 'right'].indexOf(placement) !== -1;
  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len]; //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //
  // top/left side

  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  } // bottom/right side


  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }

  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper

  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available

  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper

  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
  return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */


function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }

  return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */


var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`

var validPlacements = placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */

function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';
  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;

    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;

    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;

    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here

    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required

    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries

    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries

    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future

      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }

  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */


function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2]; // If it's not a number it's an operator, I guess

  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;

    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;

      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;

    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }

    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */


function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one

  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)

  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  }); // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space

  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  } // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.


  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations

  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, []) // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  }); // Loop trough the offsets arrays and execute the operations

  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */


function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var basePlacement = placement.split('-')[0];
  var offsets = void 0;

  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken

  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  } // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself


  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification

  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];
  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed

  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;
  options.boundaries = boundaries;
  var order = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary(placement) {
      var value = popper[placement];

      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }

      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];

      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }

      return defineProperty({}, mainSide, value);
    }
  };
  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier

  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;
    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */


var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: offset,

    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: preventOverflow,

    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],

    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: arrow,

    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: flip,

    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',

    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',

    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,

    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,

    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,

    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: computeStyle,

    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,

    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',

    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: applyStyle,

    /** @prop {Function} */
    onLoad: applyStyleOnLoad,

    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */

var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */
// Utils
// Methods

var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    }; // make update() debounced, so that it only runs at most once-per-tick


    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it

    this.options = _extends({}, Popper.Defaults, options); // init state

    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    }; // get reference and popper elements (allow jQuery wrappers)

    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options

    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    }); // Refactoring modifiers' list (Object => Array)

    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    }) // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    }); // fire the first update to position the popper in the right place

    this.update();
    var eventsEnabled = this.options.eventsEnabled;

    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  } // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }
    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
var _default = Popper;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/utils/bv-event.class.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BvEvent = void 0;

var _object = require("./object");

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var BvEvent =
/*#__PURE__*/
function () {
  function BvEvent(type) {
    var eventInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, BvEvent); // Start by emulating native Event constructor


    if (!type) {
      /* istanbul ignore next */
      throw new TypeError("Failed to construct '".concat(this.constructor.name, "'. 1 argument required, ").concat(arguments.length, " given."));
    } // Merge defaults first, the eventInit, and the type last
    // so it can't be overwritten


    (0, _object.assign)(this, BvEvent.Defaults, this.constructor.Defaults, eventInit, {
      type: type
    }); // Freeze some props as readonly, but leave them enumerable

    (0, _object.defineProperties)(this, {
      type: (0, _object.readonlyDescriptor)(),
      cancelable: (0, _object.readonlyDescriptor)(),
      nativeEvent: (0, _object.readonlyDescriptor)(),
      target: (0, _object.readonlyDescriptor)(),
      relatedTarget: (0, _object.readonlyDescriptor)(),
      vueTarget: (0, _object.readonlyDescriptor)(),
      componentId: (0, _object.readonlyDescriptor)()
    }); // Create a private variable using closure scoping

    var defaultPrevented = false; // Recreate preventDefault method. One way setter

    this.preventDefault = function preventDefault() {
      if (this.cancelable) {
        defaultPrevented = true;
      }
    }; // Create `defaultPrevented` publicly accessible prop that
    // can only be altered by the preventDefault method


    (0, _object.defineProperty)(this, 'defaultPrevented', {
      enumerable: true,
      get: function get() {
        return defaultPrevented;
      }
    });
  }

  _createClass(BvEvent, null, [{
    key: "Defaults",
    get: function get() {
      return {
        type: '',
        cancelable: true,
        nativeEvent: null,
        target: null,
        relatedTarget: null,
        vueTarget: null,
        componentId: null
      };
    }
  }]);

  return BvEvent;
}(); // Named Exports


exports.BvEvent = BvEvent;
},{"./object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/mixins/dropdown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _popper = _interopRequireDefault(require("popper.js"));

var _keyCodes = _interopRequireDefault(require("../utils/key-codes"));

var _warn = _interopRequireDefault(require("../utils/warn"));

var _bvEvent = require("../utils/bv-event.class");

var _dom = require("../utils/dom");

var _inspect = require("../utils/inspect");

var _id = _interopRequireDefault(require("./id"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Return an array of visible items
var filterVisibles = function filterVisibles(els) {
  return (els || []).filter(_dom.isVisible);
}; // Root dropdown event names


var ROOT_DROPDOWN_PREFIX = 'bv::dropdown::';
var ROOT_DROPDOWN_SHOWN = "".concat(ROOT_DROPDOWN_PREFIX, "shown");
var ROOT_DROPDOWN_HIDDEN = "".concat(ROOT_DROPDOWN_PREFIX, "hidden"); // Delay when loosing focus before closing menu (in ms)

var FOCUSOUT_DELAY = 100; // Dropdown item CSS selectors

var Selector = {
  FORM_CHILD: '.dropdown form',
  ITEM_SELECTOR: ['.dropdown-item', '.b-dropdown-form'].map(function (selector) {
    return "".concat(selector, ":not(.disabled):not([disabled])");
  }).join(', ')
}; // Popper attachment positions

var AttachmentMap = {
  // Dropup left align
  TOP: 'top-start',
  // Dropup right align
  TOPEND: 'top-end',
  // Dropdown left align
  BOTTOM: 'bottom-start',
  // Dropdown right align
  BOTTOMEND: 'bottom-end',
  // Dropright left align
  RIGHT: 'right-start',
  // Dropright right align
  RIGHTEND: 'right-end',
  // Dropleft left align
  LEFT: 'left-start',
  // Dropleft right align
  LEFTEND: 'left-end'
}; // @vue/component

var _default2 = {
  mixins: [_id.default],
  provide: function provide() {
    return {
      bvDropdown: this
    };
  },
  props: {
    disabled: {
      type: Boolean,
      default: false
    },
    text: {
      // Button label
      type: String,
      default: ''
    },
    html: {
      // Button label
      type: String
    },
    dropup: {
      // place on top if possible
      type: Boolean,
      default: false
    },
    dropright: {
      // place right if possible
      type: Boolean,
      default: false
    },
    dropleft: {
      // place left if possible
      type: Boolean,
      default: false
    },
    right: {
      // Right align menu (default is left align)
      type: Boolean,
      default: false
    },
    offset: {
      // Number of pixels to offset menu, or a CSS unit value (i.e. 1px, 1rem, etc)
      type: [Number, String],
      default: 0
    },
    noFlip: {
      // Disable auto-flipping of menu from bottom<=>top
      type: Boolean,
      default: false
    },
    lazy: {
      // If true, only render menu contents when open
      type: Boolean,
      default: false
    },
    popperOpts: {
      // type: Object,
      default: function _default() {}
    }
  },
  data: function data() {
    return {
      visible: false,
      inNavbar: null,
      visibleChangePrevented: false
    };
  },
  computed: {
    toggler: function toggler() {
      var toggle = this.$refs.toggle;
      return toggle ? toggle.$el || toggle : null;
    },
    directionClass: function directionClass() {
      if (this.dropup) {
        return 'dropup';
      } else if (this.dropright) {
        return 'dropright';
      } else if (this.dropleft) {
        return 'dropleft';
      }

      return '';
    }
  },
  watch: {
    visible: function visible(newValue, oldValue) {
      if (this.visibleChangePrevented) {
        this.visibleChangePrevented = false;
        return;
      }

      if (newValue !== oldValue) {
        var evtName = newValue ? 'show' : 'hide';
        var bvEvt = new _bvEvent.BvEvent(evtName, {
          cancelable: true,
          vueTarget: this,
          target: this.$refs.menu,
          relatedTarget: null,
          componentId: this.safeId ? this.safeId() : this.id || null
        });
        this.emitEvent(bvEvt);

        if (bvEvt.defaultPrevented) {
          // Reset value and exit if canceled
          this.visibleChangePrevented = true;
          this.visible = oldValue; // Just in case a child element triggered this.hide(true)

          this.$off('hidden', this.focusToggler);
          return;
        }

        if (evtName === 'show') {
          this.showMenu();
        } else {
          this.hideMenu();
        }
      }
    },
    disabled: function disabled(newValue, oldValue) {
      if (newValue !== oldValue && newValue && this.visible) {
        // Hide dropdown if disabled changes to true
        this.visible = false;
      }
    }
  },
  created: function created() {
    // Create non-reactive property
    this._popper = null;
  },
  deactivated: function deactivated()
  /* istanbul ignore next: not easy to test */
  {
    // In case we are inside a `<keep-alive>`
    this.visible = false;
    this.whileOpenListen(false);
    this.removePopper();
  },
  beforeDestroy: function beforeDestroy() {
    this.visible = false;
    this.whileOpenListen(false);
    this.removePopper();
  },
  methods: {
    // Event emitter
    emitEvent: function emitEvent(bvEvt) {
      var type = bvEvt.type;
      this.$emit(type, bvEvt);
      this.$root.$emit("".concat(ROOT_DROPDOWN_PREFIX).concat(type), bvEvt);
    },
    showMenu: function showMenu() {
      var _this = this;

      if (this.disabled) {
        /* istanbul ignore next */
        return;
      } // Are we in a navbar ?


      if ((0, _inspect.isNull)(this.inNavbar) && this.isNav) {
        // We should use an injection for this

        /* istanbul ignore next */
        this.inNavbar = Boolean((0, _dom.closest)('.navbar', this.$el));
      } // Disable totally Popper.js for Dropdown in Navbar


      if (!this.inNavbar) {
        if (typeof _popper.default === 'undefined') {
          /* istanbul ignore next */
          (0, _warn.default)('b-dropdown: Popper.js not found. Falling back to CSS positioning.');
        } else {
          // for dropup with alignment we use the parent element as popper container
          var element = this.dropup && this.right || this.split ? this.$el : this.$refs.toggle; // Make sure we have a reference to an element, not a component!

          element = element.$el || element; // Instantiate popper.js

          this.createPopper(element);
        }
      } // Ensure other menus are closed


      this.$root.$emit(ROOT_DROPDOWN_SHOWN, this);
      this.whileOpenListen(true); // Wrap in nextTick to ensure menu is fully rendered/shown

      this.$nextTick(function () {
        // Focus on the menu container on show
        _this.focusMenu(); // Emit the shown event


        _this.$emit('shown');
      });
    },
    hideMenu: function hideMenu() {
      this.whileOpenListen(false);
      this.$root.$emit(ROOT_DROPDOWN_HIDDEN, this);
      this.$emit('hidden');
      this.removePopper();
    },
    createPopper: function createPopper(element) {
      this.removePopper();
      this._popper = new _popper.default(element, this.$refs.menu, this.getPopperConfig());
    },
    removePopper: function removePopper() {
      if (this._popper) {
        // Ensure popper event listeners are removed cleanly
        this._popper.destroy();
      }

      this._popper = null;
    },
    getPopperConfig: function getPopperConfig() {
      var placement = AttachmentMap.BOTTOM;

      if (this.dropup) {
        placement = this.right ? AttachmentMap.TOPEND : AttachmentMap.TOP;
      } else if (this.dropright) {
        placement = AttachmentMap.RIGHT;
      } else if (this.dropleft) {
        placement = AttachmentMap.LEFT;
      } else if (this.right) {
        placement = AttachmentMap.BOTTOMEND;
      }

      var popperConfig = {
        placement: placement,
        modifiers: {
          offset: {
            offset: this.offset || 0
          },
          flip: {
            enabled: !this.noFlip
          }
        }
      };

      if (this.boundary) {
        popperConfig.modifiers.preventOverflow = {
          boundariesElement: this.boundary
        };
      }

      return _objectSpread({}, popperConfig, {}, this.popperOpts || {});
    },
    whileOpenListen: function whileOpenListen(isOpen) {
      // turn listeners on/off while open
      if (isOpen) {
        // If another dropdown is opened
        this.$root.$on(ROOT_DROPDOWN_SHOWN, this.rootCloseListener); // Hide the menu when focus moves out

        (0, _dom.eventOn)(this.$el, 'focusout', this.onFocusOut, {
          passive: true
        });
      } else {
        this.$root.$off(ROOT_DROPDOWN_SHOWN, this.rootCloseListener);
        (0, _dom.eventOff)(this.$el, 'focusout', this.onFocusOut, {
          passive: true
        });
      }
    },
    rootCloseListener: function rootCloseListener(vm) {
      if (vm !== this) {
        this.visible = false;
      }
    },
    show: function show() {
      var _this2 = this; // Public method to show dropdown


      if (this.disabled) {
        return;
      } // Wrap in a requestAnimationFrame to allow any previous
      // click handling to occur first


      (0, _dom.requestAF)(function () {
        _this2.visible = true;
      });
    },
    hide: function hide() {
      var refocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false; // Public method to hide dropdown

      if (this.disabled) {
        /* istanbul ignore next */
        return;
      }

      this.visible = false;

      if (refocus) {
        // Child element is closing the dropdown on click
        this.$once('hidden', this.focusToggler);
      }
    },
    // Called only by a button that toggles the menu
    toggle: function toggle(evt) {
      evt = evt || {};
      var type = evt.type;
      var key = evt.keyCode;

      if (type !== 'click' && !(type === 'keydown' && (key === _keyCodes.default.ENTER || key === _keyCodes.default.SPACE || key === _keyCodes.default.DOWN))) {
        // We only toggle on Click, Enter, Space, and Arrow Down

        /* istanbul ignore next */
        return;
      }
      /* istanbul ignore next */


      if (this.disabled) {
        this.visible = false;
        return;
      }

      this.$emit('toggle', evt);
      evt.preventDefault();
      evt.stopPropagation(); // Toggle visibility

      if (this.visible) {
        this.hide(true);
      } else {
        this.show();
      }
    },
    // Called only in split button mode, for the split button
    click: function click(evt) {
      /* istanbul ignore next */
      if (this.disabled) {
        this.visible = false;
        return;
      }

      this.$emit('click', evt);
    },
    // Called from dropdown menu context
    onKeydown: function onKeydown(evt) {
      var key = evt.keyCode;

      if (key === _keyCodes.default.ESC) {
        // Close on ESC
        this.onEsc(evt);
      } else if (key === _keyCodes.default.DOWN) {
        // Down Arrow
        this.focusNext(evt, false);
      } else if (key === _keyCodes.default.UP) {
        // Up Arrow
        this.focusNext(evt, true);
      }
    },
    // If uses presses ESC to close menu
    onEsc: function onEsc(evt) {
      if (this.visible) {
        this.visible = false;
        evt.preventDefault();
        evt.stopPropagation(); // Return focus to original trigger button

        this.$once('hidden', this.focusToggler);
      }
    },
    // Dropdown wrapper focusOut handler
    onFocusOut: function onFocusOut(evt) {
      var _this3 = this; // `relatedTarget` is the element gaining focus


      var relatedTarget = evt.relatedTarget; // If focus moves outside the menu or toggler, then close menu

      if (this.visible && !(0, _dom.contains)(this.$refs.menu, relatedTarget) && !(0, _dom.contains)(this.toggler, relatedTarget)) {
        var doHide = function doHide() {
          _this3.visible = false;
        }; // When we are in a navbar (which has been responsively stacked), we
        // delay the dropdown's closing so that the next element has a chance
        // to have it's click handler fired (in case it's position moves on
        // the screen do to a navbar menu above it collapsing)
        // https://github.com/bootstrap-vue/bootstrap-vue/issues/4113


        this.inNavbar ? setTimeout(doHide, FOCUSOUT_DELAY) : doHide();
      }
    },
    // Keyboard nav
    focusNext: function focusNext(evt, up) {
      var _this4 = this; // Ignore key up/down on form elements


      if (!this.visible || evt && (0, _dom.closest)(Selector.FORM_CHILD, evt.target)) {
        /* istanbul ignore next: should never happen */
        return;
      }

      evt.preventDefault();
      evt.stopPropagation();
      this.$nextTick(function () {
        var items = _this4.getItems();

        if (items.length < 1) {
          /* istanbul ignore next: should never happen */
          return;
        }

        var index = items.indexOf(evt.target);

        if (up && index > 0) {
          index--;
        } else if (!up && index < items.length - 1) {
          index++;
        }

        if (index < 0) {
          /* istanbul ignore next: should never happen */
          index = 0;
        }

        _this4.focusItem(index, items);
      });
    },
    focusItem: function focusItem(idx, items) {
      var el = items.find(function (el, i) {
        return i === idx;
      });

      if (el && el.focus) {
        el.focus();
      }
    },
    getItems: function getItems() {
      // Get all items
      return filterVisibles((0, _dom.selectAll)(Selector.ITEM_SELECTOR, this.$refs.menu));
    },
    focusMenu: function focusMenu() {
      this.$refs.menu.focus && this.$refs.menu.focus();
    },
    focusToggler: function focusToggler() {
      var _this5 = this;

      this.$nextTick(function () {
        var toggler = _this5.toggler;

        if (toggler && toggler.focus) {
          toggler.focus();
        }
      });
    }
  }
};
exports.default = _default2;
},{"popper.js":"node_modules/popper.js/dist/esm/popper.js","../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../utils/bv-event.class":"node_modules/bootstrap-vue/esm/utils/bv-event.class.js","../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./id":"node_modules/bootstrap-vue/esm/mixins/id.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdown = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _array = require("../../utils/array");

var _html = require("../../utils/html");

var _config = require("../../utils/config");

var _safeTypes = require("../../utils/safe-types");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _dropdown = _interopRequireDefault(require("../../mixins/dropdown"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _button = require("../button/button");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BDropdown';
var props = {
  toggleText: {
    // This really should be toggleLabel
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'toggleText');
    }
  },
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'size');
    }
  },
  variant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'variant');
    }
  },
  menuClass: {
    type: [String, Array],
    default: null
  },
  toggleTag: {
    type: String,
    default: 'button'
  },
  toggleClass: {
    type: [String, Array],
    default: null
  },
  noCaret: {
    type: Boolean,
    default: false
  },
  split: {
    type: Boolean,
    default: false
  },
  splitHref: {
    type: String // default: undefined

  },
  splitTo: {
    type: [String, Object] // default: undefined

  },
  splitVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'splitVariant');
    }
  },
  splitButtonType: {
    type: String,
    default: 'button',
    validator: function validator(value) {
      return (0, _array.arrayIncludes)(['button', 'submit', 'reset'], value);
    }
  },
  role: {
    type: String,
    default: 'menu'
  },
  boundary: {
    // String: `scrollParent`, `window` or `viewport`
    // HTMLElement: HTML Element reference
    type: [String, _safeTypes.HTMLElement],
    default: 'scrollParent'
  }
}; // @vue/component

exports.props = props;

var BDropdown =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_id.default, _dropdown.default, _normalizeSlot.default],
  props: props,
  computed: {
    dropdownClasses: function dropdownClasses() {
      return [this.directionClass, {
        show: this.visible,
        // Position `static` is needed to allow menu to "breakout" of the scrollParent boundaries
        // when boundary is anything other than `scrollParent`
        // See https://github.com/twbs/bootstrap/issues/24251#issuecomment-341413786
        'position-static': this.boundary !== 'scrollParent' || !this.boundary
      }];
    },
    menuClasses: function menuClasses() {
      return [this.menuClass, {
        'dropdown-menu-right': this.right,
        show: this.visible
      }];
    },
    toggleClasses: function toggleClasses() {
      return [this.toggleClass, {
        'dropdown-toggle-split': this.split,
        'dropdown-toggle-no-caret': this.noCaret && !this.split
      }];
    }
  },
  render: function render(h) {
    var split = h();
    var buttonContent = this.normalizeSlot('button-content') || this.html || (0, _html.stripTags)(this.text);

    if (this.split) {
      var btnProps = {
        disabled: this.disabled,
        variant: this.splitVariant || this.variant,
        size: this.size
      }; // We add these as needed due to router-link issues with defined property with undefined/null values

      if (this.splitTo) {
        btnProps.to = this.splitTo;
      } else if (this.splitHref) {
        btnProps.href = this.splitHref;
      } else if (this.splitButtonType) {
        btnProps.type = this.splitButtonType;
      }

      split = h(_button.BButton, {
        ref: 'button',
        props: btnProps,
        attrs: {
          id: this.safeId('_BV_button_')
        },
        on: {
          click: this.click
        }
      }, [buttonContent]);
    }

    var toggle = h(_button.BButton, {
      ref: 'toggle',
      staticClass: 'dropdown-toggle',
      class: this.toggleClasses,
      props: {
        variant: this.variant,
        size: this.size,
        disabled: this.disabled,
        tag: this.toggleTag
      },
      attrs: {
        id: this.safeId('_BV_toggle_'),
        'aria-haspopup': 'true',
        'aria-expanded': this.visible ? 'true' : 'false'
      },
      on: {
        click: this.toggle,
        // click
        keydown: this.toggle // enter, space, down

      }
    }, [this.split ? h('span', {
      class: ['sr-only']
    }, [this.toggleText]) : buttonContent]);
    var menu = h('ul', {
      ref: 'menu',
      staticClass: 'dropdown-menu',
      class: this.menuClasses,
      attrs: {
        role: this.role,
        tabindex: '-1',
        'aria-labelledby': this.safeId(this.split ? '_BV_button_' : '_BV_toggle_')
      },
      on: {
        keydown: this.onKeydown // up, down, esc

      }
    }, !this.lazy || this.visible ? this.normalizeSlot('default', {
      hide: this.hide
    }) : [h()]);
    return h('div', {
      staticClass: 'dropdown btn-group b-dropdown',
      class: this.dropdownClasses,
      attrs: {
        id: this.safeId()
      }
    }, [split, toggle, menu]);
  }
});

exports.BDropdown = BDropdown;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/dropdown":"node_modules/bootstrap-vue/esm/mixins/dropdown.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../button/button":"node_modules/bootstrap-vue/esm/components/button/button.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-item.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownItem = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _dom = require("../../utils/dom");

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = (0, _link.propsFactory)(); // @vue/component

exports.props = props;

var BDropdownItem =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownItem',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  inject: {
    bvDropdown: {
      default: null
    }
  },
  props: _objectSpread({}, props, {
    variant: {
      type: String,
      default: null
    }
  }),
  methods: {
    closeDropdown: function closeDropdown() {
      var _this = this; // Close on next animation frame to allow <b-link> time to process


      (0, _dom.requestAF)(function () {
        if (_this.bvDropdown) {
          _this.bvDropdown.hide(true);
        }
      });
    },
    onClick: function onClick(evt) {
      this.$emit('click', evt);
      this.closeDropdown();
    }
  },
  render: function render(h) {
    return h('li', {
      attrs: {
        role: 'presentation'
      }
    }, [h(_link.BLink, {
      props: this.$props,
      staticClass: 'dropdown-item',
      class: _defineProperty({}, "text-".concat(this.variant), this.variant && !(this.active || this.disabled)),
      attrs: _objectSpread({}, this.$attrs, {
        role: 'menuitem'
      }),
      on: {
        click: this.onClick
      },
      ref: 'item'
    }, this.normalizeSlot('default'))]);
  }
});

exports.BDropdownItem = BDropdownItem;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-item-button.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownItemButton = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  active: {
    type: Boolean,
    default: false
  },
  activeClass: {
    type: String,
    default: 'active'
  },
  disabled: {
    type: Boolean,
    default: false
  },
  variant: {
    type: String,
    default: null
  }
}; // @vue/component

exports.props = props;

var BDropdownItemButton =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownItemButton',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  inject: {
    bvDropdown: {
      default: null
    }
  },
  props: props,
  methods: {
    closeDropdown: function closeDropdown() {
      if (this.bvDropdown) {
        this.bvDropdown.hide(true);
      }
    },
    onClick: function onClick(evt) {
      this.$emit('click', evt);
      this.closeDropdown();
    }
  },
  render: function render(h) {
    var _class;

    return h('li', {
      attrs: {
        role: 'presentation'
      }
    }, [h('button', {
      staticClass: 'dropdown-item',
      class: (_class = {}, _defineProperty(_class, this.activeClass, this.active), _defineProperty(_class, "text-".concat(this.variant), this.variant && !(this.active || this.disabled)), _class),
      attrs: _objectSpread({}, this.$attrs, {
        role: 'menuitem',
        type: 'button',
        disabled: this.disabled
      }),
      on: {
        click: this.onClick
      },
      ref: 'button'
    }, this.normalizeSlot('default'))]);
  }
});

exports.BDropdownItemButton = BDropdownItemButton;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-header.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownHeader = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  id: {
    type: String,
    default: null
  },
  tag: {
    type: String,
    default: 'header'
  },
  variant: {
    type: String,
    default: null
  }
}; // @vue/component

exports.props = props;

var BDropdownHeader =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownHeader',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var $attrs = data.attrs || {};
    data.attrs = {};
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        role: 'presentation'
      }
    }), [h(props.tag, {
      staticClass: 'dropdown-header',
      class: _defineProperty({}, "text-".concat(props.variant), props.variant),
      attrs: _objectSpread({}, $attrs, {
        id: props.id || null,
        role: 'heading'
      }),
      ref: 'header'
    }, children)]);
  }
});

exports.BDropdownHeader = BDropdownHeader;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-divider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownDivider = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  tag: {
    type: String,
    default: 'hr'
  }
}; // @vue/component

exports.props = props;

var BDropdownDivider =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownDivider',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data;
    var $attrs = data.attrs || {};
    data.attrs = {};
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        role: 'presentation'
      }
    }), [h(props.tag, {
      staticClass: 'dropdown-divider',
      attrs: _objectSpread({}, $attrs, {
        role: 'separator',
        'aria-orientation': 'horizontal'
      }),
      ref: 'divider'
    })]);
  }
});

exports.BDropdownDivider = BDropdownDivider;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/form/form.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BForm = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  id: {
    type: String,
    default: null
  },
  inline: {
    type: Boolean,
    default: false
  },
  novalidate: {
    type: Boolean,
    default: false
  },
  validated: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BForm =
/*#__PURE__*/
_vue.default.extend({
  name: 'BForm',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h('form', (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: {
        'form-inline': props.inline,
        'was-validated': props.validated
      },
      attrs: {
        id: props.id,
        novalidate: props.novalidate
      }
    }), children);
  }
});

exports.BForm = BForm;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-form.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownForm = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _form = require("../form/form");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var BDropdownForm =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownForm',
  functional: true,
  props: _objectSpread({}, _form.props, {
    disabled: {
      type: Boolean,
      default: false
    }
  }),
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var $attrs = data.attrs || {};
    var $listeners = data.on || {};
    data.attrs = {};
    data.on = {};
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        role: 'presentation'
      }
    }), [h(_form.BForm, {
      ref: 'form',
      staticClass: 'b-dropdown-form',
      class: {
        disabled: props.disabled
      },
      props: props,
      attrs: _objectSpread({}, $attrs, {
        disabled: props.disabled,
        // Tab index of -1 for keyboard navigation
        tabindex: props.disabled ? null : '-1'
      }),
      on: $listeners
    }, children)]);
  }
});

exports.BDropdownForm = BDropdownForm;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../form/form":"node_modules/bootstrap-vue/esm/components/form/form.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownText = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var BDropdownText =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownText',
  functional: true,
  props: {
    tag: {
      type: String,
      default: 'p'
    },
    variant: {
      type: String,
      default: null
    }
  },
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var $attrs = data.attrs || {};
    data.attrs = {};
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        role: 'presentation'
      }
    }), [h(props.tag, {
      staticClass: 'b-dropdown-text',
      class: _defineProperty({}, "text-".concat(props.variant), props.variant),
      props: props,
      attrs: $attrs,
      ref: 'text'
    }, children)]);
  }
});

exports.BDropdownText = BDropdownText;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BDropdownGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _normalizeSlot = require("../../utils/normalize-slot");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  id: {
    type: String,
    default: null
  },
  header: {
    type: String,
    default: null
  },
  headerTag: {
    type: String,
    default: 'header'
  },
  headerVariant: {
    type: String,
    default: null
  },
  headerClasses: {
    type: [String, Array, Object],
    default: null
  },
  ariaDescribedby: {
    type: String,
    default: null
  }
}; // @vue/component

exports.props = props;

var BDropdownGroup =
/*#__PURE__*/
_vue.default.extend({
  name: 'BDropdownGroup',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots;
    var $slots = slots();
    var $scopedSlots = scopedSlots || {};
    var $attrs = data.attrs || {};
    data.attrs = {};
    var header;
    var headerId = null;

    if ((0, _normalizeSlot.hasNormalizedSlot)('header', $scopedSlots, $slots) || props.header) {
      headerId = props.id ? "_bv_".concat(props.id, "_group_dd_header") : null;
      header = h(props.headerTag, {
        staticClass: 'dropdown-header',
        class: [props.headerClasses, _defineProperty({}, "text-".concat(props.variant), props.variant)],
        attrs: {
          id: headerId,
          role: 'heading'
        }
      }, (0, _normalizeSlot.normalizeSlot)('header', {}, $scopedSlots, $slots) || props.header);
    }

    var adb = [headerId, props.ariaDescribedBy].filter(Boolean).join(' ').trim();
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        role: 'presentation'
      }
    }), [header || h(), h('ul', {
      staticClass: 'list-unstyled',
      attrs: _objectSpread({}, $attrs, {
        id: props.id || null,
        role: 'group',
        'aria-describedby': adb || null
      })
    }, (0, _normalizeSlot.normalizeSlot)('default', {}, $scopedSlots, $slots))]);
  }
});

exports.BDropdownGroup = BDropdownGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/dropdown/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BDropdown", {
  enumerable: true,
  get: function () {
    return _dropdown.BDropdown;
  }
});
Object.defineProperty(exports, "BDropdownItem", {
  enumerable: true,
  get: function () {
    return _dropdownItem.BDropdownItem;
  }
});
Object.defineProperty(exports, "BDropdownItemButton", {
  enumerable: true,
  get: function () {
    return _dropdownItemButton.BDropdownItemButton;
  }
});
Object.defineProperty(exports, "BDropdownHeader", {
  enumerable: true,
  get: function () {
    return _dropdownHeader.BDropdownHeader;
  }
});
Object.defineProperty(exports, "BDropdownDivider", {
  enumerable: true,
  get: function () {
    return _dropdownDivider.BDropdownDivider;
  }
});
Object.defineProperty(exports, "BDropdownForm", {
  enumerable: true,
  get: function () {
    return _dropdownForm.BDropdownForm;
  }
});
Object.defineProperty(exports, "BDropdownText", {
  enumerable: true,
  get: function () {
    return _dropdownText.BDropdownText;
  }
});
Object.defineProperty(exports, "BDropdownGroup", {
  enumerable: true,
  get: function () {
    return _dropdownGroup.BDropdownGroup;
  }
});
exports.DropdownPlugin = void 0;

var _dropdown = require("./dropdown");

var _dropdownItem = require("./dropdown-item");

var _dropdownItemButton = require("./dropdown-item-button");

var _dropdownHeader = require("./dropdown-header");

var _dropdownDivider = require("./dropdown-divider");

var _dropdownForm = require("./dropdown-form");

var _dropdownText = require("./dropdown-text");

var _dropdownGroup = require("./dropdown-group");

var _plugins = require("../../utils/plugins");

var DropdownPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BDropdown: _dropdown.BDropdown,
    BDd: _dropdown.BDropdown,
    BDropdownItem: _dropdownItem.BDropdownItem,
    BDdItem: _dropdownItem.BDropdownItem,
    BDropdownItemButton: _dropdownItemButton.BDropdownItemButton,
    BDropdownItemBtn: _dropdownItemButton.BDropdownItemButton,
    BDdItemButton: _dropdownItemButton.BDropdownItemButton,
    BDdItemBtn: _dropdownItemButton.BDropdownItemButton,
    BDropdownHeader: _dropdownHeader.BDropdownHeader,
    BDdHeader: _dropdownHeader.BDropdownHeader,
    BDropdownDivider: _dropdownDivider.BDropdownDivider,
    BDdDivider: _dropdownDivider.BDropdownDivider,
    BDropdownForm: _dropdownForm.BDropdownForm,
    BDdForm: _dropdownForm.BDropdownForm,
    BDropdownText: _dropdownText.BDropdownText,
    BDdText: _dropdownText.BDropdownText,
    BDropdownGroup: _dropdownGroup.BDropdownGroup,
    BDdGroup: _dropdownGroup.BDropdownGroup
  }
});
exports.DropdownPlugin = DropdownPlugin;
},{"./dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown.js","./dropdown-item":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-item.js","./dropdown-item-button":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-item-button.js","./dropdown-header":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-header.js","./dropdown-divider":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-divider.js","./dropdown-form":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-form.js","./dropdown-text":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-text.js","./dropdown-group":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-group.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/embed/embed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BEmbed = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _array = require("../../utils/array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  type: {
    type: String,
    default: 'iframe',
    validator: function validator(str) {
      return (0, _array.arrayIncludes)(['iframe', 'embed', 'video', 'object', 'img', 'b-img', 'b-img-lazy'], str);
    }
  },
  tag: {
    type: String,
    default: 'div'
  },
  aspect: {
    type: String,
    default: '16by9'
  }
}; // @vue/component

exports.props = props;

var BEmbed =
/*#__PURE__*/
_vue.default.extend({
  name: 'BEmbed',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, {
      ref: data.ref,
      staticClass: 'embed-responsive',
      class: _defineProperty({}, "embed-responsive-".concat(props.aspect), Boolean(props.aspect))
    }, [h(props.type, (0, _vueFunctionalDataMerge.mergeData)(data, {
      ref: '',
      staticClass: 'embed-responsive-item'
    }), children)]);
  }
});

exports.BEmbed = BEmbed;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js"}],"node_modules/bootstrap-vue/esm/components/embed/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BEmbed", {
  enumerable: true,
  get: function () {
    return _embed.BEmbed;
  }
});
exports.EmbedPlugin = void 0;

var _embed = require("./embed");

var _plugins = require("../../utils/plugins");

var EmbedPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BEmbed: _embed.BEmbed
  }
});
exports.EmbedPlugin = EmbedPlugin;
},{"./embed":"node_modules/bootstrap-vue/esm/components/embed/embed.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/mixins/form-options.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _html = require("../utils/html");

var _inspect = require("../utils/inspect");

var _object = require("../utils/object");

// @vue/component
var _default2 = {
  props: {
    options: {
      type: [Array, Object],
      default: function _default() {
        return [];
      }
    },
    valueField: {
      type: String,
      default: 'value'
    },
    textField: {
      type: String,
      default: 'text'
    },
    htmlField: {
      type: String,
      default: 'html'
    },
    disabledField: {
      type: String,
      default: 'disabled'
    }
  },
  computed: {
    formOptions: function formOptions() {
      var options = this.options;
      var valueField = this.valueField;
      var textField = this.textField;
      var htmlField = this.htmlField;
      var disabledField = this.disabledField;

      if ((0, _inspect.isArray)(options)) {
        // Normalize flat-ish arrays to Array of Objects
        return options.map(function (option) {
          if ((0, _inspect.isPlainObject)(option)) {
            var value = option[valueField];
            var text = String(option[textField]);
            return {
              value: (0, _inspect.isUndefined)(value) ? text : value,
              text: (0, _html.stripTags)(text),
              html: option[htmlField],
              disabled: Boolean(option[disabledField])
            };
          }

          return {
            value: option,
            text: (0, _html.stripTags)(String(option)),
            disabled: false
          };
        });
      } else {
        // options is Object
        // Normalize Objects to Array of Objects
        return (0, _object.keys)(options).map(function (key) {
          var option = options[key] || {};

          if ((0, _inspect.isPlainObject)(option)) {
            var value = option[valueField];
            var text = option[textField];
            return {
              value: (0, _inspect.isUndefined)(value) ? key : value,
              text: (0, _inspect.isUndefined)(text) ? (0, _html.stripTags)(String(key)) : (0, _html.stripTags)(String(text)),
              html: option[htmlField],
              disabled: Boolean(option[disabledField])
            };
          }

          return {
            value: key,
            text: (0, _html.stripTags)(String(option)),
            disabled: false
          };
        });
      }
    }
  }
};
exports.default = _default2;
},{"../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/components/form/form-datalist.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormDatalist = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _formOptions = _interopRequireDefault(require("../../mixins/form-options"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _html = require("../../utils/html");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var BFormDatalist =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormDatalist',
  mixins: [_formOptions.default, _normalizeSlot.default],
  props: {
    id: {
      type: String,
      default: null,
      required: true
    }
  },
  render: function render(h) {
    var options = this.formOptions.map(function (option, index) {
      return h('option', {
        key: "option_".concat(index, "_opt"),
        attrs: {
          disabled: option.disabled
        },
        domProps: _objectSpread({}, (0, _html.htmlOrText)(option.html, option.text), {
          value: option.value
        })
      });
    });
    return h('datalist', {
      attrs: {
        id: this.id
      }
    }, [options, this.normalizeSlot('default')]);
  }
});

exports.BFormDatalist = BFormDatalist;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/form-options":"node_modules/bootstrap-vue/esm/mixins/form-options.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js"}],"node_modules/bootstrap-vue/esm/components/form/form-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormText = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BFormText';
var props = {
  id: {
    type: String,
    default: null
  },
  tag: {
    type: String,
    default: 'small'
  },
  textVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'textVariant');
    }
  },
  inline: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BFormText =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: _defineProperty({
        'form-text': !props.inline
      }, "text-".concat(props.textVariant), Boolean(props.textVariant)),
      attrs: {
        id: props.id
      }
    }), children);
  }
});

exports.BFormText = BFormText;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js"}],"node_modules/bootstrap-vue/esm/components/form/form-invalid-feedback.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormInvalidFeedback = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  id: {
    type: String,
    default: null
  },
  tag: {
    type: String,
    default: 'div'
  },
  tooltip: {
    type: Boolean,
    default: false
  },
  forceShow: {
    type: Boolean,
    default: false
  },
  state: {
    type: Boolean,
    default: null
  },
  ariaLive: {
    type: String,
    default: null
  },
  role: {
    type: String,
    default: null
  }
}; // @vue/component

exports.props = props;

var BFormInvalidFeedback =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormInvalidFeedback',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var show = props.forceShow === true || props.state === false;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: {
        'invalid-feedback': !props.tooltip,
        'invalid-tooltip': props.tooltip,
        'd-block': show
      },
      attrs: {
        id: props.id,
        role: props.role,
        'aria-live': props.ariaLive,
        'aria-atomic': props.ariaLive ? 'true' : null
      }
    }), children);
  }
});

exports.BFormInvalidFeedback = BFormInvalidFeedback;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/form/form-valid-feedback.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormValidFeedback = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  id: {
    type: String,
    default: null
  },
  tag: {
    type: String,
    default: 'div'
  },
  tooltip: {
    type: Boolean,
    default: false
  },
  forceShow: {
    type: Boolean,
    default: false
  },
  state: {
    type: Boolean,
    default: null
  },
  ariaLive: {
    type: String,
    default: null
  },
  role: {
    type: String,
    default: null
  }
}; // @vue/component

exports.props = props;

var BFormValidFeedback =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormValidFeedback',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var show = props.forceShow === true || props.state === true;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: {
        'valid-feedback': !props.tooltip,
        'valid-tooltip': props.tooltip,
        'd-block': show
      },
      attrs: {
        id: props.id,
        role: props.role,
        'aria-live': props.ariaLive,
        'aria-atomic': props.ariaLive ? 'true' : null
      }
    }), children);
  }
});

exports.BFormValidFeedback = BFormValidFeedback;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/layout/form-row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormRow = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'div'
  }
}; // @vue/component

exports.props = props;

var BFormRow =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormRow',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'form-row'
    }), children);
  }
});

exports.BFormRow = BFormRow;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/form/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BForm", {
  enumerable: true,
  get: function () {
    return _form.BForm;
  }
});
Object.defineProperty(exports, "BFormDatalist", {
  enumerable: true,
  get: function () {
    return _formDatalist.BFormDatalist;
  }
});
Object.defineProperty(exports, "BFormText", {
  enumerable: true,
  get: function () {
    return _formText.BFormText;
  }
});
Object.defineProperty(exports, "BFormInvalidFeedback", {
  enumerable: true,
  get: function () {
    return _formInvalidFeedback.BFormInvalidFeedback;
  }
});
Object.defineProperty(exports, "BFormValidFeedback", {
  enumerable: true,
  get: function () {
    return _formValidFeedback.BFormValidFeedback;
  }
});
exports.FormPlugin = void 0;

var _form = require("./form");

var _formDatalist = require("./form-datalist");

var _formText = require("./form-text");

var _formInvalidFeedback = require("./form-invalid-feedback");

var _formValidFeedback = require("./form-valid-feedback");

var _formRow = require("../layout/form-row");

var _plugins = require("../../utils/plugins");

var FormPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BForm: _form.BForm,
    BFormDatalist: _formDatalist.BFormDatalist,
    BDatalist: _formDatalist.BFormDatalist,
    BFormText: _formText.BFormText,
    BFormInvalidFeedback: _formInvalidFeedback.BFormInvalidFeedback,
    BFormFeedback: _formInvalidFeedback.BFormInvalidFeedback,
    BFormValidFeedback: _formValidFeedback.BFormValidFeedback,
    // Added here for convenience
    BFormRow: _formRow.BFormRow
  }
}); // BFormRow is not exported here as a named export, as it is exported by Layout

exports.FormPlugin = FormPlugin;
},{"./form":"node_modules/bootstrap-vue/esm/components/form/form.js","./form-datalist":"node_modules/bootstrap-vue/esm/components/form/form-datalist.js","./form-text":"node_modules/bootstrap-vue/esm/components/form/form-text.js","./form-invalid-feedback":"node_modules/bootstrap-vue/esm/components/form/form-invalid-feedback.js","./form-valid-feedback":"node_modules/bootstrap-vue/esm/components/form/form-valid-feedback.js","../layout/form-row":"node_modules/bootstrap-vue/esm/components/layout/form-row.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/mixins/form-state.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../utils/inspect");

/* Form control contextual state class computation
 *
 * Returned class is either 'is-valid' or 'is-invalid' based on the 'state' prop
 * state can be one of five values:
 *  - true for is-valid
 *  - false for is-invalid
 *  - null for no contextual state
 */
// @vue/component
var _default = {
  props: {
    state: {
      // Tri-state prop: true, false, null (or undefined)
      type: Boolean,
      default: null
    }
  },
  computed: {
    computedState: function computedState() {
      // If not a boolean, ensure that value is null
      return (0, _inspect.isBoolean)(this.state) ? this.state : null;
    },
    stateClass: function stateClass() {
      var state = this.computedState;

      if (state === true) {
        return 'is-valid';
      } else if (state === false) {
        return 'is-invalid';
      }

      return null;
    }
  }
};
exports.default = _default;
},{"../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/utils/suffix-prop-name.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _upperFirst = _interopRequireDefault(require("./upper-first"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Suffix can be a falsey value so nothing is appended to string.
 * (helps when looping over props & some shouldn't change)
 * Use data last parameters to allow for currying.
 * @param {string} suffix
 * @param {string} str
 */
var suffixPropName = function suffixPropName(suffix, str) {
  return str + (suffix ? (0, _upperFirst.default)(suffix) : '');
};

var _default = suffixPropName;
exports.default = _default;
},{"./upper-first":"node_modules/bootstrap-vue/esm/utils/upper-first.js"}],"node_modules/bootstrap-vue/esm/components/layout/col.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BCol = void 0;

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _memoize = _interopRequireDefault(require("../../utils/memoize"));

var _suffixPropName = _interopRequireDefault(require("../../utils/suffix-prop-name"));

var _array = require("../../utils/array");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

var _config = require("../../utils/config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Generates a prop object with a type of `[Boolean, String, Number]`
var boolStrNum = function boolStrNum() {
  return {
    type: [Boolean, String, Number],
    default: false
  };
}; // Generates a prop object with a type of `[String, Number]`


var strNum = function strNum() {
  return {
    type: [String, Number],
    default: null
  };
}; // Compute a breakpoint class name


var computeBreakpoint = function computeBreakpoint(type, breakpoint, val) {
  var className = type;

  if ((0, _inspect.isUndefined)(val) || (0, _inspect.isNull)(val) || val === false) {
    return undefined;
  }

  if (breakpoint) {
    className += "-".concat(breakpoint);
  } // Handling the boolean style prop when accepting [Boolean, String, Number]
  // means Vue will not convert <b-col sm></b-col> to sm: true for us.
  // Since the default is false, an empty string indicates the prop's presence.


  if (type === 'col' && (val === '' || val === true)) {
    // .col-md
    return className.toLowerCase();
  } // .order-md-6


  className += "-".concat(val);
  return className.toLowerCase();
}; // Memoized function for better performance on generating class names


var computeBreakpointClass = (0, _memoize.default)(computeBreakpoint); // Cached copy of the breakpoint prop names

var breakpointPropMap = (0, _object.create)(null); // Lazy evaled props factory for BCol

var generateProps = function generateProps() {
  // Grab the breakpoints from the cached config (exclude the '' (xs) breakpoint)
  var breakpoints = (0, _config.getBreakpointsUpCached)().filter(Boolean); // Supports classes like: .col-sm, .col-md-6, .col-lg-auto

  var breakpointCol = breakpoints.reduce(function (propMap, breakpoint) {
    if (breakpoint) {
      // We filter out the '' breakpoint (xs), as making a prop name ''
      // would not work. The `cols` prop is used for `xs`
      propMap[breakpoint] = boolStrNum();
    }

    return propMap;
  }, (0, _object.create)(null)); // Supports classes like: .offset-md-1, .offset-lg-12

  var breakpointOffset = breakpoints.reduce(function (propMap, breakpoint) {
    propMap[(0, _suffixPropName.default)(breakpoint, 'offset')] = strNum();
    return propMap;
  }, (0, _object.create)(null)); // Supports classes like: .order-md-1, .order-lg-12

  var breakpointOrder = breakpoints.reduce(function (propMap, breakpoint) {
    propMap[(0, _suffixPropName.default)(breakpoint, 'order')] = strNum();
    return propMap;
  }, (0, _object.create)(null)); // For loop doesn't need to check hasOwnProperty
  // when using an object created from null

  breakpointPropMap = (0, _object.assign)((0, _object.create)(null), {
    col: (0, _object.keys)(breakpointCol),
    offset: (0, _object.keys)(breakpointOffset),
    order: (0, _object.keys)(breakpointOrder)
  }); // Return the generated props

  return _objectSpread({
    // Generic flexbox .col (xs)
    col: {
      type: Boolean,
      default: false
    },
    // .col-[1-12]|auto  (xs)
    cols: strNum()
  }, breakpointCol, {
    offset: strNum()
  }, breakpointOffset, {
    order: strNum()
  }, breakpointOrder, {
    // Flex alignment
    alignSelf: {
      type: String,
      default: null,
      validator: function validator(str) {
        return (0, _array.arrayIncludes)(['auto', 'start', 'end', 'center', 'baseline', 'stretch'], str);
      }
    },
    tag: {
      type: String,
      default: 'div'
    }
  });
}; // We do not use Vue.extend here as that would evaluate the props
// immediately, which we do not want to happen
// @vue/component


var BCol = {
  name: 'BCol',
  functional: true,

  get props() {
    // Allow props to be lazy evaled on first access and
    // then they become a non-getter afterwards.
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters
    delete this.props; // eslint-disable-next-line no-return-assign

    return this.props = generateProps();
  },

  render: function render(h, _ref) {
    var _classList$push;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var classList = []; // Loop through `col`, `offset`, `order` breakpoint props

    for (var type in breakpointPropMap) {
      // Returns colSm, offset, offsetSm, orderMd, etc.
      var _keys = breakpointPropMap[type];

      for (var i = 0; i < _keys.length; i++) {
        // computeBreakpoint(col, colSm => Sm, value=[String, Number, Boolean])
        var c = computeBreakpointClass(type, _keys[i].replace(type, ''), props[_keys[i]]); // If a class is returned, push it onto the array.

        if (c) {
          classList.push(c);
        }
      }
    }

    var hasColClasses = classList.some(function (className) {
      return /^col-/.test(className);
    });
    classList.push((_classList$push = {
      // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.
      col: props.col || !hasColClasses && !props.cols
    }, _defineProperty(_classList$push, "col-".concat(props.cols), props.cols), _defineProperty(_classList$push, "offset-".concat(props.offset), props.offset), _defineProperty(_classList$push, "order-".concat(props.order), props.order), _defineProperty(_classList$push, "align-self-".concat(props.alignSelf), props.alignSelf), _classList$push));
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: classList
    }), children);
  }
};
exports.BCol = BCol;
},{"vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/memoize":"node_modules/bootstrap-vue/esm/utils/memoize.js","../../utils/suffix-prop-name":"node_modules/bootstrap-vue/esm/utils/suffix-prop-name.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js"}],"node_modules/bootstrap-vue/esm/components/form-group/form-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormGroup = void 0;

var _memoize = _interopRequireDefault(require("../../utils/memoize"));

var _upperFirst = _interopRequireDefault(require("../../utils/upper-first"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _env = require("../../utils/env");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _col = require("../layout/col");

var _formRow = require("../layout/form-row");

var _formText = require("../form/form-text");

var _formInvalidFeedback = require("../form/form-invalid-feedback");

var _formValidFeedback = require("../form/form-valid-feedback");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // Utils


// Component name
var NAME = 'BFormGroup'; // Selector for finding first input in the form-group

var SELECTOR = 'input:not([disabled]),textarea:not([disabled]),select:not([disabled])'; // Render helper functions (here rather than polluting the instance with more methods)

var renderInvalidFeedback = function renderInvalidFeedback(h, ctx) {
  var content = ctx.normalizeSlot('invalid-feedback') || ctx.invalidFeedback;
  var invalidFeedback = h();

  if (content) {
    invalidFeedback = h(_formInvalidFeedback.BFormInvalidFeedback, {
      props: {
        id: ctx.invalidFeedbackId,
        // If state is explicitly false, always show the feedback
        state: ctx.computedState,
        tooltip: ctx.tooltip,
        ariaLive: ctx.feedbackAriaLive,
        role: ctx.feedbackAriaLive ? 'alert' : null
      },
      attrs: {
        tabindex: content ? '-1' : null
      }
    }, [content]);
  }

  return invalidFeedback;
};

var renderValidFeedback = function renderValidFeedback(h, ctx) {
  var content = ctx.normalizeSlot('valid-feedback') || ctx.validFeedback;
  var validFeedback = h();

  if (content) {
    validFeedback = h(_formValidFeedback.BFormValidFeedback, {
      props: {
        id: ctx.validFeedbackId,
        // If state is explicitly true, always show the feedback
        state: ctx.computedState,
        tooltip: ctx.tooltip,
        ariaLive: ctx.feedbackAriaLive,
        role: ctx.feedbackAriaLive ? 'alert' : null
      },
      attrs: {
        tabindex: content ? '-1' : null
      }
    }, [content]);
  }

  return validFeedback;
};

var renderHelpText = function renderHelpText(h, ctx) {
  // Form help text (description)
  var content = ctx.normalizeSlot('description') || ctx.description;
  var description = h();

  if (content) {
    description = h(_formText.BFormText, {
      attrs: {
        id: ctx.descriptionId,
        tabindex: content ? '-1' : null
      }
    }, [content]);
  }

  return description;
};

var renderLabel = function renderLabel(h, ctx) {
  // Render label/legend inside b-col if necessary
  var content = ctx.normalizeSlot('label') || ctx.label;
  var labelFor = ctx.labelFor;
  var isLegend = !labelFor;
  var isHorizontal = ctx.isHorizontal;
  var labelTag = isLegend ? 'legend' : 'label';

  if (!content && !isHorizontal) {
    return h();
  } else if (ctx.labelSrOnly) {
    var label = h();

    if (content) {
      label = h(labelTag, {
        class: 'sr-only',
        attrs: {
          id: ctx.labelId,
          for: labelFor || null
        }
      }, [content]);
    }

    return h(isHorizontal ? _col.BCol : 'div', {
      props: isHorizontal ? ctx.labelColProps : {}
    }, [label]);
  } else {
    return h(isHorizontal ? _col.BCol : labelTag, {
      on: isLegend ? {
        click: ctx.legendClick
      } : {},
      props: isHorizontal ? _objectSpread({
        tag: labelTag
      }, ctx.labelColProps) : {},
      attrs: {
        id: ctx.labelId,
        for: labelFor || null,
        // We add a tab index to legend so that screen readers
        // will properly read the aria-labelledby in IE.
        tabindex: isLegend ? '-1' : null
      },
      class: [// When horizontal or if a legend is rendered, add col-form-label
      // for correct sizing as Bootstrap has inconsistent font styling
      // for legend in non-horizontal form-groups.
      // See: https://github.com/twbs/bootstrap/issues/27805
      isHorizontal || isLegend ? 'col-form-label' : '', // Emulate label padding top of 0 on legend when not horizontal
      !isHorizontal && isLegend ? 'pt-0' : '', // If not horizontal and not a legend, we add d-block to label
      // so that label-align works
      !isHorizontal && !isLegend ? 'd-block' : '', ctx.labelSize ? "col-form-label-".concat(ctx.labelSize) : '', ctx.labelAlignClasses, ctx.labelClass]
    }, [content]);
  }
}; // -- BFormGroup Prop factory -- used for lazy generation of props
// Memoize this function to return cached values to
// save time in computed functions


var makePropName = (0, _memoize.default)(function () {
  var breakpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var prefix = arguments.length > 1 ? arguments[1] : undefined;
  return "".concat(prefix).concat((0, _upperFirst.default)(breakpoint));
}); // BFormGroup prop generator for lazy generation of props

var generateProps = function generateProps() {
  var BREAKPOINTS = (0, _config.getBreakpointsUpCached)(); // Generate the labelCol breakpoint props

  var bpLabelColProps = BREAKPOINTS.reduce(function (props, breakpoint) {
    // i.e. label-cols, label-cols-sm, label-cols-md, ...
    props[makePropName(breakpoint, 'labelCols')] = {
      type: [Number, String, Boolean],
      default: breakpoint ? false : null
    };
    return props;
  }, (0, _object.create)(null)); // Generate the labelAlign breakpoint props

  var bpLabelAlignProps = BREAKPOINTS.reduce(function (props, breakpoint) {
    // label-align, label-align-sm, label-align-md, ...
    props[makePropName(breakpoint, 'labelAlign')] = {
      type: String,
      // left, right, center
      default: null
    };
    return props;
  }, (0, _object.create)(null));
  return _objectSpread({
    label: {
      type: String,
      default: null
    },
    labelFor: {
      type: String,
      default: null
    },
    labelSize: {
      type: String,
      default: null
    },
    labelSrOnly: {
      type: Boolean,
      default: false
    }
  }, bpLabelColProps, {}, bpLabelAlignProps, {
    labelClass: {
      type: [String, Array, Object],
      default: null
    },
    description: {
      type: String,
      default: null
    },
    invalidFeedback: {
      type: String,
      default: null
    },
    validFeedback: {
      type: String,
      default: null
    },
    tooltip: {
      // Enable tooltip style feedback
      type: Boolean,
      default: false
    },
    feedbackAriaLive: {
      type: String,
      default: 'assertive'
    },
    validated: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    }
  });
}; // We do not use Vue.extend here as that would evaluate the props
// immediately, which we do not want to happen
// @vue/component


var BFormGroup = {
  name: NAME,
  mixins: [_id.default, _formState.default, _normalizeSlot.default],

  get props() {
    // Allow props to be lazy evaled on first access and
    // then they become a non-getter afterwards.
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters
    delete this.props; // eslint-disable-next-line no-return-assign

    return this.props = generateProps();
  },

  computed: {
    labelColProps: function labelColProps() {
      var _this = this;

      var props = {};
      (0, _config.getBreakpointsUpCached)().forEach(function (breakpoint) {
        // Grab the value if the label column breakpoint prop
        var propVal = _this[makePropName(breakpoint, 'labelCols')]; // Handle case where the prop's value is an empty string,
        // which represents true


        propVal = propVal === '' ? true : propVal || false;

        if (!(0, _inspect.isBoolean)(propVal)) {
          // Convert to column size to number
          propVal = parseInt(propVal, 10) || 0; // Ensure column size is greater than 0

          propVal = propVal > 0 ? propVal : false;
        }

        if (propVal) {
          // Add the prop to the list of props to give to b-col
          // If breakpoint is '' (labelCols=true), then we use the
          // col prop to make equal width at xs
          var bColPropName = breakpoint || ((0, _inspect.isBoolean)(propVal) ? 'col' : 'cols'); // Add it to the props

          props[bColPropName] = propVal;
        }
      });
      return props;
    },
    labelAlignClasses: function labelAlignClasses() {
      var _this2 = this;

      var classes = [];
      (0, _config.getBreakpointsUpCached)().forEach(function (breakpoint) {
        // Assemble the label column breakpoint align classes
        var propVal = _this2[makePropName(breakpoint, 'labelAlign')] || null;

        if (propVal) {
          var className = breakpoint ? "text-".concat(breakpoint, "-").concat(propVal) : "text-".concat(propVal);
          classes.push(className);
        }
      });
      return classes;
    },
    isHorizontal: function isHorizontal() {
      // Determine if the resultant form-group will be rendered
      // horizontal (meaning it has label-col breakpoints)
      return (0, _object.keys)(this.labelColProps).length > 0;
    },
    labelId: function labelId() {
      return this.hasNormalizedSlot('label') || this.label ? this.safeId('_BV_label_') : null;
    },
    descriptionId: function descriptionId() {
      return this.hasNormalizedSlot('description') || this.description ? this.safeId('_BV_description_') : null;
    },
    hasInvalidFeedback: function hasInvalidFeedback() {
      // Used for computing aria-describedby
      return this.computedState === false && (this.hasNormalizedSlot('invalid-feedback') || this.invalidFeedback);
    },
    invalidFeedbackId: function invalidFeedbackId() {
      return this.hasInvalidFeedback ? this.safeId('_BV_feedback_invalid_') : null;
    },
    hasValidFeedback: function hasValidFeedback() {
      // Used for computing aria-describedby
      return this.computedState === true && (this.hasNormalizedSlot('valid-feedback') || this.validFeedback);
    },
    validFeedbackId: function validFeedbackId() {
      return this.hasValidFeedback ? this.safeId('_BV_feedback_valid_') : null;
    },
    describedByIds: function describedByIds() {
      // Screen readers will read out any content linked to by aria-describedby
      // even if the content is hidden with `display: none;`, hence we only include
      // feedback IDs if the form-group's state is explicitly valid or invalid.
      return [this.descriptionId, this.invalidFeedbackId, this.validFeedbackId].filter(Boolean).join(' ') || null;
    }
  },
  watch: {
    describedByIds: function describedByIds(add, remove) {
      if (add !== remove) {
        this.setInputDescribedBy(add, remove);
      }
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.$nextTick(function () {
      // Set the aria-describedby IDs on the input specified by label-for
      // We do this in a nextTick to ensure the children have finished rendering
      _this3.setInputDescribedBy(_this3.describedByIds);
    });
  },
  methods: {
    legendClick: function legendClick(evt) {
      if (this.labelFor) {
        // Don't do anything if labelFor is set

        /* istanbul ignore next: clicking a label will focus the input, so no need to test */
        return;
      }

      var tagName = evt.target ? evt.target.tagName : '';

      if (/^(input|select|textarea|label|button|a)$/i.test(tagName)) {
        // If clicked an interactive element inside legend,
        // we just let the default happen

        /* istanbul ignore next */
        return;
      }

      var inputs = (0, _dom.selectAll)(SELECTOR, this.$refs.content).filter(_dom.isVisible);

      if (inputs && inputs.length === 1 && inputs[0].focus) {
        // if only a single input, focus it, emulating label behaviour
        inputs[0].focus();
      }
    },
    setInputDescribedBy: function setInputDescribedBy(add, remove) {
      // Sets the `aria-describedby` attribute on the input if label-for is set.
      // Optionally accepts a string of IDs to remove as the second parameter.
      // Preserves any aria-describedby value(s) user may have on input.
      if (this.labelFor && _env.isBrowser) {
        var input = (0, _dom.select)("#".concat(this.labelFor), this.$refs.content);

        if (input) {
          var adb = 'aria-describedby';
          var ids = ((0, _dom.getAttr)(input, adb) || '').split(/\s+/);
          add = (add || '').split(/\s+/);
          remove = (remove || '').split(/\s+/); // Update ID list, preserving any original IDs
          // and ensuring the ID's are unique

          ids = ids.filter(function (id) {
            return !(0, _array.arrayIncludes)(remove, id);
          }).concat(add).filter(Boolean);
          ids = (0, _object.keys)(ids.reduce(function (memo, id) {
            return _objectSpread({}, memo, _defineProperty({}, id, true));
          }, {})).join(' ').trim();

          if (ids) {
            (0, _dom.setAttr)(input, adb, ids);
          } else {
            // No IDs, so remove the attribute
            (0, _dom.removeAttr)(input, adb);
          }
        }
      }
    }
  },
  render: function render(h) {
    var isFieldset = !this.labelFor;
    var isHorizontal = this.isHorizontal; // Generate the label

    var label = renderLabel(h, this); // Generate the content

    var content = h(isHorizontal ? _col.BCol : 'div', {
      ref: 'content',
      attrs: {
        tabindex: isFieldset ? '-1' : null,
        role: isFieldset ? 'group' : null
      }
    }, [this.normalizeSlot('default') || h(), renderInvalidFeedback(h, this), renderValidFeedback(h, this), renderHelpText(h, this)]); // Create the form-group

    var data = {
      staticClass: 'form-group',
      class: [this.validated ? 'was-validated' : null, this.stateClass],
      attrs: {
        id: this.safeId(),
        disabled: isFieldset ? this.disabled : null,
        role: isFieldset ? null : 'group',
        'aria-invalid': this.computedState === false ? 'true' : null,
        // Only apply aria-labelledby if we are a horizontal fieldset
        // as the legend is no longer a direct child of fieldset
        'aria-labelledby': isFieldset && isHorizontal ? this.labelId : null,
        // Only apply aria-describedby IDs if we are a fieldset
        // as the input will have the IDs when not a fieldset
        'aria-describedby': isFieldset ? this.describedByIds : null
      }
    }; // Return it wrapped in a form-group
    // Note: Fieldsets do not support adding `row` or `form-row` directly
    // to them due to browser specific render issues, so we move the `form-row`
    // to an inner wrapper div when horizontal and using a fieldset

    return h(isFieldset ? 'fieldset' : isHorizontal ? _formRow.BFormRow : 'div', data, isHorizontal && isFieldset ? [h(_formRow.BFormRow, {}, [label, content])] : [label, content]);
  }
};
exports.BFormGroup = BFormGroup;
},{"../../utils/memoize":"node_modules/bootstrap-vue/esm/utils/memoize.js","../../utils/upper-first":"node_modules/bootstrap-vue/esm/utils/upper-first.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../layout/col":"node_modules/bootstrap-vue/esm/components/layout/col.js","../layout/form-row":"node_modules/bootstrap-vue/esm/components/layout/form-row.js","../form/form-text":"node_modules/bootstrap-vue/esm/components/form/form-text.js","../form/form-invalid-feedback":"node_modules/bootstrap-vue/esm/components/form/form-invalid-feedback.js","../form/form-valid-feedback":"node_modules/bootstrap-vue/esm/components/form/form-valid-feedback.js"}],"node_modules/bootstrap-vue/esm/components/form-group/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormGroup", {
  enumerable: true,
  get: function () {
    return _formGroup.BFormGroup;
  }
});
exports.FormGroupPlugin = void 0;

var _formGroup = require("./form-group");

var _plugins = require("../../utils/plugins");

var FormGroupPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormGroup: _formGroup.BFormGroup,
    BFormFieldset: _formGroup.BFormGroup
  }
});
exports.FormGroupPlugin = FormGroupPlugin;
},{"./form-group":"node_modules/bootstrap-vue/esm/components/form-group/form-group.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/loose-index-of.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _looseEqual = _interopRequireDefault(require("./loose-equal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var looseIndexOf = function looseIndexOf(arr, val) {
  // Assumes that the first argument is an array
  for (var i = 0; i < arr.length; i++) {
    if ((0, _looseEqual.default)(arr[i], val)) {
      return i;
    }
  }

  return -1;
};

var _default = looseIndexOf;
exports.default = _default;
},{"./loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js"}],"node_modules/bootstrap-vue/esm/mixins/form.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dom = require("../utils/dom");

var SELECTOR = 'input, textarea, select'; // @vue/component

var _default = {
  props: {
    name: {
      type: String // default: undefined

    },
    id: {
      type: String // default: undefined

    },
    disabled: {
      type: Boolean
    },
    required: {
      type: Boolean,
      default: false
    },
    form: {
      type: String,
      default: null
    },
    autofocus: {
      type: Boolean,
      default: false
    }
  },
  mounted: function mounted() {
    this.handleAutofocus();
  },
  activated: function activated()
  /* istanbul ignore next */
  {
    this.handleAutofocus();
  },
  methods: {
    handleAutofocus: function handleAutofocus() {
      var _this = this;

      this.$nextTick(function () {
        (0, _dom.requestAF)(function () {
          var el = _this.$el;

          if (_this.autofocus && (0, _dom.isVisible)(el)) {
            if (!(0, _dom.matches)(el, SELECTOR)) {
              el = (0, _dom.select)(SELECTOR, el);
            }

            el && el.focus && el.focus();
          }
        });
      });
    }
  }
};
exports.default = _default;
},{"../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js"}],"node_modules/bootstrap-vue/esm/mixins/form-radio-check.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _normalizeSlot = _interopRequireDefault(require("./normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var _default = {
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  model: {
    prop: 'checked',
    event: 'input'
  },
  props: {
    value: {// Value when checked
      // type: Object,
      // default: undefined
    },
    checked: {// This is the v-model
      // type: Object,
      // default: undefined
    },
    inline: {
      type: Boolean,
      default: false
    },
    plain: {
      type: Boolean,
      default: false
    },
    button: {
      // Only applicable in standalone mode (non group)
      type: Boolean,
      default: false
    },
    buttonVariant: {
      // Only applicable when rendered with button style
      type: String,
      default: null
    },
    ariaLabel: {
      // Placed on the input if present.
      type: String,
      default: null
    },
    ariaLabelledby: {
      // Placed on the input if present.
      type: String,
      default: null
    }
  },
  data: function data() {
    return {
      localChecked: this.isGroup ? this.bvGroup.checked : this.checked,
      hasFocus: false
    };
  },
  computed: {
    computedLocalChecked: {
      get: function get() {
        return this.isGroup ? this.bvGroup.localChecked : this.localChecked;
      },
      set: function set(val) {
        if (this.isGroup) {
          this.bvGroup.localChecked = val;
        } else {
          this.localChecked = val;
        }
      }
    },
    isGroup: function isGroup() {
      // Is this check/radio a child of check-group or radio-group?
      return Boolean(this.bvGroup);
    },
    isBtnMode: function isBtnMode() {
      // Support button style in single input mode
      return this.isGroup ? this.bvGroup.buttons : this.button;
    },
    isPlain: function isPlain() {
      return this.isBtnMode ? false : this.isGroup ? this.bvGroup.plain : this.plain;
    },
    isCustom: function isCustom() {
      return this.isBtnMode ? false : !this.isPlain;
    },
    isSwitch: function isSwitch() {
      // Custom switch styling (checkboxes only)
      return this.isBtnMode || this.isRadio || this.isPlain ? false : this.isGroup ? this.bvGroup.switches : this.switch;
    },
    isInline: function isInline() {
      return this.isGroup ? this.bvGroup.inline : this.inline;
    },
    isDisabled: function isDisabled() {
      // Child can be disabled while parent isn't, but is always disabled if group is
      return this.isGroup ? this.bvGroup.disabled || this.disabled : this.disabled;
    },
    isRequired: function isRequired() {
      // Required only works when a name is provided for the input(s)
      // Child can only be required when parent is
      // Groups will always have a name (either user supplied or auto generated)
      return Boolean(this.getName && (this.isGroup ? this.bvGroup.required : this.required));
    },
    getName: function getName() {
      // Group name preferred over local name
      return (this.isGroup ? this.bvGroup.groupName : this.name) || null;
    },
    getForm: function getForm() {
      return (this.isGroup ? this.bvGroup.form : this.form) || null;
    },
    getSize: function getSize() {
      return (this.isGroup ? this.bvGroup.size : this.size) || '';
    },
    getState: function getState() {
      return this.isGroup ? this.bvGroup.computedState : this.computedState;
    },
    getButtonVariant: function getButtonVariant() {
      // Local variant preferred over group variant
      if (this.buttonVariant) {
        return this.buttonVariant;
      } else if (this.isGroup && this.bvGroup.buttonVariant) {
        return this.bvGroup.buttonVariant;
      } // default variant


      return 'secondary';
    },
    buttonClasses: function buttonClasses() {
      var _ref; // Same for radio & check


      return ['btn', "btn-".concat(this.getButtonVariant), (_ref = {}, _defineProperty(_ref, "btn-".concat(this.getSize), this.getSize), _defineProperty(_ref, "disabled", this.isDisabled), _defineProperty(_ref, "active", this.isChecked), _defineProperty(_ref, "focus", this.hasFocus), _ref)];
    }
  },
  watch: {
    checked: function checked(newVal, oldVal) {
      this.computedLocalChecked = newVal;
    }
  },
  methods: {
    handleFocus: function handleFocus(evt) {
      // When in buttons mode, we need to add 'focus' class to label when input focused
      // As it is the hidden input which has actual focus
      if (evt.target) {
        if (evt.type === 'focus') {
          this.hasFocus = true;
        } else if (evt.type === 'blur') {
          this.hasFocus = false;
        }
      }
    },
    // Convenience methods for focusing the input
    focus: function focus() {
      if (!this.isDisabled && this.$refs.input && this.$refs.input.focus) {
        this.$refs.input.focus();
      }
    },
    blur: function blur() {
      if (!this.isDisabled && this.$refs.input && this.$refs.input.blur) {
        this.$refs.input.blur();
      }
    }
  },
  render: function render(h) {
    var defaultSlot = this.normalizeSlot('default'); // Generate the input element

    var on = {
      change: this.handleChange
    };

    if (this.isBtnMode) {
      // Handlers for focus styling when in button mode
      on.focus = on.blur = this.handleFocus;
    }

    var input = h('input', {
      ref: 'input',
      key: 'input',
      on: on,
      class: {
        'form-check-input': this.isPlain,
        'custom-control-input': this.isCustom,
        'is-valid': this.getState === true && !this.isBtnMode,
        'is-invalid': this.getState === false && !this.isBtnMode,
        // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911
        'position-static': this.isPlain && !defaultSlot
      },
      directives: [{
        name: 'model',
        rawName: 'v-model',
        value: this.computedLocalChecked,
        expression: 'computedLocalChecked'
      }],
      attrs: _objectSpread({}, this.$attrs, {
        id: this.safeId(),
        type: this.isRadio ? 'radio' : 'checkbox',
        name: this.getName,
        form: this.getForm,
        disabled: this.isDisabled,
        required: this.isRequired,
        autocomplete: 'off',
        'aria-required': this.isRequired || null,
        'aria-label': this.ariaLabel || null,
        'aria-labelledby': this.ariaLabelledby || null
      }),
      domProps: {
        value: this.value,
        checked: this.isChecked
      }
    });

    if (this.isBtnMode) {
      // Button mode
      var button = h('label', {
        class: this.buttonClasses
      }, [input, defaultSlot]);

      if (!this.isGroup) {
        // Standalone button mode, so wrap in 'btn-group-toggle'
        // and flag it as inline-block to mimic regular buttons
        button = h('div', {
          class: ['btn-group-toggle', 'd-inline-block']
        }, [button]);
      }

      return button;
    } else {
      // Not button mode
      var label = h(); // If no label content in plain mode we dont render the label
      // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911

      if (!(this.isPlain && !defaultSlot)) {
        label = h('label', {
          class: {
            'form-check-label': this.isPlain,
            'custom-control-label': this.isCustom
          },
          attrs: {
            for: this.safeId()
          }
        }, defaultSlot);
      } // Wrap it in a div


      return h('div', {
        class: _defineProperty({
          'form-check': this.isPlain,
          'form-check-inline': this.isPlain && this.isInline,
          'custom-control': this.isCustom,
          'custom-control-inline': this.isCustom && this.isInline,
          'custom-checkbox': this.isCustom && this.isCheck && !this.isSwitch,
          'custom-switch': this.isSwitch,
          'custom-radio': this.isCustom && this.isRadio
        }, "b-custom-control-".concat(this.getSize), Boolean(this.getSize && !this.isBtnMode))
      }, [input, label]);
    }
  }
};
exports.default = _default;
},{"./normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/mixins/form-size.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _config = require("../utils/config");

// @vue/component
var _default2 = {
  props: {
    size: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)('formControls', 'size');
      }
    }
  },
  computed: {
    sizeFormClass: function sizeFormClass() {
      return [this.size ? "form-control-".concat(this.size) : null];
    },
    sizeBtnClass: function sizeBtnClass()
    /* istanbul ignore next: don't think this is used */
    {
      return [this.size ? "btn-".concat(this.size) : null];
    }
  }
};
exports.default = _default2;
},{"../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js"}],"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormCheckbox = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

var _looseIndexOf = _interopRequireDefault(require("../../utils/loose-index-of"));

var _inspect = require("../../utils/inspect");

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formRadioCheck = _interopRequireDefault(require("../../mixins/form-radio-check"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _id = _interopRequireDefault(require("../../mixins/id"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @vue/component
var BFormCheckbox =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormCheckbox',
  mixins: [_formRadioCheck.default, // Includes shared render function
  _id.default, _form.default, _formSize.default, _formState.default],
  inject: {
    bvGroup: {
      from: 'bvCheckGroup',
      default: false
    }
  },
  props: {
    value: {
      // type: [String, Number, Boolean, Object],
      default: true
    },
    uncheckedValue: {
      // type: [String, Number, Boolean, Object],
      // Not applicable in multi-check mode
      default: false
    },
    indeterminate: {
      // Not applicable in multi-check mode
      type: Boolean,
      default: false
    },
    switch: {
      // Custom switch styling
      type: Boolean,
      default: false
    },
    checked: {
      // v-model (Array when multiple checkboxes have same name)
      // type: [String, Number, Boolean, Object, Array],
      default: null
    }
  },
  computed: {
    isChecked: function isChecked() {
      var checked = this.computedLocalChecked;
      var value = this.value;

      if ((0, _inspect.isArray)(checked)) {
        return (0, _looseIndexOf.default)(checked, value) > -1;
      } else {
        return (0, _looseEqual.default)(checked, value);
      }
    },
    isRadio: function isRadio() {
      return false;
    },
    isCheck: function isCheck() {
      return true;
    }
  },
  watch: {
    computedLocalChecked: function computedLocalChecked(newVal, oldVal) {
      this.$emit('input', newVal);

      if (this.$refs && this.$refs.input) {
        this.$emit('update:indeterminate', this.$refs.input.indeterminate);
      }
    },
    indeterminate: function indeterminate(newVal, oldVal) {
      this.setIndeterminate(newVal);
    }
  },
  mounted: function mounted() {
    // Set initial indeterminate state
    this.setIndeterminate(this.indeterminate);
  },
  methods: {
    handleChange: function handleChange(_ref) {
      var _ref$target = _ref.target,
          checked = _ref$target.checked,
          indeterminate = _ref$target.indeterminate;
      var localChecked = this.computedLocalChecked;
      var value = this.value;
      var isArr = (0, _inspect.isArray)(localChecked);
      var uncheckedValue = isArr ? null : this.uncheckedValue; // Update computedLocalChecked

      if (isArr) {
        var idx = (0, _looseIndexOf.default)(localChecked, value);

        if (checked && idx < 0) {
          // Add value to array
          localChecked = localChecked.concat(value);
        } else if (!checked && idx > -1) {
          // Remove value from array
          localChecked = localChecked.slice(0, idx).concat(localChecked.slice(idx + 1));
        }
      } else {
        localChecked = checked ? value : uncheckedValue;
      }

      this.computedLocalChecked = localChecked; // Change is only emitted on user interaction

      this.$emit('change', checked ? value : uncheckedValue); // If this is a child of form-checkbox-group, we emit a change event on it as well

      if (this.isGroup) {
        this.bvGroup.$emit('change', localChecked);
      }

      this.$emit('update:indeterminate', indeterminate);
    },
    setIndeterminate: function setIndeterminate(state) {
      // Indeterminate only supported in single checkbox mode
      if ((0, _inspect.isArray)(this.computedLocalChecked)) {
        state = false;
      }

      if (this.$refs && this.$refs.input) {
        this.$refs.input.indeterminate = state; // Emit update event to prop

        this.$emit('update:indeterminate', state);
      }
    }
  }
});

exports.BFormCheckbox = BFormCheckbox;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../utils/loose-index-of":"node_modules/bootstrap-vue/esm/utils/loose-index-of.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-radio-check":"node_modules/bootstrap-vue/esm/mixins/form-radio-check.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js"}],"node_modules/bootstrap-vue/esm/components/form-radio/form-radio.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormRadio = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formRadioCheck = _interopRequireDefault(require("../../mixins/form-radio-check"));

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @vue/component
var BFormRadio =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormRadio',
  mixins: [_id.default, _formRadioCheck.default, // Includes shared render function
  _form.default, _formSize.default, _formState.default],
  inject: {
    bvGroup: {
      from: 'bvRadioGroup',
      default: false
    }
  },
  props: {
    checked: {
      // v-model
      // type: [String, Number, Boolean, Object],
      default: null
    }
  },
  computed: {
    // Radio Groups can only have a single value, so determining if checked is simple
    isChecked: function isChecked() {
      return (0, _looseEqual.default)(this.value, this.computedLocalChecked);
    },
    // Flags for form-radio-check mixin
    isRadio: function isRadio() {
      return true;
    },
    isCheck: function isCheck() {
      return false;
    }
  },
  watch: {
    // Radio Groups can only have a single value, so our watchers are simple
    computedLocalChecked: function computedLocalChecked(newVal, oldVal) {
      this.$emit('input', this.computedLocalChecked);
    }
  },
  methods: {
    handleChange: function handleChange(_ref) {
      var checked = _ref.target.checked;
      var value = this.value;
      this.computedLocalChecked = value; // Change is only emitted on user interaction

      this.$emit('change', checked ? value : null); // If this is a child of form-radio-group, we emit a change event on it as well

      if (this.isGroup) {
        this.bvGroup.$emit('change', checked ? value : null);
      }
    }
  }
});

exports.BFormRadio = BFormRadio;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-radio-check":"node_modules/bootstrap-vue/esm/mixins/form-radio-check.js","../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js"}],"node_modules/bootstrap-vue/esm/mixins/form-radio-check-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _html = require("../utils/html");

var _normalizeSlot = _interopRequireDefault(require("./normalize-slot"));

var _formCheckbox = require("../components/form-checkbox/form-checkbox");

var _formRadio = require("../components/form-radio/form-radio");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @vue/component
var _default = {
  mixins: [_normalizeSlot.default],
  model: {
    prop: 'checked',
    event: 'input'
  },
  props: {
    validated: {
      type: Boolean,
      default: false
    },
    ariaInvalid: {
      type: [Boolean, String],
      default: false
    },
    stacked: {
      type: Boolean,
      default: false
    },
    plain: {
      type: Boolean,
      default: false
    },
    buttons: {
      // Render as button style
      type: Boolean,
      default: false
    },
    buttonVariant: {
      // Only applicable when rendered with button style
      type: String,
      default: 'secondary'
    }
  },
  computed: {
    inline: function inline() {
      return !this.stacked;
    },
    groupName: function groupName() {
      // Checks/Radios tied to the same model must have the same name,
      // especially for ARIA accessibility.
      return this.name || this.safeId();
    },
    groupClasses: function groupClasses() {
      if (this.buttons) {
        return ['btn-group-toggle', this.inline ? 'btn-group' : 'btn-group-vertical', this.size ? "btn-group-".concat(this.size) : '', this.validated ? "was-validated" : ''];
      }

      return [this.validated ? "was-validated" : ''];
    },
    computedAriaInvalid: function computedAriaInvalid() {
      var ariaInvalid = this.ariaInvalid;

      if (ariaInvalid === true || ariaInvalid === 'true' || ariaInvalid === '') {
        return 'true';
      }

      return this.computedState === false ? 'true' : null;
    }
  },
  watch: {
    checked: function checked(newVal, oldVal) {
      this.localChecked = newVal;
    },
    localChecked: function localChecked(newVal, oldVal) {
      this.$emit('input', newVal);
    }
  },
  render: function render(h) {
    var _this = this;

    var inputs = this.formOptions.map(function (option, idx) {
      var uid = "_BV_option_".concat(idx, "_");
      return h(_this.isRadioGroup ? _formRadio.BFormRadio : _formCheckbox.BFormCheckbox, {
        key: uid,
        props: {
          id: _this.safeId(uid),
          value: option.value,
          // Individual radios or checks can be disabled in a group
          disabled: option.disabled || false // We don't need to include these, since the input's will know they are inside here
          // name: this.groupName,
          // form: this.form || null,
          // required: Boolean(this.name && this.required)

        }
      }, [h('span', {
        domProps: (0, _html.htmlOrText)(option.html, option.text)
      })]);
    });
    return h('div', {
      class: this.groupClasses,
      attrs: {
        id: this.safeId(),
        role: this.isRadioGroup ? 'radiogroup' : 'group',
        // Tabindex to allow group to be focused if needed
        tabindex: '-1',
        'aria-required': this.required ? 'true' : null,
        'aria-invalid': this.computedAriaInvalid
      }
    }, [this.normalizeSlot('first'), inputs, this.normalizeSlot('default')]);
  }
};
exports.default = _default;
},{"../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","./normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../components/form-checkbox/form-checkbox":"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox.js","../components/form-radio/form-radio":"node_modules/bootstrap-vue/esm/components/form-radio/form-radio.js"}],"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormCheckboxGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formOptions = _interopRequireDefault(require("../../mixins/form-options"));

var _formRadioCheckGroup = _interopRequireDefault(require("../../mixins/form-radio-check-group"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  switches: {
    // Custom switch styling
    type: Boolean,
    default: false
  },
  checked: {
    type: Array,
    default: null
  }
}; // @vue/component

exports.props = props;

var BFormCheckboxGroup =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormCheckboxGroup',
  mixins: [_id.default, _form.default, _formRadioCheckGroup.default, // Includes render function
  _formOptions.default, _formSize.default, _formState.default],
  provide: function provide() {
    return {
      bvCheckGroup: this
    };
  },
  props: props,
  data: function data() {
    return {
      localChecked: this.checked || []
    };
  },
  computed: {
    isRadioGroup: function isRadioGroup() {
      return false;
    }
  }
});

exports.BFormCheckboxGroup = BFormCheckboxGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-options":"node_modules/bootstrap-vue/esm/mixins/form-options.js","../../mixins/form-radio-check-group":"node_modules/bootstrap-vue/esm/mixins/form-radio-check-group.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js"}],"node_modules/bootstrap-vue/esm/components/form-checkbox/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormCheckbox", {
  enumerable: true,
  get: function () {
    return _formCheckbox.BFormCheckbox;
  }
});
Object.defineProperty(exports, "BFormCheckboxGroup", {
  enumerable: true,
  get: function () {
    return _formCheckboxGroup.BFormCheckboxGroup;
  }
});
exports.FormCheckboxPlugin = void 0;

var _formCheckbox = require("./form-checkbox");

var _formCheckboxGroup = require("./form-checkbox-group");

var _plugins = require("../../utils/plugins");

var FormCheckboxPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormCheckbox: _formCheckbox.BFormCheckbox,
    BCheckbox: _formCheckbox.BFormCheckbox,
    BCheck: _formCheckbox.BFormCheckbox,
    BFormCheckboxGroup: _formCheckboxGroup.BFormCheckboxGroup,
    BCheckboxGroup: _formCheckboxGroup.BFormCheckboxGroup,
    BCheckGroup: _formCheckboxGroup.BFormCheckboxGroup
  }
});
exports.FormCheckboxPlugin = FormCheckboxPlugin;
},{"./form-checkbox":"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox.js","./form-checkbox-group":"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox-group.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/form-radio/form-radio-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormRadioGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formOptions = _interopRequireDefault(require("../../mixins/form-options"));

var _formRadioCheckGroup = _interopRequireDefault(require("../../mixins/form-radio-check-group"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  checked: {
    // type: [String, Number, Boolean, Object],
    default: null
  }
}; // @vue/component

exports.props = props;

var BFormRadioGroup =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormRadioGroup',
  mixins: [_id.default, _form.default, _formRadioCheckGroup.default, // Includes render function
  _formOptions.default, _formSize.default, _formState.default],
  provide: function provide() {
    return {
      bvRadioGroup: this
    };
  },
  props: props,
  data: function data() {
    return {
      localChecked: this.checked
    };
  },
  computed: {
    isRadioGroup: function isRadioGroup() {
      return true;
    }
  }
});

exports.BFormRadioGroup = BFormRadioGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-options":"node_modules/bootstrap-vue/esm/mixins/form-options.js","../../mixins/form-radio-check-group":"node_modules/bootstrap-vue/esm/mixins/form-radio-check-group.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js"}],"node_modules/bootstrap-vue/esm/components/form-radio/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormRadio", {
  enumerable: true,
  get: function () {
    return _formRadio.BFormRadio;
  }
});
Object.defineProperty(exports, "BFormRadioGroup", {
  enumerable: true,
  get: function () {
    return _formRadioGroup.BFormRadioGroup;
  }
});
exports.FormRadioPlugin = void 0;

var _formRadio = require("./form-radio");

var _formRadioGroup = require("./form-radio-group");

var _plugins = require("../../utils/plugins");

var FormRadioPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormRadio: _formRadio.BFormRadio,
    BRadio: _formRadio.BFormRadio,
    BFormRadioGroup: _formRadioGroup.BFormRadioGroup,
    BRadioGroup: _formRadioGroup.BFormRadioGroup
  }
});
exports.FormRadioPlugin = FormRadioPlugin;
},{"./form-radio":"node_modules/bootstrap-vue/esm/components/form-radio/form-radio.js","./form-radio-group":"node_modules/bootstrap-vue/esm/components/form-radio/form-radio-group.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/mixins/form-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../utils/inspect");

// @vue/component
var _default = {
  model: {
    prop: 'value',
    event: 'update'
  },
  props: {
    value: {
      type: [String, Number],
      default: ''
    },
    ariaInvalid: {
      type: [Boolean, String],
      default: false
    },
    readonly: {
      type: Boolean,
      default: false
    },
    plaintext: {
      type: Boolean,
      default: false
    },
    autocomplete: {
      type: String,
      default: null
    },
    placeholder: {
      type: String,
      default: null
    },
    formatter: {
      type: Function,
      default: null
    },
    trim: {
      type: Boolean,
      default: false
    },
    number: {
      type: Boolean,
      default: false
    },
    lazyFormatter: {
      type: Boolean,
      value: false
    }
  },
  data: function data() {
    return {
      localValue: this.stringifyValue(this.value)
    };
  },
  computed: {
    computedClass: function computedClass() {
      return [{
        // Range input needs class custom-range
        'custom-range': this.type === 'range',
        // plaintext not supported by type=range or type=color
        'form-control-plaintext': this.plaintext && this.type !== 'range' && this.type !== 'color',
        // form-control not used by type=range or plaintext. Always used by type=color
        'form-control': !this.plaintext && this.type !== 'range' || this.type === 'color'
      }, this.sizeFormClass, this.stateClass];
    },
    computedAriaInvalid: function computedAriaInvalid() {
      if (!this.ariaInvalid || this.ariaInvalid === 'false') {
        // this.ariaInvalid is null or false or 'false'
        return this.computedState === false ? 'true' : null;
      }

      if (this.ariaInvalid === true) {
        // User wants explicit aria-invalid=true
        return 'true';
      } // Most likely a string value (which could be the string 'true')


      return this.ariaInvalid;
    }
  },
  watch: {
    value: function value(newVal) {
      if (newVal !== this.localValue) {
        this.localValue = this.stringifyValue(newVal);
      }
    }
  },
  mounted: function mounted() {
    var value = this.stringifyValue(this.value);

    if (value !== this.localValue) {
      /* istanbul ignore next */
      this.localValue = value;
    }
  },
  methods: {
    stringifyValue: function stringifyValue(value) {
      return (0, _inspect.isUndefined)(value) || (0, _inspect.isNull)(value) ? '' : String(value);
    },
    getFormatted: function getFormatted(value, evt) {
      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      value = this.stringifyValue(value);

      if ((!this.lazyFormatter || force) && (0, _inspect.isFunction)(this.formatter)) {
        value = this.formatter(value, evt);
      }

      return value;
    },
    updateValue: function updateValue(value) {
      value = this.stringifyValue(value);

      if (value !== this.localValue) {
        // Keep the input set to the value before modifiers
        this.localValue = value;

        if (this.number) {
          // Emulate `.number` modifier behaviour
          var num = parseFloat(value);
          value = isNaN(num) ? value : num;
        } else if (this.trim) {
          // Emulate `.trim` modifier behaviour
          value = value.trim();
        } // Update the v-model


        this.$emit('update', value);
      } else if (this.$refs.input && value !== this.$refs.input.value) {
        // When the `localValue` hasn't changed but the actual input value
        // is out of sync, make sure to change it to the given one.
        // Usually casued by browser autocomplete and how it triggers the
        // change or input event, or depending on the formatter function.
        // https://github.com/bootstrap-vue/bootstrap-vue/issues/2657
        // https://github.com/bootstrap-vue/bootstrap-vue/issues/3498

        /* istanbul ignore next: hard to test */
        this.$refs.input.value = value;
      }
    },
    onInput: function onInput(evt) {
      // `evt.target.composing` is set by Vue
      // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js

      /* istanbul ignore if: hard to test composition events */
      if (evt.target.composing) {
        return;
      }

      var formatted = this.getFormatted(evt.target.value, evt); // Exit when the `formatter` function strictly returned `false`
      // or prevented the input event

      if (formatted === false || evt.defaultPrevented) {
        /* istanbul ignore next */
        evt.preventDefault();
        return;
      }

      this.updateValue(formatted);
      this.$emit('input', formatted);
    },
    onChange: function onChange(evt) {
      // `evt.target.composing` is set by Vue
      // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js

      /* istanbul ignore if: hard to test composition events */
      if (evt.target.composing) {
        return;
      }

      var formatted = this.getFormatted(evt.target.value, evt); // Exit when the `formatter` function strictly returned `false`
      // or prevented the input event

      if (formatted === false || evt.defaultPrevented) {
        /* istanbul ignore next */
        evt.preventDefault();
        return;
      }

      this.updateValue(formatted);
      this.$emit('change', formatted);
    },
    onBlur: function onBlur(evt) {
      // Lazy formatter
      if (this.lazyFormatter) {
        var formatted = this.getFormatted(evt.target.value, evt, true); // Exit when the `formatter` function strictly returned `false`

        if (formatted === false) {
          return;
        }

        this.updateValue(formatted);
      } // Emit native blur event


      this.$emit('blur', evt);
    },
    focus: function focus() {
      // For external handler that may want a focus method
      if (!this.disabled) {
        this.$el.focus();
      }
    },
    blur: function blur() {
      // For external handler that may want a blur method
      if (!this.disabled) {
        this.$el.blur();
      }
    }
  }
};
exports.default = _default;
},{"../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/mixins/form-selection.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// @vue/component
var _default = {
  computed: {
    selectionStart: {
      // Expose selectionStart for formatters, etc
      cache: false,
      get: function get()
      /* istanbul ignore next */
      {
        return this.$refs.input.selectionStart;
      },
      set: function set(val)
      /* istanbul ignore next */
      {
        this.$refs.input.selectionStart = val;
      }
    },
    selectionEnd: {
      // Expose selectionEnd for formatters, etc
      cache: false,
      get: function get()
      /* istanbul ignore next */
      {
        return this.$refs.input.selectionEnd;
      },
      set: function set(val)
      /* istanbul ignore next */
      {
        this.$refs.input.selectionEnd = val;
      }
    },
    selectionDirection: {
      // Expose selectionDirection for formatters, etc
      cache: false,
      get: function get()
      /* istanbul ignore next */
      {
        return this.$refs.input.selectionDirection;
      },
      set: function set(val)
      /* istanbul ignore next */
      {
        this.$refs.input.selectionDirection = val;
      }
    }
  },
  methods: {
    select: function select()
    /* istanbul ignore next */
    {
      var _this$$refs$input; // For external handler that may want a select() method


      (_this$$refs$input = this.$refs.input).select.apply(_this$$refs$input, arguments);
    },
    setSelectionRange: function setSelectionRange()
    /* istanbul ignore next */
    {
      var _this$$refs$input2; // For external handler that may want a setSelectionRange(a,b,c) method


      (_this$$refs$input2 = this.$refs.input).setSelectionRange.apply(_this$$refs$input2, arguments);
    },
    setRangeText: function setRangeText()
    /* istanbul ignore next */
    {
      var _this$$refs$input3; // For external handler that may want a setRangeText(a,b,c) method


      (_this$$refs$input3 = this.$refs.input).setRangeText.apply(_this$$refs$input3, arguments);
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/mixins/form-validity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// @vue/component
var _default = {
  computed: {
    validity: {
      // Expose validity property
      cache: false,
      get: function get()
      /* istanbul ignore next */
      {
        return this.$refs.input.validity;
      }
    },
    validationMessage: {
      // Expose validationMessage property
      cache: false,
      get: function get()
      /* istanbul ignore next */
      {
        return this.$refs.input.validationMessage;
      }
    },
    willValidate: {
      // Expose willValidate property
      cache: false,
      get: function get()
      /* istanbul ignore next */
      {
        return this.$refs.input.willValidate;
      }
    }
  },
  methods: {
    setCustomValidity: function setCustomValidity()
    /* istanbul ignore next */
    {
      var _this$$refs$input; // For external handler that may want a setCustomValidity(...) method


      return (_this$$refs$input = this.$refs.input).setCustomValidity.apply(_this$$refs$input, arguments);
    },
    checkValidity: function checkValidity()
    /* istanbul ignore next */
    {
      var _this$$refs$input2; // For external handler that may want a checkValidity(...) method


      return (_this$$refs$input2 = this.$refs.input).checkValidity.apply(_this$$refs$input2, arguments);
    },
    reportValidity: function reportValidity()
    /* istanbul ignore next */
    {
      var _this$$refs$input3; // For external handler that may want a reportValidity(...) method


      return (_this$$refs$input3 = this.$refs.input).reportValidity.apply(_this$$refs$input3, arguments);
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/form-input/form-input.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormInput = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _formText = _interopRequireDefault(require("../../mixins/form-text"));

var _formSelection = _interopRequireDefault(require("../../mixins/form-selection"));

var _formValidity = _interopRequireDefault(require("../../mixins/form-validity"));

var _array = require("../../utils/array");

var _dom = require("../../utils/dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Valid supported input types
var TYPES = ['text', 'password', 'email', 'number', 'url', 'tel', 'search', 'range', 'color', 'date', 'time', 'datetime', 'datetime-local', 'month', 'week']; // @vue/component

var BFormInput =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormInput',
  mixins: [_id.default, _form.default, _formSize.default, _formState.default, _formText.default, _formSelection.default, _formValidity.default],
  props: {
    // value prop defined in form-text mixin
    // value: { },
    type: {
      type: String,
      default: 'text',
      validator: function validator(type) {
        return (0, _array.arrayIncludes)(TYPES, type);
      }
    },
    noWheel: {
      // Disable mousewheel to prevent wheel from changing values (i.e. number/date).
      type: Boolean,
      default: false
    },
    min: {
      type: [String, Number],
      default: null
    },
    max: {
      type: [String, Number],
      default: null
    },
    step: {
      type: [String, Number],
      default: null
    },
    list: {
      type: String,
      default: null
    }
  },
  computed: {
    localType: function localType() {
      // We only allow certain types
      return (0, _array.arrayIncludes)(TYPES, this.type) ? this.type : 'text';
    }
  },
  watch: {
    noWheel: function noWheel(newVal) {
      this.setWheelStopper(newVal);
    }
  },
  mounted: function mounted() {
    this.setWheelStopper(this.noWheel);
  },
  deactivated: function deactivated() {
    // Turn off listeners when keep-alive component deactivated

    /* istanbul ignore next */
    this.setWheelStopper(false);
  },
  activated: function activated() {
    // Turn on listeners (if no-wheel) when keep-alive component activated

    /* istanbul ignore next */
    this.setWheelStopper(this.noWheel);
  },
  beforeDestroy: function beforeDestroy() {
    /* istanbul ignore next */
    this.setWheelStopper(false);
  },
  methods: {
    setWheelStopper: function setWheelStopper(on) {
      var input = this.$el; // We use native events, so that we don't interfere with propgation

      if (on) {
        (0, _dom.eventOn)(input, 'focus', this.onWheelFocus);
        (0, _dom.eventOn)(input, 'blur', this.onWheelBlur);
      } else {
        (0, _dom.eventOff)(input, 'focus', this.onWheelFocus);
        (0, _dom.eventOff)(input, 'blur', this.onWheelBlur);
        (0, _dom.eventOff)(document, 'wheel', this.stopWheel);
      }
    },
    onWheelFocus: function onWheelFocus(evt) {
      (0, _dom.eventOn)(document, 'wheel', this.stopWheel);
    },
    onWheelBlur: function onWheelBlur(evt) {
      (0, _dom.eventOff)(document, 'wheel', this.stopWheel);
    },
    stopWheel: function stopWheel(evt) {
      evt.preventDefault();
      this.$el.blur();
    }
  },
  render: function render(h) {
    var self = this;
    return h('input', {
      ref: 'input',
      class: self.computedClass,
      directives: [{
        name: 'model',
        rawName: 'v-model',
        value: self.localValue,
        expression: 'localValue'
      }],
      attrs: {
        id: self.safeId(),
        name: self.name,
        form: self.form || null,
        type: self.localType,
        disabled: self.disabled,
        placeholder: self.placeholder,
        required: self.required,
        autocomplete: self.autocomplete || null,
        readonly: self.readonly || self.plaintext,
        min: self.min,
        max: self.max,
        step: self.step,
        list: self.localType !== 'password' ? self.list : null,
        'aria-required': self.required ? 'true' : null,
        'aria-invalid': self.computedAriaInvalid
      },
      domProps: {
        value: self.localValue
      },
      on: _objectSpread({}, self.$listeners, {
        input: self.onInput,
        change: self.onChange,
        blur: self.onBlur
      })
    });
  }
});

exports.BFormInput = BFormInput;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/form-text":"node_modules/bootstrap-vue/esm/mixins/form-text.js","../../mixins/form-selection":"node_modules/bootstrap-vue/esm/mixins/form-selection.js","../../mixins/form-validity":"node_modules/bootstrap-vue/esm/mixins/form-validity.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js"}],"node_modules/bootstrap-vue/esm/components/form-input/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormInput", {
  enumerable: true,
  get: function () {
    return _formInput.BFormInput;
  }
});
exports.FormInputPlugin = void 0;

var _formInput = require("./form-input");

var _plugins = require("../../utils/plugins");

var FormInputPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormInput: _formInput.BFormInput,
    BInput: _formInput.BFormInput
  }
});
exports.FormInputPlugin = FormInputPlugin;
},{"./form-input":"node_modules/bootstrap-vue/esm/components/form-input/form-input.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/form-textarea/form-textarea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormTextarea = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _visible = require("../../directives/visible");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _formText = _interopRequireDefault(require("../../mixins/form-text"));

var _formSelection = _interopRequireDefault(require("../../mixins/form-selection"));

var _formValidity = _interopRequireDefault(require("../../mixins/form-validity"));

var _listenOnRoot = _interopRequireDefault(require("../../mixins/listen-on-root"));

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var BFormTextarea =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormTextarea',
  directives: {
    'b-visible': _visible.VBVisible
  },
  mixins: [_id.default, _listenOnRoot.default, _form.default, _formSize.default, _formState.default, _formText.default, _formSelection.default, _formValidity.default],
  props: {
    rows: {
      type: [Number, String],
      default: 2
    },
    maxRows: {
      type: [Number, String],
      default: null
    },
    wrap: {
      // 'soft', 'hard' or 'off'. Browser default is 'soft'
      type: String,
      default: 'soft'
    },
    noResize: {
      // Disable the resize handle of textarea
      type: Boolean,
      default: false
    },
    noAutoShrink: {
      // When in auto resize mode, disable shrinking to content height
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      heightInPx: null
    };
  },
  computed: {
    computedStyle: function computedStyle() {
      var styles = {
        // Setting `noResize` to true will disable the ability for the user to
        // manually resize the textarea. We also disable when in auto height mode
        resize: !this.computedRows || this.noResize ? 'none' : null
      };

      if (!this.computedRows) {
        // Conditionally set the computed CSS height when auto rows/height is enabled
        // We avoid setting the style to `null`, which can override user manual resize handle
        styles.height = this.heightInPx; // We always add a vertical scrollbar to the textarea when auto-height is
        // enabled so that the computed height calculation returns a stable value

        styles.overflowY = 'scroll';
      }

      return styles;
    },
    computedMinRows: function computedMinRows() {
      // Ensure rows is at least 2 and positive (2 is the native textarea value)
      // A value of 1 can cause issues in some browsers, and most browsers
      // only support 2 as the smallest value
      return Math.max(parseInt(this.rows, 10) || 2, 2);
    },
    computedMaxRows: function computedMaxRows() {
      return Math.max(this.computedMinRows, parseInt(this.maxRows, 10) || 0);
    },
    computedRows: function computedRows() {
      // This is used to set the attribute 'rows' on the textarea
      // If auto-height is enabled, then we return `null` as we use CSS to control height
      return this.computedMinRows === this.computedMaxRows ? this.computedMinRows : null;
    }
  },
  watch: {
    localValue: function localValue(newVal, oldVal) {
      this.setHeight();
    }
  },
  mounted: function mounted() {
    this.setHeight();
  },
  methods: {
    // Called by intersection observer directive
    visibleCallback: function visibleCallback(visible)
    /* istanbul ignore next */
    {
      if (visible) {
        // We use a `$nextTick()` here just to make sure any
        // transitions or portalling have completed
        this.$nextTick(this.setHeight);
      }
    },
    setHeight: function setHeight() {
      var _this = this;

      this.$nextTick(function () {
        (0, _dom.requestAF)(function () {
          _this.heightInPx = _this.computeHeight();
        });
      });
    },
    computeHeight: function computeHeight()
    /* istanbul ignore next: can't test getComputedStyle in JSDOM */
    {
      if (this.$isServer || !(0, _inspect.isNull)(this.computedRows)) {
        return null;
      }

      var el = this.$el; // Element must be visible (not hidden) and in document
      // Must be checked after above checks

      if (!(0, _dom.isVisible)(el)) {
        return null;
      } // Get current computed styles


      var computedStyle = (0, _dom.getCS)(el); // Height of one line of text in px

      var lineHeight = parseFloat(computedStyle.lineHeight); // Calculate height of border and padding

      var border = (parseFloat(computedStyle.borderTopWidth) || 0) + (parseFloat(computedStyle.borderBottomWidth) || 0);
      var padding = (parseFloat(computedStyle.paddingTop) || 0) + (parseFloat(computedStyle.paddingBottom) || 0); // Calculate offset

      var offset = border + padding; // Minimum height for min rows (which must be 2 rows or greater for cross-browser support)

      var minHeight = lineHeight * this.computedMinRows + offset; // Get the current style height (with `px` units)

      var oldHeight = el.style.height || computedStyle.height; // Probe scrollHeight by temporarily changing the height to `auto`

      el.style.height = 'auto';
      var scrollHeight = el.scrollHeight; // Place the original old height back on the element, just in case `computedProp`
      // returns the same value as before

      el.style.height = oldHeight; // Calculate content height in 'rows' (scrollHeight includes padding but not border)

      var contentRows = Math.max((scrollHeight - padding) / lineHeight, 2); // Calculate number of rows to display (limited within min/max rows)

      var rows = Math.min(Math.max(contentRows, this.computedMinRows), this.computedMaxRows); // Calculate the required height of the textarea including border and padding (in pixels)

      var height = Math.max(Math.ceil(rows * lineHeight + offset), minHeight); // Computed height remains the larger of `oldHeight` and new `height`,
      // when height is in `sticky` mode (prop `no-auto-shrink` is true)

      if (this.noAutoShrink && (parseFloat(oldHeight) || 0) > height) {
        return oldHeight;
      } // Return the new computed CSS height in px units


      return "".concat(height, "px");
    }
  },
  render: function render(h) {
    // Using self instead of this helps reduce code size during minification
    var self = this;
    return h('textarea', {
      ref: 'input',
      class: self.computedClass,
      style: self.computedStyle,
      directives: [{
        name: 'model',
        value: self.localValue
      }, {
        name: 'b-visible',
        value: this.visibleCallback,
        // If textarea is within 640px of viewport, consider it visible
        modifiers: {
          '640': true
        }
      }],
      attrs: {
        id: self.safeId(),
        name: self.name,
        form: self.form || null,
        disabled: self.disabled,
        placeholder: self.placeholder,
        required: self.required,
        autocomplete: self.autocomplete || null,
        readonly: self.readonly || self.plaintext,
        rows: self.computedRows,
        wrap: self.wrap || null,
        'aria-required': self.required ? 'true' : null,
        'aria-invalid': self.computedAriaInvalid
      },
      domProps: {
        value: self.localValue
      },
      on: _objectSpread({}, self.$listeners, {
        input: self.onInput,
        change: self.onChange,
        blur: self.onBlur
      })
    });
  }
});

exports.BFormTextarea = BFormTextarea;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../directives/visible":"node_modules/bootstrap-vue/esm/directives/visible.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/form-text":"node_modules/bootstrap-vue/esm/mixins/form-text.js","../../mixins/form-selection":"node_modules/bootstrap-vue/esm/mixins/form-selection.js","../../mixins/form-validity":"node_modules/bootstrap-vue/esm/mixins/form-validity.js","../../mixins/listen-on-root":"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/form-textarea/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormTextarea", {
  enumerable: true,
  get: function () {
    return _formTextarea.BFormTextarea;
  }
});
exports.FormTextareaPlugin = void 0;

var _formTextarea = require("./form-textarea");

var _plugins = require("../../utils/plugins");

var FormTextareaPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormTextarea: _formTextarea.BFormTextarea,
    BTextarea: _formTextarea.BFormTextarea
  }
});
exports.FormTextareaPlugin = FormTextareaPlugin;
},{"./form-textarea":"node_modules/bootstrap-vue/esm/components/form-textarea/form-textarea.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/mixins/form-custom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
// @vue/component
var _default = {
  props: {
    plain: {
      type: Boolean,
      default: false
    }
  },
  computed: {
    custom: function custom() {
      return !this.plain;
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/form-file/form-file.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormFile = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _inspect = require("../../utils/inspect");

var _safeTypes = require("../../utils/safe-types");

var _warn = require("../../utils/warn");

var _formCustom = _interopRequireDefault(require("../../mixins/form-custom"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BFormFile'; // @vue/component

var BFormFile =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_id.default, _form.default, _formState.default, _formCustom.default, _normalizeSlot.default],
  inheritAttrs: false,
  model: {
    prop: 'value',
    event: 'input'
  },
  props: {
    size: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)('BFormControl', 'size');
      }
    },
    value: {
      type: [_safeTypes.File, Array],
      default: null,
      validator: function validator(val) {
        /* istanbul ignore next */
        if (val === '') {
          (0, _warn.warn)("".concat(NAME, " - setting value/v-model to an empty string for reset is deprecated. Set to 'null' instead"));
          return true;
        }

        return (0, _inspect.isUndefinedOrNull)(val) || (0, _inspect.isFile)(val) || (0, _array.isArray)(val) && (val.length === 0 || val.every(_inspect.isFile));
      }
    },
    accept: {
      type: String,
      default: ''
    },
    // Instruct input to capture from camera
    capture: {
      type: Boolean,
      default: false
    },
    placeholder: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'placeholder');
      }
    },
    browseText: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'browseText');
      }
    },
    dropPlaceholder: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'dropPlaceholder');
      }
    },
    multiple: {
      type: Boolean,
      default: false
    },
    directory: {
      type: Boolean,
      default: false
    },
    noTraverse: {
      type: Boolean,
      default: false
    },
    noDrop: {
      type: Boolean,
      default: false
    },
    fileNameFormatter: {
      type: Function,
      default: null
    }
  },
  data: function data() {
    return {
      selectedFile: null,
      dragging: false,
      hasFocus: false
    };
  },
  computed: {
    selectLabel: function selectLabel() {
      // Draging active
      if (this.dragging && this.dropPlaceholder) {
        return this.dropPlaceholder;
      } // No file chosen


      if (!this.selectedFile || this.selectedFile.length === 0) {
        return this.placeholder;
      } // Convert selectedFile to an array (if not already one)


      var files = (0, _array.concat)(this.selectedFile).filter(Boolean);

      if (this.hasNormalizedSlot('file-name')) {
        // There is a slot for formatting the files/names
        return [this.normalizeSlot('file-name', {
          files: files,
          names: files.map(function (f) {
            return f.name;
          })
        })];
      } else {
        // Use the user supplied formatter, or the built in one.
        return (0, _inspect.isFunction)(this.fileNameFormatter) ? String(this.fileNameFormatter(files)) : files.map(function (file) {
          return file.name;
        }).join(', ');
      }
    }
  },
  watch: {
    selectedFile: function selectedFile(newVal, oldVal) {
      // The following test is needed when the file input is "reset" or the
      // exact same file(s) are selected to prevent an infinite loop.
      // When in `multiple` mode we need to check for two empty arrays or
      // two arrays with identical files
      if (newVal === oldVal || (0, _array.isArray)(newVal) && (0, _array.isArray)(oldVal) && newVal.length === oldVal.length && newVal.every(function (v, i) {
        return v === oldVal[i];
      })) {
        return;
      }

      if (!newVal && this.multiple) {
        this.$emit('input', []);
      } else {
        this.$emit('input', newVal);
      }
    },
    value: function value(newVal) {
      if (!newVal || (0, _array.isArray)(newVal) && newVal.length === 0) {
        this.reset();
      }
    }
  },
  methods: {
    focusHandler: function focusHandler(evt) {
      // Bootstrap v4 doesn't have focus styling for custom file input
      // Firefox has a '[type=file]:focus ~ sibling' selector issue,
      // so we add a 'focus' class to get around these bugs
      if (this.plain || evt.type === 'focusout') {
        this.hasFocus = false;
      } else {
        // Add focus styling for custom file input
        this.hasFocus = true;
      }
    },
    reset: function reset() {
      try {
        // Wrapped in try in case IE 11 craps out
        this.$refs.input.value = '';
      } catch (e) {} // IE 11 doesn't support setting `input.value` to '' or null
      // So we use this little extra hack to reset the value, just in case.
      // This also appears to work on modern browsers as well.


      this.$refs.input.type = '';
      this.$refs.input.type = 'file';
      this.selectedFile = this.multiple ? [] : null;
    },
    onFileChange: function onFileChange(evt) {
      var _this = this; // Always emit original event


      this.$emit('change', evt); // Check if special `items` prop is available on event (drop mode)
      // Can be disabled by setting no-traverse

      var items = evt.dataTransfer && evt.dataTransfer.items;
      /* istanbul ignore next: not supported in JSDOM */

      if (items && !this.noTraverse) {
        var queue = [];

        for (var i = 0; i < items.length; i++) {
          var item = items[i].webkitGetAsEntry();

          if (item) {
            queue.push(this.traverseFileTree(item));
          }
        }

        Promise.all(queue).then(function (filesArr) {
          _this.setFiles((0, _array.from)(filesArr));
        });
        return;
      } // Normal handling


      this.setFiles(evt.target.files || evt.dataTransfer.files);
    },
    setFiles: function setFiles() {
      var files = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      if (!files) {
        /* istanbul ignore next: this will probably not happen */
        this.selectedFile = null;
      } else if (this.multiple) {
        // Convert files to array
        var filesArray = [];

        for (var i = 0; i < files.length; i++) {
          filesArray.push(files[i]);
        } // Return file(s) as array


        this.selectedFile = filesArray;
      } else {
        // Return single file object
        this.selectedFile = files[0] || null;
      }
    },
    onReset: function onReset() {
      // Triggered when the parent form (if any) is reset
      this.selectedFile = this.multiple ? [] : null;
    },
    onDragover: function onDragover(evt)
    /* istanbul ignore next: difficult to test in JSDOM */
    {
      evt.preventDefault();
      evt.stopPropagation();

      if (this.noDrop || !this.custom) {
        return;
      }

      this.dragging = true;
      evt.dataTransfer.dropEffect = 'copy';
    },
    onDragleave: function onDragleave(evt)
    /* istanbul ignore next: difficult to test in JSDOM */
    {
      evt.preventDefault();
      evt.stopPropagation();
      this.dragging = false;
    },
    onDrop: function onDrop(evt)
    /* istanbul ignore next: difficult to test in JSDOM */
    {
      evt.preventDefault();
      evt.stopPropagation();

      if (this.noDrop) {
        return;
      }

      this.dragging = false;

      if (evt.dataTransfer.files && evt.dataTransfer.files.length > 0) {
        this.onFileChange(evt);
      }
    },
    traverseFileTree: function traverseFileTree(item, path)
    /* istanbul ignore next: not supported in JSDOM */
    {
      var _this2 = this; // Based on http://stackoverflow.com/questions/3590058


      return new Promise(function (resolve) {
        path = path || '';

        if (item.isFile) {
          // Get file
          item.file(function (file) {
            file.$path = path; // Inject $path to file obj

            resolve(file);
          });
        } else if (item.isDirectory) {
          // Get folder contents
          item.createReader().readEntries(function (entries) {
            var queue = [];

            for (var i = 0; i < entries.length; i++) {
              queue.push(_this2.traverseFileTree(entries[i], path + item.name + '/'));
            }

            Promise.all(queue).then(function (filesArr) {
              resolve((0, _array.from)(filesArr));
            });
          });
        }
      });
    }
  },
  render: function render(h) {
    // Form Input
    var input = h('input', {
      ref: 'input',
      class: [{
        'form-control-file': this.plain,
        'custom-file-input': this.custom,
        focus: this.custom && this.hasFocus
      }, this.stateClass],
      attrs: _objectSpread({}, this.$attrs, {
        type: 'file',
        id: this.safeId(),
        name: this.name,
        disabled: this.disabled,
        required: this.required,
        form: this.form || null,
        capture: this.capture || null,
        accept: this.accept || null,
        multiple: this.multiple,
        webkitdirectory: this.directory,
        'aria-required': this.required ? 'true' : null
      }),
      on: {
        change: this.onFileChange,
        focusin: this.focusHandler,
        focusout: this.focusHandler,
        reset: this.onReset
      }
    });

    if (this.plain) {
      return input;
    } // Overlay Labels


    var label = h('label', {
      staticClass: 'custom-file-label',
      class: [this.dragging ? 'dragging' : null],
      attrs: {
        for: this.safeId(),
        'data-browse': this.browseText || null
      }
    }, this.selectLabel); // Return rendered custom file input

    return h('div', {
      staticClass: 'custom-file b-form-file',
      class: [this.stateClass, _defineProperty({}, "b-custom-control-".concat(this.size), Boolean(this.size))],
      attrs: {
        id: this.safeId('_BV_file_outer_')
      },
      on: {
        dragover: this.onDragover,
        dragleave: this.onDragleave,
        drop: this.onDrop
      }
    }, [input, label]);
  }
});

exports.BFormFile = BFormFile;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../../mixins/form-custom":"node_modules/bootstrap-vue/esm/mixins/form-custom.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/form-file/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormFile", {
  enumerable: true,
  get: function () {
    return _formFile.BFormFile;
  }
});
exports.FormFilePlugin = void 0;

var _formFile = require("./form-file");

var _plugins = require("../../utils/plugins");

var FormFilePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormFile: _formFile.BFormFile,
    BFile: _formFile.BFormFile
  }
});
exports.FormFilePlugin = FormFilePlugin;
},{"./form-file":"node_modules/bootstrap-vue/esm/components/form-file/form-file.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/form-select/form-select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BFormSelect = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _formOptions = _interopRequireDefault(require("../../mixins/form-options"));

var _form = _interopRequireDefault(require("../../mixins/form"));

var _formSize = _interopRequireDefault(require("../../mixins/form-size"));

var _formState = _interopRequireDefault(require("../../mixins/form-state"));

var _formCustom = _interopRequireDefault(require("../../mixins/form-custom"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _array = require("../../utils/array");

var _html = require("../../utils/html");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var BFormSelect =
/*#__PURE__*/
_vue.default.extend({
  name: 'BFormSelect',
  mixins: [_id.default, _normalizeSlot.default, _form.default, _formSize.default, _formState.default, _formCustom.default, _formOptions.default],
  model: {
    prop: 'value',
    event: 'input'
  },
  props: {
    value: {// type: [Object, Array, String, Number, Boolean],
      // default: undefined
    },
    multiple: {
      type: Boolean,
      default: false
    },
    selectSize: {
      // Browsers default size to 0, which shows 4 rows in most browsers in multiple mode
      // Size of 1 can bork out Firefox
      type: Number,
      default: 0
    },
    ariaInvalid: {
      type: [Boolean, String],
      default: false
    }
  },
  data: function data() {
    return {
      localValue: this.value
    };
  },
  computed: {
    computedSelectSize: function computedSelectSize() {
      // Custom selects with a size of zero causes the arrows to be hidden,
      // so dont render the size attribute in this case
      return !this.plain && this.selectSize === 0 ? null : this.selectSize;
    },
    inputClass: function inputClass() {
      return [this.plain ? 'form-control' : 'custom-select', this.size && this.plain ? "form-control-".concat(this.size) : null, this.size && !this.plain ? "custom-select-".concat(this.size) : null, this.stateClass];
    },
    computedAriaInvalid: function computedAriaInvalid() {
      if (this.ariaInvalid === true || this.ariaInvalid === 'true') {
        return 'true';
      }

      return this.stateClass === 'is-invalid' ? 'true' : null;
    }
  },
  watch: {
    value: function value(newVal, oldVal) {
      this.localValue = newVal;
    },
    localValue: function localValue(newVal, oldVal) {
      this.$emit('input', this.localValue);
    }
  },
  methods: {
    focus: function focus() {
      this.$refs.input.focus();
    },
    blur: function blur() {
      this.$refs.input.blur();
    }
  },
  render: function render(h) {
    var _this = this;

    var options = this.formOptions.map(function (option, index) {
      return h('option', {
        key: "option_".concat(index, "_opt"),
        attrs: {
          disabled: Boolean(option.disabled)
        },
        domProps: _objectSpread({}, (0, _html.htmlOrText)(option.html, option.text), {
          value: option.value
        })
      });
    });
    return h('select', {
      ref: 'input',
      class: this.inputClass,
      directives: [{
        name: 'model',
        rawName: 'v-model',
        value: this.localValue,
        expression: 'localValue'
      }],
      attrs: {
        id: this.safeId(),
        name: this.name,
        form: this.form || null,
        multiple: this.multiple || null,
        size: this.computedSelectSize,
        disabled: this.disabled,
        required: this.required,
        'aria-required': this.required ? 'true' : null,
        'aria-invalid': this.computedAriaInvalid
      },
      on: {
        change: function change(evt) {
          var target = evt.target;
          var selectedVal = (0, _array.from)(target.options).filter(function (o) {
            return o.selected;
          }).map(function (o) {
            return '_value' in o ? o._value : o.value;
          });
          _this.localValue = target.multiple ? selectedVal : selectedVal[0];

          _this.$nextTick(function () {
            _this.$emit('change', _this.localValue);
          });
        }
      }
    }, [this.normalizeSlot('first'), options, this.normalizeSlot('default')]);
  }
});

exports.BFormSelect = BFormSelect;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/form-options":"node_modules/bootstrap-vue/esm/mixins/form-options.js","../../mixins/form":"node_modules/bootstrap-vue/esm/mixins/form.js","../../mixins/form-size":"node_modules/bootstrap-vue/esm/mixins/form-size.js","../../mixins/form-state":"node_modules/bootstrap-vue/esm/mixins/form-state.js","../../mixins/form-custom":"node_modules/bootstrap-vue/esm/mixins/form-custom.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js"}],"node_modules/bootstrap-vue/esm/components/form-select/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BFormSelect", {
  enumerable: true,
  get: function () {
    return _formSelect.BFormSelect;
  }
});
exports.FormSelectPlugin = void 0;

var _formSelect = require("./form-select");

var _plugins = require("../../utils/plugins");

var FormSelectPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BFormSelect: _formSelect.BFormSelect,
    BSelect: _formSelect.BFormSelect
  }
});
exports.FormSelectPlugin = FormSelectPlugin;
},{"./form-select":"node_modules/bootstrap-vue/esm/components/form-select/form-select.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/image/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BImg", {
  enumerable: true,
  get: function () {
    return _img.BImg;
  }
});
Object.defineProperty(exports, "BImgLazy", {
  enumerable: true,
  get: function () {
    return _imgLazy.BImgLazy;
  }
});
exports.ImagePlugin = void 0;

var _img = require("./img");

var _imgLazy = require("./img-lazy");

var _plugins = require("../../utils/plugins");

var ImagePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BImg: _img.BImg,
    BImgLazy: _imgLazy.BImgLazy
  }
});
exports.ImagePlugin = ImagePlugin;
},{"./img":"node_modules/bootstrap-vue/esm/components/image/img.js","./img-lazy":"node_modules/bootstrap-vue/esm/components/image/img-lazy.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/input-group/input-group-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BInputGroupText = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'div'
  }
}; // @vue/component

exports.props = props;

var BInputGroupText =
/*#__PURE__*/
_vue.default.extend({
  name: 'BInputGroupText',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'input-group-text'
    }), children);
  }
});

exports.BInputGroupText = BInputGroupText;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/input-group/input-group-addon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BInputGroupAddon = exports.commonProps = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _inputGroupText = require("./input-group-text");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var commonProps = {
  id: {
    type: String,
    default: null
  },
  tag: {
    type: String,
    default: 'div'
  },
  isText: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.commonProps = commonProps;

var BInputGroupAddon =
/*#__PURE__*/
_vue.default.extend({
  name: 'BInputGroupAddon',
  functional: true,
  props: _objectSpread({}, commonProps, {
    append: {
      type: Boolean,
      default: false
    }
  }),
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: {
        'input-group-append': props.append,
        'input-group-prepend': !props.append
      },
      attrs: {
        id: props.id
      }
    }), props.isText ? [h(_inputGroupText.BInputGroupText, children)] : children);
  }
});

exports.BInputGroupAddon = BInputGroupAddon;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","./input-group-text":"node_modules/bootstrap-vue/esm/components/input-group/input-group-text.js"}],"node_modules/bootstrap-vue/esm/components/input-group/input-group-prepend.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BInputGroupPrepend = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _inputGroupAddon = require("./input-group-addon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var BInputGroupPrepend =
/*#__PURE__*/
_vue.default.extend({
  name: 'BInputGroupPrepend',
  functional: true,
  props: _inputGroupAddon.commonProps,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children; // pass all our props/attrs down to child, and set`append` to false

    return h(_inputGroupAddon.BInputGroupAddon, (0, _vueFunctionalDataMerge.mergeData)(data, {
      props: _objectSpread({}, props, {
        append: false
      })
    }), children);
  }
});

exports.BInputGroupPrepend = BInputGroupPrepend;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","./input-group-addon":"node_modules/bootstrap-vue/esm/components/input-group/input-group-addon.js"}],"node_modules/bootstrap-vue/esm/components/input-group/input-group-append.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BInputGroupAppend = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _inputGroupAddon = require("./input-group-addon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// @vue/component
var BInputGroupAppend =
/*#__PURE__*/
_vue.default.extend({
  name: 'BInputGroupAppend',
  functional: true,
  props: _inputGroupAddon.commonProps,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children; // pass all our props/attrs down to child, and set`append` to true

    return h(_inputGroupAddon.BInputGroupAddon, (0, _vueFunctionalDataMerge.mergeData)(data, {
      props: _objectSpread({}, props, {
        append: true
      })
    }), children);
  }
});

exports.BInputGroupAppend = BInputGroupAppend;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","./input-group-addon":"node_modules/bootstrap-vue/esm/components/input-group/input-group-addon.js"}],"node_modules/bootstrap-vue/esm/components/input-group/input-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BInputGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _html = require("../../utils/html");

var _normalizeSlot = require("../../utils/normalize-slot");

var _inputGroupPrepend = require("./input-group-prepend");

var _inputGroupAppend = require("./input-group-append");

var _inputGroupText = require("./input-group-text");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

var NAME = 'BInputGroup';
var props = {
  id: {
    type: String
  },
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'size');
    }
  },
  prepend: {
    type: String
  },
  prependHtml: {
    type: String
  },
  append: {
    type: String
  },
  appendHtml: {
    type: String
  },
  tag: {
    type: String,
    default: 'div'
  }
}; // @vue/component

exports.props = props;

var BInputGroup =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots;
    var $slots = slots();
    var $scopedSlots = scopedSlots || {};
    var childNodes = []; // Prepend prop/slot

    if (props.prepend || props.prependHtml || (0, _normalizeSlot.hasNormalizedSlot)('prepend', $scopedSlots, $slots)) {
      childNodes.push(h(_inputGroupPrepend.BInputGroupPrepend, [// Prop
      props.prepend || props.prependHtml ? h(_inputGroupText.BInputGroupText, {
        domProps: (0, _html.htmlOrText)(props.prependHtml, props.prepend)
      }) : h(), // Slot
      (0, _normalizeSlot.normalizeSlot)('prepend', {}, $scopedSlots, $slots) || h()]));
    } else {
      childNodes.push(h());
    } // Default slot


    if ((0, _normalizeSlot.hasNormalizedSlot)('default', $scopedSlots, $slots)) {
      childNodes.push.apply(childNodes, _toConsumableArray((0, _normalizeSlot.normalizeSlot)('default', {}, $scopedSlots, $slots)));
    } else {
      childNodes.push(h());
    } // Append prop


    if (props.append || props.appendHtml || (0, _normalizeSlot.hasNormalizedSlot)('append', $scopedSlots, $slots)) {
      childNodes.push(h(_inputGroupAppend.BInputGroupAppend, [// prop
      props.append || props.appendHtml ? h(_inputGroupText.BInputGroupText, {
        domProps: (0, _html.htmlOrText)(props.appendHtml, props.append)
      }) : h(), // Slot
      (0, _normalizeSlot.normalizeSlot)('append', {}, $scopedSlots, $slots) || h()]));
    } else {
      childNodes.push(h());
    }

    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'input-group',
      class: _defineProperty({}, "input-group-".concat(props.size), Boolean(props.size)),
      attrs: {
        id: props.id || null,
        role: 'group'
      }
    }), childNodes);
  }
});

exports.BInputGroup = BInputGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js","./input-group-prepend":"node_modules/bootstrap-vue/esm/components/input-group/input-group-prepend.js","./input-group-append":"node_modules/bootstrap-vue/esm/components/input-group/input-group-append.js","./input-group-text":"node_modules/bootstrap-vue/esm/components/input-group/input-group-text.js"}],"node_modules/bootstrap-vue/esm/components/input-group/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BInputGroup", {
  enumerable: true,
  get: function () {
    return _inputGroup.BInputGroup;
  }
});
Object.defineProperty(exports, "BInputGroupAddon", {
  enumerable: true,
  get: function () {
    return _inputGroupAddon.BInputGroupAddon;
  }
});
Object.defineProperty(exports, "BInputGroupPrepend", {
  enumerable: true,
  get: function () {
    return _inputGroupPrepend.BInputGroupPrepend;
  }
});
Object.defineProperty(exports, "BInputGroupAppend", {
  enumerable: true,
  get: function () {
    return _inputGroupAppend.BInputGroupAppend;
  }
});
Object.defineProperty(exports, "BInputGroupText", {
  enumerable: true,
  get: function () {
    return _inputGroupText.BInputGroupText;
  }
});
exports.InputGroupPlugin = void 0;

var _inputGroup = require("./input-group");

var _inputGroupAddon = require("./input-group-addon");

var _inputGroupPrepend = require("./input-group-prepend");

var _inputGroupAppend = require("./input-group-append");

var _inputGroupText = require("./input-group-text");

var _plugins = require("../../utils/plugins");

var InputGroupPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BInputGroup: _inputGroup.BInputGroup,
    BInputGroupAddon: _inputGroupAddon.BInputGroupAddon,
    BInputGroupPrepend: _inputGroupPrepend.BInputGroupPrepend,
    BInputGroupAppend: _inputGroupAppend.BInputGroupAppend,
    BInputGroupText: _inputGroupText.BInputGroupText
  }
});
exports.InputGroupPlugin = InputGroupPlugin;
},{"./input-group":"node_modules/bootstrap-vue/esm/components/input-group/input-group.js","./input-group-addon":"node_modules/bootstrap-vue/esm/components/input-group/input-group-addon.js","./input-group-prepend":"node_modules/bootstrap-vue/esm/components/input-group/input-group-prepend.js","./input-group-append":"node_modules/bootstrap-vue/esm/components/input-group/input-group-append.js","./input-group-text":"node_modules/bootstrap-vue/esm/components/input-group/input-group-text.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/layout/container.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BContainer = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'div'
  },
  fluid: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BContainer =
/*#__PURE__*/
_vue.default.extend({
  name: 'BContainer',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      class: {
        container: !props.fluid,
        'container-fluid': props.fluid
      }
    }), children);
  }
});

exports.BContainer = BContainer;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/jumbotron/jumbotron.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BJumbotron = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _html = require("../../utils/html");

var _normalizeSlot = require("../../utils/normalize-slot");

var _container = require("../layout/container");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BJumbotron';
var props = {
  fluid: {
    type: Boolean,
    default: false
  },
  containerFluid: {
    type: Boolean,
    default: false
  },
  header: {
    type: String,
    default: null
  },
  headerHtml: {
    type: String,
    default: null
  },
  headerTag: {
    type: String,
    default: 'h1'
  },
  headerLevel: {
    type: [Number, String],
    default: '3'
  },
  lead: {
    type: String,
    default: null
  },
  leadHtml: {
    type: String,
    default: null
  },
  leadTag: {
    type: String,
    default: 'p'
  },
  tag: {
    type: String,
    default: 'div'
  },
  bgVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'bgVariant');
    }
  },
  borderVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'borderVariant');
    }
  },
  textVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'textVariant');
    }
  }
}; // @vue/component

exports.props = props;

var BJumbotron =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class2;

    var props = _ref.props,
        data = _ref.data,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots; // The order of the conditionals matter.
    // We are building the component markup in order.

    var childNodes = [];
    var $slots = slots();
    var $scopedSlots = scopedSlots || {}; // Header

    if (props.header || (0, _normalizeSlot.hasNormalizedSlot)('header', $scopedSlots, $slots) || props.headerHtml) {
      childNodes.push(h(props.headerTag, {
        class: _defineProperty({}, "display-".concat(props.headerLevel), Boolean(props.headerLevel))
      }, (0, _normalizeSlot.normalizeSlot)('header', {}, $scopedSlots, $slots) || props.headerHtml || (0, _html.stripTags)(props.header)));
    } // Lead


    if (props.lead || (0, _normalizeSlot.hasNormalizedSlot)('lead', $scopedSlots, $slots) || props.leadHtml) {
      childNodes.push(h(props.leadTag, {
        staticClass: 'lead'
      }, (0, _normalizeSlot.normalizeSlot)('lead', {}, $scopedSlots, $slots) || props.leadHtml || (0, _html.stripTags)(props.lead)));
    } // Default slot


    if ((0, _normalizeSlot.hasNormalizedSlot)('default', $scopedSlots, $slots)) {
      childNodes.push((0, _normalizeSlot.normalizeSlot)('default', {}, $scopedSlots, $slots));
    } // If fluid, wrap content in a container/container-fluid


    if (props.fluid) {
      // Children become a child of a container
      childNodes = [h(_container.BContainer, {
        props: {
          fluid: props.containerFluid
        }
      }, childNodes)];
    } // Return the jumbotron


    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'jumbotron',
      class: (_class2 = {
        'jumbotron-fluid': props.fluid
      }, _defineProperty(_class2, "text-".concat(props.textVariant), Boolean(props.textVariant)), _defineProperty(_class2, "bg-".concat(props.bgVariant), Boolean(props.bgVariant)), _defineProperty(_class2, "border-".concat(props.borderVariant), Boolean(props.borderVariant)), _defineProperty(_class2, "border", Boolean(props.borderVariant)), _class2)
    }), childNodes);
  }
});

exports.BJumbotron = BJumbotron;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js","../layout/container":"node_modules/bootstrap-vue/esm/components/layout/container.js"}],"node_modules/bootstrap-vue/esm/components/jumbotron/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BJumbotron", {
  enumerable: true,
  get: function () {
    return _jumbotron.BJumbotron;
  }
});
exports.JumbotronPlugin = void 0;

var _jumbotron = require("./jumbotron");

var _plugins = require("../../utils/plugins");

var JumbotronPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BJumbotron: _jumbotron.BJumbotron
  }
});
exports.JumbotronPlugin = JumbotronPlugin;
},{"./jumbotron":"node_modules/bootstrap-vue/esm/components/jumbotron/jumbotron.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/layout/row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BRow = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _array = require("../../utils/array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var COMMON_ALIGNMENT = ['start', 'end', 'center'];
var props = {
  tag: {
    type: String,
    default: 'div'
  },
  noGutters: {
    type: Boolean,
    default: false
  },
  alignV: {
    type: String,
    default: null,
    validator: function validator(str) {
      return (0, _array.arrayIncludes)(COMMON_ALIGNMENT.concat(['baseline', 'stretch']), str);
    }
  },
  alignH: {
    type: String,
    default: null,
    validator: function validator(str) {
      return (0, _array.arrayIncludes)(COMMON_ALIGNMENT.concat(['between', 'around']), str);
    }
  },
  alignContent: {
    type: String,
    default: null,
    validator: function validator(str) {
      return (0, _array.arrayIncludes)(COMMON_ALIGNMENT.concat(['between', 'around', 'stretch']), str);
    }
  }
}; // @vue/component

exports.props = props;

var BRow =
/*#__PURE__*/
_vue.default.extend({
  name: 'BRow',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'row',
      class: (_class = {
        'no-gutters': props.noGutters
      }, _defineProperty(_class, "align-items-".concat(props.alignV), props.alignV), _defineProperty(_class, "justify-content-".concat(props.alignH), props.alignH), _defineProperty(_class, "align-content-".concat(props.alignContent), props.alignContent), _class)
    }), children);
  }
});

exports.BRow = BRow;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js"}],"node_modules/bootstrap-vue/esm/components/layout/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BContainer", {
  enumerable: true,
  get: function () {
    return _container.BContainer;
  }
});
Object.defineProperty(exports, "BRow", {
  enumerable: true,
  get: function () {
    return _row.BRow;
  }
});
Object.defineProperty(exports, "BCol", {
  enumerable: true,
  get: function () {
    return _col.BCol;
  }
});
Object.defineProperty(exports, "BFormRow", {
  enumerable: true,
  get: function () {
    return _formRow.BFormRow;
  }
});
exports.LayoutPlugin = void 0;

var _container = require("./container");

var _row = require("./row");

var _col = require("./col");

var _formRow = require("./form-row");

var _plugins = require("../../utils/plugins");

var LayoutPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BContainer: _container.BContainer,
    BRow: _row.BRow,
    BCol: _col.BCol,
    BFormRow: _formRow.BFormRow
  }
});
exports.LayoutPlugin = LayoutPlugin;
},{"./container":"node_modules/bootstrap-vue/esm/components/layout/container.js","./row":"node_modules/bootstrap-vue/esm/components/layout/row.js","./col":"node_modules/bootstrap-vue/esm/components/layout/col.js","./form-row":"node_modules/bootstrap-vue/esm/components/layout/form-row.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/link/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BLink", {
  enumerable: true,
  get: function () {
    return _link.BLink;
  }
});
exports.LinkPlugin = void 0;

var _link = require("./link");

var _plugins = require("../../utils/plugins");

var LinkPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BLink: _link.BLink
  }
});
exports.LinkPlugin = LinkPlugin;
},{"./link":"node_modules/bootstrap-vue/esm/components/link/link.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/list-group/list-group.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BListGroup = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _inspect = require("../../utils/inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  tag: {
    type: String,
    default: 'div'
  },
  flush: {
    type: Boolean,
    default: false
  },
  horizontal: {
    type: [Boolean, String],
    default: false
  }
}; // @vue/component

exports.props = props;

var BListGroup =
/*#__PURE__*/
_vue.default.extend({
  name: 'BListGroup',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var horizontal = props.horizontal === '' ? true : props.horizontal;
    horizontal = props.flush ? false : horizontal;
    var componentData = {
      staticClass: 'list-group',
      class: _defineProperty({
        'list-group-flush': props.flush,
        'list-group-horizontal': horizontal === true
      }, "list-group-horizontal-".concat(horizontal), (0, _inspect.isString)(horizontal))
    };
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, componentData), children);
  }
});

exports.BListGroup = BListGroup;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/list-group/list-group-item.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BListGroupItem = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BListGroupItem';
var actionTags = ['a', 'router-link', 'button', 'b-link'];
var linkProps = (0, _link.propsFactory)();
delete linkProps.href.default;
delete linkProps.to.default;

var props = _objectSpread({
  tag: {
    type: String,
    default: 'div'
  },
  action: {
    type: Boolean,
    default: null
  },
  button: {
    type: Boolean,
    default: null
  },
  variant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'variant');
    }
  }
}, linkProps); // @vue/component


exports.props = props;

var BListGroupItem =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var tag = props.button ? 'button' : !props.href && !props.to ? props.tag : _link.BLink;
    var isAction = Boolean(props.href || props.to || props.action || props.button || (0, _array.arrayIncludes)(actionTags, props.tag));
    var attrs = {};
    var itemProps = {};

    if (tag === 'button') {
      if (!data.attrs || !data.attrs.type) {
        // Add a type for button is one not provided in passed attributes
        attrs.type = 'button';
      }

      if (props.disabled) {
        // Set disabled attribute if button and disabled
        attrs.disabled = true;
      }
    } else {
      itemProps = (0, _pluckProps.default)(linkProps, props);
    }

    var componentData = {
      attrs: attrs,
      props: itemProps,
      staticClass: 'list-group-item',
      class: (_class = {}, _defineProperty(_class, "list-group-item-".concat(props.variant), Boolean(props.variant)), _defineProperty(_class, 'list-group-item-action', isAction), _defineProperty(_class, "active", props.active), _defineProperty(_class, "disabled", props.disabled), _class)
    };
    return h(tag, (0, _vueFunctionalDataMerge.mergeData)(data, componentData), children);
  }
});

exports.BListGroupItem = BListGroupItem;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/list-group/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BListGroup", {
  enumerable: true,
  get: function () {
    return _listGroup.BListGroup;
  }
});
Object.defineProperty(exports, "BListGroupItem", {
  enumerable: true,
  get: function () {
    return _listGroupItem.BListGroupItem;
  }
});
exports.ListGroupPlugin = void 0;

var _listGroup = require("./list-group");

var _listGroupItem = require("./list-group-item");

var _plugins = require("../../utils/plugins");

var ListGroupPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BListGroup: _listGroup.BListGroup,
    BListGroupItem: _listGroupItem.BListGroupItem
  }
});
exports.ListGroupPlugin = ListGroupPlugin;
},{"./list-group":"node_modules/bootstrap-vue/esm/components/list-group/list-group.js","./list-group-item":"node_modules/bootstrap-vue/esm/components/list-group/list-group-item.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/media/media-body.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BMediaBody = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'div'
  }
}; // @vue/component

exports.props = props;

var BMediaBody =
/*#__PURE__*/
_vue.default.extend({
  name: 'BMediaBody',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'media-body'
    }), children);
  }
});

exports.BMediaBody = BMediaBody;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/media/media-aside.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BMediaAside = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  tag: {
    type: String,
    default: 'div'
  },
  verticalAlign: {
    type: String,
    default: 'top'
  }
}; // @vue/component

exports.props = props;

var BMediaAside =
/*#__PURE__*/
_vue.default.extend({
  name: 'BMediaAside',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var align = props.verticalAlign === 'top' ? 'start' : props.verticalAlign === 'bottom' ? 'end' : props.verticalAlign;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'd-flex',
      class: _defineProperty({}, "align-self-".concat(align), align)
    }), children);
  }
});

exports.BMediaAside = BMediaAside;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/media/media.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BMedia = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _normalizeSlot = require("../../utils/normalize-slot");

var _mediaBody = require("./media-body");

var _mediaAside = require("./media-aside");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'div'
  },
  rightAlign: {
    type: Boolean,
    default: false
  },
  verticalAlign: {
    type: String,
    default: 'top'
  },
  noBody: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BMedia =
/*#__PURE__*/
_vue.default.extend({
  name: 'BMedia',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots,
        children = _ref.children;
    var childNodes = props.noBody ? children : [];

    if (!props.noBody) {
      var $slots = slots();
      var $scopedSlots = scopedSlots || {};
      var $aside = (0, _normalizeSlot.normalizeSlot)('aside', {}, $scopedSlots, $slots);
      var $default = (0, _normalizeSlot.normalizeSlot)('default', {}, $scopedSlots, $slots);

      if ($aside && !props.rightAlign) {
        childNodes.push(h(_mediaAside.BMediaAside, {
          staticClass: 'mr-3',
          props: {
            verticalAlign: props.verticalAlign
          }
        }, $aside));
      }

      childNodes.push(h(_mediaBody.BMediaBody, {}, $default));

      if ($aside && props.rightAlign) {
        childNodes.push(h(_mediaAside.BMediaAside, {
          staticClass: 'ml-3',
          props: {
            verticalAlign: props.verticalAlign
          }
        }, $aside));
      }
    }

    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'media'
    }), childNodes);
  }
});

exports.BMedia = BMedia;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js","./media-body":"node_modules/bootstrap-vue/esm/components/media/media-body.js","./media-aside":"node_modules/bootstrap-vue/esm/components/media/media-aside.js"}],"node_modules/bootstrap-vue/esm/components/media/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BMedia", {
  enumerable: true,
  get: function () {
    return _media.BMedia;
  }
});
Object.defineProperty(exports, "BMediaAside", {
  enumerable: true,
  get: function () {
    return _mediaAside.BMediaAside;
  }
});
Object.defineProperty(exports, "BMediaBody", {
  enumerable: true,
  get: function () {
    return _mediaBody.BMediaBody;
  }
});
exports.MediaPlugin = void 0;

var _media = require("./media");

var _mediaAside = require("./media-aside");

var _mediaBody = require("./media-body");

var _plugins = require("../../utils/plugins");

var MediaPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BMedia: _media.BMedia,
    BMediaAside: _mediaAside.BMediaAside,
    BMediaBody: _mediaBody.BMediaBody
  }
});
exports.MediaPlugin = MediaPlugin;
},{"./media":"node_modules/bootstrap-vue/esm/components/media/media.js","./media-aside":"node_modules/bootstrap-vue/esm/components/media/media-aside.js","./media-body":"node_modules/bootstrap-vue/esm/components/media/media-body.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/transporter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTransporterSingle = void 0;

var _vue = _interopRequireDefault(require("./vue"));

var _array = require("./array");

var _dom = require("./dom");

var _env = require("./env");

var _inspect = require("./inspect");

var _safeTypes = require("./safe-types");

var _normalizeSlot = _interopRequireDefault(require("../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// BTransporterSingle/BTransporterTargetSingle:
//
// Single root node portaling of content, which retains parent/child hierarchy
// Unlike Portal-Vue where portaled content is no longer a descendent of it's
// intended parent components
//
// Private components for use by Tooltips, Popovers and Modals
//
// Based on vue-simple-portal
// https://github.com/LinusBorg/vue-simple-portal
// Transporter target used by BTransporterSingle
// Supports only a single root element
// @vue/component
var BTransporterTargetSingle =
/*#__PURE__*/
_vue.default.extend({
  // As an abstract component, it doesn't appear in the $parent chain of
  // components, which means the next parent of any component rendered inside
  // of this one will be the parent from which is was portal'd
  abstract: true,
  name: 'BTransporterTargetSingle',
  props: {
    nodes: {
      // Even though we only support a single root element,
      // VNodes are always passed as an array
      type: [Array, Function] // default: undefined

    }
  },
  data: function data(vm) {
    return {
      updatedNodes: vm.nodes
    };
  },
  destroyed: function destroyed() {
    var el = this.$el;
    el && el.parentNode && el.parentNode.removeChild(el);
  },
  render: function render(h) {
    var nodes = (0, _inspect.isFunction)(this.updatedNodes) ? this.updatedNodes({}) : this.updatedNodes;
    nodes = (0, _array.concat)(nodes).filter(Boolean);
    /* istanbul ignore else */

    if (nodes && nodes.length > 0 && !nodes[0].text) {
      return nodes[0];
    } else {
      /* istanbul ignore next */
      return h();
    }
  }
}); // This component has no root element, so only a single VNode is allowed
// @vue/component


var BTransporterSingle =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTransporterSingle',
  mixins: [_normalizeSlot.default],
  props: {
    disabled: {
      type: Boolean,
      default: false
    },
    container: {
      // String: CSS selector,
      // HTMLElement: Element reference
      // Mainly needed for tooltips/popovers inside modals
      type: [String, _safeTypes.HTMLElement],
      default: 'body'
    },
    tag: {
      // This should be set to match the root element type
      type: String,
      default: 'div'
    }
  },
  watch: {
    disabled: {
      immediate: true,
      handler: function handler(disabled) {
        disabled ? this.unmountTarget() : this.$nextTick(this.mountTarget);
      }
    }
  },
  created: function created() {
    this._bv_defaultFn = null;
    this._bv_target = null;
  },
  beforeMount: function beforeMount() {
    this.mountTarget();
  },
  updated: function updated() {
    var _this = this; // Placed in a nextTick to ensure that children have completed
    // updating before rendering in the target


    this.$nextTick(function () {
      _this.updateTarget();
    });
  },
  beforeDestroy: function beforeDestroy() {
    this.unmountTarget();
    this._bv_defaultFn = null;
  },
  methods: {
    // Get the element which the target should be appended to
    getContainer: function getContainer() {
      /* istanbul ignore else */
      if (_env.isBrowser) {
        var container = this.container;
        return (0, _inspect.isString)(container) ? (0, _dom.select)(container) : container;
      } else {
        return null;
      }
    },
    // Mount the target
    mountTarget: function mountTarget() {
      if (!this._bv_target) {
        var container = this.getContainer();

        if (container) {
          var el = document.createElement('div');
          container.appendChild(el);
          this._bv_target = new BTransporterTargetSingle({
            el: el,
            parent: this,
            propsData: {
              // Initial nodes to be rendered
              nodes: (0, _array.concat)(this.normalizeSlot('default'))
            }
          });
        }
      }
    },
    // Update the content of the target
    updateTarget: function updateTarget() {
      if (_env.isBrowser && this._bv_target) {
        var defaultFn = this.$scopedSlots.default;

        if (!this.disabled) {
          /* istanbul ignore else: only applicable in Vue 2.5.x */
          if (defaultFn && this._bv_defaultFn !== defaultFn) {
            // We only update the target component if the scoped slot
            // function is a fresh one. The new slot syntax (since Vue 2.6)
            // can cache unchanged slot functions and we want to respect that here
            this._bv_target.updatedNodes = defaultFn;
          } else if (!defaultFn) {
            // We also need to be back compatible with non-scoped default slot (i.e. 2.5.x)
            this._bv_target.updatedNodes = this.$slots.default;
          }
        } // Update the scoped slot function cache


        this._bv_defaultFn = defaultFn;
      }
    },
    // Unmount the target
    unmountTarget: function unmountTarget() {
      if (this._bv_target) {
        this._bv_target.$destroy();

        this._bv_target = null;
      }
    }
  },
  render: function render(h) {
    if (this.disabled) {
      var nodes = (0, _array.concat)(this.normalizeSlot('default')).filter(Boolean);

      if (nodes.length > 0 && !nodes[0].text) {
        return nodes[0];
      }
    }

    return h();
  }
});

exports.BTransporterSingle = BTransporterSingle;
},{"./vue":"node_modules/bootstrap-vue/esm/utils/vue.js","./array":"node_modules/bootstrap-vue/esm/utils/array.js","./dom":"node_modules/bootstrap-vue/esm/utils/dom.js","./env":"node_modules/bootstrap-vue/esm/utils/env.js","./inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/utils/get-scope-id.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

// This method returns a component's scoped style attribute name: `data-v-xxxxxxx`
// The `_scopeId` options property is added by vue-loader when using scoped styles
// and will be `undefined` if no scoped styles are in use
var getScopeId = function getScopeId(vm) {
  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  return vm ? vm.$options._scopeId || defaultValue : defaultValue;
};

var _default = getScopeId;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/mixins/scoped-style-attrs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _getScopeId = _interopRequireDefault(require("../utils/get-scope-id"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _default = {
  computed: {
    scopedStyleAttrs: function scopedStyleAttrs() {
      var scopeId = (0, _getScopeId.default)(this.$parent);
      return scopeId ? _defineProperty({}, scopeId, '') : {};
    }
  }
};
exports.default = _default;
},{"../utils/get-scope-id":"node_modules/bootstrap-vue/esm/utils/get-scope-id.js"}],"node_modules/bootstrap-vue/esm/components/modal/helpers/modal-manager.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modalManager = void 0;

var _vue = _interopRequireDefault(require("../../../utils/vue"));

var _dom = require("../../../utils/dom");

var _env = require("../../../utils/env");

var _inspect = require("../../../utils/inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Private ModalManager helper
 * Handles controlling modal stacking zIndexes and body adjustments/classes
 */
// --- Constants ---
// Default modal backdrop z-index
var DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments

var Selector = {
  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
  STICKY_CONTENT: '.sticky-top',
  NAVBAR_TOGGLER: '.navbar-toggler'
}; // @vue/component

var ModalManager =
/*#__PURE__*/
_vue.default.extend({
  data: function data() {
    return {
      modals: [],
      baseZIndex: null,
      scrollbarWidth: null,
      isBodyOverflowing: false
    };
  },
  computed: {
    modalCount: function modalCount() {
      return this.modals.length;
    },
    modalsAreOpen: function modalsAreOpen() {
      return this.modalCount > 0;
    }
  },
  watch: {
    modalCount: function modalCount(newCount, oldCount) {
      if (_env.isBrowser) {
        this.getScrollbarWidth();

        if (newCount > 0 && oldCount === 0) {
          // Transitioning to modal(s) open
          this.checkScrollbar();
          this.setScrollbar();
          (0, _dom.addClass)(document.body, 'modal-open');
        } else if (newCount === 0 && oldCount > 0) {
          // Transitioning to modal(s) closed
          this.resetScrollbar();
          (0, _dom.removeClass)(document.body, 'modal-open');
        }

        (0, _dom.setAttr)(document.body, 'data-modal-open-count', String(newCount));
      }
    },
    modals: function modals(newVal, oldVal) {
      var _this = this;

      this.checkScrollbar();
      (0, _dom.requestAF)(function () {
        _this.updateModals(newVal || []);
      });
    }
  },
  methods: {
    // Public methods
    registerModal: function registerModal(modal) {
      var _this2 = this; // Register the modal if not already registered


      if (modal && this.modals.indexOf(modal) === -1) {
        // Add modal to modals array
        this.modals.push(modal);
        modal.$once('hook:beforeDestroy', function () {
          _this2.unregisterModal(modal);
        });
      }
    },
    unregisterModal: function unregisterModal(modal) {
      var index = this.modals.indexOf(modal);

      if (index > -1) {
        // Remove modal from modals array
        this.modals.splice(index, 1); // Reset the modal's data

        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {
          this.resetModal(modal);
        }
      }
    },
    getBaseZIndex: function getBaseZIndex() {
      if ((0, _inspect.isNull)(this.baseZIndex) && _env.isBrowser) {
        // Create a temporary `div.modal-backdrop` to get computed z-index
        var div = document.createElement('div');
        div.className = 'modal-backdrop d-none';
        div.style.display = 'none';
        document.body.appendChild(div);
        this.baseZIndex = parseInt((0, _dom.getCS)(div).zIndex || DEFAULT_ZINDEX, 10);
        document.body.removeChild(div);
      }

      return this.baseZIndex || DEFAULT_ZINDEX;
    },
    getScrollbarWidth: function getScrollbarWidth() {
      if ((0, _inspect.isNull)(this.scrollbarWidth) && _env.isBrowser) {
        // Create a temporary `div.measure-scrollbar` to get computed z-index
        var div = document.createElement('div');
        div.className = 'modal-scrollbar-measure';
        document.body.appendChild(div);
        this.scrollbarWidth = (0, _dom.getBCR)(div).width - div.clientWidth;
        document.body.removeChild(div);
      }

      return this.scrollbarWidth || 0;
    },
    // Private methods
    updateModals: function updateModals(modals) {
      var _this3 = this;

      var baseZIndex = this.getBaseZIndex();
      var scrollbarWidth = this.getScrollbarWidth();
      modals.forEach(function (modal, index) {
        // We update data values on each modal
        modal.zIndex = baseZIndex + index;
        modal.scrollbarWidth = scrollbarWidth;
        modal.isTop = index === _this3.modals.length - 1;
        modal.isBodyOverflowing = _this3.isBodyOverflowing;
      });
    },
    resetModal: function resetModal(modal) {
      if (modal) {
        modal.zIndex = this.getBaseZIndex();
        modal.isTop = true;
        modal.isBodyOverflowing = false;
      }
    },
    checkScrollbar: function checkScrollbar() {
      // Determine if the body element is overflowing
      var _getBCR = (0, _dom.getBCR)(document.body),
          left = _getBCR.left,
          right = _getBCR.right;

      this.isBodyOverflowing = left + right < window.innerWidth;
    },
    setScrollbar: function setScrollbar() {
      var body = document.body; // Storage place to cache changes to margins and padding
      // Note: This assumes the following element types are not added to the
      // document after the modal has opened.

      body._paddingChangedForModal = body._paddingChangedForModal || [];
      body._marginChangedForModal = body._marginChangedForModal || [];

      if (this.isBodyOverflowing) {
        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding

        /* istanbul ignore next: difficult to test in JSDOM */

        (0, _dom.selectAll)(Selector.FIXED_CONTENT).forEach(function (el) {
          var actualPadding = el.style.paddingRight;
          var calculatedPadding = (0, _dom.getCS)(el).paddingRight || 0;
          (0, _dom.setAttr)(el, 'data-padding-right', actualPadding);
          el.style.paddingRight = "".concat(parseFloat(calculatedPadding) + scrollbarWidth, "px");

          body._paddingChangedForModal.push(el);
        }); // Adjust sticky content margin

        /* istanbul ignore next: difficult to test in JSDOM */

        (0, _dom.selectAll)(Selector.STICKY_CONTENT).forEach(function (el)
        /* istanbul ignore next */
        {
          var actualMargin = el.style.marginRight;
          var calculatedMargin = (0, _dom.getCS)(el).marginRight || 0;
          (0, _dom.setAttr)(el, 'data-margin-right', actualMargin);
          el.style.marginRight = "".concat(parseFloat(calculatedMargin) - scrollbarWidth, "px");

          body._marginChangedForModal.push(el);
        }); // Adjust <b-navbar-toggler> margin

        /* istanbul ignore next: difficult to test in JSDOM */

        (0, _dom.selectAll)(Selector.NAVBAR_TOGGLER).forEach(function (el)
        /* istanbul ignore next */
        {
          var actualMargin = el.style.marginRight;
          var calculatedMargin = (0, _dom.getCS)(el).marginRight || 0;
          (0, _dom.setAttr)(el, 'data-margin-right', actualMargin);
          el.style.marginRight = "".concat(parseFloat(calculatedMargin) + scrollbarWidth, "px");

          body._marginChangedForModal.push(el);
        }); // Adjust body padding

        var actualPadding = body.style.paddingRight;
        var calculatedPadding = (0, _dom.getCS)(body).paddingRight;
        (0, _dom.setAttr)(body, 'data-padding-right', actualPadding);
        body.style.paddingRight = "".concat(parseFloat(calculatedPadding) + scrollbarWidth, "px");
      }
    },
    resetScrollbar: function resetScrollbar() {
      var body = document.body;

      if (body._paddingChangedForModal) {
        // Restore fixed content padding
        body._paddingChangedForModal.forEach(function (el) {
          /* istanbul ignore next: difficult to test in JSDOM */
          if ((0, _dom.hasAttr)(el, 'data-padding-right')) {
            el.style.paddingRight = (0, _dom.getAttr)(el, 'data-padding-right') || '';
            (0, _dom.removeAttr)(el, 'data-padding-right');
          }
        });
      }

      if (body._marginChangedForModal) {
        // Restore sticky content and navbar-toggler margin
        body._marginChangedForModal.forEach(function (el) {
          /* istanbul ignore next: difficult to test in JSDOM */
          if ((0, _dom.hasAttr)(el, 'data-margin-right')) {
            el.style.marginRight = (0, _dom.getAttr)(el, 'data-margin-right') || '';
            (0, _dom.removeAttr)(el, 'data-margin-right');
          }
        });
      }

      body._paddingChangedForModal = null;
      body._marginChangedForModal = null; // Restore body padding

      if ((0, _dom.hasAttr)(body, 'data-padding-right')) {
        body.style.paddingRight = (0, _dom.getAttr)(body, 'data-padding-right') || '';
        (0, _dom.removeAttr)(body, 'data-padding-right');
      }
    }
  }
}); // Create and export our modal manager instance


var modalManager = new ModalManager();
exports.modalManager = modalManager;
},{"../../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal-event.class.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BvModalEvent = void 0;

var _bvEvent = require("../../../utils/bv-event.class");

var _object = require("../../../utils/object");

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = _getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var BvModalEvent =
/*#__PURE__*/
function (_BvEvent) {
  _inherits(BvModalEvent, _BvEvent);

  function BvModalEvent(type) {
    var _this;

    var eventInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, BvModalEvent);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(BvModalEvent).call(this, type, eventInit)); // Freeze our new props as readonly, but leave them enumerable

    (0, _object.defineProperties)(_assertThisInitialized(_this), {
      trigger: (0, _object.readonlyDescriptor)()
    });
    return _this;
  }

  _createClass(BvModalEvent, null, [{
    key: "Defaults",
    get: function get() {
      return _objectSpread({}, _get(_getPrototypeOf(BvModalEvent), "Defaults", this), {
        trigger: null
      });
    }
  }]);

  return BvModalEvent;
}(_bvEvent.BvEvent); // Named exports


exports.BvModalEvent = BvModalEvent;
},{"../../../utils/bv-event.class":"node_modules/bootstrap-vue/esm/utils/bv-event.class.js","../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/components/modal/modal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BModal = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _bvTransition = _interopRequireDefault(require("../../utils/bv-transition"));

var _keyCodes = _interopRequireDefault(require("../../utils/key-codes"));

var _observeDom = _interopRequireDefault(require("../../utils/observe-dom"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _env = require("../../utils/env");

var _html = require("../../utils/html");

var _inspect = require("../../utils/inspect");

var _safeTypes = require("../../utils/safe-types");

var _transporter = require("../../utils/transporter");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _listenOnRoot = _interopRequireDefault(require("../../mixins/listen-on-root"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _scopedStyleAttrs = _interopRequireDefault(require("../../mixins/scoped-style-attrs"));

var _button = require("../button/button");

var _buttonClose = require("../button/button-close");

var _modalManager = require("./helpers/modal-manager");

var _bvModalEvent = require("./helpers/bv-modal-event.class");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// --- Constants ---
var NAME = 'BModal'; // ObserveDom config to detect changes in modal content
// so that we can adjust the modal padding if needed

var OBSERVER_CONFIG = {
  subtree: true,
  childList: true,
  characterData: true,
  attributes: true,
  attributeFilter: ['style', 'class']
}; // Options for DOM event listeners

var EVT_OPTIONS = {
  passive: true,
  capture: false
}; // Query selector to find all tabbable elements
// (includes tabindex="-1", which we filter out after)

var TABABLE_SELECTOR = ['button', '[href]:not(.disabled)', 'input', 'select', 'textarea', '[tabindex]', '[contenteditable]'].map(function (s) {
  return "".concat(s, ":not(:disabled):not([disabled])");
}).join(', '); // --- Utility methods ---
// Attempt to focus an element, and return true if successful

var attemptFocus = function attemptFocus(el) {
  if (el && (0, _dom.isVisible)(el) && el.focus) {
    try {
      el.focus();
    } catch (_unused) {}
  } // If the element has focus, then return true


  return document.activeElement === el;
}; // --- Props ---


var props = {
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'size');
    }
  },
  centered: {
    type: Boolean,
    default: false
  },
  scrollable: {
    type: Boolean,
    default: false
  },
  buttonSize: {
    type: String,
    default: ''
  },
  noStacking: {
    type: Boolean,
    default: false
  },
  noFade: {
    type: Boolean,
    default: false
  },
  noCloseOnBackdrop: {
    type: Boolean,
    default: false
  },
  noCloseOnEsc: {
    type: Boolean,
    default: false
  },
  noEnforceFocus: {
    type: Boolean,
    default: false
  },
  title: {
    type: String,
    default: ''
  },
  titleHtml: {
    type: String
  },
  titleTag: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'titleTag');
    }
  },
  titleClass: {
    type: [String, Array, Object],
    default: null
  },
  titleSrOnly: {
    type: Boolean,
    default: false
  },
  ariaLabel: {
    type: String,
    default: null
  },
  headerBgVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'headerBgVariant');
    }
  },
  headerBorderVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'headerBorderVariant');
    }
  },
  headerTextVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'headerTextVariant');
    }
  },
  headerCloseVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'headerCloseVariant');
    }
  },
  headerClass: {
    type: [String, Array, Object],
    default: null
  },
  bodyBgVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'bodyBgVariant');
    }
  },
  bodyTextVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'bodyTextVariant');
    }
  },
  modalClass: {
    type: [String, Array, Object],
    default: null
  },
  dialogClass: {
    type: [String, Array, Object],
    default: null
  },
  contentClass: {
    type: [String, Array, Object],
    default: null
  },
  bodyClass: {
    type: [String, Array, Object],
    default: null
  },
  footerBgVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'footerBgVariant');
    }
  },
  footerBorderVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'footerBorderVariant');
    }
  },
  footerTextVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'footerTextVariant');
    }
  },
  footerClass: {
    type: [String, Array, Object],
    default: null
  },
  hideHeader: {
    type: Boolean,
    default: false
  },
  hideFooter: {
    type: Boolean,
    default: false
  },
  hideHeaderClose: {
    type: Boolean,
    default: false
  },
  hideBackdrop: {
    type: Boolean,
    default: false
  },
  okOnly: {
    type: Boolean,
    default: false
  },
  okDisabled: {
    type: Boolean,
    default: false
  },
  cancelDisabled: {
    type: Boolean,
    default: false
  },
  visible: {
    type: Boolean,
    default: false
  },
  returnFocus: {
    // HTML Element, CSS selector string or Vue component instance
    type: [_safeTypes.HTMLElement, String, Object],
    default: null
  },
  headerCloseLabel: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'headerCloseLabel');
    }
  },
  cancelTitle: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'cancelTitle');
    }
  },
  cancelTitleHtml: {
    type: String
  },
  okTitle: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'okTitle');
    }
  },
  okTitleHtml: {
    type: String
  },
  cancelVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'cancelVariant');
    }
  },
  okVariant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'okVariant');
    }
  },
  lazy: {
    type: Boolean,
    default: false
  },
  busy: {
    type: Boolean,
    default: false
  },
  static: {
    type: Boolean,
    default: false
  },
  autoFocusButton: {
    type: String,
    default: null,
    validator: function validator(val) {
      /* istanbul ignore next */
      return (0, _inspect.isUndefinedOrNull)(val) || (0, _array.arrayIncludes)(['ok', 'cancel', 'close'], val);
    }
  }
}; // @vue/component

exports.props = props;

var BModal =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_id.default, _listenOnRoot.default, _normalizeSlot.default, _scopedStyleAttrs.default],
  inheritAttrs: false,
  model: {
    prop: 'visible',
    event: 'change'
  },
  props: props,
  data: function data() {
    return {
      isHidden: true,
      // If modal should not be in document
      isVisible: false,
      // Controls modal visible state
      isTransitioning: false,
      // Used for style control
      isShow: false,
      // Used for style control
      isBlock: false,
      // Used for style control
      isOpening: false,
      // To signal that the modal is in the process of opening
      isClosing: false,
      // To signal that the modal is in the process of closing
      ignoreBackdropClick: false,
      // Used to signify if click out listener should ignore the click
      isModalOverflowing: false,
      return_focus: this.returnFocus || null,
      // The following items are controlled by the modalManager instance
      scrollbarWidth: 0,
      zIndex: _modalManager.modalManager.getBaseZIndex(),
      isTop: true,
      isBodyOverflowing: false
    };
  },
  computed: {
    modalClasses: function modalClasses() {
      return [{
        fade: !this.noFade,
        show: this.isShow
      }, this.modalClass];
    },
    modalStyles: function modalStyles() {
      var sbWidth = "".concat(this.scrollbarWidth, "px");
      return {
        paddingLeft: !this.isBodyOverflowing && this.isModalOverflowing ? sbWidth : '',
        paddingRight: this.isBodyOverflowing && !this.isModalOverflowing ? sbWidth : '',
        // Needed to fix issue https://github.com/bootstrap-vue/bootstrap-vue/issues/3457
        // Even though we are using v-show, we must ensure 'none' is restored in the styles
        display: this.isBlock ? 'block' : 'none'
      };
    },
    dialogClasses: function dialogClasses() {
      var _ref;

      return [(_ref = {}, _defineProperty(_ref, "modal-".concat(this.size), Boolean(this.size)), _defineProperty(_ref, 'modal-dialog-centered', this.centered), _defineProperty(_ref, 'modal-dialog-scrollable', this.scrollable), _ref), this.dialogClass];
    },
    headerClasses: function headerClasses() {
      var _ref2;

      return [(_ref2 = {}, _defineProperty(_ref2, "bg-".concat(this.headerBgVariant), Boolean(this.headerBgVariant)), _defineProperty(_ref2, "text-".concat(this.headerTextVariant), Boolean(this.headerTextVariant)), _defineProperty(_ref2, "border-".concat(this.headerBorderVariant), Boolean(this.headerBorderVariant)), _ref2), this.headerClass];
    },
    titleClasses: function titleClasses() {
      return [{
        'sr-only': this.titleSrOnly
      }, this.titleClass];
    },
    bodyClasses: function bodyClasses() {
      var _ref3;

      return [(_ref3 = {}, _defineProperty(_ref3, "bg-".concat(this.bodyBgVariant), Boolean(this.bodyBgVariant)), _defineProperty(_ref3, "text-".concat(this.bodyTextVariant), Boolean(this.bodyTextVariant)), _ref3), this.bodyClass];
    },
    footerClasses: function footerClasses() {
      var _ref4;

      return [(_ref4 = {}, _defineProperty(_ref4, "bg-".concat(this.footerBgVariant), Boolean(this.footerBgVariant)), _defineProperty(_ref4, "text-".concat(this.footerTextVariant), Boolean(this.footerTextVariant)), _defineProperty(_ref4, "border-".concat(this.footerBorderVariant), Boolean(this.footerBorderVariant)), _ref4), this.footerClass];
    },
    modalOuterStyle: function modalOuterStyle() {
      // Styles needed for proper stacking of modals
      return {
        position: 'absolute',
        zIndex: this.zIndex
      };
    },
    slotScope: function slotScope() {
      return {
        ok: this.onOk,
        cancel: this.onCancel,
        close: this.onClose,
        hide: this.hide,
        visible: this.isVisible
      };
    }
  },
  watch: {
    visible: function visible(newVal, oldVal) {
      if (newVal !== oldVal) {
        this[newVal ? 'show' : 'hide']();
      }
    }
  },
  created: function created() {
    // Define non-reactive properties
    this._observer = null;
  },
  mounted: function mounted() {
    // Set initial z-index as queried from the DOM
    this.zIndex = _modalManager.modalManager.getBaseZIndex(); // Listen for events from others to either open or close ourselves
    // and listen to all modals to enable/disable enforce focus

    this.listenOnRoot('bv::show::modal', this.showHandler);
    this.listenOnRoot('bv::hide::modal', this.hideHandler);
    this.listenOnRoot('bv::toggle::modal', this.toggleHandler); // Listen for `bv:modal::show events`, and close ourselves if the
    // opening modal not us

    this.listenOnRoot('bv::modal::show', this.modalListener); // Initially show modal?

    if (this.visible === true) {
      this.$nextTick(this.show);
    }
  },
  beforeDestroy: function beforeDestroy() {
    // Ensure everything is back to normal
    if (this._observer) {
      this._observer.disconnect();

      this._observer = null;
    }

    this.setEnforceFocus(false);
    this.setResizeEvent(false);

    if (this.isVisible) {
      this.isVisible = false;
      this.isShow = false;
      this.isTransitioning = false;
    }
  },
  methods: {
    // Private method to update the v-model
    updateModel: function updateModel(val) {
      if (val !== this.visible) {
        this.$emit('change', val);
      }
    },
    // Private method to create a BvModalEvent object
    buildEvent: function buildEvent(type) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return new _bvModalEvent.BvModalEvent(type, _objectSpread({
        // Default options
        cancelable: false,
        target: this.$refs.modal || this.$el || null,
        relatedTarget: null,
        trigger: null
      }, opts, {
        // Options that can't be overridden
        vueTarget: this,
        componentId: this.safeId()
      }));
    },
    // Public method to show modal
    show: function show() {
      if (this.isVisible || this.isOpening) {
        // If already open, or in the process of opening, do nothing

        /* istanbul ignore next */
        return;
      }
      /* istanbul ignore next */


      if (this.isClosing) {
        // If we are in the process of closing, wait until hidden before re-opening

        /* istanbul ignore next */
        this.$once('hidden', this.show);
        /* istanbul ignore next */

        return;
      }

      this.isOpening = true; // Set the element to return focus to when closed

      this.return_focus = this.return_focus || this.getActiveElement();
      var showEvt = this.buildEvent('show', {
        cancelable: true
      });
      this.emitEvent(showEvt); // Don't show if canceled

      if (showEvt.defaultPrevented || this.isVisible) {
        this.isOpening = false; // Ensure the v-model reflects the current state

        this.updateModel(false);
        return;
      } // Show the modal


      this.doShow();
    },
    // Public method to hide modal
    hide: function hide() {
      var trigger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      if (!this.isVisible || this.isClosing) {
        /* istanbul ignore next */
        return;
      }

      this.isClosing = true;
      var hideEvt = this.buildEvent('hide', {
        cancelable: trigger !== 'FORCE',
        trigger: trigger || null
      }); // We emit specific event for one of the three built-in buttons

      if (trigger === 'ok') {
        this.$emit('ok', hideEvt);
      } else if (trigger === 'cancel') {
        this.$emit('cancel', hideEvt);
      } else if (trigger === 'headerclose') {
        this.$emit('close', hideEvt);
      }

      this.emitEvent(hideEvt); // Hide if not canceled

      if (hideEvt.defaultPrevented || !this.isVisible) {
        this.isClosing = false; // Ensure v-model reflects current state

        this.updateModel(true);
        return;
      } // Stop observing for content changes


      if (this._observer) {
        this._observer.disconnect();

        this._observer = null;
      } // Trigger the hide transition


      this.isVisible = false; // Update the v-model

      this.updateModel(false);
    },
    // Public method to toggle modal visibility
    toggle: function toggle(triggerEl) {
      if (triggerEl) {
        this.return_focus = triggerEl;
      }

      if (this.isVisible) {
        this.hide('toggle');
      } else {
        this.show();
      }
    },
    // Private method to get the current document active element
    getActiveElement: function getActiveElement() {
      if (_env.isBrowser) {
        var activeElement = document.activeElement; // Note: On IE11, `document.activeElement` may be null.
        // So we test it for truthiness first.
        // https://github.com/bootstrap-vue/bootstrap-vue/issues/3206
        // Returning focus to document.body may cause unwanted scrolls, so we
        // exclude setting focus on body

        if (activeElement && activeElement !== document.body && activeElement.focus) {
          // Preset the fallback return focus value if it is not set
          // `document.activeElement` should be the trigger element that was clicked or
          // in the case of using the v-model, which ever element has current focus
          // Will be overridden by some commands such as toggle, etc.
          return activeElement;
        }
      }

      return null;
    },
    // Private method to get a list of all tabable elements within modal content
    getTabables: function getTabables() {
      // Find all tabable elements in the modal content
      // Assumes users have not used tabindex > 0 on elements!
      return (0, _dom.selectAll)(TABABLE_SELECTOR, this.$refs.content).filter(_dom.isVisible).filter(function (i) {
        return i.tabIndex > -1 && !i.disabled;
      });
    },
    // Private method to finish showing modal
    doShow: function doShow() {
      var _this = this;
      /* istanbul ignore next: commenting out for now until we can test stacking */


      if (_modalManager.modalManager.modalsAreOpen && this.noStacking) {
        // If another modal(s) is already open, wait for it(them) to close
        this.listenOnRootOnce('bv::modal::hidden', this.doShow);
        return;
      }

      _modalManager.modalManager.registerModal(this); // Place modal in DOM


      this.isHidden = false;
      this.$nextTick(function () {
        // We do this in `$nextTick()` to ensure the modal is in DOM first
        // before we show it
        _this.isVisible = true;
        _this.isOpening = false; // Update the v-model

        _this.updateModel(true);

        _this.$nextTick(function () {
          // In a nextTick in case modal content is lazy
          // Observe changes in modal content and adjust if necessary
          _this._observer = (0, _observeDom.default)(_this.$refs.content, _this.checkModalOverflow.bind(_this), OBSERVER_CONFIG);
        });
      });
    },
    // Transition handlers
    onBeforeEnter: function onBeforeEnter() {
      this.isTransitioning = true;
      this.setResizeEvent(true);
    },
    onEnter: function onEnter() {
      this.isBlock = true;
    },
    onAfterEnter: function onAfterEnter() {
      var _this2 = this;

      this.checkModalOverflow();
      this.isShow = true;
      this.isTransitioning = false; // We use `requestAF()` to allow transition hooks to complete
      // before passing control over to the other handlers
      // This will allow users to not have to use `$nextTick()` or `requestAF()`
      // when trying to pre-focus an element

      (0, _dom.requestAF)(function () {
        _this2.emitEvent(_this2.buildEvent('shown'));

        _this2.setEnforceFocus(true);

        _this2.$nextTick(function () {
          // Delayed in a `$nextTick()` to allow users time to pre-focus
          // an element if the wish
          _this2.focusFirst();
        });
      });
    },
    onBeforeLeave: function onBeforeLeave() {
      this.isTransitioning = true;
      this.setResizeEvent(false);
      this.setEnforceFocus(false);
    },
    onLeave: function onLeave() {
      // Remove the 'show' class
      this.isShow = false;
    },
    onAfterLeave: function onAfterLeave() {
      var _this3 = this;

      this.isBlock = false;
      this.isTransitioning = false;
      this.isModalOverflowing = false;
      this.isHidden = true;
      this.$nextTick(function () {
        _this3.isClosing = false;

        _modalManager.modalManager.unregisterModal(_this3);

        _this3.returnFocusTo(); // TODO: Need to find a way to pass the `trigger` property
        //       to the `hidden` event, not just only the `hide` event


        _this3.emitEvent(_this3.buildEvent('hidden'));
      });
    },
    // Event emitter
    emitEvent: function emitEvent(bvModalEvt) {
      var type = bvModalEvt.type; // We emit on root first incase a global listener wants to cancel
      // the event first before the instance emits it's event

      this.emitOnRoot("bv::modal::".concat(type), bvModalEvt, bvModalEvt.componentId);
      this.$emit(type, bvModalEvt);
    },
    // UI event handlers
    onDialogMousedown: function onDialogMousedown() {
      var _this4 = this; // Watch to see if the matching mouseup event occurs outside the dialog
      // And if it does, cancel the clickOut handler


      var modal = this.$refs.modal;

      var onceModalMouseup = function onceModalMouseup(evt) {
        (0, _dom.eventOff)(modal, 'mouseup', onceModalMouseup, EVT_OPTIONS);

        if (evt.target === modal) {
          _this4.ignoreBackdropClick = true;
        }
      };

      (0, _dom.eventOn)(modal, 'mouseup', onceModalMouseup, EVT_OPTIONS);
    },
    onClickOut: function onClickOut(evt) {
      if (this.ignoreBackdropClick) {
        // Click was initiated inside the modal content, but finished outside.
        // Set by the above onDialogMousedown handler
        this.ignoreBackdropClick = false;
        return;
      } // Do nothing if not visible, backdrop click disabled, or element
      // that generated click event is no longer in document body


      if (!this.isVisible || this.noCloseOnBackdrop || !(0, _dom.contains)(document.body, evt.target)) {
        return;
      } // If backdrop clicked, hide modal


      if (!(0, _dom.contains)(this.$refs.content, evt.target)) {
        this.hide('backdrop');
      }
    },
    onOk: function onOk() {
      this.hide('ok');
    },
    onCancel: function onCancel() {
      this.hide('cancel');
    },
    onClose: function onClose() {
      this.hide('headerclose');
    },
    onEsc: function onEsc(evt) {
      // If ESC pressed, hide modal
      if (evt.keyCode === _keyCodes.default.ESC && this.isVisible && !this.noCloseOnEsc) {
        this.hide('esc');
      }
    },
    // Document focusin listener
    focusHandler: function focusHandler(evt) {
      // If focus leaves modal content, bring it back
      var content = this.$refs.content;
      var target = evt.target;

      if (!this.noEnforceFocus && this.isTop && this.isVisible && content && document !== target && !(0, _dom.contains)(content, target)) {
        var tabables = this.getTabables();

        if (this.$refs.bottomTrap && target === this.$refs.bottomTrap) {
          // If user pressed TAB out of modal into our bottom trab trap element
          // Find the first tabable element in the modal content and focus it
          if (attemptFocus(tabables[0])) {
            // Focus was successful
            return;
          }
        } else if (this.$refs.topTrap && target === this.$refs.topTrap) {
          // If user pressed CTRL-TAB out of modal and into our top tab trap element
          // Find the last tabable element in the modal content and focus it
          if (attemptFocus(tabables[tabables.length - 1])) {
            // Focus was successful
            return;
          }
        } // Otherwise focus the modal content container


        content.focus({
          preventScroll: true
        });
      }
    },
    // Turn on/off focusin listener
    setEnforceFocus: function setEnforceFocus(on) {
      var method = on ? _dom.eventOn : _dom.eventOff;
      method(document, 'focusin', this.focusHandler, EVT_OPTIONS);
    },
    // Resize listener
    setResizeEvent: function setResizeEvent(on) {
      var method = on ? _dom.eventOn : _dom.eventOff; // These events should probably also check if
      // body is overflowing

      method(window, 'resize', this.checkModalOverflow, EVT_OPTIONS);
      method(window, 'orientationchange', this.checkModalOverflow, EVT_OPTIONS);
    },
    // Root listener handlers
    showHandler: function showHandler(id, triggerEl) {
      if (id === this.safeId()) {
        this.return_focus = triggerEl || this.getActiveElement();
        this.show();
      }
    },
    hideHandler: function hideHandler(id) {
      if (id === this.safeId()) {
        this.hide('event');
      }
    },
    toggleHandler: function toggleHandler(id, triggerEl) {
      if (id === this.safeId()) {
        this.toggle(triggerEl);
      }
    },
    modalListener: function modalListener(bvEvt) {
      // If another modal opens, close this one if stacking not permitted
      if (this.noStacking && bvEvt.vueTarget !== this) {
        this.hide();
      }
    },
    // Focus control handlers
    focusFirst: function focusFirst() {
      var _this5 = this; // Don't try and focus if we are SSR


      if (_env.isBrowser) {
        (0, _dom.requestAF)(function () {
          var modal = _this5.$refs.modal;
          var content = _this5.$refs.content;

          var activeElement = _this5.getActiveElement(); // If the modal contains the activeElement, we don't do anything


          if (modal && content && !(activeElement && (0, _dom.contains)(content, activeElement))) {
            var ok = _this5.$refs['ok-button'];
            var cancel = _this5.$refs['cancel-button'];
            var close = _this5.$refs['close-button']; // Focus the appropriate button or modal content wrapper

            var autoFocus = _this5.autoFocusButton;
            var el = autoFocus === 'ok' && ok ? ok.$el || ok : autoFocus === 'cancel' && cancel ? cancel.$el || cancel : autoFocus === 'close' && close ? close.$el || close : content; // Focus the element

            attemptFocus(el);

            if (el === content) {
              // Make sure top of modal is showing (if longer than the viewport)
              _this5.$nextTick(function () {
                modal.scrollTop = 0;
              });
            }
          }
        });
      }
    },
    returnFocusTo: function returnFocusTo() {
      // Prefer `returnFocus` prop over event specified
      // `return_focus` value
      var el = this.returnFocus || this.return_focus || null;
      this.return_focus = null;
      this.$nextTick(function () {
        // Is el a string CSS selector?
        el = (0, _inspect.isString)(el) ? (0, _dom.select)(el) : el;

        if (el) {
          // Possibly could be a component reference
          el = el.$el || el;
          attemptFocus(el);
        }
      });
    },
    checkModalOverflow: function checkModalOverflow() {
      if (this.isVisible) {
        var modal = this.$refs.modal;
        this.isModalOverflowing = modal.scrollHeight > document.documentElement.clientHeight;
      }
    },
    makeModal: function makeModal(h) {
      // Modal header
      var header = h();

      if (!this.hideHeader) {
        var modalHeader = this.normalizeSlot('modal-header', this.slotScope);

        if (!modalHeader) {
          var closeButton = h();

          if (!this.hideHeaderClose) {
            closeButton = h(_buttonClose.BButtonClose, {
              ref: 'close-button',
              props: {
                disabled: this.isTransitioning,
                ariaLabel: this.headerCloseLabel,
                textVariant: this.headerCloseVariant || this.headerTextVariant
              },
              on: {
                click: this.onClose
              }
            }, [this.normalizeSlot('modal-header-close')]);
          }

          var domProps = !this.hasNormalizedSlot('modal-title') && this.titleHtml ? {
            innerHTML: this.titleHtml
          } : {};
          modalHeader = [h(this.titleTag, {
            staticClass: 'modal-title',
            class: this.titleClasses,
            attrs: {
              id: this.safeId('__BV_modal_title_')
            },
            domProps: domProps
          }, [this.normalizeSlot('modal-title', this.slotScope) || (0, _html.stripTags)(this.title)]), closeButton];
        }

        header = h('header', {
          ref: 'header',
          staticClass: 'modal-header',
          class: this.headerClasses,
          attrs: {
            id: this.safeId('__BV_modal_header_')
          }
        }, [modalHeader]);
      } // Modal body


      var body = h('div', {
        ref: 'body',
        staticClass: 'modal-body',
        class: this.bodyClasses,
        attrs: {
          id: this.safeId('__BV_modal_body_')
        }
      }, this.normalizeSlot('default', this.slotScope)); // Modal footer

      var footer = h();

      if (!this.hideFooter) {
        var modalFooter = this.normalizeSlot('modal-footer', this.slotScope);

        if (!modalFooter) {
          var cancelButton = h();

          if (!this.okOnly) {
            var cancelHtml = this.cancelTitleHtml ? {
              innerHTML: this.cancelTitleHtml
            } : null;
            cancelButton = h(_button.BButton, {
              ref: 'cancel-button',
              props: {
                variant: this.cancelVariant,
                size: this.buttonSize,
                disabled: this.cancelDisabled || this.busy || this.isTransitioning
              },
              on: {
                click: this.onCancel
              }
            }, [this.normalizeSlot('modal-cancel') || (cancelHtml ? h('span', {
              domProps: cancelHtml
            }) : (0, _html.stripTags)(this.cancelTitle))]);
          }

          var okHtml = this.okTitleHtml ? {
            innerHTML: this.okTitleHtml
          } : null;
          var okButton = h(_button.BButton, {
            ref: 'ok-button',
            props: {
              variant: this.okVariant,
              size: this.buttonSize,
              disabled: this.okDisabled || this.busy || this.isTransitioning
            },
            on: {
              click: this.onOk
            }
          }, [this.normalizeSlot('modal-ok') || (okHtml ? h('span', {
            domProps: okHtml
          }) : (0, _html.stripTags)(this.okTitle))]);
          modalFooter = [cancelButton, okButton];
        }

        footer = h('footer', {
          ref: 'footer',
          staticClass: 'modal-footer',
          class: this.footerClasses,
          attrs: {
            id: this.safeId('__BV_modal_footer_')
          }
        }, [modalFooter]);
      } // Assemble modal content


      var modalContent = h('div', {
        ref: 'content',
        staticClass: 'modal-content',
        class: this.contentClass,
        attrs: {
          role: 'document',
          id: this.safeId('__BV_modal_content_'),
          tabindex: '-1'
        }
      }, [header, body, footer]); // Tab trap to prevent page from scrolling to next element in
      // tab index during enforce focus tab cycle

      var tabTrapTop = h();
      var tabTrapBottom = h();

      if (this.isVisible && !this.noEnforceFocus) {
        tabTrapTop = h('span', {
          ref: 'topTrap',
          attrs: {
            tabindex: '0'
          }
        });
        tabTrapBottom = h('span', {
          ref: 'bottomTrap',
          attrs: {
            tabindex: '0'
          }
        });
      } // Modal dialog wrapper


      var modalDialog = h('div', {
        ref: 'dialog',
        staticClass: 'modal-dialog',
        class: this.dialogClasses,
        on: {
          mousedown: this.onDialogMousedown
        }
      }, [tabTrapTop, modalContent, tabTrapBottom]); // Modal

      var modal = h('div', {
        ref: 'modal',
        staticClass: 'modal',
        class: this.modalClasses,
        style: this.modalStyles,
        directives: [{
          name: 'show',
          rawName: 'v-show',
          value: this.isVisible,
          expression: 'isVisible'
        }],
        attrs: {
          id: this.safeId(),
          role: 'dialog',
          'aria-hidden': this.isVisible ? null : 'true',
          'aria-modal': this.isVisible ? 'true' : null,
          'aria-label': this.ariaLabel,
          'aria-labelledby': this.hideHeader || this.ariaLabel || !(this.hasNormalizedSlot('modal-title') || this.titleHtml || this.title) ? null : this.safeId('__BV_modal_title_'),
          'aria-describedby': this.safeId('__BV_modal_body_')
        },
        on: {
          keydown: this.onEsc,
          click: this.onClickOut
        }
      }, [modalDialog]); // Wrap modal in transition
      // Sadly, we can't use BVTransition here due to the differences in
      // transition durations for .modal and .modal-dialog. Not until
      // issue https://github.com/vuejs/vue/issues/9986 is resolved

      modal = h('transition', {
        props: {
          enterClass: '',
          enterToClass: '',
          enterActiveClass: '',
          leaveClass: '',
          leaveActiveClass: '',
          leaveToClass: ''
        },
        on: {
          beforeEnter: this.onBeforeEnter,
          enter: this.onEnter,
          afterEnter: this.onAfterEnter,
          beforeLeave: this.onBeforeLeave,
          leave: this.onLeave,
          afterLeave: this.onAfterLeave
        }
      }, [modal]); // Modal backdrop

      var backdrop = h();

      if (!this.hideBackdrop && this.isVisible) {
        backdrop = h('div', {
          staticClass: 'modal-backdrop',
          attrs: {
            id: this.safeId('__BV_modal_backdrop_')
          }
        }, [this.normalizeSlot('modal-backdrop')]);
      }

      backdrop = h(_bvTransition.default, {
        props: {
          noFade: this.noFade
        }
      }, [backdrop]); // If the parent has a scoped style attribute, and the modal
      // is portalled, add the scoped attribute to the modal wrapper

      var scopedStyleAttrs = !this.static ? this.scopedStyleAttrs : {}; // Assemble modal and backdrop in an outer <div>

      return h('div', {
        key: "modal-outer-".concat(this._uid),
        style: this.modalOuterStyle,
        attrs: _objectSpread({}, scopedStyleAttrs, {}, this.$attrs, {
          id: this.safeId('__BV_modal_outer_')
        })
      }, [modal, backdrop]);
    }
  },
  render: function render(h) {
    if (this.static) {
      return this.lazy && this.isHidden ? h() : this.makeModal(h);
    } else {
      return this.isHidden ? h() : h(_transporter.BTransporterSingle, {}, [this.makeModal(h)]);
    }
  }
});

exports.BModal = BModal;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/bv-transition":"node_modules/bootstrap-vue/esm/utils/bv-transition.js","../../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../../utils/observe-dom":"node_modules/bootstrap-vue/esm/utils/observe-dom.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","../../utils/transporter":"node_modules/bootstrap-vue/esm/utils/transporter.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/listen-on-root":"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../mixins/scoped-style-attrs":"node_modules/bootstrap-vue/esm/mixins/scoped-style-attrs.js","../button/button":"node_modules/bootstrap-vue/esm/components/button/button.js","../button/button-close":"node_modules/bootstrap-vue/esm/components/button/button-close.js","./helpers/modal-manager":"node_modules/bootstrap-vue/esm/components/modal/helpers/modal-manager.js","./helpers/bv-modal-event.class":"node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal-event.class.js"}],"node_modules/bootstrap-vue/esm/directives/modal/modal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VBModal = void 0;

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

// Emitted show event for modal
var EVENT_SHOW = 'bv::show::modal'; // Prop name we use to store info on root element

var HANDLER = '__bv_modal_directive__';
var EVENT_OPTS = {
  passive: true
};

var getTarget = function getTarget(_ref) {
  var _ref$modifiers = _ref.modifiers,
      modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers,
      arg = _ref.arg,
      value = _ref.value; // Try value, then arg, otherwise pick last modifier

  return (0, _inspect.isString)(value) ? value : (0, _inspect.isString)(arg) ? arg : (0, _object.keys)(modifiers).reverse()[0];
};

var getTriggerElement = function getTriggerElement(el) {
  // If root element is a dropdown item or nav item, we
  // need to target the inner link or button instead
  return el && (0, _dom.matches)(el, '.dropdown-menu > li, li.nav-item') ? (0, _dom.select)('a, button', el) || el : el;
};

var setRole = function setRole(trigger) {
  // Only set a role if the trigger element doesn't have one
  if (trigger && trigger.tagName !== 'BUTTON' && !(0, _dom.hasAttr)(trigger, 'role')) {
    (0, _dom.setAttr)(trigger, 'role', 'button');
  }
};

var bind = function bind(el, binding, vnode) {
  var target = getTarget(binding);
  var trigger = getTriggerElement(el);

  if (target && trigger) {
    var handler = function handler(evt) {
      // `currentTarget` is the element with the listener on it
      var currentTarget = evt.currentTarget;

      if (!(0, _dom.isDisabled)(currentTarget)) {
        var type = evt.type; // Open modal only if trigger is not disabled

        if (type === 'click' || type === 'keydown' && evt.keyCode === 32) {
          vnode.context.$root.$emit(EVENT_SHOW, target, currentTarget);
        }
      }
    };

    el[HANDLER] = handler; // If element is not a button, we add `role="button"` for accessibility

    setRole(trigger); // Listen for click events

    (0, _dom.eventOn)(trigger, 'click', handler, EVENT_OPTS);

    if (trigger.tagName !== 'BUTTON' && (0, _dom.getAttr)(trigger, 'role') === 'button') {
      // If trigger isn't a button but has role button,
      // we also listen for `keydown.space`
      (0, _dom.eventOn)(trigger, 'keydown', handler, EVENT_OPTS);
    }
  }
};

var unbind = function unbind(el) {
  var trigger = getTriggerElement(el);
  var handler = el ? el[HANDLER] : null;

  if (trigger && handler) {
    (0, _dom.eventOff)(trigger, 'click', handler, EVENT_OPTS);
    (0, _dom.eventOff)(trigger, 'keydown', handler, EVENT_OPTS);
  }

  delete el[HANDLER];
};

var componentUpdated = function componentUpdated(el, binding, vnode) {
  // We bind and rebind just in case target changes
  unbind(el, binding, vnode);
  bind(el, binding, vnode);
};

var updated = function updated() {};
/*
 * Export our directive
 */


var VBModal = {
  inserted: componentUpdated,
  updated: updated,
  componentUpdated: componentUpdated,
  unbind: unbind
};
exports.VBModal = VBModal;
},{"../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVModalPlugin = void 0;

var _modal = require("../modal");

var _array = require("../../../utils/array");

var _config = require("../../../utils/config");

var _inspect = require("../../../utils/inspect");

var _object = require("../../../utils/object");

var _plugins = require("../../../utils/plugins");

var _warn = require("../../../utils/warn");

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
} // Plugin for adding `$bvModal` property to all Vue instances


// --- Constants ---
var PROP_NAME = '$bvModal';
var PROP_NAME_PRIV = '_bv__modal'; // Base modal props that are allowed
// Some may be ignored or overridden on some message boxes
// Prop ID is allowed, but really only should be used for testing
// We need to add it in explicitly as it comes from the `idMixin`

var BASE_PROPS = ['id'].concat(_toConsumableArray((0, _object.keys)((0, _object.omit)(_modal.props, ['busy', 'lazy', 'noStacking', "static", 'visible'])))); // Fallback event resolver (returns undefined)

var defaultResolver = function defaultResolver(bvModalEvt) {}; // Map prop names to modal slot names


var propsToSlots = {
  msgBoxContent: 'default',
  title: 'modal-title',
  okTitle: 'modal-ok',
  cancelTitle: 'modal-cancel'
}; // --- Utility methods ---
// Method to filter only recognized props that are not undefined

var filterOptions = function filterOptions(options) {
  return BASE_PROPS.reduce(function (memo, key) {
    if (!(0, _inspect.isUndefined)(options[key])) {
      memo[key] = options[key];
    }

    return memo;
  }, {});
}; // Method to install `$bvModal` VM injection


var plugin = function plugin(Vue) {
  // Create a private sub-component that extends BModal
  // which self-destructs after hidden
  // @vue/component
  var BMsgBox = Vue.extend({
    name: 'BMsgBox',
    extends: _modal.BModal,
    destroyed: function destroyed() {
      // Make sure we not in document any more
      if (this.$el && this.$el.parentNode) {
        this.$el.parentNode.removeChild(this.$el);
      }
    },
    mounted: function mounted() {
      var _this = this; // Self destruct handler


      var handleDestroy = function handleDestroy() {
        var self = _this;

        _this.$nextTick(function () {
          // In a `setTimeout()` to release control back to application
          setTimeout(function () {
            return self.$destroy();
          }, 0);
        });
      }; // Self destruct if parent destroyed


      this.$parent.$once('hook:destroyed', handleDestroy); // Self destruct after hidden

      this.$once('hidden', handleDestroy); // Self destruct on route change

      /* istanbul ignore if */

      if (this.$router && this.$route) {
        // Destroy ourselves if route changes

        /* istanbul ignore next */
        this.$once('hook:beforeDestroy', this.$watch('$router', handleDestroy));
      } // Show the `BMsgBox`


      this.show();
    }
  }); // Method to generate the on-demand modal message box
  // Returns a promise that resolves to a value returned by the resolve

  var asyncMsgBox = function asyncMsgBox($parent, props) {
    var resolver = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultResolver;

    if ((0, _warn.warnNotClient)(PROP_NAME) || (0, _warn.warnNoPromiseSupport)(PROP_NAME)) {
      /* istanbul ignore next */
      return;
    } // Create an instance of `BMsgBox` component


    var msgBox = new BMsgBox({
      // We set parent as the local VM so these modals can emit events on
      // the app `$root`, as needed by things like tooltips and popovers
      // And it helps to ensure `BMsgBox` is destroyed when parent is destroyed
      parent: $parent,
      // Preset the prop values
      propsData: _objectSpread({}, filterOptions((0, _config.getComponentConfig)('BModal') || {}), {
        // Defaults that user can override
        hideHeaderClose: true,
        hideHeader: !(props.title || props.titleHtml)
      }, (0, _object.omit)(props, (0, _object.keys)(propsToSlots)), {
        // Props that can't be overridden
        lazy: false,
        busy: false,
        visible: false,
        noStacking: false,
        noEnforceFocus: false
      })
    }); // Convert certain props to scoped slots

    (0, _object.keys)(propsToSlots).forEach(function (prop) {
      if (!(0, _inspect.isUndefined)(props[prop])) {
        // Can be a string, or array of VNodes.
        // Alternatively, user can use HTML version of prop to pass an HTML string.
        msgBox.$slots[propsToSlots[prop]] = (0, _array.concat)(props[prop]);
      }
    }); // Return a promise that resolves when hidden, or rejects on destroyed

    return new Promise(function (resolve, reject) {
      var resolved = false;
      msgBox.$once('hook:destroyed', function () {
        if (!resolved) {
          /* istanbul ignore next */
          reject(new Error('BootstrapVue MsgBox destroyed before resolve'));
        }
      });
      msgBox.$on('hide', function (bvModalEvt) {
        if (!bvModalEvt.defaultPrevented) {
          var result = resolver(bvModalEvt); // If resolver didn't cancel hide, we resolve

          if (!bvModalEvt.defaultPrevented) {
            resolved = true;
            resolve(result);
          }
        }
      }); // Create a mount point (a DIV) and mount the msgBo which will trigger it to show

      var div = document.createElement('div');
      document.body.appendChild(div);
      msgBox.$mount(div);
    });
  }; // Private utility method to open a user defined message box and returns a promise.
  // Not to be used directly by consumers, as this method may change calling syntax


  var makeMsgBox = function makeMsgBox($parent, content) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var resolver = arguments.length > 3 ? arguments[3] : undefined;

    if (!content || (0, _warn.warnNoPromiseSupport)(PROP_NAME) || (0, _warn.warnNotClient)(PROP_NAME) || !(0, _inspect.isFunction)(resolver)) {
      /* istanbul ignore next */
      return;
    }

    return asyncMsgBox($parent, _objectSpread({}, filterOptions(options), {
      msgBoxContent: content
    }), resolver);
  }; // BvModal instance class


  var BvModal =
  /*#__PURE__*/
  function () {
    function BvModal(vm) {
      _classCallCheck(this, BvModal); // Assign the new properties to this instance


      (0, _object.assign)(this, {
        _vm: vm,
        _root: vm.$root
      }); // Set these properties as read-only and non-enumerable

      (0, _object.defineProperties)(this, {
        _vm: (0, _object.readonlyDescriptor)(),
        _root: (0, _object.readonlyDescriptor)()
      });
    } // --- Instance methods ---
    // Show modal with the specified ID args are for future use


    _createClass(BvModal, [{
      key: "show",
      value: function show(id) {
        if (id && this._root) {
          var _this$_root;

          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          (_this$_root = this._root).$emit.apply(_this$_root, ['bv::show::modal', id].concat(args));
        }
      } // Hide modal with the specified ID args are for future use

    }, {
      key: "hide",
      value: function hide(id) {
        if (id && this._root) {
          var _this$_root2;

          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          (_this$_root2 = this._root).$emit.apply(_this$_root2, ['bv::hide::modal', id].concat(args));
        }
      } // The following methods require Promise support!
      // IE 11 and others do not support Promise natively, so users
      // should have a Polyfill loaded (which they need anyways for IE 11 support)
      // Open a message box with OK button only and returns a promise

    }, {
      key: "msgBoxOk",
      value: function msgBoxOk(message) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Pick the modal props we support from options

        var props = _objectSpread({}, options, {
          // Add in overrides and our content prop
          okOnly: true,
          okDisabled: false,
          hideFooter: false,
          msgBoxContent: message
        });

        return makeMsgBox(this._vm, message, props, function (bvModalEvt) {
          // Always resolve to true for OK
          return true;
        });
      } // Open a message box modal with OK and CANCEL buttons
      // and returns a promise

    }, {
      key: "msgBoxConfirm",
      value: function msgBoxConfirm(message) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Set the modal props we support from options

        var props = _objectSpread({}, options, {
          // Add in overrides and our content prop
          okOnly: false,
          okDisabled: false,
          cancelDisabled: false,
          hideFooter: false
        });

        return makeMsgBox(this._vm, message, props, function (bvModalEvt) {
          var trigger = bvModalEvt.trigger;
          return trigger === 'ok' ? true : trigger === 'cancel' ? false : null;
        });
      }
    }]);

    return BvModal;
  }(); // Add our instance mixin


  Vue.mixin({
    beforeCreate: function beforeCreate() {
      // Because we need access to `$root` for `$emits`, and VM for parenting,
      // we have to create a fresh instance of `BvModal` for each VM
      this[PROP_NAME_PRIV] = new BvModal(this);
    }
  }); // Define our read-only `$bvModal` instance property
  // Placed in an if just in case in HMR mode
  // eslint-disable-next-line no-prototype-builtins

  if (!Vue.prototype.hasOwnProperty(PROP_NAME)) {
    (0, _object.defineProperty)(Vue.prototype, PROP_NAME, {
      get: function get() {
        /* istanbul ignore next */
        if (!this || !this[PROP_NAME_PRIV]) {
          (0, _warn.warn)("'".concat(PROP_NAME, "' must be accessed from a Vue instance 'this' context"));
        }

        return this[PROP_NAME_PRIV];
      }
    });
  }
};

var BVModalPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  plugins: {
    plugin: plugin
  }
});
exports.BVModalPlugin = BVModalPlugin;
},{"../modal":"node_modules/bootstrap-vue/esm/components/modal/modal.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js","../../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js"}],"node_modules/bootstrap-vue/esm/components/modal/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BModal", {
  enumerable: true,
  get: function () {
    return _modal.BModal;
  }
});
exports.ModalPlugin = void 0;

var _modal = require("./modal");

var _modal2 = require("../../directives/modal/modal");

var _bvModal = require("./helpers/bv-modal");

var _plugins = require("../../utils/plugins");

var ModalPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BModal: _modal.BModal
  },
  directives: {
    VBModal: _modal2.VBModal
  },
  // $bvModal injection
  plugins: {
    BVModalPlugin: _bvModal.BVModalPlugin
  }
});
exports.ModalPlugin = ModalPlugin;
},{"./modal":"node_modules/bootstrap-vue/esm/components/modal/modal.js","../../directives/modal/modal":"node_modules/bootstrap-vue/esm/directives/modal/modal.js","./helpers/bv-modal":"node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/nav/nav.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNav = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// -- Constants --
var props = {
  tag: {
    type: String,
    default: 'ul'
  },
  fill: {
    type: Boolean,
    default: false
  },
  justified: {
    type: Boolean,
    default: false
  },
  align: {
    type: String,
    default: null
  },
  tabs: {
    type: Boolean,
    default: false
  },
  pills: {
    type: Boolean,
    default: false
  },
  vertical: {
    type: Boolean,
    default: false
  },
  small: {
    type: Boolean,
    default: false
  },
  cardHeader: {
    // Set to true if placing in a card header
    type: Boolean,
    default: false
  }
}; // -- Utils --

exports.props = props;

var computeJustifyContent = function computeJustifyContent(value) {
  // Normalize value
  value = value === 'left' ? 'start' : value === 'right' ? 'end' : value;
  return "justify-content-".concat(value);
}; // @vue/component


var BNav =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNav',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'nav',
      class: (_class = {
        'nav-tabs': props.tabs,
        'nav-pills': props.pills && !props.tabs,
        'card-header-tabs': !props.vertical && props.cardHeader && props.tabs,
        'card-header-pills': !props.vertical && props.cardHeader && props.pills && !props.tabs,
        'flex-column': props.vertical,
        'nav-fill': !props.vertical && props.fill,
        'nav-justified': !props.vertical && props.justified
      }, _defineProperty(_class, computeJustifyContent(props.align), !props.vertical && props.align), _defineProperty(_class, "small", props.small), _class)
    }), children);
  }
});

exports.BNav = BNav;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/nav/nav-item.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavItem = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = (0, _link.propsFactory)(); // @vue/component

exports.props = props;

var BNavItem =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNavItem',
  functional: true,
  props: _objectSpread({}, props, {
    linkAttrs: {
      type: Object,
      default: function _default() {}
    },
    linkClasses: {
      type: [String, Object, Array],
      default: null
    }
  }),
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        listeners = _ref.listeners,
        children = _ref.children; // We transfer the listeners to the link

    delete data.on;
    return h('li', (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'nav-item'
    }), [h(_link.BLink, {
      staticClass: 'nav-link',
      class: props.linkClasses,
      attrs: props.linkAttrs,
      props: props,
      on: listeners
    }, children)]);
  }
});

exports.BNavItem = BNavItem;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/nav/nav-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavText = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  tag: {
    type: String,
    default: 'span'
  }
}; // @vue/component

exports.props = props;

var BNavText =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNavText',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'navbar-text'
    }), children);
  }
});

exports.BNavText = BNavText;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js"}],"node_modules/bootstrap-vue/esm/components/nav/nav-form.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavForm = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _object = require("../../utils/object");

var _form = require("../form/form");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = (0, _object.omit)(_form.props, ['inline']); // @vue/component

exports.props = props;

var BNavForm =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNavForm',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(_form.BForm, (0, _vueFunctionalDataMerge.mergeData)(data, {
      props: _objectSpread({}, props, {
        inline: true
      })
    }), children);
  }
});

exports.BNavForm = BNavForm;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../form/form":"node_modules/bootstrap-vue/esm/components/form/form.js"}],"node_modules/bootstrap-vue/esm/components/nav/nav-item-dropdown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavItemDropdown = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _dropdown = require("../dropdown/dropdown");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _dropdown2 = _interopRequireDefault(require("../../mixins/dropdown"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _html = require("../../utils/html");

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// -- Constants --
var props = (0, _pluckProps.default)(['menuClass', 'toggleClass', 'noCaret', 'role'], _dropdown.props); // @vue/component

exports.props = props;

var BNavItemDropdown =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNavItemDropdown',
  mixins: [_id.default, _dropdown2.default, _normalizeSlot.default],
  props: props,
  computed: {
    isNav: function isNav() {
      // Signal to dropdown mixin that we are in a navbar
      return true;
    },
    dropdownClasses: function dropdownClasses() {
      return [this.directionClass, {
        show: this.visible
      }];
    },
    menuClasses: function menuClasses() {
      return [this.menuClass, {
        'dropdown-menu-right': this.right,
        show: this.visible
      }];
    },
    toggleClasses: function toggleClasses() {
      return [this.toggleClass, {
        'dropdown-toggle-no-caret': this.noCaret
      }];
    }
  },
  render: function render(h) {
    var button = h(_link.BLink, {
      ref: 'toggle',
      staticClass: 'nav-link dropdown-toggle',
      class: this.toggleClasses,
      props: {
        href: '#',
        disabled: this.disabled
      },
      attrs: {
        id: this.safeId('_BV_button_'),
        'aria-haspopup': 'true',
        'aria-expanded': this.visible ? 'true' : 'false'
      },
      on: {
        click: this.toggle,
        keydown: this.toggle // space, enter, down

      }
    }, [this.$slots['button-content'] || this.$slots.text || h('span', {
      domProps: (0, _html.htmlOrText)(this.html, this.text)
    })]);
    var menu = h('ul', {
      staticClass: 'dropdown-menu',
      class: this.menuClasses,
      ref: 'menu',
      attrs: {
        tabindex: '-1',
        'aria-labelledby': this.safeId('_BV_button_')
      },
      on: {
        keydown: this.onKeydown // up, down, esc

      }
    }, !this.lazy || this.visible ? this.normalizeSlot('default', {
      hide: this.hide
    }) : [h()]);
    return h('li', {
      staticClass: 'nav-item b-nav-dropdown dropdown',
      class: this.dropdownClasses,
      attrs: {
        id: this.safeId()
      }
    }, [button, menu]);
  }
});

exports.BNavItemDropdown = BNavItemDropdown;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../dropdown/dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/dropdown":"node_modules/bootstrap-vue/esm/mixins/dropdown.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/nav/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BNav", {
  enumerable: true,
  get: function () {
    return _nav.BNav;
  }
});
Object.defineProperty(exports, "BNavItem", {
  enumerable: true,
  get: function () {
    return _navItem.BNavItem;
  }
});
Object.defineProperty(exports, "BNavText", {
  enumerable: true,
  get: function () {
    return _navText.BNavText;
  }
});
Object.defineProperty(exports, "BNavForm", {
  enumerable: true,
  get: function () {
    return _navForm.BNavForm;
  }
});
Object.defineProperty(exports, "BNavItemDropdown", {
  enumerable: true,
  get: function () {
    return _navItemDropdown.BNavItemDropdown;
  }
});
exports.NavPlugin = void 0;

var _nav = require("./nav");

var _navItem = require("./nav-item");

var _navText = require("./nav-text");

var _navForm = require("./nav-form");

var _navItemDropdown = require("./nav-item-dropdown");

var _dropdown = require("../dropdown");

var _plugins = require("../../utils/plugins");

var NavPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BNav: _nav.BNav,
    BNavItem: _navItem.BNavItem,
    BNavText: _navText.BNavText,
    BNavForm: _navForm.BNavForm,
    BNavItemDropdown: _navItemDropdown.BNavItemDropdown,
    BNavItemDd: _navItemDropdown.BNavItemDropdown,
    BNavDropdown: _navItemDropdown.BNavItemDropdown,
    BNavDd: _navItemDropdown.BNavItemDropdown
  },
  plugins: {
    DropdownPlugin: _dropdown.DropdownPlugin
  }
});
exports.NavPlugin = NavPlugin;
},{"./nav":"node_modules/bootstrap-vue/esm/components/nav/nav.js","./nav-item":"node_modules/bootstrap-vue/esm/components/nav/nav-item.js","./nav-text":"node_modules/bootstrap-vue/esm/components/nav/nav-text.js","./nav-form":"node_modules/bootstrap-vue/esm/components/nav/nav-form.js","./nav-item-dropdown":"node_modules/bootstrap-vue/esm/components/nav/nav-item-dropdown.js","../dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/index.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/navbar/navbar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavbar = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _inspect = require("../../utils/inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BNavbar';
var props = {
  tag: {
    type: String,
    default: 'nav'
  },
  type: {
    type: String,
    default: 'light'
  },
  variant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'variant');
    }
  },
  toggleable: {
    type: [Boolean, String],
    default: false
  },
  fixed: {
    type: String
  },
  sticky: {
    type: Boolean,
    default: false
  },
  print: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BNavbar =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var breakpoint = '';
    var xs = (0, _config.getBreakpoints)()[0];

    if (props.toggleable && (0, _inspect.isString)(props.toggleable) && props.toggleable !== xs) {
      breakpoint = "navbar-expand-".concat(props.toggleable);
    } else if (props.toggleable === false) {
      breakpoint = 'navbar-expand';
    }

    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'navbar',
      class: (_class = {
        'd-print': props.print,
        'sticky-top': props.sticky
      }, _defineProperty(_class, "navbar-".concat(props.type), Boolean(props.type)), _defineProperty(_class, "bg-".concat(props.variant), Boolean(props.variant)), _defineProperty(_class, "fixed-".concat(props.fixed), Boolean(props.fixed)), _defineProperty(_class, "".concat(breakpoint), Boolean(breakpoint)), _class),
      attrs: {
        role: props.tag === 'nav' ? null : 'navigation'
      }
    }), children);
  }
});

exports.BNavbar = BNavbar;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/navbar/navbar-nav.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavbarNav = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _nav = require("../nav/nav");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// -- Constants --
var props = (0, _pluckProps.default)(['tag', 'fill', 'justified', 'align', 'small'], _nav.props); // -- Utils --

exports.props = props;

var computeJustifyContent = function computeJustifyContent(value) {
  // Normalize value
  value = value === 'left' ? 'start' : value === 'right' ? 'end' : value;
  return "justify-content-".concat(value);
}; // @vue/component


var BNavbarNav =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNavbarNav',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'navbar-nav',
      class: (_class = {
        'nav-fill': props.fill,
        'nav-justified': props.justified
      }, _defineProperty(_class, computeJustifyContent(props.align), props.align), _defineProperty(_class, "small", props.small), _class)
    }), children);
  }
});

exports.BNavbarNav = BNavbarNav;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../nav/nav":"node_modules/bootstrap-vue/esm/components/nav/nav.js"}],"node_modules/bootstrap-vue/esm/components/navbar/navbar-brand.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavbarBrand = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _pluckProps = _interopRequireDefault(require("../../utils/pluck-props"));

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var linkProps = (0, _link.propsFactory)();
linkProps.href.default = undefined;
linkProps.to.default = undefined;

var props = _objectSpread({}, linkProps, {
  tag: {
    type: String,
    default: 'div'
  }
}); // @vue/component


exports.props = props;

var BNavbarBrand =
/*#__PURE__*/
_vue.default.extend({
  name: 'BNavbarBrand',
  functional: true,
  props: props,
  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;
    var isLink = Boolean(props.to || props.href);
    var tag = isLink ? _link.BLink : props.tag;
    return h(tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      staticClass: 'navbar-brand',
      props: isLink ? (0, _pluckProps.default)(linkProps, props) : {}
    }), children);
  }
});

exports.BNavbarBrand = BNavbarBrand;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/pluck-props":"node_modules/bootstrap-vue/esm/utils/pluck-props.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/navbar/navbar-toggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BNavbarToggle = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _listenOnRoot = _interopRequireDefault(require("../../mixins/listen-on-root"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _config = require("../../utils/config");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BNavbarToggle'; // TODO: Switch to using VBToggle directive, will reduce code footprint
// Events we emit on $root

var EVENT_TOGGLE = 'bv::toggle::collapse'; // Events we listen to on $root

var EVENT_STATE = 'bv::collapse::state'; // This private event is NOT to be documented as people should not be using it.

var EVENT_STATE_SYNC = 'bv::collapse::sync::state'; // @vue/component

var BNavbarToggle =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_listenOnRoot.default, _normalizeSlot.default],
  props: {
    label: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'label');
      }
    },
    target: {
      type: String,
      required: true
    }
  },
  data: function data() {
    return {
      toggleState: false
    };
  },
  created: function created() {
    this.listenOnRoot(EVENT_STATE, this.handleStateEvt);
    this.listenOnRoot(EVENT_STATE_SYNC, this.handleStateEvt);
  },
  methods: {
    onClick: function onClick(evt) {
      this.$emit('click', evt);

      if (!evt.defaultPrevented) {
        this.$root.$emit(EVENT_TOGGLE, this.target);
      }
    },
    handleStateEvt: function handleStateEvt(id, state) {
      if (id === this.target) {
        this.toggleState = state;
      }
    }
  },
  render: function render(h) {
    return h('button', {
      class: ['navbar-toggler'],
      attrs: {
        type: 'button',
        'aria-label': this.label,
        'aria-controls': this.target,
        'aria-expanded': this.toggleState ? 'true' : 'false'
      },
      on: {
        click: this.onClick
      }
    }, [this.normalizeSlot('default') || h('span', {
      class: ['navbar-toggler-icon']
    })]);
  }
});

exports.BNavbarToggle = BNavbarToggle;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/listen-on-root":"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js"}],"node_modules/bootstrap-vue/esm/components/navbar/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BNavbar", {
  enumerable: true,
  get: function () {
    return _navbar.BNavbar;
  }
});
Object.defineProperty(exports, "BNavbarNav", {
  enumerable: true,
  get: function () {
    return _navbarNav.BNavbarNav;
  }
});
Object.defineProperty(exports, "BNavbarBrand", {
  enumerable: true,
  get: function () {
    return _navbarBrand.BNavbarBrand;
  }
});
Object.defineProperty(exports, "BNavbarToggle", {
  enumerable: true,
  get: function () {
    return _navbarToggle.BNavbarToggle;
  }
});
exports.NavbarPlugin = void 0;

var _navbar = require("./navbar");

var _navbarNav = require("./navbar-nav");

var _navbarBrand = require("./navbar-brand");

var _navbarToggle = require("./navbar-toggle");

var _nav = require("../nav");

var _collapse = require("../collapse");

var _dropdown = require("../dropdown");

var _plugins = require("../../utils/plugins");

var NavbarPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BNavbar: _navbar.BNavbar,
    BNavbarNav: _navbarNav.BNavbarNav,
    BNavbarBrand: _navbarBrand.BNavbarBrand,
    BNavbarToggle: _navbarToggle.BNavbarToggle,
    BNavToggle: _navbarToggle.BNavbarToggle
  },
  plugins: {
    NavPlugin: _nav.NavPlugin,
    CollapsePlugin: _collapse.CollapsePlugin,
    DropdownPlugin: _dropdown.DropdownPlugin
  }
});
exports.NavbarPlugin = NavbarPlugin;
},{"./navbar":"node_modules/bootstrap-vue/esm/components/navbar/navbar.js","./navbar-nav":"node_modules/bootstrap-vue/esm/components/navbar/navbar-nav.js","./navbar-brand":"node_modules/bootstrap-vue/esm/components/navbar/navbar-brand.js","./navbar-toggle":"node_modules/bootstrap-vue/esm/components/navbar/navbar-toggle.js","../nav":"node_modules/bootstrap-vue/esm/components/nav/index.js","../collapse":"node_modules/bootstrap-vue/esm/components/collapse/index.js","../dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/index.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @param {number} length
 * @return {Array}
 */
var range = function range(length) {
  return Array.apply(null, {
    length: length
  });
};

var _default = range;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/mixins/pagination.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.props = void 0;

var _keyCodes = _interopRequireDefault(require("../utils/key-codes"));

var _range = _interopRequireDefault(require("../utils/range"));

var _toString = _interopRequireDefault(require("../utils/to-string"));

var _warn = _interopRequireDefault(require("../utils/warn"));

var _inspect = require("../utils/inspect");

var _dom = require("../utils/dom");

var _normalizeSlot = _interopRequireDefault(require("../mixins/normalize-slot"));

var _link = require("../components/link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Common props, computed, data, render function, and methods
// for <b-pagination> and <b-pagination-nav>
// Threshold of limit size when we start/stop showing ellipsis
var ELLIPSIS_THRESHOLD = 3; // Default # of buttons limit

var DEFAULT_LIMIT = 5; // Make an array of N to N+X

var makePageArray = function makePageArray(startNumber, numberOfPages) {
  return (0, _range.default)(numberOfPages).map(function (val, i) {
    return {
      number: startNumber + i,
      classes: null
    };
  });
}; // Sanitize the provided limit value (converting to a number)


var sanitizeLimit = function sanitizeLimit(val) {
  var limit = parseInt(val, 10) || 1;
  return limit < 1 ? DEFAULT_LIMIT : limit;
}; // Sanitize the provided current page number (converting to a number)


var sanitizeCurrentPage = function sanitizeCurrentPage(val, numberOfPages) {
  var page = parseInt(val, 10) || 1;
  return page > numberOfPages ? numberOfPages : page < 1 ? 1 : page;
}; // Links don't normally respond to SPACE, so we add that
// functionality via this handler


var onSpaceKey = function onSpaceKey(evt) {
  if (evt.keyCode === _keyCodes.default.SPACE) {
    evt.preventDefault(); // Stop page from scrolling

    evt.stopImmediatePropagation();
    evt.stopPropagation(); // Trigger the click event on the link

    evt.currentTarget.click();
    return false;
  }
};

var props = {
  disabled: {
    type: Boolean,
    default: false
  },
  value: {
    type: [Number, String],
    default: null,
    validator: function validator(value)
    /* istanbul ignore next */
    {
      var num = parseInt(value, 10);

      if (!(0, _inspect.isNull)(value) && (isNaN(num) || num < 1)) {
        (0, _warn.default)('pagination: v-model value must be a number greater than 0');
        return false;
      }

      return true;
    }
  },
  limit: {
    type: [Number, String],
    default: DEFAULT_LIMIT,
    validator: function validator(value)
    /* istanbul ignore next */
    {
      var num = parseInt(value, 10);

      if (isNaN(num) || num < 1) {
        (0, _warn.default)('pagination: prop "limit" must be a number greater than 0');
        return false;
      }

      return true;
    }
  },
  align: {
    type: String,
    default: 'left'
  },
  hideGotoEndButtons: {
    type: Boolean,
    default: false
  },
  ariaLabel: {
    type: String,
    default: 'Pagination'
  },
  labelFirstPage: {
    type: String,
    default: 'Go to first page'
  },
  firstText: {
    type: String,
    default: "\xAB" // '«'

  },
  labelPrevPage: {
    type: String,
    default: 'Go to previous page'
  },
  prevText: {
    type: String,
    default: "\u2039" // '‹'

  },
  labelNextPage: {
    type: String,
    default: 'Go to next page'
  },
  nextText: {
    type: String,
    default: "\u203A" // '›'

  },
  labelLastPage: {
    type: String,
    default: 'Go to last page'
  },
  lastText: {
    type: String,
    default: "\xBB" // '»'

  },
  labelPage: {
    type: [String, Function],
    default: 'Go to page'
  },
  hideEllipsis: {
    type: Boolean,
    default: false
  },
  ellipsisText: {
    type: String,
    default: "\u2026" // '…'

  }
}; // @vue/component

exports.props = props;
var _default = {
  mixins: [_normalizeSlot.default],
  model: {
    prop: 'value',
    event: 'input'
  },
  props: props,
  data: function data() {
    var curr = parseInt(this.value, 10);
    return {
      // -1 signifies no page initially selected
      currentPage: curr > 0 ? curr : -1,
      localNumberOfPages: 1,
      localLimit: DEFAULT_LIMIT
    };
  },
  computed: {
    btnSize: function btnSize() {
      return this.size ? "pagination-".concat(this.size) : '';
    },
    alignment: function alignment() {
      var align = this.align;

      if (align === 'center') {
        return 'justify-content-center';
      } else if (align === 'end' || align === 'right') {
        return 'justify-content-end';
      } else if (align === 'fill') {
        // The page-items will also have 'flex-fill' added.
        // We ad text centering to make the button appearance better in fill mode.
        return 'text-center';
      }

      return '';
    },
    computedCurrentPage: function computedCurrentPage() {
      return sanitizeCurrentPage(this.currentPage, this.localNumberOfPages);
    },
    paginationParams: function paginationParams() {
      // Determine if we should show the the ellipsis
      var limit = this.limit;
      var numberOfPages = this.localNumberOfPages;
      var currentPage = this.computedCurrentPage;
      var hideEllipsis = this.hideEllipsis;
      var showFirstDots = false;
      var showLastDots = false;
      var numberOfLinks = limit;
      var startNumber = 1;

      if (numberOfPages <= limit) {
        // Special Case: Less pages available than the limit of displayed pages
        numberOfLinks = numberOfPages;
      } else if (currentPage < limit - 1 && limit > ELLIPSIS_THRESHOLD) {
        // We are near the beginning of the page list
        if (!hideEllipsis) {
          showLastDots = true;
          numberOfLinks = limit - 1;
        }
      } else if (numberOfPages - currentPage + 2 < limit && limit > ELLIPSIS_THRESHOLD) {
        // We are near the end of the list
        if (!hideEllipsis) {
          numberOfLinks = limit - 1;
          showFirstDots = true;
        }

        startNumber = numberOfPages - numberOfLinks + 1;
      } else {
        // We are somewhere in the middle of the page list
        if (limit > ELLIPSIS_THRESHOLD && !hideEllipsis) {
          numberOfLinks = limit - 2;
          showFirstDots = showLastDots = true;
        }

        startNumber = currentPage - Math.floor(numberOfLinks / 2);
      } // Sanity checks


      if (startNumber < 1) {
        /* istanbul ignore next */
        startNumber = 1;
      } else if (startNumber > numberOfPages - numberOfLinks) {
        startNumber = numberOfPages - numberOfLinks + 1;
      }

      return {
        showFirstDots: showFirstDots,
        showLastDots: showLastDots,
        numberOfLinks: numberOfLinks,
        startNumber: startNumber
      };
    },
    pageList: function pageList() {
      // Generates the pageList array
      var _this$paginationParam = this.paginationParams,
          numberOfLinks = _this$paginationParam.numberOfLinks,
          startNumber = _this$paginationParam.startNumber;
      var currentPage = this.computedCurrentPage; // Generate list of page numbers

      var pages = makePageArray(startNumber, numberOfLinks); // We limit to a total of 3 page buttons on XS screens
      // So add classes to page links to hide them for XS breakpoint
      // Note: Ellipsis will also be hidden on XS screens
      // TODO: Make this visual limit configurable based on breakpoint(s)

      if (pages.length > 3) {
        var idx = currentPage - startNumber; // THe following is a bootstrap-vue custom utility class

        var classes = 'bv-d-xs-down-none';

        if (idx === 0) {
          // Keep leftmost 3 buttons visible when current page is first page
          for (var i = 3; i < pages.length; i++) {
            pages[i].classes = classes;
          }
        } else if (idx === pages.length - 1) {
          // Keep rightmost 3 buttons visible when current page is last page
          for (var _i = 0; _i < pages.length - 3; _i++) {
            pages[_i].classes = classes;
          }
        } else {
          // Hide all except current page, current page - 1 and current page + 1
          for (var _i2 = 0; _i2 < idx - 1; _i2++) {
            // hide some left button(s)
            pages[_i2].classes = classes;
          }

          for (var _i3 = pages.length - 1; _i3 > idx + 1; _i3--) {
            // hide some right button(s)
            pages[_i3].classes = classes;
          }
        }
      }

      return pages;
    }
  },
  watch: {
    value: function value(newValue, oldValue) {
      if (newValue !== oldValue) {
        this.currentPage = sanitizeCurrentPage(newValue, this.localNumberOfPages);
      }
    },
    currentPage: function currentPage(newValue, oldValue) {
      if (newValue !== oldValue) {
        // Emit null if no page selected
        this.$emit('input', newValue > 0 ? newValue : null);
      }
    },
    limit: function limit(newValue, oldValue) {
      if (newValue !== oldValue) {
        this.localLimit = sanitizeLimit(newValue);
      }
    }
  },
  created: function created() {
    var _this = this; // Set our default values in data


    this.localLimit = sanitizeLimit(this.limit);
    this.$nextTick(function () {
      // Sanity check
      _this.currentPage = _this.currentPage > _this.localNumberOfPages ? _this.localNumberOfPages : _this.currentPage;
    });
  },
  methods: {
    getButtons: function getButtons() {
      // Return only buttons that are visible
      return (0, _dom.selectAll)('a.page-link', this.$el).filter(function (btn) {
        return (0, _dom.isVisible)(btn);
      });
    },
    setBtnFocus: function setBtnFocus(btn) {
      btn.focus();
    },
    focusCurrent: function focusCurrent() {
      var _this2 = this; // We do this in next tick to ensure buttons have finished rendering


      this.$nextTick(function () {
        var btn = _this2.getButtons().find(function (el) {
          return parseInt((0, _dom.getAttr)(el, 'aria-posinset'), 10) === _this2.computedCurrentPage;
        });

        if (btn && btn.focus) {
          _this2.setBtnFocus(btn);
        } else {
          // Fallback if current page is not in button list
          _this2.focusFirst();
        }
      });
    },
    focusFirst: function focusFirst() {
      var _this3 = this; // We do this in next tick to ensure buttons have finished rendering


      this.$nextTick(function () {
        var btn = _this3.getButtons().find(function (el) {
          return !(0, _dom.isDisabled)(el);
        });

        if (btn && btn.focus && btn !== document.activeElement) {
          _this3.setBtnFocus(btn);
        }
      });
    },
    focusLast: function focusLast() {
      var _this4 = this; // We do this in next tick to ensure buttons have finished rendering


      this.$nextTick(function () {
        var btn = _this4.getButtons().reverse().find(function (el) {
          return !(0, _dom.isDisabled)(el);
        });

        if (btn && btn.focus && btn !== document.activeElement) {
          _this4.setBtnFocus(btn);
        }
      });
    },
    focusPrev: function focusPrev() {
      var _this5 = this; // We do this in next tick to ensure buttons have finished rendering


      this.$nextTick(function () {
        var buttons = _this5.getButtons();

        var idx = buttons.indexOf(document.activeElement);

        if (idx > 0 && !(0, _dom.isDisabled)(buttons[idx - 1]) && buttons[idx - 1].focus) {
          _this5.setBtnFocus(buttons[idx - 1]);
        }
      });
    },
    focusNext: function focusNext() {
      var _this6 = this; // We do this in next tick to ensure buttons have finished rendering


      this.$nextTick(function () {
        var buttons = _this6.getButtons();

        var idx = buttons.indexOf(document.activeElement);
        var cnt = buttons.length - 1;

        if (idx < cnt && !(0, _dom.isDisabled)(buttons[idx + 1]) && buttons[idx + 1].focus) {
          _this6.setBtnFocus(buttons[idx + 1]);
        }
      });
    }
  },
  render: function render(h) {
    var _this7 = this;

    var buttons = [];
    var numberOfPages = this.localNumberOfPages;
    var disabled = this.disabled;
    var _this$paginationParam2 = this.paginationParams,
        showFirstDots = _this$paginationParam2.showFirstDots,
        showLastDots = _this$paginationParam2.showLastDots;
    var currentPage = this.computedCurrentPage;
    var fill = this.align === 'fill'; // Helper function and flag

    var isActivePage = function isActivePage(pageNum) {
      return pageNum === currentPage;
    };

    var noCurrPage = this.currentPage < 1; // Factory function for prev/next/first/last buttons

    var makeEndBtn = function makeEndBtn(linkTo, ariaLabel, btnSlot, btnText, pageTest, key) {
      var isDisabled = disabled || isActivePage(pageTest) || noCurrPage || linkTo < 1 || linkTo > numberOfPages;
      var pageNum = linkTo < 1 ? 1 : linkTo > numberOfPages ? numberOfPages : linkTo;
      var scope = {
        disabled: isDisabled,
        page: pageNum,
        index: pageNum - 1
      };
      var btnContent = _this7.normalizeSlot(btnSlot, scope) || (0, _toString.default)(btnText) || h();
      var inner = h(isDisabled ? 'span' : _link.BLink, {
        staticClass: 'page-link',
        props: isDisabled ? {} : _this7.linkProps(linkTo),
        attrs: {
          role: 'menuitem',
          tabindex: isDisabled ? null : '-1',
          'aria-label': ariaLabel,
          'aria-controls': _this7.ariaControls || null,
          'aria-disabled': isDisabled ? 'true' : null
        },
        on: isDisabled ? {} : {
          click: function click(evt) {
            _this7.onClick(linkTo, evt);
          },
          keydown: onSpaceKey
        }
      }, [btnContent]);
      return h('li', {
        key: key,
        staticClass: 'page-item',
        class: {
          disabled: isDisabled,
          'flex-fill': fill
        },
        attrs: {
          role: 'presentation',
          'aria-hidden': isDisabled ? 'true' : null
        }
      }, [inner]);
    }; // Ellipsis factory


    var makeEllipsis = function makeEllipsis(isLast) {
      return h('li', {
        key: "ellipsis-".concat(isLast ? 'last' : 'first'),
        staticClass: 'page-item',
        class: ['disabled', 'bv-d-xs-down-none', fill ? 'flex-fill' : ''],
        attrs: {
          role: 'separator'
        }
      }, [h('span', {
        staticClass: 'page-link'
      }, [_this7.normalizeSlot('ellipsis-text') || (0, _toString.default)(_this7.ellipsisText) || h()])]);
    }; // Goto First Page button bookend


    buttons.push(this.hideGotoEndButtons ? h() : makeEndBtn(1, this.labelFirstPage, 'first-text', this.firstText, 1, 'bookend-goto-first')); // Goto Previous page button bookend

    buttons.push(makeEndBtn(currentPage - 1, this.labelPrevPage, 'prev-text', this.prevText, 1, 'bookend-goto-prev')); // First Ellipsis Bookend

    buttons.push(showFirstDots ? makeEllipsis(false) : h()); // Individual Page links

    this.pageList.forEach(function (page, idx) {
      var active = isActivePage(page.number) && !noCurrPage; // Active page will have tabindex of 0, or if no current page and first page button

      var tabIndex = disabled ? null : active || noCurrPage && idx === 0 ? '0' : '-1';
      var attrs = {
        role: 'menuitemradio',
        'aria-disabled': disabled ? 'true' : null,
        'aria-controls': _this7.ariaControls || null,
        'aria-label': (0, _inspect.isFunction)(_this7.labelPage) ? _this7.labelPage(page.number) : "".concat(_this7.labelPage, " ").concat(page.number),
        'aria-checked': active ? 'true' : 'false',
        'aria-posinset': page.number,
        'aria-setsize': numberOfPages,
        // ARIA "roving tabindex" method
        tabindex: tabIndex
      };
      var btnContent = (0, _toString.default)(_this7.makePage(page.number));
      var scope = {
        page: page.number,
        index: page.number - 1,
        content: btnContent,
        active: active,
        disabled: disabled
      };
      var inner = h(disabled ? 'span' : _link.BLink, {
        props: disabled ? {} : _this7.linkProps(page.number),
        staticClass: 'page-link',
        attrs: attrs,
        on: disabled ? {} : {
          click: function click(evt) {
            _this7.onClick(page.number, evt);
          },
          keydown: onSpaceKey
        }
      }, [_this7.normalizeSlot('page', scope) || btnContent]);
      buttons.push(h('li', {
        key: "page-".concat(page.number),
        staticClass: 'page-item',
        class: [{
          disabled: disabled,
          active: active,
          'flex-fill': fill
        }, page.classes],
        attrs: {
          role: 'presentation'
        }
      }, [inner]));
    }); // Last Ellipsis Bookend

    buttons.push(showLastDots ? makeEllipsis(true) : h()); // Goto Next page button bookend

    buttons.push(makeEndBtn(currentPage + 1, this.labelNextPage, 'next-text', this.nextText, numberOfPages, 'bookend-goto-next')); // Goto Last Page button bookend

    buttons.push(this.hideGotoEndButtons ? h() : makeEndBtn(numberOfPages, this.labelLastPage, 'last-text', this.lastText, numberOfPages, 'bookend-goto-last')); // Assemble the pagination buttons

    var pagination = h('ul', {
      ref: 'ul',
      staticClass: 'pagination',
      class: ['b-pagination', this.btnSize, this.alignment],
      attrs: {
        role: 'menubar',
        'aria-disabled': disabled ? 'true' : 'false',
        'aria-label': this.ariaLabel || null
      },
      on: {
        keydown: function keydown(evt) {
          var keyCode = evt.keyCode;
          var shift = evt.shiftKey;

          if (keyCode === _keyCodes.default.LEFT) {
            evt.preventDefault();
            shift ? _this7.focusFirst() : _this7.focusPrev();
          } else if (keyCode === _keyCodes.default.RIGHT) {
            evt.preventDefault();
            shift ? _this7.focusLast() : _this7.focusNext();
          }
        }
      }
    }, buttons); // if we are pagination-nav, wrap in '<nav>' wrapper

    if (this.isNav) {
      return h('nav', {
        attrs: {
          'aria-disabled': disabled ? 'true' : null,
          'aria-hidden': disabled ? 'true' : 'false'
        }
      }, [pagination]);
    } else {
      return pagination;
    }
  }
};
exports.default = _default;
},{"../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../utils/range":"node_modules/bootstrap-vue/esm/utils/range.js","../utils/to-string":"node_modules/bootstrap-vue/esm/utils/to-string.js","../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../components/link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/pagination/pagination.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BPagination = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

var _pagination = _interopRequireDefault(require("../../mixins/pagination"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// --- Constants ---
var NAME = 'BPagination';
var DEFAULT_PER_PAGE = 20;
var DEFAULT_TOTAL_ROWS = 0;
var props = {
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'size');
    }
  },
  perPage: {
    type: [Number, String],
    default: DEFAULT_PER_PAGE
  },
  totalRows: {
    type: [Number, String],
    default: DEFAULT_TOTAL_ROWS
  },
  ariaControls: {
    type: String,
    default: null
  }
}; // --- Helper functions ---
// Sanitize the provided per page number (converting to a number)

var sanitizePerPage = function sanitizePerPage(val) {
  var perPage = parseInt(val, 10) || DEFAULT_PER_PAGE;
  return perPage < 1 ? 1 : perPage;
}; // Sanitize the provided total rows number (converting to a number)


var sanitizeTotalRows = function sanitizeTotalRows(val) {
  var totalRows = parseInt(val, 10) || DEFAULT_TOTAL_ROWS;
  return totalRows < 0 ? 0 : totalRows;
}; // The render function is brought in via the `paginationMixin`
// @vue/component


var BPagination =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_pagination.default],
  props: props,
  computed: {
    numberOfPages: function numberOfPages() {
      var result = Math.ceil(sanitizeTotalRows(this.totalRows) / sanitizePerPage(this.perPage));
      return result < 1 ? 1 : result;
    },
    pageSizeNumberOfPages: function pageSizeNumberOfPages() {
      // Used for watching changes to `perPage` and `numberOfPages`
      return {
        perPage: sanitizePerPage(this.perPage),
        totalRows: sanitizeTotalRows(this.totalRows),
        numberOfPages: this.numberOfPages
      };
    }
  },
  watch: {
    pageSizeNumberOfPages: function pageSizeNumberOfPages(newVal, oldVal) {
      if (!(0, _inspect.isUndefinedOrNull)(oldVal)) {
        if (newVal.perPage !== oldVal.perPage && newVal.totalRows === oldVal.totalRows) {
          // If the page size changes, reset to page 1
          this.currentPage = 1;
        } else if (newVal.numberOfPages !== oldVal.numberOfPages && this.currentPage > newVal.numberOfPages) {
          // If `numberOfPages` changes and is less than
          // the `currentPage` number, reset to page 1
          this.currentPage = 1;
        }
      }

      this.localNumberOfPages = newVal.numberOfPages;
    }
  },
  created: function created() {
    var _this = this; // Set the initial page count


    this.localNumberOfPages = this.numberOfPages; // Set the initial page value

    var currentPage = parseInt(this.value, 10) || 0;

    if (currentPage > 0) {
      this.currentPage = currentPage;
    } else {
      this.$nextTick(function () {
        // If this value parses to NaN or a value less than 1
        // Trigger an initial emit of 'null' if no page specified
        _this.currentPage = 0;
      });
    }
  },
  mounted: function mounted() {
    // Set the initial page count
    this.localNumberOfPages = this.numberOfPages;
  },
  methods: {
    // These methods are used by the render function
    onClick: function onClick(num, evt) {
      var _this2 = this; // Handle edge cases where number of pages has changed (i.e. if perPage changes)
      // This should normally not happen, but just in case.


      if (num > this.numberOfPages) {
        /* istanbul ignore next */
        num = this.numberOfPages;
      } else if (num < 1) {
        /* istanbul ignore next */
        num = 1;
      } // Update the v-model


      this.currentPage = num; // Emit event triggered by user interaction

      this.$emit('change', this.currentPage);
      this.$nextTick(function () {
        // Keep the current button focused if possible
        var target = evt.target;

        if ((0, _dom.isVisible)(target) && _this2.$el.contains(target) && target.focus) {
          target.focus();
        } else {
          _this2.focusCurrent();
        }
      });
    },
    makePage: function makePage(pageNum) {
      return pageNum;
    },
    linkProps: function linkProps(pageNum) {
      // Always '#' for pagination component
      return {
        href: '#'
      };
    }
  }
});

exports.BPagination = BPagination;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../mixins/pagination":"node_modules/bootstrap-vue/esm/mixins/pagination.js"}],"node_modules/bootstrap-vue/esm/components/pagination/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BPagination", {
  enumerable: true,
  get: function () {
    return _pagination.BPagination;
  }
});
exports.PaginationPlugin = void 0;

var _pagination = require("./pagination");

var _plugins = require("../../utils/plugins");

var PaginationPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BPagination: _pagination.BPagination
  }
});
exports.PaginationPlugin = PaginationPlugin;
},{"./pagination":"node_modules/bootstrap-vue/esm/components/pagination/pagination.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/pagination-nav/pagination-nav.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BPaginationNav = exports.sanitizeNumberOfPages = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

var _toString = _interopRequireDefault(require("../../utils/to-string"));

var _warn = _interopRequireDefault(require("../../utils/warn"));

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _env = require("../../utils/env");

var _inspect = require("../../utils/inspect");

var _router = require("../../utils/router");

var _pagination = _interopRequireDefault(require("../../mixins/pagination"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BPaginationNav'; // Sanitize the provided number of pages (converting to a number)

var sanitizeNumberOfPages = function sanitizeNumberOfPages(value) {
  var numberOfPages = parseInt(value, 10) || 1;
  return numberOfPages < 1 ? 1 : numberOfPages;
};

exports.sanitizeNumberOfPages = sanitizeNumberOfPages;
var props = {
  size: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'size');
    }
  },
  numberOfPages: {
    type: [Number, String],
    default: 1,
    validator: function validator(value)
    /* istanbul ignore next */
    {
      var num = parseInt(value, 10);

      if (isNaN(num) || num < 1) {
        (0, _warn.default)('b-pagination: prop "number-of-pages" must be a number greater than 0');
        return false;
      }

      return true;
    }
  },
  baseUrl: {
    type: String,
    default: '/'
  },
  useRouter: {
    type: Boolean,
    default: false
  },
  linkGen: {
    type: Function,
    default: null
  },
  pageGen: {
    type: Function,
    default: null
  },
  pages: {
    // Optional array of page links
    type: Array,
    default: null
  },
  noPageDetect: {
    // Disable auto page number detection if true
    type: Boolean,
    default: false
  },
  // router-link specific props
  activeClass: {
    type: String // default: undefined

  },
  exact: {
    type: Boolean,
    default: false
  },
  exactActiveClass: {
    type: String // default: undefined

  },
  // nuxt-link specific prop(s)
  noPrefetch: {
    type: Boolean,
    default: false
  }
}; // The render function is brought in via the pagination mixin
// @vue/component

var BPaginationNav =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_pagination.default],
  props: props,
  computed: {
    // Used by render function to trigger wrapping in '<nav>' element
    isNav: function isNav() {
      return true;
    },
    computedValue: function computedValue() {
      // Returns the value prop as a number or `null` if undefined or < 1
      var val = parseInt(this.value, 10);
      return isNaN(val) || val < 1 ? null : val;
    }
  },
  watch: {
    numberOfPages: function numberOfPages(newVal, oldVal) {
      var _this = this;

      this.$nextTick(function () {
        _this.setNumberOfPages();
      });
    },
    pages: function pages(newVal, oldVal) {
      var _this2 = this;

      this.$nextTick(function () {
        _this2.setNumberOfPages();
      });
    }
  },
  created: function created() {
    this.setNumberOfPages();
  },
  mounted: function mounted() {
    var _this3 = this;

    if (this.$router) {
      // We only add the watcher if vue router is detected
      this.$watch('$route', function (to, from) {
        _this3.$nextTick(function () {
          (0, _dom.requestAF)(function () {
            _this3.guessCurrentPage();
          });
        });
      });
    }
  },
  methods: {
    setNumberOfPages: function setNumberOfPages() {
      var _this4 = this;

      if ((0, _inspect.isArray)(this.pages) && this.pages.length > 0) {
        this.localNumberOfPages = this.pages.length;
      } else {
        this.localNumberOfPages = sanitizeNumberOfPages(this.numberOfPages);
      }

      this.$nextTick(function () {
        _this4.guessCurrentPage();
      });
    },
    onClick: function onClick(pageNum, evt) {
      var _this5 = this; // Dont do anything if clicking the current active page


      if (pageNum === this.currentPage) {
        return;
      }

      (0, _dom.requestAF)(function () {
        // Update the v-model
        // Done in in requestAF() to allow browser to complete the
        // native browser click handling of a link
        _this5.currentPage = pageNum;

        _this5.$emit('change', pageNum);
      });
      this.$nextTick(function () {
        // Done in a nextTick() to ensure rendering complete
        try {
          // Emulate native link click page reloading behaviour by blurring the
          // paginator and returning focus to the document
          var target = evt.currentTarget || evt.target;
          target.blur();
        } catch (e) {}
      });
    },
    getPageInfo: function getPageInfo(pageNum) {
      if (!(0, _inspect.isArray)(this.pages) || this.pages.length === 0 || (0, _inspect.isUndefined)(this.pages[pageNum - 1])) {
        var link = "".concat(this.baseUrl).concat(pageNum);
        return {
          link: this.useRouter ? {
            path: link
          } : link,
          text: (0, _toString.default)(pageNum)
        };
      }

      var info = this.pages[pageNum - 1];

      if ((0, _inspect.isObject)(info)) {
        var _link = info.link;
        return {
          // Normalize link for router use
          link: (0, _inspect.isObject)(_link) ? _link : this.useRouter ? {
            path: _link
          } : _link,
          // Make sure text has a value
          text: (0, _toString.default)(info.text || pageNum)
        };
      } else {
        return {
          link: (0, _toString.default)(info),
          text: (0, _toString.default)(pageNum)
        };
      }
    },
    makePage: function makePage(pageNum) {
      var info = this.getPageInfo(pageNum);

      if (this.pageGen && (0, _inspect.isFunction)(this.pageGen)) {
        return this.pageGen(pageNum, info);
      }

      return info.text;
    },
    makeLink: function makeLink(pageNum) {
      var info = this.getPageInfo(pageNum);

      if (this.linkGen && (0, _inspect.isFunction)(this.linkGen)) {
        return this.linkGen(pageNum, info);
      }

      return info.link;
    },
    linkProps: function linkProps(pageNum) {
      var link = this.makeLink(pageNum);
      var props = {
        target: this.target || null,
        rel: this.rel || null,
        disabled: this.disabled,
        // The following props are only used if BLink detects router
        exact: this.exact,
        activeClass: this.activeClass,
        exactActiveClass: this.exactActiveClass,
        append: this.append,
        replace: this.replace,
        // nuxt-link specific prop
        noPrefetch: this.noPrefetch
      };

      if (this.useRouter || (0, _inspect.isObject)(link)) {
        props.to = link;
      } else {
        props.href = link;
      }

      return props;
    },
    resolveLink: function resolveLink() {
      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // Given a to (or href string), convert to normalized route-like structure
      // Works only client side!!

      var link;

      try {
        // Convert the `to` to a HREF via a temporary `a` tag
        link = document.createElement('a');
        link.href = (0, _router.computeHref)({
          to: to
        }, 'a', '/', '/'); // We need to add the anchor to the document to make sure the
        // `pathname` is correctly detected in any browser (i.e. IE)

        document.body.appendChild(link); // Once href is assigned, the link will be normalized to the full URL bits

        var _link2 = link,
            pathname = _link2.pathname,
            hash = _link2.hash,
            search = _link2.search; // Remove link from document

        document.body.removeChild(link); // Return the location in a route-like object

        return {
          path: pathname,
          hash: hash,
          query: (0, _router.parseQuery)(search)
        };
      } catch (e) {
        /* istanbul ignore next */
        try {
          link && link.parentNode && link.parentNode.removeChild(link);
        } catch (e) {}
        /* istanbul ignore next */


        return {};
      }
    },
    resolveRoute: function resolveRoute() {
      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // Given a to (or href string), convert to normalized route location structure
      // works only when router available!!

      try {
        var route = this.$router.resolve(to, this.$route).route;
        return {
          path: route.path,
          hash: route.hash,
          query: route.query
        };
      } catch (e) {
        /* istanbul ignore next */
        return {};
      }
    },
    guessCurrentPage: function guessCurrentPage() {
      var guess = this.computedValue;
      var $router = this.$router;
      var $route = this.$route; // This section only occurs if we are client side, or server-side with $router

      /* istanbul ignore else */

      if (!this.noPageDetect && !guess && (_env.isBrowser || !_env.isBrowser && $router)) {
        // Current route (if router available)
        var currRoute = $router && $route ? {
          path: $route.path,
          hash: $route.hash,
          query: $route.query
        } : {}; // Current page full HREF (if client side). Can't be done as a computed prop!

        var loc = _env.isBrowser ? window.location || document.location : null;
        var currLink = loc ? {
          path: loc.pathname,
          hash: loc.hash,
          query: (0, _router.parseQuery)(loc.search)
        } : {}; // Loop through the possible pages looking for a match until found

        for (var page = 1; !guess && page <= this.localNumberOfPages; page++) {
          var to = this.makeLink(page);

          if ($router && ((0, _inspect.isObject)(to) || this.useRouter)) {
            // Resolve the page via the $router
            guess = (0, _looseEqual.default)(this.resolveRoute(to), currRoute) ? page : null;
          } else if (_env.isBrowser) {
            // If no $router available (or !this.useRouter when `to` is a string)
            // we compare using parsed URIs
            guess = (0, _looseEqual.default)(this.resolveLink(to), currLink) ? page : null;
          } else {
            // probably SSR, but no $router so we can't guess, so lets break out of
            // the loop early

            /* istanbul ignore next */
            guess = -1;
          }
        }
      } // We set currentPage to 0 to trigger an $emit('input', null)
      // As the default for this.currentPage is -1 when no value is specified
      // And valid page numbers are greater than 0


      this.currentPage = guess > 0 ? guess : 0;
    }
  }
});

exports.BPaginationNav = BPaginationNav;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../utils/to-string":"node_modules/bootstrap-vue/esm/utils/to-string.js","../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/router":"node_modules/bootstrap-vue/esm/utils/router.js","../../mixins/pagination":"node_modules/bootstrap-vue/esm/mixins/pagination.js"}],"node_modules/bootstrap-vue/esm/components/pagination-nav/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BPaginationNav", {
  enumerable: true,
  get: function () {
    return _paginationNav.BPaginationNav;
  }
});
exports.PaginationNavPlugin = void 0;

var _paginationNav = require("./pagination-nav");

var _plugins = require("../../utils/plugins");

var PaginationNavPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BPaginationNav: _paginationNav.BPaginationNav
  }
});
exports.PaginationNavPlugin = PaginationNavPlugin;
},{"./pagination-nav":"node_modules/bootstrap-vue/esm/components/pagination-nav/pagination-nav.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-popper.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVPopper = void 0;

var _vue = _interopRequireDefault(require("../../../utils/vue"));

var _popper = _interopRequireDefault(require("popper.js"));

var _dom = require("../../../utils/dom");

var _safeTypes = require("../../../utils/safe-types");

var _bvTransition = require("../../../utils/bv-transition");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Base on-demand component for tooltip / popover templates
//
// Currently:
//   Responsible for positioning and transitioning the template
//   Templates are only instantiated when shown, and destroyed when hidden
//
var NAME = 'BVPopper';
var AttachmentMap = {
  AUTO: 'auto',
  TOP: 'top',
  RIGHT: 'right',
  BOTTOM: 'bottom',
  LEFT: 'left',
  TOPLEFT: 'top',
  TOPRIGHT: 'top',
  RIGHTTOP: 'right',
  RIGHTBOTTOM: 'right',
  BOTTOMLEFT: 'bottom',
  BOTTOMRIGHT: 'bottom',
  LEFTTOP: 'left',
  LEFTBOTTOM: 'left'
};
var OffsetMap = {
  AUTO: 0,
  TOPLEFT: -1,
  TOP: 0,
  TOPRIGHT: +1,
  RIGHTTOP: -1,
  RIGHT: 0,
  RIGHTBOTTOM: +1,
  BOTTOMLEFT: -1,
  BOTTOM: 0,
  BOTTOMRIGHT: +1,
  LEFTTOP: -1,
  LEFT: 0,
  LEFTBOTTOM: +1
}; // @vue/component

var BVPopper =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  props: {
    target: {
      // Element that the tooltip/popover is positioned relative to
      type: [_safeTypes.HTMLElement, _safeTypes.SVGElement],
      default: null
    },
    placement: {
      type: String,
      default: 'top'
    },
    fallbackPlacement: {
      type: [String, Array],
      default: 'flip'
    },
    offset: {
      type: Number,
      default: 0
    },
    boundary: {
      // 'scrollParent', 'viewport', 'window', or Element
      type: [String, _safeTypes.HTMLElement],
      default: 'scrollParent'
    },
    boundaryPadding: {
      // Tooltip/popover will try and stay away from
      // boundary edge by this many pixels
      type: Number,
      default: 5
    },
    arrowPadding: {
      // The minimum distance (in `px`) from the edge of the
      // tooltip/popover that the arrow can be positioned
      type: Number,
      default: 6
    }
  },
  data: function data() {
    return {
      // reactive props set by parent
      noFade: false,
      // State related data
      localShow: true,
      attachment: this.getAttachment(this.placement)
    };
  },
  computed: {
    templateType: function templateType()
    /* istanbul ignore next */
    {
      // Overridden by template component
      return 'unknown';
    },
    popperConfig: function popperConfig() {
      var _this = this;

      var placement = this.placement;
      return {
        placement: this.getAttachment(placement),
        modifiers: {
          offset: {
            offset: this.getOffset(placement)
          },
          flip: {
            behavior: this.fallbackPlacement
          },
          // `arrow.element` can also be a reference to an HTML Element
          // maybe we should make this a `$ref` in the templates?
          arrow: {
            element: '.arrow'
          },
          preventOverflow: {
            padding: this.boundaryPadding,
            boundariesElement: this.boundary
          }
        },
        onCreate: function onCreate(data) {
          // Handle flipping arrow classes
          if (data.originalPlacement !== data.placement) {
            /* istanbul ignore next: can't test in JSDOM */
            _this.popperPlacementChange(data);
          }
        },
        onUpdate: function onUpdate(data) {
          // Handle flipping arrow classes
          _this.popperPlacementChange(data);
        }
      };
    }
  },
  created: function created() {
    var _this2 = this; // Note: We are created on-demand, and should be guaranteed that
    // DOM is rendered/ready by the time the created hook runs


    this.$_popper = null; // Ensure we show as we mount

    this.localShow = true; // Create popper instance before shown

    this.$on('show', function (el) {
      _this2.popperCreate(el);
    }); // Self destruct once hidden

    this.$on('hidden', function () {
      _this2.$nextTick(_this2.$destroy);
    }); // If parent is destroyed, ensure we are destroyed

    this.$parent.$once('hook:destroyed', this.$destroy);
  },
  beforeMount: function beforeMount() {
    // Ensure that the attachment position is correct before mounting
    // as our propsData is added after `new Template({...})`
    this.attachment = this.getAttachment(this.placement);
  },
  mounted: function mounted() {// TBD
  },
  updated: function updated() {
    // Update popper if needed
    // TODO: Should this be a watcher on `this.popperConfig` instead?
    this.popperUpdate();
  },
  beforeDestroy: function beforeDestroy() {
    this.popperDestroy();
  },
  destroyed: function destroyed() {
    // Make sure template is removed from DOM
    var el = this.$el;
    el && el.parentNode && el.parentNode.removeChild(el);
  },
  methods: {
    // "Public" method to trigger hide template
    hide: function hide() {
      this.localShow = false;
    },
    // Private
    getAttachment: function getAttachment(placement) {
      return AttachmentMap[String(placement).toUpperCase()] || 'auto';
    },
    getOffset: function getOffset(placement) {
      if (!this.offset) {
        // Could set a ref for the arrow element
        var arrow = this.$refs.arrow || (0, _dom.select)('.arrow', this.$el);
        var arrowOffset = (parseFloat((0, _dom.getCS)(arrow).width) || 0) + (parseFloat(this.arrowPadding) || 0);

        switch (OffsetMap[String(placement).toUpperCase()] || 0) {
          case +1:
            /* istanbul ignore next: can't test in JSDOM */
            return "+50%p - ".concat(arrowOffset, "px");

          case -1:
            /* istanbul ignore next: can't test in JSDOM */
            return "-50%p + ".concat(arrowOffset, "px");

          default:
            return 0;
        }
      }
      /* istanbul ignore next */


      return this.offset;
    },
    popperCreate: function popperCreate(el) {
      this.popperDestroy(); // We use `el` rather than `this.$el` just in case the original
      // mountpoint root element type was changed by the template

      this.$_popper = new _popper.default(this.target, el, this.popperConfig);
    },
    popperDestroy: function popperDestroy() {
      this.$_popper && this.$_popper.destroy();
      this.$_popper = null;
    },
    popperUpdate: function popperUpdate() {
      this.$_popper && this.$_popper.scheduleUpdate();
    },
    popperPlacementChange: function popperPlacementChange(data) {
      // Callback used by popper to adjust the arrow placement
      this.attachment = this.getAttachment(data.placement);
    },
    renderTemplate: function renderTemplate(h)
    /* istanbul ignore next */
    {
      // Will be overridden by templates
      return h('div');
    }
  },
  render: function render(h) {
    var _this3 = this; // Note: `show` and 'fade' classes are only appled during transition


    return h(_bvTransition.BVTransition, {
      // Transitions as soon as mounted
      props: {
        appear: true,
        noFade: this.noFade
      },
      on: {
        // Events used by parent component/instance
        beforeEnter: function beforeEnter(el) {
          return _this3.$emit('show', el);
        },
        afterEnter: function afterEnter(el) {
          return _this3.$emit('shown', el);
        },
        beforeLeave: function beforeLeave(el) {
          return _this3.$emit('hide', el);
        },
        afterLeave: function afterLeave(el) {
          return _this3.$emit('hidden', el);
        }
      }
    }, [this.localShow ? this.renderTemplate(h) : h()]);
  }
});

exports.BVPopper = BVPopper;
},{"../../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","popper.js":"node_modules/popper.js/dist/esm/popper.js","../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../../utils/safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","../../../utils/bv-transition":"node_modules/bootstrap-vue/esm/utils/bv-transition.js"}],"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip-template.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVTooltipTemplate = void 0;

var _vue = _interopRequireDefault(require("../../../utils/vue"));

var _scopedStyleAttrs = _interopRequireDefault(require("../../../mixins/scoped-style-attrs"));

var _inspect = require("../../../utils/inspect");

var _bvPopper = require("./bv-popper");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BVTooltipTemplate'; // @vue/component

var BVTooltipTemplate =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  extends: _bvPopper.BVPopper,
  mixins: [_scopedStyleAttrs.default],
  props: {
    // Other non-reactive (while open) props are pulled in from BVPopper
    id: {
      type: String,
      default: null
    },
    html: {
      // Used only by the directive versions
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    // We use data, rather than props to ensure reactivity
    // Parent component will directly set this data
    return {
      title: '',
      content: '',
      variant: null,
      customClass: null
    };
  },
  computed: {
    templateType: function templateType() {
      return 'tooltip';
    },
    templateClasses: function templateClasses() {
      var _ref;

      return [(_ref = {}, _defineProperty(_ref, "b-".concat(this.templateType, "-").concat(this.variant), this.variant), _defineProperty(_ref, "bs-".concat(this.templateType, "-").concat(this.attachment), this.attachment), _ref), this.customClass];
    },
    templateAttributes: function templateAttributes() {
      return _objectSpread({
        id: this.id,
        role: 'tooltip',
        tabindex: '-1'
      }, this.scopedStyleAttrs);
    },
    templateListeners: function templateListeners() {
      var _this = this; // Used for hover/focus trigger listeners


      return {
        mouseenter: function mouseenter(evt) {
          /* istanbul ignore next: difficult to test in JSDOM */
          _this.$emit('mouseenter', evt);
        },
        mouseleave: function mouseleave(evt) {
          /* istanbul ignore next: difficult to test in JSDOM */
          _this.$emit('mouseleave', evt);
        },
        focusin: function focusin(evt) {
          /* istanbul ignore next: difficult to test in JSDOM */
          _this.$emit('focusin', evt);
        },
        focusout: function focusout(evt) {
          /* istanbul ignore next: difficult to test in JSDOM */
          _this.$emit('focusout', evt);
        }
      };
    }
  },
  methods: {
    renderTemplate: function renderTemplate(h) {
      // Title can be a scoped slot function
      var $title = (0, _inspect.isFunction)(this.title) ? this.title({}) : (0, _inspect.isUndefinedOrNull)(this.title) ? h() : this.title; // Directive versions only

      var domProps = this.html && !(0, _inspect.isFunction)(this.title) ? {
        innerHTML: this.title
      } : {};
      return h('div', {
        staticClass: 'tooltip b-tooltip',
        class: this.templateClasses,
        attrs: this.templateAttributes,
        on: this.templateListeners
      }, [h('div', {
        ref: 'arrow',
        staticClass: 'arrow'
      }), h('div', {
        staticClass: 'tooltip-inner',
        domProps: domProps
      }, [$title])]);
    }
  }
});

exports.BVTooltipTemplate = BVTooltipTemplate;
},{"../../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../../mixins/scoped-style-attrs":"node_modules/bootstrap-vue/esm/mixins/scoped-style-attrs.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./bv-popper":"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-popper.js"}],"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVTooltip = void 0;

var _vue = _interopRequireDefault(require("../../../utils/vue"));

var _getScopeId = _interopRequireDefault(require("../../../utils/get-scope-id"));

var _looseEqual = _interopRequireDefault(require("../../../utils/loose-equal"));

var _array = require("../../../utils/array");

var _dom = require("../../../utils/dom");

var _inspect = require("../../../utils/inspect");

var _object = require("../../../utils/object");

var _warn = require("../../../utils/warn");

var _bvEvent = require("../../../utils/bv-event.class");

var _bvTooltipTemplate = require("./bv-tooltip-template");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // Tooltip "Class" (Built as a renderless Vue instance)
//
// Handles trigger events, etc.
// Instantiates template on demand


var NAME = 'BVTooltip'; // Modal container selector for appending tooltip/popover

var MODAL_SELECTOR = '.modal-content'; // Modal `$root` hidden event

var MODAL_CLOSE_EVENT = 'bv::modal::hidden'; // For dropdown sniffing

var DROPDOWN_CLASS = 'dropdown';
var DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show'; // Options for Native Event Listeners (since we never call preventDefault)

var EvtOpts = {
  passive: true,
  capture: false
}; // Data specific to popper and template
// We don't use props, as we need reactivity (we can't pass reactive props)

var templateData = {
  // Text string or Scoped slot function
  title: '',
  // Text string or Scoped slot function
  content: '',
  // String
  variant: null,
  // String, Array, Object
  customClass: null,
  // String or array of Strings (overwritten by BVPopper)
  triggers: '',
  // String (overwritten by BVPopper)
  placement: 'auto',
  // String or array of strings
  fallbackPlacement: 'flip',
  // Element or Component reference (or function that returns element) of
  // the element that will have the trigger events bound, and is also
  // default element for positioning
  target: null,
  // HTML ID, Element or Component reference
  container: null,
  // 'body'
  // Boolean
  noFade: false,
  // 'scrollParent', 'viewport', 'window', Element, or Component reference
  boundary: 'scrollParent',
  // Tooltip/popover will try and stay away from
  // boundary edge by this many pixels (Number)
  boundaryPadding: 5,
  // Arrow offset (Number)
  offset: 0,
  // Hover/focus delay (Number or Object)
  delay: 0,
  // Arrow of Tooltip/popover will try and stay away from
  // the edge of tooltip/popover edge by this many pixels
  arrowPadding: 6,
  // Disabled state (Boolean)
  disabled: false,
  // ID to use for tooltip/popover
  id: null,
  // Flag used by directives only, for HTML content
  html: false
}; // @vue/component

var BVTooltip =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  props: {// None
  },
  data: function data() {
    return _objectSpread({}, templateData, {
      // State management data
      activeTrigger: {
        // manual: false,
        hover: false,
        click: false,
        focus: false
      },
      localShow: false
    });
  },
  computed: {
    templateType: function templateType() {
      // Overwritten by BVPopover
      return 'tooltip';
    },
    computedId: function computedId() {
      return this.id || "__bv_".concat(this.templateType, "_").concat(this._uid, "__");
    },
    computedDelay: function computedDelay() {
      // Normalizes delay into object form
      var delay = {
        show: 0,
        hide: 0
      };

      if ((0, _inspect.isPlainObject)(this.delay)) {
        delay.show = Math.max(parseInt(this.delay.show, 10) || 0, 0);
        delay.hide = Math.max(parseInt(this.delay.hide, 10) || 0, 0);
      } else if ((0, _inspect.isNumber)(this.delay) || (0, _inspect.isString)(this.delay)) {
        delay.show = delay.hide = Math.max(parseInt(this.delay, 10) || 0, 0);
      }

      return delay;
    },
    computedTriggers: function computedTriggers() {
      // Returns the triggers in sorted array form
      // TODO: Switch this to object form for easier lookup
      return (0, _array.concat)(this.triggers).filter(Boolean).join(' ').trim().toLowerCase().split(/\s+/).sort();
    },
    isWithActiveTrigger: function isWithActiveTrigger() {
      for (var trigger in this.activeTrigger) {
        if (this.activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    },
    computedTemplateData: function computedTemplateData() {
      return {
        title: this.title,
        content: this.content,
        variant: this.variant,
        customClass: this.customClass,
        noFade: this.noFade
      };
    }
  },
  watch: {
    computedTriggers: function computedTriggers(newTriggers, oldTriggers) {
      var _this = this; // Triggers have changed, so re-register them

      /* istanbul ignore next */


      if (!(0, _looseEqual.default)(newTriggers, oldTriggers)) {
        this.$nextTick(function () {
          // Disable trigger listeners
          _this.unListen(); // Clear any active triggers that are no longer in the list of triggers


          oldTriggers.forEach(function (trigger) {
            if (!(0, _array.arrayIncludes)(newTriggers, trigger)) {
              if (_this.activeTrigger[trigger]) {
                _this.activeTrigger[trigger] = false;
              }
            }
          }); // Re-enable the trigger listeners

          _this.listen();
        });
      }
    },
    computedTemplateData: function computedTemplateData() {
      // If any of the while open reactive "props" change,
      // ensure that the template updates accordingly
      this.handleTemplateUpdate();
    },
    disabled: function disabled(newVal) {
      newVal ? this.disable() : this.enable();
    }
  },
  created: function created() {
    var _this2 = this; // Create non-reactive properties


    this.$_tip = null;
    this.$_hoverTimeout = null;
    this.$_hoverState = '';
    this.$_visibleInterval = null;
    this.$_enabled = !this.disabled;

    this.$_noop = function () {}; // Destroy ourselves when the parent is destroyed


    if (this.$parent) {
      this.$parent.$once('hook:beforeDestroy', this.$destroy);
    }

    this.$nextTick(function () {
      var target = _this2.getTarget();

      if (target && (0, _dom.contains)(document.body, target)) {
        // Copy the parent's scoped style attribute
        _this2.scopeId = (0, _getScopeId.default)(_this2.$parent); // Set up all trigger handlers and listeners

        _this2.listen();
      } else {
        /* istanbul ignore next */
        (0, _warn.warn)("".concat(_this2.templateType, " unable to find target element in document"));
      }
    });
  },
  updated: function updated()
  /* istanbul ignore next */
  {
    // Usually called when the slots/data changes
    this.$nextTick(this.handleTemplateUpdate);
  },
  deactivated: function deactivated()
  /* istanbul ignore next */
  {
    // In a keepalive that has been deactivated, so hide
    // the tooltip/popover if it is showing
    this.forceHide();
  },
  beforeDestroy: function beforeDestroy()
  /* istanbul ignore next */
  {
    // Remove all handler/listeners
    this.unListen();
    this.setWhileOpenListeners(false); // Clear any timeouts/Timers

    clearTimeout(this.$_hoverTimeout);
    this.$_hoverTimeout = null;
    this.destroyTemplate();
    this.restoreTitle();
  },
  methods: {
    //
    // Methods for creating and destroying the template
    //
    getTemplate: function getTemplate() {
      // Overridden by BVPopover
      return _bvTooltipTemplate.BVTooltipTemplate;
    },
    updateData: function updateData() {
      var _this3 = this;

      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Method for updating popper/template data
      // We only update data if it exists, and has not changed

      var titleUpdated = false;
      (0, _object.keys)(templateData).forEach(function (prop) {
        if (!(0, _inspect.isUndefined)(data[prop]) && _this3[prop] !== data[prop]) {
          _this3[prop] = data[prop];

          if (prop === 'title') {
            titleUpdated = true;
          }
        }
      });

      if (titleUpdated && this.localShow) {
        // If the title has updated, we may need to handle the title
        // attribute on the trigger target. We only do this while the
        // template is open
        this.fixTitle();
      }
    },
    createTemplateAndShow: function createTemplateAndShow() {
      // Creates the template instance and show it
      // this.destroyTemplate()
      var container = this.getContainer();
      var Template = this.getTemplate();
      var $tip = this.$_tip = new Template({
        parent: this,
        // The following is not reactive to changes in the props data
        propsData: {
          // These values cannot be changed while template is showing
          id: this.computedId,
          html: this.html,
          placement: this.placement,
          fallbackPlacement: this.fallbackPlacement,
          target: this.getPlacementTarget(),
          boundary: this.getBoundary(),
          // Ensure the following are integers
          offset: parseInt(this.offset, 10) || 0,
          arrowPadding: parseInt(this.arrowPadding, 10) || 0,
          boundaryPadding: parseInt(this.boundaryPadding, 10) || 0
        }
      }); // We set the initial reactive data (values that can be changed while open)

      this.handleTemplateUpdate(); // Template transition phase events (handled once only)
      // When the template has mounted, but not visibly shown yet

      $tip.$once('show', this.onTemplateShow); // When the template has completed showing

      $tip.$once('shown', this.onTemplateShown); // When the template has started to hide

      $tip.$once('hide', this.onTemplateHide); // When the template has completed hiding

      $tip.$once('hidden', this.onTemplateHidden); // When the template gets destroyed for any reason

      $tip.$once('hook:destroyed', this.destroyTemplate); // Convenience events from template
      // To save us from manually adding/removing DOM
      // listeners to tip element when it is open

      $tip.$on('focusin', this.handleEvent);
      $tip.$on('focusout', this.handleEvent);
      $tip.$on('mouseenter', this.handleEvent);
      $tip.$on('mouseleave', this.handleEvent); // Mount (which triggers the `show`)

      $tip.$mount(container.appendChild(document.createElement('div'))); // Template will automatically remove its markup from DOM when hidden
    },
    hideTemplate: function hideTemplate() {
      // Trigger the template to start hiding
      // The template will emit the `hide` event after this and
      // then emit the `hidden` event once it is fully hidden
      // The `hook:destroyed` will also be called (safety measure)
      this.$_tip && this.$_tip.hide();
    },
    destroyTemplate: function destroyTemplate() {
      // Destroy the template instance and reset state
      this.setWhileOpenListeners(false);
      clearTimeout(this.$_hoverTimeout);
      this.$_hoverTimout = null;
      this.$_hoverState = '';
      this.clearActiveTriggers();
      this.localPlacementTarget = null;

      try {
        this.$_tip && this.$_tip.$destroy();
      } catch (_unused) {}

      this.$_tip = null;
      this.localShow = false;
    },
    getTemplateElement: function getTemplateElement() {
      return this.$_tip ? this.$_tip.$el : null;
    },
    handleTemplateUpdate: function handleTemplateUpdate() {
      var _this4 = this; // Update our template title/content "props"
      // So that the template updates accordingly


      var $tip = this.$_tip;

      if ($tip) {
        var props = ['title', 'content', 'variant', 'customClass', 'noFade']; // Only update the values if they have changed

        props.forEach(function (prop) {
          if ($tip[prop] !== _this4[prop]) {
            $tip[prop] = _this4[prop];
          }
        });
      }
    },
    //
    // Show and Hide handlers
    //
    show: function show() {
      // Show the tooltip
      var target = this.getTarget();

      if (!target || !(0, _dom.contains)(document.body, target) || !(0, _dom.isVisible)(target) || this.dropdownOpen() || ((0, _inspect.isUndefinedOrNull)(this.title) || this.title === '') && ((0, _inspect.isUndefinedOrNull)(this.content) || this.content === '')) {
        // If trigger element isn't in the DOM or is not visible, or
        // is on an open dropdown toggle, or has no content, then
        // we exit without showing
        return;
      }

      if (this.$_tip || this.localShow) {
        // If tip already exists, exit early

        /* istanbul ignore next */
        return;
      } // In the process of showing


      this.localShow = true; // Create a cancelable BvEvent

      var showEvt = this.buildEvent('show', {
        cancelable: true
      });
      this.emitEvent(showEvt);
      /* istanbul ignore next: ignore for now */

      if (showEvt.defaultPrevented) {
        // Don't show if event cancelled
        // Destroy the template (if for some reason it was created)

        /* istanbul ignore next */
        this.destroyTemplate(); // Clear the localShow flag

        /* istanbul ignore next */

        this.localShow = false;
        /* istanbul ignore next */

        return;
      } // Fix the title attribute on target


      this.fixTitle(); // Set aria-describedby on target

      this.addAriaDescribedby(); // Create and show the tooltip

      this.createTemplateAndShow();
    },
    hide: function hide() {
      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false; // Hide the tooltip

      var tip = this.getTemplateElement();

      if (!tip || !this.localShow) {
        /* istanbul ignore next */
        this.restoreTitle();
        /* istanbul ignore next */

        return;
      } // Emit cancelable BvEvent 'hide'
      // We disable cancelling if `force` is true


      var hideEvt = this.buildEvent('hide', {
        cancelable: !force
      });
      this.emitEvent(hideEvt);
      /* istanbul ignore next: ignore for now */

      if (hideEvt.defaultPrevented) {
        // Don't hide if event cancelled

        /* istanbul ignore next */
        return;
      } // Tell the template to hide


      this.hideTemplate(); // TODO: The following could be added to `hideTemplate()`
      // Clear out any stragging active triggers

      this.clearActiveTriggers(); // Reset the hover state

      this.$_hoverState = '';
    },
    forceHide: function forceHide() {
      // Forcefully hides/destroys the template, regardless of any active triggers
      var tip = this.getTemplateElement();

      if (!tip || !this.localShow) {
        /* istanbul ignore next */
        return;
      } // Disable while open listeners/watchers
      // This is also done in the template `hide` evt handler


      this.setWhileOpenListeners(false); // Clear any hover enter/leave event

      clearTimeout(this.hoverTimeout);
      this.$_hoverTimeout = null;
      this.$_hoverState = '';
      this.clearActiveTriggers(); // Disable the fade animation on the template

      if (this.$_tip) {
        this.$_tip.noFade = true;
      } // Hide the tip (with force = true)


      this.hide(true);
    },
    enable: function enable() {
      this.$_enabled = true; // Create a non-cancelable BvEvent

      this.emitEvent(this.buildEvent('enabled', {}));
    },
    disable: function disable() {
      this.$_enabled = false; // Create a non-cancelable BvEvent

      this.emitEvent(this.buildEvent('disabled', {}));
    },
    //
    // Handlers for template events
    //
    onTemplateShow: function onTemplateShow() {
      // When template is inserted into DOM, but not yet shown
      // Enable while open listeners/watchers
      this.setWhileOpenListeners(true);
    },
    onTemplateShown: function onTemplateShown() {
      // When template show transition completes
      var prevHoverState = this.$_hoverState;
      this.$_hoverState = '';

      if (prevHoverState === 'out') {
        this.leave(null);
      } // Emit a non-cancelable BvEvent 'shown'


      this.emitEvent(this.buildEvent('shown', {}));
    },
    onTemplateHide: function onTemplateHide() {
      // When template is starting to hide
      // Disable while open listeners/watchers
      this.setWhileOpenListeners(false);
    },
    onTemplateHidden: function onTemplateHidden() {
      // When template has completed closing (just before it self destructs)
      // TODO:
      //   The next two lines could be moved into `destroyTemplate()`
      this.removeAriaDescribedby();
      this.restoreTitle();
      this.destroyTemplate(); // Emit a non-cancelable BvEvent 'shown'

      this.emitEvent(this.buildEvent('hidden', {}));
    },
    //
    // Utility methods
    //
    getTarget: function getTarget() {
      // Handle case where target may be a component ref
      var target = this.target ? this.target.$el || this.target : null; // If an ID

      target = (0, _inspect.isString)(target) ? (0, _dom.getById)(target.replace(/^#/, '')) : target; // If a function

      target = (0, _inspect.isFunction)(target) ? target() : target; // If an element ref

      return (0, _dom.isElement)(target) ? target : null;
    },
    getPlacementTarget: function getPlacementTarget() {
      // This is the target that the tooltip will be placed on, which may not
      // necessarily be the same element that has the trigger event listeners
      // For now, this is the same as target
      // TODO:
      //   Add in child selector support
      //   Add in visibility checks for this element
      //   Fallback to target if not found
      return this.getTarget();
    },
    getTargetId: function getTargetId() {
      // Returns the ID of the trigger element
      var target = this.getTarget();
      return target && target.id ? target.id : null;
    },
    getContainer: function getContainer() {
      // Handle case where container may be a component ref
      var container = this.container ? this.container.$el || this.container : false;
      var body = document.body;
      var target = this.getTarget(); // If we are in a modal, we append to the modal instead
      // of body, unless a container is specified
      // TODO:
      //   Template should periodically check to see if it is in dom
      //   And if not, self destruct (if container got v-if'ed out of DOM)
      //   Or this could possibly be part of the visibility check

      return container === false ? (0, _dom.closest)(MODAL_SELECTOR, target) || body : (0, _inspect.isString)(container) ? (0, _dom.getById)(container.replace(/^#/, '')) || body : body;
    },
    getBoundary: function getBoundary() {
      return this.boundary ? this.boundary.$el || this.boundary : 'scrollParent';
    },
    isInModal: function isInModal() {
      var target = this.getTarget();
      return target && (0, _dom.closest)(MODAL_SELECTOR, target);
    },
    isDropdown: function isDropdown() {
      // Returns true if trigger is a dropdown
      var target = this.getTarget();
      return target && (0, _dom.hasClass)(target, DROPDOWN_CLASS);
    },
    dropdownOpen: function dropdownOpen() {
      // Returns true if trigger is a dropdown and the dropdown menu is open
      var target = this.getTarget();
      return this.isDropdown() && target && (0, _dom.select)(DROPDOWN_OPEN_SELECTOR, target);
    },
    clearActiveTriggers: function clearActiveTriggers() {
      for (var trigger in this.activeTrigger) {
        this.activeTrigger[trigger] = false;
      }
    },
    addAriaDescribedby: function addAriaDescribedby() {
      // Add aria-describedby on trigger element, without removing any other IDs
      var target = this.getTarget();
      var desc = (0, _dom.getAttr)(target, 'aria-describedby') || '';
      desc = desc.split(/\s+/).concat(this.computedId).join(' ').trim(); // Update/add aria-described by

      (0, _dom.setAttr)(target, 'aria-describedby', desc);
    },
    removeAriaDescribedby: function removeAriaDescribedby() {
      var _this5 = this; // Remove aria-describedby on trigger element, without removing any other IDs


      var target = this.getTarget();
      var desc = (0, _dom.getAttr)(target, 'aria-describedby') || '';
      desc = desc.split(/\s+/).filter(function (d) {
        return d !== _this5.computedId;
      }).join(' ').trim(); // Update or remove aria-describedby

      if (desc) {
        /* istanbul ignore next */
        (0, _dom.setAttr)(target, 'aria-describedby', desc);
      } else {
        (0, _dom.removeAttr)(target, 'aria-describedby');
      }
    },
    fixTitle: function fixTitle() {
      // If the target has a title attribute, null it out and
      // store on data-title
      var target = this.getTarget();

      if (target && (0, _dom.getAttr)(target, 'title')) {
        // We only update title attribute if it has a value
        (0, _dom.setAttr)(target, 'data-original-title', (0, _dom.getAttr)(target, 'title') || '');
        (0, _dom.setAttr)(target, 'title', '');
      }
    },
    restoreTitle: function restoreTitle() {
      // If target had a title, restore the title attribute
      // and remove the data-title attribute
      var target = this.getTarget();

      if (target && (0, _dom.hasAttr)(target, 'data-original-title')) {
        (0, _dom.setAttr)(target, 'title', (0, _dom.getAttr)(target, 'data-original-title') || '');
        (0, _dom.removeAttr)(target, 'data-original-title');
      }
    },
    //
    // BvEvent helpers
    //
    buildEvent: function buildEvent(type) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Defaults to a non-cancellable event

      return new _bvEvent.BvEvent(type, _objectSpread({
        cancelable: false,
        target: this.getTarget(),
        relatedTarget: this.getTemplateElement() || null,
        componentId: this.computedId,
        vueTarget: this
      }, opts));
    },
    emitEvent: function emitEvent(bvEvt) {
      // Emits a BvEvent on $root and this instance
      var evtName = bvEvt.type;
      var $root = this.$root;

      if ($root && $root.$emit) {
        // Emit an event on $root
        $root.$emit("bv::".concat(this.templateType, "::").concat(evtName), bvEvt);
      }

      this.$emit(evtName, bvEvt);
    },
    //
    // Event handler setup methods
    //
    listen: function listen() {
      var _this6 = this; // Enable trigger event handlers


      var el = this.getTarget();

      if (!el) {
        /* istanbul ignore next */
        return;
      } // Listen for global show/hide events


      this.setRootListener(true); // Set up our listeners on the target trigger element

      this.computedTriggers.forEach(function (trigger) {
        if (trigger === 'click') {
          (0, _dom.eventOn)(el, 'click', _this6.handleEvent, EvtOpts);
        } else if (trigger === 'focus') {
          (0, _dom.eventOn)(el, 'focusin', _this6.handleEvent, EvtOpts);
          (0, _dom.eventOn)(el, 'focusout', _this6.handleEvent, EvtOpts);
        } else if (trigger === 'blur') {
          // Used to close $tip when element looses focus

          /* istanbul ignore next */
          (0, _dom.eventOn)(el, 'focusout', _this6.handleEvent, EvtOpts);
        } else if (trigger === 'hover') {
          (0, _dom.eventOn)(el, 'mouseenter', _this6.handleEvent, EvtOpts);
          (0, _dom.eventOn)(el, 'mouseleave', _this6.handleEvent, EvtOpts);
        }
      }, this);
    },
    unListen: function unListen()
    /* istanbul ignore next */
    {
      var _this7 = this; // Remove trigger event handlers


      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];
      var target = this.getTarget(); // Stop listening for global show/hide/enable/disable events

      this.setRootListener(false); // Clear out any active target listeners

      events.forEach(function (evt) {
        target && (0, _dom.eventOff)(target, evt, _this7.handleEvent, EvtOpts);
      }, this);
    },
    setRootListener: function setRootListener(on) {
      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event
      var $root = this.$root;

      if ($root) {
        var method = on ? '$on' : '$off';
        var type = this.templateType;
        $root[method]("bv::hide::".concat(type), this.doHide);
        $root[method]("bv::show::".concat(type), this.doShow);
        $root[method]("bv::disable::".concat(type), this.doDisable);
        $root[method]("bv::enable::".concat(type), this.doEnable);
      }
    },
    setWhileOpenListeners: function setWhileOpenListeners(on) {
      // Events that are only registered when the template is showing
      // Modal close events
      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)

      this.setDropdownListener(on); // Periodic $element visibility check
      // For handling when tip target is in <keepalive>, tabs, carousel, etc

      this.visibleCheck(on); // On-touch start listeners

      this.setOnTouchStartListener(on);
    },
    visibleCheck: function visibleCheck(on) {
      var _this8 = this; // Handler for periodic visibility check


      clearInterval(this.$_visibleInterval);
      this.$_visibleInterval = null;
      var target = this.getTarget();
      var tip = this.getTemplateElement();

      if (on) {
        this.visibleInterval = setInterval(function () {
          if (tip && _this8.localShow && (!target.parentNode || !(0, _dom.isVisible)(target))) {
            // Target element is no longer visible or not in DOM, so force-hide the tooltip
            _this8.forceHide();
          }
        }, 100);
      }
    },
    setModalListener: function setModalListener(on) {
      // Handle case where tooltip/target is in a modal
      if (this.isInModal()) {
        // We can listen for modal hidden events on `$root`
        this.$root[on ? '$on' : '$off'](MODAL_CLOSE_EVENT, this.forceHide);
      }
    },
    setOnTouchStartListener: function setOnTouchStartListener(on)
    /* istanbul ignore next: JSDOM doesn't support `ontouchstart` */
    {
      var _this9 = this; // If this is a touch-enabled device we add extra empty
      // `mouseover` listeners to the body's immediate children
      // Only needed because of broken event delegation on iOS
      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


      if ('ontouchstart' in document.documentElement) {
        var method = on ? _dom.eventOn : _dom.eventOff;
        (0, _array.from)(document.body.children).forEach(function (el) {
          method(el, 'mouseover', _this9.$_noop);
        });
      }
    },
    setDropdownListener: function setDropdownListener(on) {
      var target = this.getTarget();

      if (!target || !this.$root || !this.isDropdown) {
        return;
      } // We can listen for dropdown shown events on it's instance
      // TODO:
      //   We could grab the ID from the dropdown, and listen for
      //   $root events for that particular dropdown id
      //   Dropdown shown and hidden events will need to emit
      //   Note: Dropdown auto-ID happens in a `$nextTick()` after mount
      //         So the ID lookup would need to be done in a `$nextTick()`


      if (target.__vue__) {
        target.__vue__[on ? '$on' : '$off']('shown', this.forceHide);
      }
    },
    //
    // Event handlers
    //
    handleEvent: function handleEvent(evt) {
      // General trigger event handler
      // target is the trigger element
      var target = this.getTarget();

      if (!target || (0, _dom.isDisabled)(target) || !this.$_enabled || this.dropdownOpen()) {
        // If disabled or not enabled, or if a dropdown that is open, don't do anything
        // If tip is shown before element gets disabled, then tip will not
        // close until no longer disabled or forcefully closed
        return;
      }

      var type = evt.type;
      var triggers = this.computedTriggers;

      if (type === 'click' && (0, _array.arrayIncludes)(triggers, 'click')) {
        this.click(evt);
      } else if (type === 'mouseenter' && (0, _array.arrayIncludes)(triggers, 'hover')) {
        // `mouseenter` is a non-bubbling event
        this.enter(evt);
      } else if (type === 'focusin' && (0, _array.arrayIncludes)(triggers, 'focus')) {
        // `focusin` is a bubbling event
        // `evt` includes `relatedTarget` (element loosing focus)
        this.enter(evt);
      } else if (type === 'focusout' && ((0, _array.arrayIncludes)(triggers, 'focus') || (0, _array.arrayIncludes)(triggers, 'blur')) || type === 'mouseleave' && (0, _array.arrayIncludes)(triggers, 'hover')) {
        // `focusout` is a bubbling event
        // `mouseleave` is a non-bubbling event
        // `tip` is the template (will be null if not open)
        var tip = this.getTemplateElement(); // `evtTarget` is the element which is loosing focus/hover and

        var evtTarget = evt.target; // `relatedTarget` is the element gaining focus/hover

        var relatedTarget = evt.relatedTarget;
        /* istanbul ignore next */

        if ( // From tip to target
        tip && (0, _dom.contains)(tip, evtTarget) && (0, _dom.contains)(target, relatedTarget) || // From target to tip
        tip && (0, _dom.contains)(target, evtTarget) && (0, _dom.contains)(tip, relatedTarget) || // Within tip
        tip && (0, _dom.contains)(tip, evtTarget) && (0, _dom.contains)(tip, relatedTarget) || // Within target
        (0, _dom.contains)(target, evtTarget) && (0, _dom.contains)(target, relatedTarget)) {
          // If focus/hover moves within `tip` and `target`, don't trigger a leave
          return;
        } // Otherwise trigger a leave


        this.leave(evt);
      }
    },
    doHide: function doHide(id) {
      // Programmatically hide tooltip or popover
      if (!id || this.getTargetId() === id || this.computedId === id) {
        // Close all tooltips or popovers, or this specific tip (with ID)
        this.forceHide();
      }
    },
    doShow: function doShow(id) {
      // Programmatically show tooltip or popover
      if (!id || this.getTargetId() === id || this.computedId === id) {
        // Open all tooltips or popovers, or this specific tip (with ID)
        this.show();
      }
    },
    doDisable: function doDisable(id)
    /*istanbul ignore next: ignore for now */
    {
      // Programmatically disable tooltip or popover
      if (!id || this.getTargetId() === id || this.computedId === id) {
        // Disable all tooltips or popovers (no ID), or this specific tip (with ID)
        this.disable();
      }
    },
    doEnable: function doEnable(id)
    /*istanbul ignore next: ignore for now */
    {
      // Programmatically enable tooltip or popover
      if (!id || this.getTargetId() === id || this.computedId === id) {
        // Enable all tooltips or popovers (no ID), or this specific tip (with ID)
        this.enable();
      }
    },
    click: function click(evt) {
      if (!this.$_enabled || this.dropdownOpen()) {
        /* istanbul ignore next */
        return;
      }

      this.activeTrigger.click = !this.activeTrigger.click;

      if (this.isWithActiveTrigger) {
        this.enter(null);
      } else {
        /* istanbul ignore next */
        this.leave(null);
      }
    },
    toggle: function toggle()
    /* istanbul ignore next */
    {
      // Manual toggle handler
      if (!this.$_enabled || this.dropdownOpen()) {
        /* istanbul ignore next */
        return;
      } // Should we register as an active trigger?
      // this.activeTrigger.manual = !this.activeTrigger.manual


      if (this.localShow) {
        this.leave(null);
      } else {
        this.enter(null);
      }
    },
    enter: function enter() {
      var _this10 = this;

      var evt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null; // Opening trigger handler
      // Note: Click events are sent with evt === null

      if (evt) {
        this.activeTrigger[evt.type === 'focusin' ? 'focus' : 'hover'] = true;
      }
      /* istanbul ignore next */


      if (this.localShow || this.$_hoverState === 'in') {
        this.$_hoverState = 'in';
        return;
      }

      clearTimeout(this.hoverTimeout);
      this.$_hoverState = 'in';

      if (!this.computedDelay.show) {
        this.show();
      } else {
        // Hide any title attribute while enter delay is active
        this.fixTitle();
        this.hoverTimeout = setTimeout(function () {
          /* istanbul ignore else */
          if (_this10.$_hoverState === 'in') {
            _this10.show();
          } else if (!_this10.localShow) {
            _this10.restoreTitle();
          }
        }, this.computedDelay.show);
      }
    },
    leave: function leave() {
      var _this11 = this;

      var evt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null; // Closing trigger handler
      // Note: Click events are sent with evt === null

      if (evt) {
        this.activeTrigger[evt.type === 'focusout' ? 'focus' : 'hover'] = false;
        /* istanbul ignore next */

        if (evt.type === 'focusout' && (0, _array.arrayIncludes)(this.computedTriggers, 'blur')) {
          // Special case for `blur`: we clear out the other triggers
          this.activeTrigger.click = false;
          this.activeTrigger.hover = false;
        }
      }
      /* istanbul ignore next: ignore for now */


      if (this.isWithActiveTrigger) {
        return;
      }

      clearTimeout(this.hoverTimeout);
      this.$_hoverState = 'out';

      if (!this.computedDelay.hide) {
        this.hide();
      } else {
        this.$hoverTimeout = setTimeout(function () {
          if (_this11.$_hoverState === 'out') {
            _this11.hide();
          }
        }, this.computedDelay.hide);
      }
    }
  }
});

exports.BVTooltip = BVTooltip;
},{"../../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../../utils/get-scope-id":"node_modules/bootstrap-vue/esm/utils/get-scope-id.js","../../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../../../utils/bv-event.class":"node_modules/bootstrap-vue/esm/utils/bv-event.class.js","./bv-tooltip-template":"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip-template.js"}],"node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTooltip = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _getScopeId = _interopRequireDefault(require("../../utils/get-scope-id"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _inspect = require("../../utils/inspect");

var _safeTypes = require("../../utils/safe-types");

var _bvTooltip = require("./helpers/bv-tooltip");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BTooltip'; // @vue/component

var BTooltip =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  props: {
    title: {
      type: String // default: undefined

    },
    // Added in by BPopover
    // content: {
    //   type: String,
    //   default: undefined
    // },
    target: {
      // String ID of element, or element/component reference
      // Or function that returns one of the above
      type: [String, _safeTypes.HTMLElement, _safeTypes.SVGElement, Function, Object],
      // default: undefined,
      required: true
    },
    triggers: {
      type: [String, Array],
      default: 'hover focus'
    },
    placement: {
      type: String,
      default: 'top'
    },
    fallbackPlacement: {
      type: [String, Array],
      default: 'flip',
      validator: function validator(value) {
        return (0, _array.isArray)(value) && value.every(function (v) {
          return (0, _inspect.isString)(v);
        }) || (0, _array.arrayIncludes)(['flip', 'clockwise', 'counterclockwise'], value);
      }
    },
    variant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'variant');
      }
    },
    customClass: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'customClass');
      }
    },
    delay: {
      type: [Number, Object, String],
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'delay');
      }
    },
    boundary: {
      // String: scrollParent, window, or viewport
      // Element: element reference
      // Object: Vue component
      type: [String, _safeTypes.HTMLElement, Object],
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'boundary');
      }
    },
    boundaryPadding: {
      type: [Number, String],
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'boundaryPadding');
      }
    },
    offset: {
      type: [Number, String],
      default: 0
    },
    noFade: {
      type: Boolean,
      default: false
    },
    container: {
      // String: HTML ID of container, if null body is used (default)
      // HTMLElement: element reference reference
      // Object: Vue Component
      type: [String, _safeTypes.HTMLElement, Object] // default: undefined

    },
    show: {
      type: Boolean,
      default: false
    },
    disabled: {
      type: Boolean,
      default: false
    },
    id: {
      // ID to use for tooltip element
      // If not provided on will automatically be generated
      type: String,
      default: null
    }
  },
  data: function data() {
    return {
      localShow: this.show,
      localTitle: '',
      localContent: ''
    };
  },
  computed: {
    templateData: function templateData() {
      // Data that will be passed to the template and popper
      return {
        // We use massaged versions of the title and content props/slots
        title: this.localTitle,
        content: this.localContent,
        // Pass these props as is
        target: this.target,
        triggers: this.triggers,
        placement: this.placement,
        fallbackPlacement: this.fallbackPlacement,
        variant: this.variant,
        customClass: this.customClass,
        container: this.container,
        boundary: this.boundary,
        boundaryPadding: this.boundaryPadding,
        delay: this.delay,
        offset: this.offset,
        noFade: this.noFade,
        disabled: this.disabled,
        id: this.id
      };
    },
    templateTitleContent: function templateTitleContent() {
      // Used to watch for changes to the title and content props
      return {
        title: this.title,
        content: this.content
      };
    }
  },
  watch: {
    show: function show(_show, oldVal) {
      if (_show !== oldVal && _show !== this.localShow && this.$_bv_toolpop) {
        if (_show) {
          this.$_bv_toolpop.show();
        } else {
          // We use `forceHide()` to override any active triggers
          this.$_bv_toolpop.forceHide();
        }
      }
    },
    disabled: function disabled(newVal, oldVal) {
      if (newVal) {
        this.doDisable();
      } else {
        this.doEnable();
      }
    },
    localShow: function localShow(show, oldVal) {
      // TODO: May need to be done in a `$nextTick()`
      this.$emit('update:show', show);
    },
    templateData: function templateData(newVal, oldVal) {
      var _this = this;

      this.$nextTick(function () {
        if (_this.$_bv_toolpop) {
          _this.$_bv_toolpop.updateData(_this.templateData);
        }
      });
    },
    // Watchers for title/content props (prop changes do not trigger the `updated()` hook)
    templateTitleContent: function templateTitleContent(newVal, oldVal) {
      this.$nextTick(this.updateContent);
    }
  },
  created: function created() {
    // Non reactive properties
    this.$_bv_toolpop = null;
  },
  updated: function updated() {
    // Update the `propData` object
    // Done in a `$nextTick()` to ensure slot(s) have updated
    this.$nextTick(this.updateContent);
  },
  beforeDestroy: function beforeDestroy() {
    // Shutdown our local event listeners
    this.$off('open', this.doOpen);
    this.$off('close', this.doClose);
    this.$off('disable', this.doDisable);
    this.$off('enable', this.doEnable); // Destroy the tip instance

    this.$_bv_toolpop && this.$_bv_toolpop.$destroy();
    this.$_bv_toolpop = null;
  },
  mounted: function mounted() {
    var _this2 = this; // Instantiate a new BVTooltip instance
    // Done in a `$nextTick()` to ensure DOM has completed rendering
    // so that target can be found


    this.$nextTick(function () {
      // Load the on demand child instance
      var Component = _this2.getComponent(); // Ensure we have initial content


      _this2.updateContent(); // Pass down the scoped style attribute if available


      var scopeId = (0, _getScopeId.default)(_this2) || (0, _getScopeId.default)(_this2.$parent); // Create the instance

      var $toolpop = _this2.$_bv_toolpop = new Component({
        parent: _this2,
        // Pass down the scoped style ID
        _scopeId: scopeId || undefined
      }); // Set the initial data

      $toolpop.updateData(_this2.templateData); // Set listeners

      $toolpop.$on('show', _this2.onShow);
      $toolpop.$on('shown', _this2.onShown);
      $toolpop.$on('hide', _this2.onHide);
      $toolpop.$on('hidden', _this2.onHidden);
      $toolpop.$on('disabled', _this2.onDisabled);
      $toolpop.$on('enabled', _this2.onEnabled); // Initially disabled?

      if (_this2.disabled) {
        // Initially disabled
        _this2.doDisable();
      } // Listen to open signals from others


      _this2.$on('open', _this2.doOpen); // Listen to close signals from others


      _this2.$on('close', _this2.doClose); // Listen to disable signals from others


      _this2.$on('disable', _this2.doDisable); // Listen to enable signals from others


      _this2.$on('enable', _this2.doEnable); // Initially show tooltip?


      if (_this2.localShow) {
        _this2.$_bv_toolpop && _this2.$_bv_toolpop.show();
      }
    });
  },
  methods: {
    getComponent: function getComponent() {
      // Overridden by BPopover
      return _bvTooltip.BVTooltip;
    },
    updateContent: function updateContent() {
      // Overridden by BPopover
      // Tooltip: Default slot is `title`
      // Popover: Default slot is `content`, `title` slot is title
      // We pass a scoped slot function reference by default (Vue v2.6x)
      // And pass the title prop as a fallback
      this.setTitle(this.$scopedSlots.default || this.title);
    },
    // Helper methods for `updateContent()`
    setTitle: function setTitle(val) {
      val = (0, _inspect.isUndefinedOrNull)(val) ? '' : val; // We only update the value if it has changed

      if (this.localTitle !== val) {
        this.localTitle = val;
      }
    },
    setContent: function setContent(val) {
      val = (0, _inspect.isUndefinedOrNull)(val) ? '' : val; // We only update the value if it has changed

      if (this.localContent !== val) {
        this.localContent = val;
      }
    },
    // --- Template event handlers ---
    onShow: function onShow(bvEvt) {
      // Placeholder
      this.$emit('show', bvEvt);

      if (bvEvt) {
        this.localShow = !bvEvt.defaultPrevented;
      }
    },
    onShown: function onShown(bvEvt) {
      // Tip is now showing
      this.localShow = true;
      this.$emit('shown', bvEvt);
    },
    onHide: function onHide(bvEvt) {
      this.$emit('hide', bvEvt);
    },
    onHidden: function onHidden(bvEvt) {
      // Tip is no longer showing
      this.$emit('hidden', bvEvt);
      this.localShow = false;
    },
    onDisabled: function onDisabled(bvEvt) {
      // Prevent possible endless loop if user mistakenly
      // fires `disabled` instead of `disable`
      if (bvEvt && bvEvt.type === 'disabled') {
        this.$emit('update:disabled', true);
        this.$emit('disabled', bvEvt);
      }
    },
    onEnabled: function onEnabled(bvEvt) {
      // Prevent possible endless loop if user mistakenly
      // fires `enabled` instead of `enable`
      if (bvEvt && bvEvt.type === 'enabled') {
        this.$emit('update:disabled', false);
        this.$emit('enabled', bvEvt);
      }
    },
    // --- Local event listeners ---
    doOpen: function doOpen() {
      !this.localShow && this.$_bv_toolpop && this.$_bv_toolpop.show();
    },
    doClose: function doClose() {
      this.localShow && this.$_bv_toolpop && this.$_bv_toolpop.hide();
    },
    doDisable: function doDisable(evt) {
      this.$_bv_toolpop && this.$_bv_toolpop.disable();
    },
    doEnable: function doEnable() {
      this.$_bv_toolpop && this.$_bv_toolpop.enable();
    }
  },
  render: function render(h) {
    // Always renders a comment node
    // TODO:
    //   Future: Possibly render a target slot (single root element)
    //   which we can apply the listeners to (pass `this.$el` to BVTooltip)
    return h();
  }
});

exports.BTooltip = BTooltip;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/get-scope-id":"node_modules/bootstrap-vue/esm/utils/get-scope-id.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","./helpers/bv-tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js"}],"node_modules/bootstrap-vue/esm/components/popover/helpers/bv-popover-template.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVPopoverTemplate = void 0;

var _vue = _interopRequireDefault(require("../../../utils/vue"));

var _inspect = require("../../../utils/inspect");

var _bvTooltipTemplate = require("../../tooltip/helpers/bv-tooltip-template");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BVPopoverTemplate'; // @vue/component

var BVPopoverTemplate =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  extends: _bvTooltipTemplate.BVTooltipTemplate,
  computed: {
    templateType: function templateType() {
      return 'popover';
    }
  },
  methods: {
    renderTemplate: function renderTemplate(h) {
      // Title and content could be a scoped slot function
      var $title = (0, _inspect.isFunction)(this.title) ? this.title({}) : this.title;
      var $content = (0, _inspect.isFunction)(this.content) ? this.content({}) : this.content; // Directive usage only

      var titleDomProps = this.html && !(0, _inspect.isFunction)(this.title) ? {
        innerHTML: this.title
      } : {};
      var contentDomProps = this.html && !(0, _inspect.isFunction)(this.content) ? {
        innerHTML: this.content
      } : {};
      return h('div', {
        staticClass: 'popover b-popover',
        class: this.templateClasses,
        attrs: this.templateAttributes,
        on: this.templateListeners
      }, [h('div', {
        ref: 'arrow',
        staticClass: 'arrow'
      }), (0, _inspect.isUndefinedOrNull)($title) || $title === '' ? h() : h('h3', {
        staticClass: 'popover-header',
        domProps: titleDomProps
      }, [$title]), (0, _inspect.isUndefinedOrNull)($content) || $content === '' ? h() : h('div', {
        staticClass: 'popover-body',
        domProps: contentDomProps
      }, [$content])]);
    }
  }
});

exports.BVPopoverTemplate = BVPopoverTemplate;
},{"../../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../tooltip/helpers/bv-tooltip-template":"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip-template.js"}],"node_modules/bootstrap-vue/esm/components/popover/helpers/bv-popover.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVPopover = void 0;

var _vue = _interopRequireDefault(require("../../../utils/vue"));

var _bvTooltip = require("../../tooltip/helpers/bv-tooltip");

var _bvPopoverTemplate = require("./bv-popover-template");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Popover "Class" (Built as a renderless Vue instance)
// Inherits from BVTooltip
//
// Handles trigger events, etc.
// Instantiates template on demand
var NAME = 'BVPopover'; // @vue/component

var BVPopover =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  extends: _bvTooltip.BVTooltip,
  computed: {
    // Overwrites BVTooltip
    templateType: function templateType() {
      return 'popover';
    }
  },
  methods: {
    getTemplate: function getTemplate() {
      // Overwrites BVTooltip
      return _bvPopoverTemplate.BVPopoverTemplate;
    }
  }
});

exports.BVPopover = BVPopover;
},{"../../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../tooltip/helpers/bv-tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js","./bv-popover-template":"node_modules/bootstrap-vue/esm/components/popover/helpers/bv-popover-template.js"}],"node_modules/bootstrap-vue/esm/components/popover/popover.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BPopover = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _config = require("../../utils/config");

var _safeTypes = require("../../utils/safe-types");

var _tooltip = require("../tooltip/tooltip");

var _bvPopover = require("./helpers/bv-popover");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BPopover';

var BPopover =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  extends: _tooltip.BTooltip,
  inheritAttrs: false,
  props: {
    title: {
      type: String // default: undefined

    },
    content: {
      type: String // default: undefined

    },
    triggers: {
      type: [String, Array],
      default: 'click'
    },
    placement: {
      type: String,
      default: 'right'
    },
    variant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'variant');
      }
    },
    customClass: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'customClass');
      }
    },
    delay: {
      type: [Number, Object, String],
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'delay');
      }
    },
    boundary: {
      // String: scrollParent, window, or viewport
      // Element: element reference
      // Object: Vue component
      type: [String, _safeTypes.HTMLElement, Object],
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'boundary');
      }
    },
    boundaryPadding: {
      type: [Number, String],
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'boundaryPadding');
      }
    }
  },
  methods: {
    getComponent: function getComponent() {
      // Overridden by BPopover
      return _bvPopover.BVPopover;
    },
    updateContent: function updateContent() {
      // Tooltip: Default slot is `title`
      // Popover: Default slot is `content`, `title` slot is title
      // We pass a scoped slot function references by default (Vue v2.6x)
      // And pass the title prop as a fallback
      this.setContent(this.$scopedSlots.default || this.content);
      this.setTitle(this.$scopedSlots.title || this.title);
    }
  } // Render function provided by BTooltip

});

exports.BPopover = BPopover;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/safe-types":"node_modules/bootstrap-vue/esm/utils/safe-types.js","../tooltip/tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","./helpers/bv-popover":"node_modules/bootstrap-vue/esm/components/popover/helpers/bv-popover.js"}],"node_modules/bootstrap-vue/esm/directives/popover/popover.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VBPopover = void 0;

var _getScopeId = _interopRequireDefault(require("../../utils/get-scope-id"));

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _env = require("../../utils/env");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

var _bvPopover = require("../../components/popover/helpers/bv-popover");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Key which we use to store tooltip object on element
var BV_POPOVER = '__BV_Popover__'; // Default trigger

var DefaultTrigger = 'click'; // Valid event triggers

var validTriggers = {
  focus: true,
  hover: true,
  click: true,
  blur: true,
  manual: true
}; // Directive modifier test regular expressions. Pre-compile for performance

var htmlRE = /^html$/i;
var noFadeRE = /^nofade$/i;
var placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/i;
var boundaryRE = /^(window|viewport|scrollParent)$/i;
var delayRE = /^d\d+$/i;
var delayShowRE = /^ds\d+$/i;
var delayHideRE = /^dh\d+$/i;
var offsetRE = /^o-?\d+$/i;
var variantRE = /^v-.+$/i; // Build a Popover config based on bindings (if any)
// Arguments and modifiers take precedence over passed value config object

var parseBindings = function parseBindings(bindings, vnode)
/* istanbul ignore next: not easy to test */
{
  // We start out with a basic config
  var NAME = 'BPopover';
  var config = {
    title: undefined,
    content: undefined,
    trigger: '',
    // Default set below if needed
    placement: 'right',
    fallbackPlacement: 'flip',
    container: false,
    // Default of body
    animation: true,
    offset: 0,
    disabled: false,
    id: null,
    html: false,
    delay: (0, _config.getComponentConfig)(NAME, 'delay'),
    boundary: String((0, _config.getComponentConfig)(NAME, 'boundary')),
    boundaryPadding: parseInt((0, _config.getComponentConfig)(NAME, 'boundaryPadding'), 10) || 0,
    variant: (0, _config.getComponentConfig)(NAME, 'variant'),
    customClass: (0, _config.getComponentConfig)(NAME, 'customClass')
  }; // Process `bindings.value`

  if ((0, _inspect.isString)(bindings.value) || (0, _inspect.isNumber)(bindings.value)) {
    // Value is popover content (html optionally supported)
    config.content = bindings.value;
  } else if ((0, _inspect.isFunction)(bindings.value)) {
    // Content generator function
    config.content = bindings.value;
  } else if ((0, _inspect.isPlainObject)(bindings.value)) {
    // Value is config object, so merge
    config = _objectSpread({}, config, {}, bindings.value);
  } // If argument, assume element ID of container element


  if (bindings.arg) {
    // Element ID specified as arg
    // We must prepend '#' to become a CSS selector
    config.container = "#".concat(bindings.arg);
  } // If title is not provided, try title attribute


  if ((0, _inspect.isUndefined)(config.title)) {
    // Try attribute
    var data = vnode.data || {};
    config.title = data.attrs && !(0, _inspect.isUndefinedOrNull)(data.attrs.title) ? data.attrs.title : undefined;
  } // Normalize delay


  if (!(0, _inspect.isPlainObject)(config.delay)) {
    config.delay = {
      show: parseInt(config.delay, 10) || 0,
      hide: parseInt(config.delay, 10) || 0
    };
  } // Process modifiers


  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {
    if (htmlRE.test(mod)) {
      // Title/content allows HTML
      config.html = true;
    } else if (noFadeRE.test(mod)) {
      // No animation
      config.animation = false;
    } else if (placementRE.test(mod)) {
      // Placement of popover
      config.placement = mod;
    } else if (boundaryRE.test(mod)) {
      // Boundary of popover
      mod = mod === 'scrollparent' ? 'scrollParent' : mod;
      config.boundary = mod;
    } else if (delayRE.test(mod)) {
      // Delay value
      var delay = parseInt(mod.slice(1), 10) || 0;
      config.delay.show = delay;
      config.delay.hide = delay;
    } else if (delayShowRE.test(mod)) {
      // Delay show value
      config.delay.show = parseInt(mod.slice(2), 10) || 0;
    } else if (delayHideRE.test(mod)) {
      // Delay hide value
      config.delay.hide = parseInt(mod.slice(2), 10) || 0;
    } else if (offsetRE.test(mod)) {
      // Offset value, negative allowed
      config.offset = parseInt(mod.slice(1), 10) || 0;
    } else if (variantRE.test(mod)) {
      // Variant
      config.variant = mod.slice(2) || null;
    }
  }); // Special handling of event trigger modifiers trigger is
  // a space separated list

  var selectedTriggers = {}; // Parse current config object trigger

  (0, _array.concat)(config.trigger || '').filter(Boolean).join(' ').trim().toLowerCase().split(/\s+/).forEach(function (trigger) {
    if (validTriggers[trigger]) {
      selectedTriggers[trigger] = true;
    }
  }); // Parse modifiers for triggers

  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {
    mod = mod.toLowerCase();

    if (validTriggers[mod]) {
      // If modifier is a valid trigger
      selectedTriggers[mod] = true;
    }
  }); // Sanitize triggers

  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');

  if (config.trigger === 'blur') {
    // Blur by itself is useless, so convert it to 'focus'
    config.trigger = 'focus';
  }

  if (!config.trigger) {
    // Use default trigger
    config.trigger = DefaultTrigger;
  }

  return config;
}; // Add or update Popover on our element


var applyPopover = function applyPopover(el, bindings, vnode) {
  if (!_env.isBrowser) {
    /* istanbul ignore next */
    return;
  }

  var config = parseBindings(bindings, vnode);

  if (!el[BV_POPOVER]) {
    var $parent = vnode.context;
    el[BV_POPOVER] = new _bvPopover.BVPopover({
      parent: $parent,
      // Add the parent's scoped style attribute data
      _scopeId: (0, _getScopeId.default)($parent, undefined)
    });
    el[BV_POPOVER].__bv_prev_data__ = {};
    el[BV_POPOVER].$on('show', function ()
    /* istanbul ignore next: for now */
    {
      // Before showing the popover, we update the title
      // and content if they are functions
      var data = {};

      if ((0, _inspect.isFunction)(config.title)) {
        data.title = config.title();
      }

      if ((0, _inspect.isFunction)(config.content)) {
        data.content = config.content();
      }

      if ((0, _object.keys)(data).length > 0) {
        el[BV_POPOVER].updateData(data);
      }
    });
  }

  var data = {
    title: config.title,
    content: config.content,
    triggers: config.trigger,
    placement: config.placement,
    fallbackPlacement: config.fallbackPlacement,
    variant: config.variant,
    customClass: config.customClass,
    container: config.container,
    boundary: config.boundary,
    delay: config.delay,
    offset: config.offset,
    noFade: !config.animation,
    id: config.id,
    disabled: config.disabled,
    html: config.html
  };
  var oldData = el[BV_POPOVER].__bv_prev_data__;
  el[BV_POPOVER].__bv_prev_data__ = data;

  if (!(0, _looseEqual.default)(data, oldData)) {
    // We only update the instance if data has changed
    var newData = {
      target: el
    };
    (0, _object.keys)(data).forEach(function (prop) {
      // We only pass data properties that have changed
      if (data[prop] !== oldData[prop]) {
        // If title/content is a function, we execute it here
        newData[prop] = (prop === 'title' || prop === 'content') && (0, _inspect.isFunction)(data[prop]) ? data[prop]() : data[prop];
      }
    });
    el[BV_POPOVER].updateData(newData);
  }
}; // Remove Popover from our element


var removePopover = function removePopover(el) {
  if (el[BV_POPOVER]) {
    el[BV_POPOVER].$destroy();
    el[BV_POPOVER] = null;
  }

  delete el[BV_POPOVER];
}; // Export our directive


var VBPopover = {
  bind: function bind(el, bindings, vnode) {
    applyPopover(el, bindings, vnode);
  },
  // We use `componentUpdated` here instead of `update`, as the former
  // waits until the containing component and children have finished updating
  componentUpdated: function componentUpdated(el, bindings, vnode) {
    // Performed in a `$nextTick()` to prevent endless render/update loops
    vnode.context.$nextTick(function () {
      applyPopover(el, bindings, vnode);
    });
  },
  unbind: function unbind(el) {
    removePopover(el);
  }
};
exports.VBPopover = VBPopover;
},{"../../utils/get-scope-id":"node_modules/bootstrap-vue/esm/utils/get-scope-id.js","../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../components/popover/helpers/bv-popover":"node_modules/bootstrap-vue/esm/components/popover/helpers/bv-popover.js"}],"node_modules/bootstrap-vue/esm/directives/popover/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "VBPopover", {
  enumerable: true,
  get: function () {
    return _popover.VBPopover;
  }
});
exports.VBPopoverPlugin = void 0;

var _popover = require("./popover");

var _plugins = require("../../utils/plugins");

var VBPopoverPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  directives: {
    VBPopover: _popover.VBPopover
  }
});
exports.VBPopoverPlugin = VBPopoverPlugin;
},{"./popover":"node_modules/bootstrap-vue/esm/directives/popover/popover.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/popover/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BPopover", {
  enumerable: true,
  get: function () {
    return _popover.BPopover;
  }
});
exports.PopoverPlugin = void 0;

var _popover = require("./popover");

var _popover2 = require("../../directives/popover");

var _plugins = require("../../utils/plugins");

var PopoverPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BPopover: _popover.BPopover
  },
  plugins: {
    VBPopoverPlugin: _popover2.VBPopoverPlugin
  }
});
exports.PopoverPlugin = PopoverPlugin;
},{"./popover":"node_modules/bootstrap-vue/esm/components/popover/popover.js","../../directives/popover":"node_modules/bootstrap-vue/esm/directives/popover/index.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/progress/progress-bar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BProgressBar = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _config = require("../../utils/config");

var _html = require("../../utils/html");

var _inspect = require("../../utils/inspect");

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BProgressBar'; // @vue/component

var BProgressBar =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_normalizeSlot.default],
  inject: {
    bvProgress: {
      default: function _default()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: {
    value: {
      type: Number,
      default: 0
    },
    label: {
      type: String,
      default: null
    },
    labelHtml: {
      type: String
    },
    // $parent (this.bvProgress) prop values may take precedence over the following props
    // Which is why they are defaulted to null
    max: {
      type: Number,
      default: null
    },
    precision: {
      type: Number,
      default: null
    },
    variant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'variant');
      }
    },
    striped: {
      type: Boolean,
      default: null
    },
    animated: {
      type: Boolean,
      default: null
    },
    showProgress: {
      type: Boolean,
      default: null
    },
    showValue: {
      type: Boolean,
      default: null
    }
  },
  computed: {
    progressBarClasses: function progressBarClasses() {
      return [this.computedVariant ? "bg-".concat(this.computedVariant) : '', this.computedStriped || this.computedAnimated ? 'progress-bar-striped' : '', this.computedAnimated ? 'progress-bar-animated' : ''];
    },
    progressBarStyles: function progressBarStyles() {
      return {
        width: 100 * (this.value / this.computedMax) + '%'
      };
    },
    computedProgress: function computedProgress() {
      var p = Math.pow(10, this.computedPrecision);
      return Math.round(100 * p * this.value / this.computedMax) / p;
    },
    computedMax: function computedMax() {
      // Prefer our max over parent setting
      return (0, _inspect.isNumber)(this.max) ? this.max : this.bvProgress.max || 100;
    },
    computedVariant: function computedVariant() {
      // Prefer our variant over parent setting
      return this.variant || this.bvProgress.variant;
    },
    computedPrecision: function computedPrecision() {
      // Prefer our precision over parent setting
      return (0, _inspect.isNumber)(this.precision) ? this.precision : this.bvProgress.precision || 0;
    },
    computedStriped: function computedStriped() {
      // Prefer our striped over parent setting
      return (0, _inspect.isBoolean)(this.striped) ? this.striped : this.bvProgress.striped || false;
    },
    computedAnimated: function computedAnimated() {
      // Prefer our animated over parent setting
      return (0, _inspect.isBoolean)(this.animated) ? this.animated : this.bvProgress.animated || false;
    },
    computedShowProgress: function computedShowProgress() {
      // Prefer our showProgress over parent setting
      return (0, _inspect.isBoolean)(this.showProgress) ? this.showProgress : this.bvProgress.showProgress || false;
    },
    computedShowValue: function computedShowValue() {
      // Prefer our showValue over parent setting
      return (0, _inspect.isBoolean)(this.showValue) ? this.showValue : this.bvProgress.showValue || false;
    }
  },
  render: function render(h) {
    var childNodes = h();

    if (this.hasNormalizedSlot('default')) {
      childNodes = this.normalizeSlot('default');
    } else if (this.label || this.labelHtml) {
      childNodes = h('span', {
        domProps: (0, _html.htmlOrText)(this.labelHtml, this.label)
      });
    } else if (this.computedShowProgress) {
      childNodes = this.computedProgress.toFixed(this.computedPrecision);
    } else if (this.computedShowValue) {
      childNodes = this.value.toFixed(this.computedPrecision);
    }

    return h('div', {
      staticClass: 'progress-bar',
      class: this.progressBarClasses,
      style: this.progressBarStyles,
      attrs: {
        role: 'progressbar',
        'aria-valuemin': '0',
        'aria-valuemax': this.computedMax.toString(),
        'aria-valuenow': this.value.toFixed(this.computedPrecision)
      }
    }, [childNodes]);
  }
});

exports.BProgressBar = BProgressBar;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/progress/progress.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BProgress = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _config = require("../../utils/config");

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _progressBar = require("./progress-bar");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NAME = 'BProgress'; // @vue/component

var BProgress =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_normalizeSlot.default],
  provide: function provide() {
    return {
      bvProgress: this
    };
  },
  props: {
    // These props can be inherited via the child b-progress-bar(s)
    variant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'variant');
      }
    },
    striped: {
      type: Boolean,
      default: false
    },
    animated: {
      type: Boolean,
      default: false
    },
    height: {
      type: String,
      default: null
    },
    precision: {
      type: Number,
      default: 0
    },
    showProgress: {
      type: Boolean,
      default: false
    },
    showValue: {
      type: Boolean,
      default: false
    },
    max: {
      type: Number,
      default: 100
    },
    // This prop is not inherited by child b-progress-bar(s)
    value: {
      type: Number,
      default: 0
    }
  },
  computed: {
    progressHeight: function progressHeight() {
      return {
        height: this.height || null
      };
    }
  },
  render: function render(h) {
    var childNodes = this.normalizeSlot('default');

    if (!childNodes) {
      childNodes = h(_progressBar.BProgressBar, {
        props: {
          value: this.value,
          max: this.max,
          precision: this.precision,
          variant: this.variant,
          animated: this.animated,
          striped: this.striped,
          showProgress: this.showProgress,
          showValue: this.showValue
        }
      });
    }

    return h('div', {
      class: ['progress'],
      style: this.progressHeight
    }, [childNodes]);
  }
});

exports.BProgress = BProgress;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","./progress-bar":"node_modules/bootstrap-vue/esm/components/progress/progress-bar.js"}],"node_modules/bootstrap-vue/esm/components/progress/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BProgress", {
  enumerable: true,
  get: function () {
    return _progress.BProgress;
  }
});
Object.defineProperty(exports, "BProgressBar", {
  enumerable: true,
  get: function () {
    return _progressBar.BProgressBar;
  }
});
exports.ProgressPlugin = void 0;

var _progress = require("./progress");

var _progressBar = require("./progress-bar");

var _plugins = require("../../utils/plugins");

var ProgressPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BProgress: _progress.BProgress,
    BProgressBar: _progressBar.BProgressBar
  }
});
exports.ProgressPlugin = ProgressPlugin;
},{"./progress":"node_modules/bootstrap-vue/esm/components/progress/progress.js","./progress-bar":"node_modules/bootstrap-vue/esm/components/progress/progress-bar.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/spinner/spinner.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BSpinner = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _vueFunctionalDataMerge = require("vue-functional-data-merge");

var _config = require("../../utils/config");

var _normalizeSlot = require("../../utils/normalize-slot");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var NAME = 'BSpinner'; // @vue/component

var BSpinner =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  functional: true,
  props: {
    type: {
      type: String,
      default: 'border' // SCSS currently supports 'border' or 'grow'

    },
    label: {
      type: String,
      default: null
    },
    variant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)(NAME, 'variant');
      }
    },
    small: {
      type: Boolean,
      default: false
    },
    role: {
      type: String,
      default: 'status'
    },
    tag: {
      type: String,
      default: 'span'
    }
  },
  render: function render(h, _ref) {
    var _class;

    var props = _ref.props,
        data = _ref.data,
        slots = _ref.slots,
        scopedSlots = _ref.scopedSlots;
    var $slots = slots();
    var $scopedSlots = scopedSlots || {};
    var label = (0, _normalizeSlot.normalizeSlot)('label', {}, $scopedSlots, $slots) || props.label;

    if (label) {
      label = h('span', {
        staticClass: 'sr-only'
      }, label);
    }

    return h(props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, {
      attrs: {
        role: label ? props.role || 'status' : null,
        'aria-hidden': label ? null : 'true'
      },
      class: (_class = {}, _defineProperty(_class, "spinner-".concat(props.type), Boolean(props.type)), _defineProperty(_class, "spinner-".concat(props.type, "-sm"), props.small), _defineProperty(_class, "text-".concat(props.variant), Boolean(props.variant)), _class)
    }), [label || h()]);
  }
});

exports.BSpinner = BSpinner;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","vue-functional-data-merge":"node_modules/vue-functional-data-merge/dist/lib.esm.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/normalize-slot":"node_modules/bootstrap-vue/esm/utils/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/spinner/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BSpinner", {
  enumerable: true,
  get: function () {
    return _spinner.BSpinner;
  }
});
exports.SpinnerPlugin = void 0;

var _spinner = require("./spinner");

var _plugins = require("../../utils/plugins");

var SpinnerPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BSpinner: _spinner.BSpinner
  }
});
exports.SpinnerPlugin = SpinnerPlugin;
},{"./spinner":"node_modules/bootstrap-vue/esm/components/spinner/spinner.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/utils/startcase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Converts a string, including strings in camelCase or snake_case, into Start Case (a variant
 * of Title Case where all words start with a capital letter), it keeps original single quote
 * and hyphen in the word.
 *
 * Copyright (c) 2017 Compass (MIT)
 * https://github.com/UrbanCompass/to-start-case
 * @author Zhuoyuan Zhang <https://github.com/drawyan>
 * @author Wei Wang <https://github.com/onlywei>
 *
 *
 *   'management_companies' to 'Management Companies'
 *   'managementCompanies' to 'Management Companies'
 *   `hell's kitchen` to `Hell's Kitchen`
 *   `co-op` to `Co-op`
 *
 * @param {String} str
 * @returns {String}
 */
var startCase = function startCase(str) {
  return str.replace(/_/g, ' ').replace(/([a-z])([A-Z])/g, function (str, $1, $2) {
    return $1 + ' ' + $2;
  }).replace(/(\s|^)(\w)/g, function (str, $1, $2) {
    return $1 + $2.toUpperCase();
  });
};

var _default = startCase;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/table/helpers/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EVENT_FILTER = exports.IGNORED_FIELD_KEYS = void 0;
// Constants used by table helpers
// Object of item keys that should be ignored for headers and
// stringification and filter events
var IGNORED_FIELD_KEYS = {
  _rowVariant: true,
  _cellVariants: true,
  _showDetails: true
}; // Filter CSS selector for click/dblclick/etc. events
// If any of these selectors match the clicked element, we ignore the event

exports.IGNORED_FIELD_KEYS = IGNORED_FIELD_KEYS;
var EVENT_FILTER = ['a', 'a *', // Include content inside links
'button', 'button *', // Include content inside buttons
'input:not(.disabled):not([disabled])', 'select:not(.disabled):not([disabled])', 'textarea:not(.disabled):not([disabled])', '[role="link"]', '[role="link"] *', '[role="button"]', '[role="button"] *', '[tabindex]:not(.disabled):not([disabled])'].join(',');
exports.EVENT_FILTER = EVENT_FILTER;
},{}],"node_modules/bootstrap-vue/esm/components/table/helpers/normalize-fields.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _startcase = _interopRequireDefault(require("../../../utils/startcase"));

var _inspect = require("../../../utils/inspect");

var _object = require("../../../utils/object");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Private function to massage field entry into common object format
var processField = function processField(key, value) {
  var field = null;

  if ((0, _inspect.isString)(value)) {
    // Label shortcut
    field = {
      key: key,
      label: value
    };
  } else if ((0, _inspect.isFunction)(value)) {
    // Formatter shortcut
    field = {
      key: key,
      formatter: value
    };
  } else if ((0, _inspect.isObject)(value)) {
    field = _objectSpread({}, value);
    field.key = field.key || key;
  } else if (value !== false) {
    // Fallback to just key

    /* istanbul ignore next */
    field = {
      key: key
    };
  }

  return field;
}; // We normalize fields into an array of objects
// [ { key:..., label:..., ...}, {...}, ..., {..}]


var normalizeFields = function normalizeFields(origFields, items) {
  var fields = [];

  if ((0, _inspect.isArray)(origFields)) {
    // Normalize array Form
    origFields.filter(function (f) {
      return f;
    }).forEach(function (f) {
      if ((0, _inspect.isString)(f)) {
        fields.push({
          key: f,
          label: (0, _startcase.default)(f)
        });
      } else if ((0, _inspect.isObject)(f) && f.key && (0, _inspect.isString)(f.key)) {
        // Full object definition. We use assign so that we don't mutate the original
        fields.push(_objectSpread({}, f));
      } else if ((0, _inspect.isObject)(f) && (0, _object.keys)(f).length === 1) {
        // Shortcut object (i.e. { 'foo_bar': 'This is Foo Bar' }
        var key = (0, _object.keys)(f)[0];
        var field = processField(key, f[key]);

        if (field) {
          fields.push(field);
        }
      }
    });
  } // If no field provided, take a sample from first record (if exits)


  if (fields.length === 0 && (0, _inspect.isArray)(items) && items.length > 0) {
    var sample = items[0];
    (0, _object.keys)(sample).forEach(function (k) {
      if (!_constants.IGNORED_FIELD_KEYS[k]) {
        fields.push({
          key: k,
          label: (0, _startcase.default)(k)
        });
      }
    });
  } // Ensure we have a unique array of fields and that they have String labels


  var memo = {};
  return fields.filter(function (f) {
    if (!memo[f.key]) {
      memo[f.key] = true;
      f.label = (0, _inspect.isString)(f.label) ? f.label : (0, _startcase.default)(f.key);
      return true;
    }

    return false;
  });
};

var _default = normalizeFields;
exports.default = _default;
},{"../../../utils/startcase":"node_modules/bootstrap-vue/esm/utils/startcase.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","./constants":"node_modules/bootstrap-vue/esm/components/table/helpers/constants.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-items.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _looseEqual = _interopRequireDefault(require("../../../utils/loose-equal"));

var _inspect = require("../../../utils/inspect");

var _normalizeFields = _interopRequireDefault(require("./normalize-fields"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _default2 = {
  props: {
    items: {
      // Provider mixin adds in `Function` type
      type: Array,
      default: function _default()
      /* istanbul ignore next */
      {
        return [];
      }
    },
    fields: {
      type: Array,
      default: null
    },
    primaryKey: {
      // Primary key for record
      // If provided the value in each row must be unique!
      type: String,
      default: null
    },
    value: {
      // `v-model` for retrieving the current displayed rows
      type: Array,
      default: function _default() {
        return [];
      }
    }
  },
  data: function data() {
    return {
      // Our local copy of the items
      // Must be an array
      localItems: (0, _inspect.isArray)(this.items) ? this.items.slice() : []
    };
  },
  computed: {
    computedFields: function computedFields() {
      // We normalize fields into an array of objects
      // `[ { key:..., label:..., ...}, {...}, ..., {..}]`
      return (0, _normalizeFields.default)(this.fields, this.localItems);
    },
    computedFieldsObj: function computedFieldsObj() {
      // Fields as a simple lookup hash object
      // Mainly for formatter lookup and use in `scopedSlots` for convenience
      // If the field has a formatter, it normalizes formatter to a
      // function ref or `undefined` if no formatter
      var parent = this.$parent;
      return this.computedFields.reduce(function (obj, f) {
        // We use object spread here so we don't mutate the original field object
        obj[f.key] = _objectSpread({}, f);

        if (f.formatter) {
          // Normalize formatter to a function ref or `undefined`
          var formatter = f.formatter;

          if ((0, _inspect.isString)(formatter) && (0, _inspect.isFunction)(parent[formatter])) {
            formatter = parent[formatter];
          } else if (!(0, _inspect.isFunction)(formatter)) {
            /* istanbul ignore next */
            formatter = undefined;
          } // Return formatter function or `undefined` if none


          obj[f.key].formatter = formatter;
        }

        return obj;
      }, {});
    },
    computedItems: function computedItems() {
      // Fallback if various mixins not provided
      return (this.paginatedItems || this.sortedItems || this.filteredItems || this.localItems || []).slice();
    },
    context: function context() {
      // Current state of sorting, filtering and pagination props/values
      return {
        filter: this.localFilter,
        sortBy: this.localSortBy,
        sortDesc: this.localSortDesc,
        perPage: parseInt(this.perPage, 10) || 0,
        currentPage: parseInt(this.currentPage, 10) || 1,
        apiUrl: this.apiUrl
      };
    }
  },
  watch: {
    items: function items(newItems) {
      /* istanbul ignore else */
      if ((0, _inspect.isArray)(newItems)) {
        // Set `localItems`/`filteredItems` to a copy of the provided array
        this.localItems = newItems.slice();
      } else if ((0, _inspect.isUndefined)(newItems) || (0, _inspect.isNull)(newItems)) {
        /* istanbul ignore next */
        this.localItems = [];
      }
    },
    // Watch for changes on `computedItems` and update the `v-model`
    computedItems: function computedItems(newVal) {
      this.$emit('input', newVal);
    },
    // Watch for context changes
    context: function context(newVal, oldVal) {
      // Emit context information for external paging/filtering/sorting handling
      if (!(0, _looseEqual.default)(newVal, oldVal)) {
        this.$emit('context-changed', newVal);
      }
    }
  },
  mounted: function mounted() {
    // Initially update the `v-model` of displayed items
    this.$emit('input', this.computedItems);
  },
  methods: {
    // Method to get the formatter method for a given field key
    getFieldFormatter: function getFieldFormatter(key) {
      var field = this.computedFieldsObj[key]; // `this.computedFieldsObj` has pre-normalized the formatter to a
      // function ref if present, otherwise `undefined`

      return field ? field.formatter : undefined;
    }
  }
};
exports.default = _default2;
},{"../../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./normalize-fields":"node_modules/bootstrap-vue/esm/components/table/helpers/normalize-fields.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // Mixin for providing stacked tables


var _default = {
  props: {
    stacked: {
      type: [Boolean, String],
      default: false
    }
  },
  computed: {
    isStacked: function isStacked() {
      // `true` when always stacked, or returns breakpoint specified
      return this.stacked === '' ? true : this.stacked;
    },
    isStackedAlways: function isStackedAlways() {
      return this.isStacked === true;
    },
    stackedTableClasses: function stackedTableClasses() {
      return _defineProperty({
        'b-table-stacked': this.isStackedAlways
      }, "b-table-stacked-".concat(this.stacked), !this.isStackedAlways && this.isStacked);
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/table/helpers/sanitize-row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _object = require("../../../utils/object");

var _array = require("../../../utils/array");

var _inspect = require("../../../utils/inspect");

var _constants = require("./constants");

// Return a copy of a row after all reserved fields have been filtered out
var sanitizeRow = function sanitizeRow(row, ignoreFields, includeFields) {
  var fieldsObj = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  return (0, _object.keys)(row).reduce(function (obj, key) {
    // Ignore special fields that start with `_`
    // Ignore fields in the `ignoreFields` array
    // Include only fields in the `includeFields` array
    if (!_constants.IGNORED_FIELD_KEYS[key] && !(ignoreFields && ignoreFields.length > 0 && (0, _array.arrayIncludes)(ignoreFields, key)) && !(includeFields && includeFields.length > 0 && !(0, _array.arrayIncludes)(includeFields, key))) {
      var f = fieldsObj[key] || {};
      var val = row[key]; // `f.filterByFormatted` will either be a function or boolean
      // `f.formater` will have already been noramlized into a function ref

      var filterByFormatted = f.filterByFormatted;
      var formatter = (0, _inspect.isFunction)(filterByFormatted) ? filterByFormatted : filterByFormatted ? f.formatter : null;
      obj[key] = (0, _inspect.isFunction)(formatter) ? formatter(val, key, row) : val;
    }

    return obj;
  }, {});
};

var _default = sanitizeRow;
exports.default = _default;
},{"../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./constants":"node_modules/bootstrap-vue/esm/components/table/helpers/constants.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/stringify-object-values.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _object = require("../../../utils/object");

var _inspect = require("../../../utils/inspect");

// Recursively stringifies the values of an object, space separated, in an
// SSR safe deterministic way (keys are sorted before stringification)
//
//   ex:
//     { b: 3, c: { z: 'zzz', d: null, e: 2 }, d: [10, 12, 11], a: 'one' }
//   becomes
//     'one 3 2 zzz 10 12 11'
//
// Primitives (numbers/strings) are returned as-is
// Null and undefined values are filtered out
// Dates are converted to their native string format
var stringifyObjectValues = function stringifyObjectValues(val) {
  if ((0, _inspect.isUndefinedOrNull)(val)) {
    /* istanbul ignore next */
    return '';
  } // Arrays are also object, and keys just returns the array indexes
  // Date objects we convert to strings


  if ((0, _inspect.isObject)(val) && !(0, _inspect.isDate)(val)) {
    return (0, _object.keys)(val).sort() // Sort to prevent SSR issues on pre-rendered sorted tables
    .filter(function (v) {
      return !(0, _inspect.isUndefinedOrNull)(v);
    }) // Ignore undefined/null values
    .map(function (k) {
      return stringifyObjectValues(val[k]);
    }).join(' ');
  }

  return String(val);
};

var _default = stringifyObjectValues;
exports.default = _default;
},{"../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/stringify-record-values.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../../../utils/inspect");

var _sanitizeRow = _interopRequireDefault(require("./sanitize-row"));

var _stringifyObjectValues = _interopRequireDefault(require("./stringify-object-values"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Stringifies the values of a record, ignoring any special top level field keys
// TODO: Add option to stringify `scopedSlot` items
var stringifyRecordValues = function stringifyRecordValues(row, ignoreFields, includeFields, fieldsObj) {
  return (0, _inspect.isObject)(row) ? (0, _stringifyObjectValues.default)((0, _sanitizeRow.default)(row, ignoreFields, includeFields, fieldsObj)) : '';
};

var _default = stringifyRecordValues;
exports.default = _default;
},{"../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./sanitize-row":"node_modules/bootstrap-vue/esm/components/table/helpers/sanitize-row.js","./stringify-object-values":"node_modules/bootstrap-vue/esm/components/table/helpers/stringify-object-values.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cloneDeep = _interopRequireDefault(require("../../../utils/clone-deep"));

var _looseEqual = _interopRequireDefault(require("../../../utils/loose-equal"));

var _array = require("../../../utils/array");

var _inspect = require("../../../utils/inspect");

var _stringifyRecordValues = _interopRequireDefault(require("./stringify-record-values"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  props: {
    filter: {
      type: [String, RegExp, Object, Array],
      default: null
    },
    filterFunction: {
      type: Function,
      default: null
    },
    filterIgnoredFields: {
      type: Array // default: undefined

    },
    filterIncludedFields: {
      type: Array // default: undefined

    },
    filterDebounce: {
      type: [Number, String],
      default: 0,
      validator: function validator(val) {
        return /^\d+/.test(String(val));
      }
    }
  },
  data: function data() {
    return {
      // Flag for displaying which empty slot to show and some event triggering
      isFiltered: false,
      // Where we store the copy of the filter criteria after debouncing
      // We pre-set it with the sanitized filter value
      localFilter: this.filterSanitize(this.filter)
    };
  },
  computed: {
    computedFilterIgnored: function computedFilterIgnored() {
      return this.filterIgnoredFields ? (0, _array.concat)(this.filterIgnoredFields).filter(Boolean) : null;
    },
    computedFilterIncluded: function computedFilterIncluded() {
      return this.filterIncludedFields ? (0, _array.concat)(this.filterIncludedFields).filter(Boolean) : null;
    },
    computedFilterDebounce: function computedFilterDebounce() {
      return parseInt(this.filterDebounce, 10) || 0;
    },
    localFiltering: function localFiltering() {
      return this.hasProvider ? !!this.noProviderFiltering : true;
    },
    // For watching changes to `filteredItems` vs `localItems`
    filteredCheck: function filteredCheck() {
      return {
        filteredItems: this.filteredItems,
        localItems: this.localItems,
        localFilter: this.localFilter
      };
    },
    // Sanitized/normalize filter-function prop
    localFilterFn: function localFilterFn() {
      // Return `null` to signal to use internal filter function
      return (0, _inspect.isFunction)(this.filterFunction) ? this.filterFunction : null;
    },
    // Returns the records in `localItems` that match the filter criteria
    // Returns the original `localItems` array if not sorting
    filteredItems: function filteredItems() {
      var items = this.localItems || []; // Note the criteria is debounced and sanitized

      var criteria = this.localFilter; // Resolve the filtering function, when requested
      // We prefer the provided filtering function and fallback to the internal one
      // When no filtering criteria is specified the filtering factories will return `null`

      var filterFn = this.localFiltering ? this.filterFnFactory(this.localFilterFn, criteria) || this.defaultFilterFnFactory(criteria) : null; // We only do local filtering when requested and there are records to filter

      return filterFn && items.length > 0 ? items.filter(filterFn) : items;
    }
  },
  watch: {
    // Watch for debounce being set to 0
    computedFilterDebounce: function computedFilterDebounce(newVal, oldVal) {
      if (!newVal && this.$_filterTimer) {
        clearTimeout(this.$_filterTimer);
        this.$_filterTimer = null;
        this.localFilter = this.filterSanitize(this.filter);
      }
    },
    // Watch for changes to the filter criteria, and debounce if necessary
    filter: {
      // We need a deep watcher in case the user passes
      // an object when using `filter-function`
      deep: true,
      handler: function handler(newCriteria, oldCriteria) {
        var _this = this;

        var timeout = this.computedFilterDebounce;
        clearTimeout(this.$_filterTimer);
        this.$_filterTimer = null;

        if (timeout && timeout > 0) {
          // If we have a debounce time, delay the update of `localFilter`
          this.$_filterTimer = setTimeout(function () {
            _this.localFilter = _this.filterSanitize(newCriteria);
          }, timeout);
        } else {
          // Otherwise, immediately update `localFilter` with `newFilter` value
          this.localFilter = this.filterSanitize(newCriteria);
        }
      }
    },
    // Watch for changes to the filter criteria and filtered items vs `localItems`
    // Set visual state and emit events as required
    filteredCheck: function filteredCheck(_ref) {
      var filteredItems = _ref.filteredItems,
          localItems = _ref.localItems,
          localFilter = _ref.localFilter; // Determine if the dataset is filtered or not

      var isFiltered = false;

      if (!localFilter) {
        // If filter criteria is falsey
        isFiltered = false;
      } else if ((0, _looseEqual.default)(localFilter, []) || (0, _looseEqual.default)(localFilter, {})) {
        // If filter criteria is an empty array or object
        isFiltered = false;
      } else if (localFilter) {
        // If filter criteria is truthy
        isFiltered = true;
      }

      if (isFiltered) {
        this.$emit('filtered', filteredItems, filteredItems.length);
      }

      this.isFiltered = isFiltered;
    },
    isFiltered: function isFiltered(newVal, oldVal) {
      if (newVal === false && oldVal === true) {
        // We need to emit a filtered event if isFiltered transitions from true to
        // false so that users can update their pagination controls.
        this.$emit('filtered', this.localItems, this.localItems.length);
      }
    }
  },
  created: function created() {
    var _this2 = this; // Create non-reactive prop where we store the debounce timer id


    this.$_filterTimer = null; // If filter is "pre-set", set the criteria
    // This will trigger any watchers/dependents
    // this.localFilter = this.filterSanitize(this.filter)
    // Set the initial filtered state in a `$nextTick()` so that
    // we trigger a filtered event if needed

    this.$nextTick(function () {
      _this2.isFiltered = Boolean(_this2.localFilter);
    });
  },
  beforeDestroy: function beforeDestroy()
  /* istanbul ignore next */
  {
    clearTimeout(this.$_filterTimer);
    this.$_filterTimer = null;
  },
  methods: {
    filterSanitize: function filterSanitize(criteria) {
      // Sanitizes filter criteria based on internal or external filtering
      if (this.localFiltering && !this.localFilterFn && !((0, _inspect.isString)(criteria) || (0, _inspect.isRegExp)(criteria))) {
        // If using internal filter function, which only accepts string or RegExp,
        // return '' to signify no filter
        return '';
      } // Could be a string, object or array, as needed by external filter function
      // We use `cloneDeep` to ensure we have a new copy of an object or array
      // without Vue's reactive observers


      return (0, _cloneDeep.default)(criteria);
    },
    // Filter Function factories
    filterFnFactory: function filterFnFactory(filterFn, criteria) {
      // Wrapper factory for external filter functions
      // Wrap the provided filter-function and return a new function
      // Returns `null` if no filter-function defined or if criteria is falsey
      // Rather than directly grabbing `this.computedLocalFilterFn` or `this.filterFunction`
      // we have it passed, so that the caller computed prop will be reactive to changes
      // in the original filter-function (as this routine is a method)
      if (!filterFn || !(0, _inspect.isFunction)(filterFn) || !criteria || (0, _looseEqual.default)(criteria, []) || (0, _looseEqual.default)(criteria, {})) {
        return null;
      } // Build the wrapped filter test function, passing the criteria to the provided function


      var fn = function fn(item) {
        // Generated function returns true if the criteria matches part
        // of the serialized data, otherwise false
        return filterFn(item, criteria);
      }; // Return the wrapped function


      return fn;
    },
    defaultFilterFnFactory: function defaultFilterFnFactory(criteria) {
      var _this3 = this; // Generates the default filter function, using the given filter criteria
      // Returns `null` if no criteria or criteria format not supported


      if (!criteria || !((0, _inspect.isString)(criteria) || (0, _inspect.isRegExp)(criteria))) {
        // Built in filter can only support strings or RegExp criteria (at the moment)
        return null;
      } // Build the regexp needed for filtering


      var regexp = criteria;

      if ((0, _inspect.isString)(regexp)) {
        // Escape special `RegExp` characters in the string and convert contiguous
        // whitespace to `\s+` matches
        var pattern = criteria.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&').replace(/[\s\uFEFF\xA0]+/g, '\\s+'); // Build the `RegExp` (no need for global flag, as we only need
        // to find the value once in the string)

        regexp = new RegExp(".*".concat(pattern, ".*"), 'i');
      } // Generate the wrapped filter test function to use


      var fn = function fn(item) {
        // This searches all row values (and sub property values) in the entire (excluding
        // special `_` prefixed keys), because we convert the record to a space-separated
        // string containing all the value properties (recursively), even ones that are
        // not visible (not specified in this.fields)
        // Users can ignore filtering on specific fields, or on only certain fields,
        // and can optionall specify searching results of fields with formatter
        //
        // TODO: Enable searching on scoped slots (optional, as it will be SLOW)
        //
        // Generated function returns true if the criteria matches part of
        // the serialized data, otherwise false
        // We set `lastIndex = 0` on the `RegExp` in case someone specifies the `/g` global flag
        regexp.lastIndex = 0;
        return regexp.test((0, _stringifyRecordValues.default)(item, _this3.computedFilterIgnored, _this3.computedFilterIncluded, _this3.computedFieldsObj));
      }; // Return the generated function


      return fn;
    }
  }
};
exports.default = _default;
},{"../../../utils/clone-deep":"node_modules/bootstrap-vue/esm/utils/clone-deep.js","../../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./stringify-record-values":"node_modules/bootstrap-vue/esm/components/table/helpers/stringify-record-values.js"}],"node_modules/bootstrap-vue/esm/utils/stable-sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/*
 * Consistent and stable sort function across JavaScript platforms
 *
 * Inconsistent sorts can cause SSR problems between client and server
 * such as in <b-table> if sortBy is applied to the data on server side render.
 * Chrome and V8 native sorts are inconsistent/unstable
 *
 * This function uses native sort with fallback to index compare when the a and b
 * compare returns 0
 *
 * Algorithm based on:
 * https://stackoverflow.com/questions/1427608/fast-stable-sorting-algorithm-implementation-in-javascript/45422645#45422645
 *
 * @param {array} array to sort
 * @param {function} sort compare function
 * @return {array}
 */
var stableSort = function stableSort(array, compareFn) {
  // Using `.bind(compareFn)` on the wrapped anonymous function improves
  // performance by avoiding the function call setup. We don't use an arrow
  // function here as it binds `this` to the `stableSort` context rather than
  // the `compareFn` context, which wouldn't give us the performance increase.
  return array.map(function (a, index) {
    return [index, a];
  }).sort(function (a, b) {
    return this(a[1], b[1]) || a[0] - b[0];
  }.bind(compareFn)).map(function (e) {
    return e[1];
  });
};

var _default = stableSort;
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/table/helpers/default-sort-compare.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get = _interopRequireDefault(require("../../../utils/get"));

var _inspect = require("../../../utils/inspect");

var _stringifyObjectValues = _interopRequireDefault(require("./stringify-object-values"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Default sort compare routine
//
// TODO: Add option to sort by multiple columns (tri-state per column,
//       plus order of columns in sort)  where sortBy could be an array
//       of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`
//       or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`
//       Multisort will most likely be handled in mixin-sort.js by
//       calling this method for each sortBy
var defaultSortCompare = function defaultSortCompare(a, b, sortBy, sortDesc, formatter, localeOpts, locale, nullLast) {
  var aa = (0, _get.default)(a, sortBy, null);
  var bb = (0, _get.default)(b, sortBy, null);

  if ((0, _inspect.isFunction)(formatter)) {
    aa = formatter(aa, sortBy, a);
    bb = formatter(bb, sortBy, b);
  }

  aa = (0, _inspect.isUndefinedOrNull)(aa) ? '' : aa;
  bb = (0, _inspect.isUndefinedOrNull)(bb) ? '' : bb;

  if ((0, _inspect.isDate)(aa) && (0, _inspect.isDate)(bb) || (0, _inspect.isNumber)(aa) && (0, _inspect.isNumber)(bb)) {
    // Special case for comparing dates and numbers
    // Internally dates are compared via their epoch number values
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  } else if (nullLast && aa === '' && bb !== '') {
    // Special case when sorting null/undefined/empty string last
    return 1;
  } else if (nullLast && aa !== '' && bb === '') {
    // Special case when sorting null/undefined/empty string last
    return -1;
  } // Do localized string comparison


  return (0, _stringifyObjectValues.default)(aa).localeCompare((0, _stringifyObjectValues.default)(bb), locale, localeOpts);
};

var _default = defaultSortCompare;
exports.default = _default;
},{"../../../utils/get":"node_modules/bootstrap-vue/esm/utils/get.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./stringify-object-values":"node_modules/bootstrap-vue/esm/components/table/helpers/stringify-object-values.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _stableSort = _interopRequireDefault(require("../../../utils/stable-sort"));

var _startcase = _interopRequireDefault(require("../../../utils/startcase"));

var _array = require("../../../utils/array");

var _inspect = require("../../../utils/inspect");

var _defaultSortCompare = _interopRequireDefault(require("./default-sort-compare"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _default2 = {
  props: {
    sortBy: {
      type: String,
      default: ''
    },
    sortDesc: {
      // TODO: Make this tri-state: true, false, null
      type: Boolean,
      default: false
    },
    sortDirection: {
      // This prop is named incorrectly
      // It should be `initialSortDirection` as it is a bit misleading
      // (not to mention it screws up the ARIA label on the headers)
      type: String,
      default: 'asc',
      validator: function validator(direction) {
        return (0, _array.arrayIncludes)(['asc', 'desc', 'last'], direction);
      }
    },
    sortCompare: {
      type: Function,
      default: null
    },
    sortCompareOptions: {
      // Supported localCompare options, see `options` section of:
      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare
      type: Object,
      default: function _default() {
        return {
          numeric: true
        };
      }
    },
    sortCompareLocale: {
      // String: locale code
      // Array: array of Locale strings
      type: [String, Array] // default: undefined

    },
    sortNullLast: {
      // Sort null and undefined to appear last
      type: Boolean,
      default: false
    },
    noSortReset: {
      // Another prop that should have had a better name.
      // It should be noSortClear (on non-sortable headers).
      // We will need to make sure the documentation is clear on what
      // this prop does (as well as in the code for future reference)
      type: Boolean,
      default: false
    },
    labelSortAsc: {
      type: String,
      default: 'Click to sort Ascending'
    },
    labelSortDesc: {
      type: String,
      default: 'Click to sort Descending'
    },
    labelSortClear: {
      type: String,
      default: 'Click to clear sorting'
    },
    noLocalSorting: {
      type: Boolean,
      default: false
    },
    noFooterSorting: {
      type: Boolean,
      default: false
    },
    sortIconLeft: {
      // Place the sorting icon on the left of the header cells
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      localSortBy: this.sortBy || '',
      localSortDesc: this.sortDesc || false
    };
  },
  computed: {
    localSorting: function localSorting() {
      return this.hasProvider ? !!this.noProviderSorting : !this.noLocalSorting;
    },
    isSortable: function isSortable() {
      return this.computedFields.some(function (f) {
        return f.sortable;
      });
    },
    sortedItems: function sortedItems() {
      // Sorts the filtered items and returns a new array of the sorted items
      // or the original items array if not sorted.
      var items = (this.filteredItems || this.localItems || []).slice();
      var sortBy = this.localSortBy;
      var sortDesc = this.localSortDesc;
      var sortCompare = this.sortCompare;
      var localSorting = this.localSorting;

      var sortOptions = _objectSpread({}, this.sortCompareOptions, {
        usage: 'sort'
      });

      var sortLocale = this.sortCompareLocale || undefined;
      var nullLast = this.sortNullLast;

      if (sortBy && localSorting) {
        var field = this.computedFieldsObj[sortBy] || {};
        var sortByFormatted = field.sortByFormatted;
        var formatter = (0, _inspect.isFunction)(sortByFormatted) ? sortByFormatted : sortByFormatted ? this.getFieldFormatter(sortBy) : undefined; // `stableSort` returns a new array, and leaves the original array intact

        return (0, _stableSort.default)(items, function (a, b) {
          var result = null;

          if ((0, _inspect.isFunction)(sortCompare)) {
            // Call user provided sortCompare routine
            result = sortCompare(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale);
          }

          if ((0, _inspect.isUndefinedOrNull)(result) || result === false) {
            // Fallback to built-in defaultSortCompare if sortCompare
            // is not defined or returns null/false
            result = (0, _defaultSortCompare.default)(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale, nullLast);
          } // Negate result if sorting in descending order


          return (result || 0) * (sortDesc ? -1 : 1);
        });
      }

      return items;
    }
  },
  watch: {
    isSortable: function isSortable(newVal, oldVal)
    /* istanbul ignore next: pain in the butt to test */
    {
      if (newVal) {
        if (this.isSortable) {
          this.$on('head-clicked', this.handleSort);
        }
      } else {
        this.$off('head-clicked', this.handleSort);
      }
    },
    sortDesc: function sortDesc(newVal, oldVal) {
      if (newVal === this.localSortDesc) {
        /* istanbul ignore next */
        return;
      }

      this.localSortDesc = newVal || false;
    },
    sortBy: function sortBy(newVal, oldVal) {
      if (newVal === this.localSortBy) {
        /* istanbul ignore next */
        return;
      }

      this.localSortBy = newVal || '';
    },
    // Update .sync props
    localSortDesc: function localSortDesc(newVal, oldVal) {
      // Emit update to sort-desc.sync
      if (newVal !== oldVal) {
        this.$emit('update:sortDesc', newVal);
      }
    },
    localSortBy: function localSortBy(newVal, oldVal) {
      if (newVal !== oldVal) {
        this.$emit('update:sortBy', newVal);
      }
    }
  },
  created: function created() {
    if (this.isSortable) {
      this.$on('head-clicked', this.handleSort);
    }
  },
  methods: {
    // Handlers
    // Need to move from thead-mixin
    handleSort: function handleSort(key, field, evt, isFoot) {
      var _this = this;

      if (!this.isSortable) {
        /* istanbul ignore next */
        return;
      }

      if (isFoot && this.noFooterSorting) {
        return;
      } // TODO: make this tri-state sorting
      // cycle desc => asc => none => desc => ...


      var sortChanged = false;

      var toggleLocalSortDesc = function toggleLocalSortDesc() {
        var sortDirection = field.sortDirection || _this.sortDirection;

        if (sortDirection === 'asc') {
          _this.localSortDesc = false;
        } else if (sortDirection === 'desc') {
          _this.localSortDesc = true;
        } else {// sortDirection === 'last'
          // Leave at last sort direction from previous column
        }
      };

      if (field.sortable) {
        if (key === this.localSortBy) {
          // Change sorting direction on current column
          this.localSortDesc = !this.localSortDesc;
        } else {
          // Start sorting this column ascending
          this.localSortBy = key; // this.localSortDesc = false

          toggleLocalSortDesc();
        }

        sortChanged = true;
      } else if (this.localSortBy && !this.noSortReset) {
        this.localSortBy = '';
        toggleLocalSortDesc();
        sortChanged = true;
      }

      if (sortChanged) {
        // Sorting parameters changed
        this.$emit('sort-changed', this.context);
      }
    },
    // methods to compute classes and attrs for thead>th cells
    sortTheadThClasses: function sortTheadThClasses(key, field, isFoot) {
      return {
        // If sortable and sortIconLeft are true, then place sort icon on the left
        'b-table-sort-icon-left': field.sortable && this.sortIconLeft && !(isFoot && this.noFooterSorting)
      };
    },
    sortTheadThAttrs: function sortTheadThAttrs(key, field, isFoot) {
      if (!this.isSortable || isFoot && this.noFooterSorting) {
        // No attributes if not a sortable table
        return {};
      }

      var sortable = field.sortable;
      var ariaLabel = '';

      if ((!field.label || !field.label.trim()) && !field.headerTitle) {
        // In case field's label and title are empty/blank, we need to
        // add a hint about what the column is about for non-sighted users.
        // This is duplicated code from tbody-row mixin, but we need it
        // here as well, since we overwrite the original aria-label.

        /* istanbul ignore next */
        ariaLabel = (0, _startcase.default)(key);
      } // The correctness of these labels is very important for screen-reader users.


      var ariaLabelSorting = '';

      if (sortable) {
        if (this.localSortBy === key) {
          // currently sorted sortable column.
          ariaLabelSorting = this.localSortDesc ? this.labelSortAsc : this.labelSortDesc;
        } else {
          // Not currently sorted sortable column.
          // Not using nested ternary's here for clarity/readability
          // Default for ariaLabel
          ariaLabelSorting = this.localSortDesc ? this.labelSortDesc : this.labelSortAsc; // Handle sortDirection setting

          var sortDirection = this.sortDirection || field.sortDirection;

          if (sortDirection === 'asc') {
            ariaLabelSorting = this.labelSortAsc;
          } else if (sortDirection === 'desc') {
            ariaLabelSorting = this.labelSortDesc;
          }
        }
      } else if (!this.noSortReset) {
        // Non sortable column
        ariaLabelSorting = this.localSortBy ? this.labelSortClear : '';
      } // Assemble the aria-label attribute value


      ariaLabel = [ariaLabel.trim(), ariaLabelSorting.trim()].filter(Boolean).join(': '); // Assemble the aria-sort attribute value

      var ariaSort = sortable && this.localSortBy === key ? this.localSortDesc ? 'descending' : 'ascending' : sortable ? 'none' : null; // Return the attributes
      // (All the above just to get these two values)

      return {
        'aria-label': ariaLabel || null,
        'aria-sort': ariaSort
      };
    }
  }
};
exports.default = _default2;
},{"../../../utils/stable-sort":"node_modules/bootstrap-vue/esm/utils/stable-sort.js","../../../utils/startcase":"node_modules/bootstrap-vue/esm/utils/startcase.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./default-sort-compare":"node_modules/bootstrap-vue/esm/components/table/helpers/default-sort-compare.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-pagination.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  props: {
    perPage: {
      type: [Number, String],
      default: 0
    },
    currentPage: {
      type: [Number, String],
      default: 1
    }
  },
  computed: {
    localPaging: function localPaging() {
      return this.hasProvider ? !!this.noProviderPaging : true;
    },
    paginatedItems: function paginatedItems() {
      var items = this.sortedItems || this.filteredItems || this.localItems || [];
      var currentPage = Math.max(parseInt(this.currentPage, 10) || 1, 1);
      var perPage = Math.max(parseInt(this.perPage, 10) || 0, 0); // Apply local pagination

      if (this.localPaging && !!perPage) {
        // Grab the current page of data (which may be past filtered items limit)
        items = items.slice((currentPage - 1) * perPage, currentPage * perPage);
      } // Return the items to display in the table


      return items;
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-caption.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _html = require("../../../utils/html");

var _default = {
  props: {
    // `caption-top` is part of table-redere mixin (styling)
    // captionTop: {
    //   type: Boolean,
    //   default: false
    // },
    caption: {
      type: String,
      default: null
    },
    captionHtml: {
      type: String
    }
  },
  computed: {
    captionId: function captionId() {
      // Even though `this.safeId` looks like a method, it is a computed prop
      // that returns a new function if the underlying ID changes
      return this.isStacked ? this.safeId('_caption_') : null;
    }
  },
  methods: {
    renderCaption: function renderCaption() {
      var h = this.$createElement; // Build the caption

      var $captionSlot = this.normalizeSlot('table-caption');
      var $caption = h();

      if ($captionSlot || this.caption || this.captionHtml) {
        var data = {
          key: 'caption',
          attrs: {
            id: this.captionId
          }
        };

        if (!$captionSlot) {
          data.domProps = (0, _html.htmlOrText)(this.captionHtml, this.caption);
        }

        $caption = h('caption', data, [$captionSlot]);
      }

      return $caption;
    }
  }
};
exports.default = _default;
},{"../../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-colgroup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  methods: {
    renderColgroup: function renderColgroup() {
      var h = this.$createElement;
      var fields = this.computedFields;
      var $colgroup = h();

      if (this.hasNormalizedSlot('table-colgroup')) {
        $colgroup = h('colgroup', {
          key: 'colgroup'
        }, [this.normalizeSlot('table-colgroup', {
          columns: fields.length,
          fields: fields
        })]);
      }

      return $colgroup;
    }
  }
};
exports.default = _default;
},{}],"node_modules/bootstrap-vue/esm/components/table/helpers/filter-event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dom = require("../../../utils/dom");

var _constants = require("./constants");

var TABLE_TAG_NAMES = ['TD', 'TH', 'TR']; // Returns `true` if we should ignore the click/double-click/keypress event
// Avoids having the user need to use `@click.stop` on the form control

var filterEvent = function filterEvent(evt) {
  // Exit early when we don't have a target element
  if (!evt || !evt.target) {
    /* istanbul ignore next */
    return false;
  }

  var el = evt.target; // Exit early when element is disabled or a table element

  if (el.disabled || TABLE_TAG_NAMES.indexOf(el.tagName) !== -1) {
    return false;
  } // Ignore the click when it was inside a dropdown menu


  if ((0, _dom.closest)('.dropdown-menu', el)) {
    return true;
  }

  var label = el.tagName === 'LABEL' ? el : (0, _dom.closest)('label', el); // If the label's form control is not disabled then we don't propagate event
  // Modern browsers have `label.control` that references the associated input, but IE11
  // does not have this property on the label element, so we resort to DOM lookups

  if (label) {
    var labelFor = (0, _dom.getAttr)(label, 'for');
    var input = labelFor ? (0, _dom.getById)(labelFor) : (0, _dom.select)('input, select, textarea', label);

    if (input && !input.disabled) {
      return true;
    }
  } // Otherwise check if the event target matches one of the selectors in the
  // event filter (i.e. anchors, non disabled inputs, etc.)
  // Return `true` if we should ignore the event


  return (0, _dom.matches)(el, _constants.EVENT_FILTER);
};

var _default = filterEvent;
exports.default = _default;
},{"../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","./constants":"node_modules/bootstrap-vue/esm/components/table/helpers/constants.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/text-selection-active.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dom = require("../../../utils/dom");

// Helper to determine if a there is an active text selection on the document page
// Used to filter out click events caused by the mouse up at end of selection
//
// Accepts an element as only argument to test to see if selection overlaps or is
// contained within the element
var textSelectionActive = function textSelectionActive() {
  var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
  var sel = (0, _dom.getSel)();
  return sel && sel.toString().trim() !== '' && sel.containsNode && (0, _dom.isElement)(el) ? sel.containsNode(el, true) : false;
};

var _default = textSelectionActive;
exports.default = _default;
},{"../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js"}],"node_modules/bootstrap-vue/esm/components/table/thead.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BThead = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  headVariant: {
    // Also sniffed by <b-tr> / <b-td> / <b-th>
    type: String,
    // supported values: 'lite', 'dark', or null
    default: null
  }
}; // @vue/component

exports.props = props;

var BThead =
/*#__PURE__*/
_vue.default.extend({
  name: 'BThead',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  provide: function provide() {
    return {
      bvTableRowGroup: this
    };
  },
  inject: {
    bvTable: {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      default: function _default()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: props,
  computed: {
    isThead: function isThead() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return true;
    },
    isDark: function isDark() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.dark;
    },
    isStacked: function isStacked() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.isStacked;
    },
    isResponsive: function isResponsive() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.isResponsive;
    },
    isStickyHeader: function isStickyHeader() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      // Needed to handle header background classes, due to lack of
      // background color inheritance with Bootstrap v4 table CSS
      // Sticky headers only apply to cells in table `thead`
      return !this.isStacked && this.bvTable.stickyHeader;
    },
    tableVariant: function tableVariant() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.tableVariant;
    },
    theadClasses: function theadClasses() {
      return [this.headVariant ? "thead-".concat(this.headVariant) : null];
    },
    theadAttrs: function theadAttrs() {
      return _objectSpread({
        role: 'rowgroup'
      }, this.$attrs);
    }
  },
  render: function render(h) {
    return h('thead', {
      class: this.theadClasses,
      attrs: this.theadAttrs,
      // Pass down any native listeners
      on: this.$listeners
    }, this.normalizeSlot('default', {}));
  }
});

exports.BThead = BThead;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/table/tfoot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTfoot = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  footVariant: {
    type: String,
    // supported values: 'lite', 'dark', or null
    default: null
  }
}; // @vue/component

exports.props = props;

var BTfoot =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTfoot',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  provide: function provide() {
    return {
      bvTableRowGroup: this
    };
  },
  inject: {
    bvTable: {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      default: function _default()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: props,
  computed: {
    isTfoot: function isTfoot() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return true;
    },
    isDark: function isDark()
    /* istanbul ignore next: Not currently sniffed in tests */
    {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.dark;
    },
    isStacked: function isStacked() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.isStacked;
    },
    isResponsive: function isResponsive() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.isResponsive;
    },
    isStickyHeader: function isStickyHeader() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      // Sticky headers are only supported in thead
      return false;
    },
    tableVariant: function tableVariant()
    /* istanbul ignore next: Not currently sniffed in tests */
    {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.tableVariant;
    },
    tfootClasses: function tfootClasses() {
      return [this.footVariant ? "thead-".concat(this.footVariant) : null];
    },
    tfootAttrs: function tfootAttrs() {
      return _objectSpread({
        role: 'rowgroup'
      }, this.$attrs);
    }
  },
  render: function render(h) {
    return h('tfoot', {
      class: this.tfootClasses,
      attrs: this.tfootAttrs,
      // Pass down any native listeners
      on: this.$listeners
    }, this.normalizeSlot('default', {}));
  }
});

exports.BTfoot = BTfoot;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/table/tr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTr = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  variant: {
    type: String,
    default: null
  }
}; // @vue/component

exports.props = props;

var BTr =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTr',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  provide: function provide() {
    return {
      bvTableTr: this
    };
  },
  inject: {
    bvTableRowGroup: {
      defaut: function defaut()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: props,
  computed: {
    inTbody: function inTbody() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.isTbody;
    },
    inThead: function inThead() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.isThead;
    },
    inTfoot: function inTfoot() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.isTfoot;
    },
    isDark: function isDark() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.isDark;
    },
    isStacked: function isStacked() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.isStacked;
    },
    isResponsive: function isResponsive() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.isResponsive;
    },
    isStickyHeader: function isStickyHeader() {
      // Sniffed by <b-td> / <b-th>
      // Sticky headers are only supported in thead
      return this.bvTableRowGroup.isStickyHeader;
    },
    tableVariant: function tableVariant() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.tableVariant;
    },
    headVariant: function headVariant() {
      // Sniffed by <b-td> / <b-th>
      return this.bvTableRowGroup.headVariant;
    },
    trClasses: function trClasses() {
      return [this.variant ? "".concat(this.isDark ? 'bg' : 'table', "-").concat(this.variant) : null];
    },
    trAttrs: function trAttrs() {
      return _objectSpread({
        role: 'row'
      }, this.$attrs);
    }
  },
  render: function render(h) {
    return h('tr', {
      class: this.trClasses,
      attrs: this.trAttrs,
      // Pass native listeners to child
      on: this.$listeners
    }, this.normalizeSlot('default', {}));
  }
});

exports.BTr = BTr;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/table/td.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTd = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _toString = _interopRequireDefault(require("../../utils/to-string"));

var _inspect = require("../../utils/inspect");

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var digitsRx = /^\d+$/; // Parse a rowspan or colspan into a digit (or null if < 1 or NaN)

var parseSpan = function parseSpan(val) {
  val = parseInt(val, 10);
  return digitsRx.test(String(val)) && val > 0 ? val : null;
};
/* istanbul ignore next */


var spanValidator = function spanValidator(val) {
  return (0, _inspect.isUndefinedOrNull)(val) || parseSpan(val) > 0;
};

var props = {
  variant: {
    type: String,
    default: null
  },
  colspan: {
    type: [Number, String],
    default: null,
    validator: spanValidator
  },
  rowspan: {
    type: [Number, String],
    default: null,
    validator: spanValidator
  },
  stackedHeading: {
    type: String,
    default: null
  },
  stickyColumn: {
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BTd =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTableCell',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  inject: {
    bvTableTr: {
      default: function _default()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: props,
  computed: {
    tag: function tag() {
      // Overridden by <b-th>
      return 'td';
    },
    inTbody: function inTbody() {
      return this.bvTableTr.inTbody;
    },
    inThead: function inThead() {
      return this.bvTableTr.inThead;
    },
    inTfoot: function inTfoot() {
      return this.bvTableTr.inTfoot;
    },
    isDark: function isDark() {
      return this.bvTableTr.isDark;
    },
    isStacked: function isStacked() {
      return this.bvTableTr.isStacked;
    },
    isStackedCell: function isStackedCell() {
      // We only support stacked-heading in tbody in stacked mode
      return this.inTbody && this.isStacked;
    },
    isResponsive: function isResponsive() {
      return this.bvTableTr.isResponsive;
    },
    isStickyHeader: function isStickyHeader() {
      // Needed to handle header background classes, due to lack of
      // background color inheritance with Bootstrap v4 table CSS
      // Sticky headers only apply to cells in table `thead`
      return this.bvTableTr.isStickyHeader;
    },
    isStickyColumn: function isStickyColumn() {
      // Needed to handle header background classes, due to lack of
      // background color inheritance with Bootstrap v4 table CSS
      // Sticky column cells are only available in responsive
      // mode (horizontal scrolling) or when sticky header mode
      // Applies to cells in `thead`, `tbody` and `tfoot`
      return !this.isStacked && (this.isResponsive || this.isStickyHeader) && this.stickyColumn;
    },
    rowVariant: function rowVariant() {
      return this.bvTableTr.variant;
    },
    headVariant: function headVariant() {
      return this.bvTableTr.headVariant;
    },
    footVariant: function footVariant()
    /* istanbul ignore next: need to add in tests for footer variant */
    {
      return this.bvTableTr.footVariant;
    },
    tableVariant: function tableVariant() {
      return this.bvTableTr.tableVariant;
    },
    computedColspan: function computedColspan() {
      return parseSpan(this.colspan);
    },
    computedRowspan: function computedRowspan() {
      return parseSpan(this.rowspan);
    },
    cellClasses: function cellClasses() {
      // We use computed props here for improved performance by caching
      // the results of the string interpolation
      // TODO: need to add handling for footVariant
      var variant = this.variant;

      if (!variant && this.isStickyHeader && !this.headVariant || !variant && this.isStickyColumn) {
        // Needed for sticky-header mode as Bootstrap v4 table cells do
        // not inherit parent's background-color. Boo!
        variant = this.rowVariant || this.tableVariant || 'b-table-default';
      }

      return [variant ? "".concat(this.isDark ? 'bg' : 'table', "-").concat(variant) : null, this.isStickyColumn ? 'b-table-sticky-column' : null];
    },
    cellAttrs: function cellAttrs() {
      // We use computed props here for improved performance by caching
      // the results of the object spread (Object.assign)
      var headOrFoot = this.inThead || this.inTfoot; // Make sure col/rowspan's are > 0 or null

      var colspan = this.computedColspan;
      var rowspan = this.computedRowspan; // Default role and scope

      var role = 'cell';
      var scope = null; // Compute role and scope
      // We only add scopes with an explicit span of 1 or greater

      if (headOrFoot) {
        // Header or footer cells
        role = 'columnheader';
        scope = colspan > 0 ? 'colspan' : 'col';
      } else if (this.tag === 'th') {
        // th's in tbody
        role = 'rowheader';
        scope = rowspan > 0 ? 'rowgroup' : 'row';
      }

      return _objectSpread({
        colspan: colspan,
        rowspan: rowspan,
        role: role,
        scope: scope
      }, this.$attrs, {
        // Add in the stacked cell label data-attribute if in
        // stacked mode (if a stacked heading label is provided)
        'data-label': this.isStackedCell && !(0, _inspect.isUndefinedOrNull)(this.stackedHeading) ? (0, _toString.default)(this.stackedHeading) : null
      });
    }
  },
  render: function render(h) {
    var content = [this.normalizeSlot('default')];
    return h(this.tag, {
      class: this.cellClasses,
      attrs: this.cellAttrs,
      // Transfer any native listeners
      on: this.$listeners
    }, [this.isStackedCell ? h('div', [content]) : content]);
  }
});

exports.BTd = BTd;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/to-string":"node_modules/bootstrap-vue/esm/utils/to-string.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/table/th.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTh = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _td = require("./td");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @vue/component
var BTh =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTh',
  extends: _td.BTd,
  computed: {
    tag: function tag() {
      return 'th';
    }
  }
});

exports.BTh = BTh;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","./td":"node_modules/bootstrap-vue/esm/components/table/td.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _keyCodes = _interopRequireDefault(require("../../../utils/key-codes"));

var _startcase = _interopRequireDefault(require("../../../utils/startcase"));

var _config = require("../../../utils/config");

var _html = require("../../../utils/html");

var _filterEvent = _interopRequireDefault(require("./filter-event"));

var _textSelectionActive = _interopRequireDefault(require("./text-selection-active"));

var _thead = require("../thead");

var _tfoot = require("../tfoot");

var _tr = require("../tr");

var _th = require("../th");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _default2 = {
  props: {
    headVariant: {
      type: String,
      // 'light', 'dark' or null (or custom)
      default: function _default() {
        return (0, _config.getComponentConfig)('BTable', 'headVariant');
      }
    },
    theadClass: {
      type: [String, Array, Object] // default: undefined

    },
    theadTrClass: {
      type: [String, Array, Object] // default: undefined

    }
  },
  methods: {
    fieldClasses: function fieldClasses(field) {
      // Header field (<th>) classes
      return [field.class ? field.class : '', field.thClass ? field.thClass : ''];
    },
    headClicked: function headClicked(evt, field, isFoot) {
      if (this.stopIfBusy && this.stopIfBusy(evt)) {
        // If table is busy (via provider) then don't propagate
        return;
      } else if ((0, _filterEvent.default)(evt)) {
        // Clicked on a non-disabled control so ignore
        return;
      } else if ((0, _textSelectionActive.default)(this.$el)) {
        // User is selecting text, so ignore

        /* istanbul ignore next: JSDOM doesn't support getSelection() */
        return;
      }

      evt.stopPropagation();
      evt.preventDefault();
      this.$emit('head-clicked', field.key, field, evt, isFoot);
    },
    renderThead: function renderThead() {
      var _this = this;

      var isFoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var h = this.$createElement;
      var fields = this.computedFields || [];

      if (this.isStackedAlways || fields.length === 0) {
        // In always stacked mode, we don't bother rendering the head/foot.
        // Or if no field headings (empty table)
        return h();
      } // Refernce to `selectAllRows` and `clearSelected()`, if table is Selectable


      var selectAllRows = this.isSelectable ? this.selectAllRows : function () {};
      var clearSelected = this.isSelectable ? this.clearSelected : function () {}; // Helper function to generate a field <th> cell

      var makeCell = function makeCell(field, colIndex) {
        var ariaLabel = null;

        if (!field.label.trim() && !field.headerTitle) {
          // In case field's label and title are empty/blank
          // We need to add a hint about what the column is about for non-sighted users

          /* istanbul ignore next */
          ariaLabel = (0, _startcase.default)(field.key);
        }

        var hasHeadClickListener = _this.$listeners['head-clicked'] || _this.isSortable;
        var handlers = {};

        if (hasHeadClickListener) {
          handlers.click = function (evt) {
            _this.headClicked(evt, field, isFoot);
          };

          handlers.keydown = function (evt) {
            var keyCode = evt.keyCode;

            if (keyCode === _keyCodes.default.ENTER || keyCode === _keyCodes.default.SPACE) {
              _this.headClicked(evt, field, isFoot);
            }
          };
        }

        var sortAttrs = _this.isSortable ? _this.sortTheadThAttrs(field.key, field, isFoot) : {};
        var sortClass = _this.isSortable ? _this.sortTheadThClasses(field.key, field, isFoot) : null;
        var data = {
          key: field.key,
          class: [_this.fieldClasses(field), sortClass],
          props: {
            variant: field.variant,
            stickyColumn: field.stickyColumn
          },
          style: field.thStyle || {},
          attrs: _objectSpread({
            // We only add a tabindex of 0 if there is a head-clicked listener
            tabindex: hasHeadClickListener ? '0' : null,
            abbr: field.headerAbbr || null,
            title: field.headerTitle || null,
            'aria-colindex': String(colIndex + 1),
            'aria-label': ariaLabel
          }, _this.getThValues(null, field.key, field.thAttr, isFoot ? 'foot' : 'head', {}), {}, sortAttrs),
          on: handlers
        }; // Handle edge case where in-document templates are used with new
        // `v-slot:name` syntax where the browser lower-cases the v-slot's
        // name (attributes become lower cased when parsed by the browser)
        // We have replaced the square bracket syntax with round brackets
        // to prevent confusion with dynamic slot names

        var slotNames = ["head(".concat(field.key, ")"), "head(".concat(field.key.toLowerCase(), ")"), 'head()'];

        if (isFoot) {
          // Footer will fallback to header slot names
          slotNames = ["foot(".concat(field.key, ")"), "foot(".concat(field.key.toLowerCase(), ")"), 'foot()'].concat(_toConsumableArray(slotNames));
        }

        var hasSlot = _this.hasNormalizedSlot(slotNames);

        var slot = field.label;

        if (hasSlot) {
          slot = _this.normalizeSlot(slotNames, {
            label: field.label,
            column: field.key,
            field: field,
            isFoot: isFoot,
            // Add in row select methods
            selectAllRows: selectAllRows,
            clearSelected: clearSelected
          });
        } else {
          data.domProps = (0, _html.htmlOrText)(field.labelHtml);
        }

        return h(_th.BTh, data, slot);
      }; // Generate the array of <th> cells


      var $cells = fields.map(makeCell).filter(function (th) {
        return th;
      }); // Genrate the row(s)

      var $trs = [];

      if (isFoot) {
        $trs.push(h(_tr.BTr, {
          class: this.tfootTrClass
        }, $cells));
      } else {
        var scope = {
          columns: fields.length,
          fields: fields,
          // Add in row select methods
          selectAllRows: selectAllRows,
          clearSelected: clearSelected
        };
        $trs.push(this.normalizeSlot('thead-top', scope) || h());
        $trs.push(h(_tr.BTr, {
          class: this.theadTrClass
        }, $cells));
      }

      return h(isFoot ? _tfoot.BTfoot : _thead.BThead, {
        key: isFoot ? 'bv-tfoot' : 'bv-thead',
        class: (isFoot ? this.tfootClass : this.theadClass) || null,
        props: isFoot ? {
          footVariant: this.footVariant || this.headVariant || null
        } : {
          headVariant: this.headVariant || null
        }
      }, $trs);
    }
  }
};
exports.default = _default2;
},{"../../../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../../../utils/startcase":"node_modules/bootstrap-vue/esm/utils/startcase.js","../../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","./filter-event":"node_modules/bootstrap-vue/esm/components/table/helpers/filter-event.js","./text-selection-active":"node_modules/bootstrap-vue/esm/components/table/helpers/text-selection-active.js","../thead":"node_modules/bootstrap-vue/esm/components/table/thead.js","../tfoot":"node_modules/bootstrap-vue/esm/components/table/tfoot.js","../tr":"node_modules/bootstrap-vue/esm/components/table/tr.js","../th":"node_modules/bootstrap-vue/esm/components/table/th.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tfoot.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _config = require("../../../utils/config");

var _tfoot = require("../tfoot");

var _default2 = {
  props: {
    footClone: {
      type: Boolean,
      default: false
    },
    footVariant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)('BTable', 'footVariant');
      }
    },
    tfootClass: {
      type: [String, Array, Object],
      default: null
    },
    tfootTrClass: {
      type: [String, Array, Object],
      default: null
    }
  },
  methods: {
    renderTFootCustom: function renderTFootCustom() {
      var h = this.$createElement;

      if (this.hasNormalizedSlot('custom-foot')) {
        return h(_tfoot.BTfoot, {
          key: 'bv-tfoot-custom',
          class: this.tfootClass || null,
          props: {
            footVariant: this.footVariant || this.headVariant || null
          }
        }, this.normalizeSlot('custom-foot', {
          items: this.computedItems.slice(),
          fields: this.computedFields.slice(),
          columns: this.computedFields.length
        }));
      } else {
        return h();
      }
    },
    renderTfoot: function renderTfoot() {
      // Passing true to renderThead will make it render a tfoot
      return this.footClone ? this.renderThead(true) : this.renderTFootCustom();
    }
  }
};
exports.default = _default2;
},{"../../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../tfoot":"node_modules/bootstrap-vue/esm/components/table/tfoot.js"}],"node_modules/bootstrap-vue/esm/components/table/tbody.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTbody = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = {
  tbodyTransitionProps: {
    type: Object // default: undefined

  },
  tbodyTransitionHandlers: {
    type: Object // default: undefined

  }
}; // @vue/component

exports.props = props;

var BTbody =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTbody',
  mixins: [_normalizeSlot.default],
  inheritAttrs: false,
  provide: function provide() {
    return {
      bvTableRowGroup: this
    };
  },
  inject: {
    bvTable: {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      default: function _default()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: props,
  computed: {
    isTbody: function isTbody() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return true;
    },
    isDark: function isDark() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.dark;
    },
    isStacked: function isStacked() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.isStacked;
    },
    isResponsive: function isResponsive() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.isResponsive;
    },
    isStickyHeader: function isStickyHeader() {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      // Sticky headers are only supported in thead
      return false;
    },
    tableVariant: function tableVariant()
    /* istanbul ignore next: Not currently sniffed in tests */
    {
      // Sniffed by <b-tr> / <b-td> / <b-th>
      return this.bvTable.tableVariant;
    },
    isTransitionGroup: function isTransitionGroup() {
      return this.tbodyTransitionProps || this.tbodyTransitionHandlers;
    },
    tbodyAttrs: function tbodyAttrs() {
      return _objectSpread({
        role: 'rowgroup'
      }, this.$attrs);
    },
    tbodyProps: function tbodyProps() {
      return this.tbodyTransitionProps ? _objectSpread({}, this.tbodyTransitionProps, {
        tag: 'tbody'
      }) : {};
    },
    tbodyListeners: function tbodyListeners() {
      var handlers = this.tbodyTransitionHandlers || {};
      return _objectSpread({}, this.$listeners, {}, handlers);
    }
  },
  render: function render(h) {
    return h(this.isTransitionGroup ? 'transition-group' : 'tbody', {
      props: this.tbodyProps,
      attrs: this.tbodyAttrs,
      // Pass down any listeners
      on: this.tbodyListeners
    }, this.normalizeSlot('default', {}));
  }
});

exports.BTbody = BTbody;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody-row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _get = _interopRequireDefault(require("../../../utils/get"));

var _toString = _interopRequireDefault(require("../../../utils/to-string"));

var _inspect = require("../../../utils/inspect");

var _tr = require("../tr");

var _td = require("../td");

var _th = require("../th");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var detailsSlotName = 'row-details';
var _default = {
  props: {
    tbodyTrClass: {
      type: [String, Array, Function],
      default: null
    }
  },
  methods: {
    // Methods for computing classes, attributes and styles for table cells
    getTdValues: function getTdValues(item, key, tdValue, defValue) {
      var parent = this.$parent;

      if (tdValue) {
        var value = (0, _get.default)(item, key, '');

        if ((0, _inspect.isFunction)(tdValue)) {
          return tdValue(value, key, item);
        } else if ((0, _inspect.isString)(tdValue) && (0, _inspect.isFunction)(parent[tdValue])) {
          return parent[tdValue](value, key, item);
        }

        return tdValue;
      }

      return defValue;
    },
    getThValues: function getThValues(item, key, thValue, type, defValue) {
      var parent = this.$parent;

      if (thValue) {
        var value = (0, _get.default)(item, key, '');

        if ((0, _inspect.isFunction)(thValue)) {
          return thValue(value, key, item, type);
        } else if ((0, _inspect.isString)(thValue) && (0, _inspect.isFunction)(parent[thValue])) {
          return parent[thValue](value, key, item, type);
        }

        return thValue;
      }

      return defValue;
    },
    // Method to get the value for a field
    getFormattedValue: function getFormattedValue(item, field) {
      var key = field.key;
      var formatter = this.getFieldFormatter(key);
      var value = (0, _get.default)(item, key, null);

      if ((0, _inspect.isFunction)(formatter)) {
        value = formatter(value, key, item);
      }

      return (0, _inspect.isUndefinedOrNull)(value) ? '' : value;
    },
    // Factory function methods
    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {
      var _this = this; // Returns a function to toggle a row's details slot


      return function () {
        if (hasDetailsSlot) {
          _this.$set(item, '_showDetails', !item._showDetails);
        }
      };
    },
    // Row event handlers
    rowHovered: function rowHovered(evt) {
      // `mouseenter` handler (non-bubbling)
      // `this.tbodyRowEvtStopped` from tbody mixin
      if (!this.tbodyRowEvtStopped(evt)) {
        // `this.emitTbodyRowEvent` from tbody mixin
        this.emitTbodyRowEvent('row-hovered', evt);
      }
    },
    rowUnhovered: function rowUnhovered(evt) {
      // `mouseleave` handler (non-bubbling)
      // `this.tbodyRowEvtStopped` from tbody mixin
      if (!this.tbodyRowEvtStopped(evt)) {
        // `this.emitTbodyRowEvent` from tbody mixin
        this.emitTbodyRowEvent('row-unhovered', evt);
      }
    },
    // Render helpers
    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {
      // Renders a TD or TH for a row's field
      var h = this.$createElement;
      var hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName);
      var formatted = this.getFormattedValue(item, field);
      var key = field.key; // We only uses the helper components for sticky columns to
      // improve performance of BTable/BTableLite by reducing the
      // total number of vue instances created during render

      var cellTag = field.stickyColumn ? field.isRowHeader ? _th.BTh : _td.BTd : field.isRowHeader ? 'th' : 'td';
      var cellVariant = item._cellVariants && item._cellVariants[key] ? item._cellVariants[key] : field.variant || null;
      var data = {
        // For the Vue key, we concatenate the column index and
        // field key (as field keys could be duplicated)
        // TODO: Although we do prevent duplicate field keys...
        //   So we could change this to: `row-${rowIndex}-cell-${key}`
        key: "row-".concat(rowIndex, "-cell-").concat(colIndex, "-").concat(key),
        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],
        props: {},
        attrs: _objectSpread({
          'aria-colindex': String(colIndex + 1)
        }, field.isRowHeader ? this.getThValues(item, key, field.thAttr, 'row', {}) : this.getTdValues(item, key, field.tdAttr, {}))
      };

      if (field.stickyColumn) {
        // We are using the helper BTd or BTh
        data.props = {
          stackedHeading: this.isStacked ? field.label : null,
          stickyColumn: field.stickyColumn,
          variant: cellVariant
        };
      } else {
        // Using native TD or TH element, so we need to
        // add in the attributes and variant class
        data.attrs['data-label'] = this.isStacked && !(0, _inspect.isUndefinedOrNull)(field.label) ? (0, _toString.default)(field.label) : null;
        data.attrs.role = field.isRowHeader ? 'rowheader' : 'cell';
        data.attrs.scope = field.isRowHeader ? 'row' : null; // Add in the variant class

        if (cellVariant) {
          data.class.push("".concat(this.dark ? 'bg' : 'table', "-").concat(cellVariant));
        }
      }

      var slotScope = {
        item: item,
        index: rowIndex,
        field: field,
        unformatted: (0, _get.default)(item, key, ''),
        value: formatted,
        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),
        detailsShowing: Boolean(item._showDetails)
      };

      if (this.selectedRows) {
        // Add in rowSelected scope property if selectable rows supported
        slotScope.rowSelected = this.isRowSelected(rowIndex);
      } // The new `v-slot` syntax doesn't like a slot name starting with
      // a square bracket and if using in-document HTML templates, the
      // v-slot attributes are lower-cased by the browser.
      // Switched to round bracket syntax to prevent confusion with
      // dynamic slot name syntax.
      // We look for slots in this order: `cell(${key})`, `cell(${key.toLowerCase()})`, 'cell()'
      // Slot names are now cached by mixin tbody in `this.$_bodyFieldSlotNameCache`
      // Will be `null` if no slot (or fallback slot) exists


      var slotName = this.$_bodyFieldSlotNameCache[key];
      var $childNodes = slotName ? this.normalizeSlot(slotName, slotScope) : (0, _toString.default)(formatted);

      if (this.isStacked) {
        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!
        $childNodes = [h('div', {}, [$childNodes])];
      } // Render either a td or th cell


      return h(cellTag, data, [$childNodes]);
    },
    renderTbodyRow: function renderTbodyRow(item, rowIndex) {
      var _this2 = this; // Renders an item's row (or rows if details supported)


      var h = this.$createElement;
      var fields = this.computedFields;
      var tableStriped = this.striped;
      var hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName);
      var rowShowDetails = Boolean(item._showDetails && hasDetailsSlot);
      var hasRowClickHandler = this.$listeners['row-clicked'] || this.isSelectable; // We can return more than one TR if rowDetails enabled

      var $rows = []; // Details ID needed for `aria-details` when details showing
      // We set it to `null` when not showing so that attribute
      // does not appear on the element

      var detailsId = rowShowDetails ? this.safeId("_details_".concat(rowIndex, "_")) : null; // For each item data field in row

      var $tds = fields.map(function (field, colIndex) {
        return _this2.renderTbodyRowCell(field, colIndex, item, rowIndex);
      }); // Calculate the row number in the dataset (indexed from 1)

      var ariaRowIndex = null;

      if (this.currentPage && this.perPage && this.perPage > 0) {
        ariaRowIndex = String((this.currentPage - 1) * this.perPage + rowIndex + 1);
      } // Create a unique :key to help ensure that sub components are re-rendered rather than
      // re-used, which can cause issues. If a primary key is not provided we use the rendered
      // rows index within the tbody.
      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410


      var primaryKey = this.primaryKey;
      var hasPkValue = primaryKey && !(0, _inspect.isUndefinedOrNull)(item[primaryKey]);
      var rowKey = hasPkValue ? (0, _toString.default)(item[primaryKey]) : String(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr
      // In the format of '{tableId}__row_{primaryKeyValue}'

      var rowId = hasPkValue ? this.safeId("_row_".concat(item[primaryKey])) : null; // Selectable classes and attributes

      var selectableClasses = this.selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};
      var selectableAttrs = this.selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Add the item row

      $rows.push(h(_tr.BTr, {
        key: "__b-table-row-".concat(rowKey, "__"),
        ref: 'itemRows',
        refInFor: true,
        class: [(0, _inspect.isFunction)(this.tbodyTrClass) ? this.tbodyTrClass(item, 'row') : this.tbodyTrClass, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],
        props: {
          variant: item._rowVariant || null
        },
        attrs: _objectSpread({
          id: rowId,
          tabindex: hasRowClickHandler ? '0' : null,
          'data-pk': rowId ? String(item[primaryKey]) : null,
          // Should this be `aria-details` instead?
          'aria-details': detailsId,
          'aria-owns': detailsId,
          'aria-rowindex': ariaRowIndex
        }, selectableAttrs),
        on: {
          // Note: These events are not A11Y friendly!
          mouseenter: this.rowHovered,
          mouseleave: this.rowUnhovered
        }
      }, $tds)); // Row Details slot

      if (rowShowDetails) {
        var detailsScope = {
          item: item,
          index: rowIndex,
          fields: fields,
          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item)
        }; // Render the details slot in a TD

        var $details = h(_td.BTd, {
          props: {
            colspan: fields.length
          }
        }, [this.normalizeSlot(detailsSlotName, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing

        if (tableStriped) {
          $rows.push( // We don't use `BTr` here as we dont need the extra functionality
          h('tr', {
            key: "__b-table-details-stripe__".concat(rowKey),
            staticClass: 'd-none',
            attrs: {
              'aria-hidden': 'true',
              role: 'presentation'
            }
          }));
        } // Add the actual details row


        $rows.push(h(_tr.BTr, {
          key: "__b-table-details__".concat(rowKey),
          staticClass: 'b-table-details',
          class: [(0, _inspect.isFunction)(this.tbodyTrClass) ? this.tbodyTrClass(item, detailsSlotName) : this.tbodyTrClass],
          props: {
            variant: item._rowVariant || null
          },
          attrs: {
            id: detailsId,
            tabindex: '-1'
          }
        }, [$details]));
      } else if (hasDetailsSlot) {
        // Only add the placeholder if a the table has a row-details slot defined (but not shown)
        $rows.push(h());

        if (tableStriped) {
          // Add extra placeholder if table is striped
          $rows.push(h());
        }
      } // Return the row(s)


      return $rows;
    }
  }
};
exports.default = _default;
},{"../../../utils/get":"node_modules/bootstrap-vue/esm/utils/get.js","../../../utils/to-string":"node_modules/bootstrap-vue/esm/utils/to-string.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../tr":"node_modules/bootstrap-vue/esm/components/table/tr.js","../td":"node_modules/bootstrap-vue/esm/components/table/td.js","../th":"node_modules/bootstrap-vue/esm/components/table/th.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _keyCodes = _interopRequireDefault(require("../../../utils/key-codes"));

var _array = require("../../../utils/array");

var _dom = require("../../../utils/dom");

var _tbody = require("../tbody");

var _filterEvent = _interopRequireDefault(require("./filter-event"));

var _textSelectionActive = _interopRequireDefault(require("./text-selection-active"));

var _mixinTbodyRow = _interopRequireDefault(require("./mixin-tbody-row"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var props = _objectSpread({}, _tbody.props, {
  tbodyClass: {
    type: [String, Array, Object] // default: undefined

  }
});

var _default = {
  mixins: [_mixinTbodyRow.default],
  props: props,
  methods: {
    // Helper methods
    getTbodyTrs: function getTbodyTrs() {
      // Returns all the item TR elements (excludes detail and spacer rows)
      // `this.$refs.itemRows` is an array of item TR components/elements
      // Rows should all be B-TR components, but we map to TR elements
      // TODO: This may take time for tables many rows, so we may want to cache
      //       the result of this during each render cycle on a non-reactive
      //       property. We clear out the cache as each render starts, and
      //       populate it on first access of this method if null
      return (this.$refs.itemRows || []).map(function (tr) {
        return tr.$el || tr;
      });
    },
    getTbodyTrIndex: function getTbodyTrIndex(el) {
      // Returns index of a particular TBODY item TR
      // We set `true` on closest to include self in result

      /* istanbul ignore next: should not normally happen */
      if (!(0, _dom.isElement)(el)) {
        return -1;
      }

      var tr = el.tagName === 'TR' ? el : (0, _dom.closest)('tr', el, true);
      return tr ? this.getTbodyTrs().indexOf(tr) : -1;
    },
    emitTbodyRowEvent: function emitTbodyRowEvent(type, evt) {
      // Emits a row event, with the item object, row index and original event
      if (type && evt && evt.target) {
        var rowIndex = this.getTbodyTrIndex(evt.target);

        if (rowIndex > -1) {
          // The array of TRs correlate to the `computedItems` array
          var item = this.computedItems[rowIndex];
          this.$emit(type, item, rowIndex, evt);
        }
      }
    },
    tbodyRowEvtStopped: function tbodyRowEvtStopped(evt) {
      return this.stopIfBusy && this.stopIfBusy(evt);
    },
    // Delegated row event handlers
    onTbodyRowKeydown: function onTbodyRowKeydown(evt) {
      // Keyboard navigation and row click emulation
      var target = evt.target;

      if (this.tbodyRowEvtStopped(evt) || target.tagName !== 'TR' || target !== document.activeElement || target.tabIndex !== 0) {
        // Early exit if not an item row TR
        return;
      }

      var keyCode = evt.keyCode;

      if ((0, _array.arrayIncludes)([_keyCodes.default.ENTER, _keyCodes.default.SPACE], keyCode)) {
        // Emulated click for keyboard users, transfer to click handler
        evt.stopPropagation();
        evt.preventDefault();
        this.onTBodyRowClicked(evt);
      } else if ((0, _array.arrayIncludes)([_keyCodes.default.UP, _keyCodes.default.DOWN, _keyCodes.default.HOME, _keyCodes.default.END], keyCode)) {
        // Keyboard navigation
        var rowIndex = this.getTbodyTrIndex(target);

        if (rowIndex > -1) {
          evt.stopPropagation();
          evt.preventDefault();
          var trs = this.getTbodyTrs();
          var shift = evt.shiftKey;

          if (keyCode === _keyCodes.default.HOME || shift && keyCode === _keyCodes.default.UP) {
            // Focus first row
            trs[0].focus();
          } else if (keyCode === _keyCodes.default.END || shift && keyCode === _keyCodes.default.DOWN) {
            // Focus last row
            trs[trs.length - 1].focus();
          } else if (keyCode === _keyCodes.default.UP && rowIndex > 0) {
            // Focus previous row
            trs[rowIndex - 1].focus();
          } else if (keyCode === _keyCodes.default.DOWN && rowIndex < trs.length - 1) {
            // Focus next row
            trs[rowIndex + 1].focus();
          }
        }
      }
    },
    onTBodyRowClicked: function onTBodyRowClicked(evt) {
      if (this.tbodyRowEvtStopped(evt)) {
        // If table is busy, then don't propagate
        return;
      } else if ((0, _filterEvent.default)(evt) || (0, _textSelectionActive.default)(this.$el)) {
        // Clicked on a non-disabled control so ignore
        // Or user is selecting text, so ignore
        return;
      }

      this.emitTbodyRowEvent('row-clicked', evt);
    },
    onTbodyRowMiddleMouseRowClicked: function onTbodyRowMiddleMouseRowClicked(evt) {
      if (!this.tbodyRowEvtStopped(evt) && evt.which === 2) {
        this.emitTbodyRowEvent('row-middle-clicked', evt);
      }
    },
    onTbodyRowContextmenu: function onTbodyRowContextmenu(evt) {
      if (!this.tbodyRowEvtStopped(evt)) {
        this.emitTbodyRowEvent('row-contextmenu', evt);
      }
    },
    onTbodyRowDblClicked: function onTbodyRowDblClicked(evt) {
      if (!this.tbodyRowEvtStopped(evt) && !(0, _filterEvent.default)(evt)) {
        this.emitTbodyRowEvent('row-dblclicked', evt);
      }
    },
    // Note: Row hover handlers are handled by the tbody-row mixin
    // As mouseenter/mouseleave events do not bubble
    //
    // Render Helper
    renderTbody: function renderTbody() {
      var _this = this; // Render the tbody element and children


      var items = this.computedItems; // Shortcut to `createElement` (could use `this._c()` instead)

      var h = this.$createElement;
      var hasRowClickHandler = this.$listeners['row-clicked'] || this.isSelectable; // Prepare the tbody rows

      var $rows = []; // Add the item data rows or the busy slot

      var $busy = this.renderBusy ? this.renderBusy() : null;

      if ($busy) {
        // If table is busy and a busy slot, then return only the busy "row" indicator
        $rows.push($busy);
      } else {
        // Table isn't busy, or we don't have a busy slot
        // Create a slot cache for improved performance when looking up cell slot names
        // Values will be keyed by the field's `key` and will store the slot's name
        // Slots could be dynamic (i.e. `v-if`), so we must compute on each render
        // Used by tbody-row mixin render helper
        var cache = {};
        var defaultSlotName = this.hasNormalizedSlot('cell()') ? 'cell()' : null;
        this.computedFields.forEach(function (field) {
          var key = field.key;
          var fullName = "cell(".concat(key, ")");
          var lowerName = "cell(".concat(key.toLowerCase(), ")");
          cache[key] = _this.hasNormalizedSlot(fullName) ? fullName : _this.hasNormalizedSlot(lowerName) ? lowerName : defaultSlotName;
        }); // Created as a non-reactive property so to not trigger component updates
        // Must be a fresh object each render

        this.$_bodyFieldSlotNameCache = cache; // Add static top row slot (hidden in visibly stacked mode
        // as we can't control `data-label` attr)

        $rows.push(this.renderTopRow ? this.renderTopRow() : h()); // Render the rows

        items.forEach(function (item, rowIndex) {
          // Render the individual item row (rows if details slot)
          $rows.push(_this.renderTbodyRow(item, rowIndex));
        }); // Empty items / empty filtered row slot (only shows if `items.length < 1`)

        $rows.push(this.renderEmpty ? this.renderEmpty() : h()); // Static bottom row slot (hidden in visibly stacked mode
        // as we can't control `data-label` attr)

        $rows.push(this.renderBottomRow ? this.renderBottomRow() : h());
      }

      var handlers = {
        // TODO: We may want to to only instantiate these handlers
        //       if there is an event listener registered
        auxclick: this.onTbodyRowMiddleMouseRowClicked,
        // TODO: Perhaps we do want to automatically prevent the
        //       default context menu from showing if there is
        //       a `row-contextmenu` listener registered.
        contextmenu: this.onTbodyRowContextmenu,
        // The following event(s) is not considered A11Y friendly
        dblclick: this.onTbodyRowDblClicked // hover events (mouseenter/mouseleave) ad handled by tbody-row mixin

      };

      if (hasRowClickHandler) {
        handlers.click = this.onTBodyRowClicked;
        handlers.keydown = this.onTbodyRowKeydown;
      } // Assemble rows into the tbody


      var $tbody = h(_tbody.BTbody, {
        ref: 'tbody',
        class: this.tbodyClass || null,
        props: {
          tbodyTransitionProps: this.tbodyTransitionProps,
          tbodyTransitionHandlers: this.tbodyTransitionHandlers
        },
        // BTbody transfers all native event listeners to the root element
        // TODO: Only set the handlers if the table is not busy
        on: handlers
      }, $rows); // Return the assembled tbody

      return $tbody;
    }
  }
};
exports.default = _default;
},{"../../../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../tbody":"node_modules/bootstrap-vue/esm/components/table/tbody.js","./filter-event":"node_modules/bootstrap-vue/esm/components/table/helpers/filter-event.js","./text-selection-active":"node_modules/bootstrap-vue/esm/components/table/helpers/text-selection-active.js","./mixin-tbody-row":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody-row.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _html = require("../../../utils/html");

var _inspect = require("../../../utils/inspect");

var _tr = require("../tr");

var _td = require("../td");

var _default = {
  props: {
    showEmpty: {
      type: Boolean,
      default: false
    },
    emptyText: {
      type: String,
      default: 'There are no records to show'
    },
    emptyHtml: {
      type: String
    },
    emptyFilteredText: {
      type: String,
      default: 'There are no records matching your request'
    },
    emptyFilteredHtml: {
      type: String
    }
  },
  methods: {
    renderEmpty: function renderEmpty() {
      var h = this.$createElement;
      var items = this.computedItems;
      var $empty;

      if (this.showEmpty && (!items || items.length === 0) && !(this.computedBusy && this.hasNormalizedSlot('table-busy'))) {
        $empty = this.normalizeSlot(this.isFiltered ? 'emptyfiltered' : 'empty', {
          emptyFilteredHtml: this.emptyFilteredHtml,
          emptyFilteredText: this.emptyFilteredText,
          emptyHtml: this.emptyHtml,
          emptyText: this.emptyText,
          fields: this.computedFields,
          // Not sure why this is included, as it will always be an empty array
          items: this.computedItems
        });

        if (!$empty) {
          $empty = h('div', {
            class: ['text-center', 'my-2'],
            domProps: this.isFiltered ? (0, _html.htmlOrText)(this.emptyFilteredHtml, this.emptyFilteredText) : (0, _html.htmlOrText)(this.emptyHtml, this.emptyText)
          });
        }

        $empty = h(_td.BTd, {
          props: {
            colspan: this.computedFields.length || null
          }
        }, [h('div', {
          attrs: {
            role: 'alert',
            'aria-live': 'polite'
          }
        }, [$empty])]);
        $empty = h(_tr.BTr, {
          key: this.isFiltered ? 'b-empty-filtered-row' : 'b-empty-row',
          staticClass: 'b-table-empty-row',
          class: [(0, _inspect.isFunction)(this.tbodyTrClass) ? this.tbodyTrClass(null, 'row-empty') : this.tbodyTrClass]
        }, [$empty]);
      }

      return $empty || h();
    }
  }
};
exports.default = _default;
},{"../../../utils/html":"node_modules/bootstrap-vue/esm/utils/html.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../tr":"node_modules/bootstrap-vue/esm/components/table/tr.js","../td":"node_modules/bootstrap-vue/esm/components/table/td.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-top-row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../../../utils/inspect");

var _tr = require("../tr");

var slotName = 'top-row';
var _default = {
  methods: {
    renderTopRow: function renderTopRow() {
      var h = this.$createElement; // Add static Top Row slot (hidden in visibly stacked mode as we can't control the data-label)
      // If in *always* stacked mode, we don't bother rendering the row

      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {
        return h();
      }

      var fields = this.computedFields;
      return h(_tr.BTr, {
        key: 'b-top-row',
        staticClass: 'b-table-top-row',
        class: [(0, _inspect.isFunction)(this.tbodyTrClass) ? this.tbodyTrClass(null, 'row-top') : this.tbodyTrClass]
      }, [this.normalizeSlot(slotName, {
        columns: fields.length,
        fields: fields
      })]);
    }
  }
};
exports.default = _default;
},{"../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../tr":"node_modules/bootstrap-vue/esm/components/table/tr.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../../../utils/inspect");

var _tr = require("../tr");

var slotName = 'bottom-row';
var _default = {
  methods: {
    renderBottomRow: function renderBottomRow() {
      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)
      // If in *always* stacked mode, we don't bother rendering the row

      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {
        return h();
      }

      var fields = this.computedFields;
      return h(_tr.BTr, {
        key: 'b-bottom-row',
        staticClass: 'b-table-bottom-row',
        class: [(0, _inspect.isFunction)(this.tbodyTrClass) ? this.tbodyTrClass(null, 'row-bottom') : this.tbodyTrClass]
      }, this.normalizeSlot(slotName, {
        columns: fields.length,
        fields: fields
      }));
    }
  }
};
exports.default = _default;
},{"../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../tr":"node_modules/bootstrap-vue/esm/components/table/tr.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-busy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../../../utils/inspect");

var _tr = require("../tr");

var _td = require("../td");

var busySlotName = 'table-busy';
var _default = {
  props: {
    busy: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      localBusy: false
    };
  },
  computed: {
    computedBusy: function computedBusy() {
      return this.busy || this.localBusy;
    }
  },
  watch: {
    localBusy: function localBusy(newVal, oldVal) {
      if (newVal !== oldVal) {
        this.$emit('update:busy', newVal);
      }
    }
  },
  methods: {
    // Event handler helper
    stopIfBusy: function stopIfBusy(evt) {
      if (this.computedBusy) {
        // If table is busy (via provider) then don't propagate
        evt.preventDefault();
        evt.stopPropagation();
        return true;
      }

      return false;
    },
    // Render the busy indicator or return `null` if not busy
    renderBusy: function renderBusy() {
      var h = this.$createElement; // Return a busy indicator row, or `null` if not busy

      if (this.computedBusy && this.hasNormalizedSlot(busySlotName)) {
        // Show the busy slot
        return h(_tr.BTr, {
          key: 'table-busy-slot',
          staticClass: 'b-table-busy-slot',
          class: [(0, _inspect.isFunction)(this.tbodyTrClass) ? this.tbodyTrClass(null, busySlotName) : this.tbodyTrClass]
        }, [h(_td.BTd, {
          props: {
            colspan: this.computedFields.length || null
          }
        }, [this.normalizeSlot(busySlotName)])]);
      } else {
        // We return `null` here so that we can determine if we need to
        // render the table items rows or not
        return null;
      }
    }
  }
};
exports.default = _default;
},{"../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../tr":"node_modules/bootstrap-vue/esm/components/table/tr.js","../td":"node_modules/bootstrap-vue/esm/components/table/td.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-selectable.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _looseEqual = _interopRequireDefault(require("../../../utils/loose-equal"));

var _range = _interopRequireDefault(require("../../../utils/range"));

var _array = require("../../../utils/array");

var _config = require("../../../utils/config");

var _inspect = require("../../../utils/inspect");

var _sanitizeRow = _interopRequireDefault(require("./sanitize-row"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _default2 = {
  props: {
    selectable: {
      type: Boolean,
      default: false
    },
    selectMode: {
      type: String,
      default: 'multi',
      validator: function validator(val) {
        return (0, _array.arrayIncludes)(['range', 'multi', 'single'], val);
      }
    },
    selectedVariant: {
      type: String,
      default: function _default() {
        return (0, _config.getComponentConfig)('BTable', 'selectedVariant');
      }
    }
  },
  data: function data() {
    return {
      selectedRows: [],
      selectedLastRow: -1
    };
  },
  computed: {
    isSelectable: function isSelectable() {
      return this.selectable && this.selectMode;
    },
    selectableHasSelection: function selectableHasSelection() {
      return this.isSelectable && this.selectedRows && this.selectedRows.length > 0 && this.selectedRows.some(Boolean);
    },
    selectableIsMultiSelect: function selectableIsMultiSelect() {
      return this.isSelectable && (0, _array.arrayIncludes)(['range', 'multi'], this.selectMode);
    },
    selectableTableClasses: function selectableTableClasses() {
      var _ref;

      return _ref = {
        'b-table-selectable': this.isSelectable
      }, _defineProperty(_ref, "b-table-select-".concat(this.selectMode), this.isSelectable), _defineProperty(_ref, 'b-table-selecting', this.selectableHasSelection), _ref;
    },
    selectableTableAttrs: function selectableTableAttrs() {
      return {
        'aria-multiselectable': !this.isSelectable ? null : this.selectableIsMultiSelect ? 'true' : 'false'
      };
    }
  },
  watch: {
    computedItems: function computedItems(newVal, oldVal) {
      // Reset for selectable
      var equal = false;

      if (this.isSelectable && this.selectedRows.length > 0) {
        // Quick check against array length
        equal = (0, _array.isArray)(newVal) && (0, _array.isArray)(oldVal) && newVal.length === oldVal.length;

        for (var i = 0; equal && i < newVal.length; i++) {
          // Look for the first non-loosely equal row, after ignoring reserved fields
          equal = (0, _looseEqual.default)((0, _sanitizeRow.default)(newVal[i]), (0, _sanitizeRow.default)(oldVal[i]));
        }
      }

      if (!equal) {
        this.clearSelected();
      }
    },
    selectable: function selectable(newVal, oldVal) {
      this.clearSelected();
      this.setSelectionHandlers(newVal);
    },
    selectMode: function selectMode(newVal, oldVal) {
      this.clearSelected();
    },
    selectedRows: function selectedRows(_selectedRows, oldVal) {
      var _this = this;

      if (this.isSelectable && !(0, _looseEqual.default)(_selectedRows, oldVal)) {
        var items = []; // `.forEach()` skips over non-existent indices (on sparse arrays)

        _selectedRows.forEach(function (v, idx) {
          if (v) {
            items.push(_this.computedItems[idx]);
          }
        });

        this.$emit('row-selected', items);
      }
    }
  },
  beforeMount: function beforeMount() {
    // Set up handlers
    if (this.isSelectable) {
      this.setSelectionHandlers(true);
    }
  },
  methods: {
    // Public methods
    selectRow: function selectRow(index) {
      // Select a particular row (indexed based on computedItems)
      if (this.isSelectable && (0, _inspect.isNumber)(index) && index >= 0 && index < this.computedItems.length && !this.isRowSelected(index)) {
        var selectedRows = this.selectableIsMultiSelect ? this.selectedRows.slice() : [];
        selectedRows[index] = true;
        this.selectedLastClicked = -1;
        this.selectedRows = selectedRows;
      }
    },
    unselectRow: function unselectRow(index) {
      // Un-select a particular row (indexed based on `computedItems`)
      if (this.isSelectable && (0, _inspect.isNumber)(index) && this.isRowSelected(index)) {
        var selectedRows = this.selectedRows.slice();
        selectedRows[index] = false;
        this.selectedLastClicked = -1;
        this.selectedRows = selectedRows;
      }
    },
    selectAllRows: function selectAllRows() {
      var length = this.computedItems.length;

      if (this.isSelectable && length > 0) {
        this.selectedLastClicked = -1;
        this.selectedRows = this.selectableIsMultiSelect ? (0, _range.default)(length).map(function (i) {
          return true;
        }) : [true];
      }
    },
    isRowSelected: function isRowSelected(index) {
      // Determine if a row is selected (indexed based on `computedItems`)
      return Boolean((0, _inspect.isNumber)(index) && this.selectedRows[index]);
    },
    clearSelected: function clearSelected() {
      // Clear any active selected row(s)
      this.selectedLastClicked = -1;
      this.selectedRows = [];
    },
    // Internal private methods
    selectableRowClasses: function selectableRowClasses(index) {
      if (this.isSelectable && this.isRowSelected(index)) {
        var variant = this.selectedVariant;
        return _defineProperty({
          'b-table-row-selected': true
        }, "".concat(this.dark ? 'bg' : 'table', "-").concat(variant), variant);
      } else {
        return {};
      }
    },
    selectableRowAttrs: function selectableRowAttrs(index) {
      return {
        'aria-selected': !this.isSelectable ? null : this.isRowSelected(index) ? 'true' : 'false'
      };
    },
    setSelectionHandlers: function setSelectionHandlers(on) {
      var method = on ? '$on' : '$off'; // Handle row-clicked event

      this[method]('row-clicked', this.selectionHandler); // Clear selection on filter, pagination, and sort changes

      this[method]('filtered', this.clearSelected);
      this[method]('context-changed', this.clearSelected);
    },
    selectionHandler: function selectionHandler(item, index, evt) {
      /* istanbul ignore if: should never happen */
      if (!this.isSelectable) {
        // Don't do anything if table is not in selectable mode

        /* istanbul ignore next: should never happen */
        this.clearSelected();
        /* istanbul ignore next: should never happen */

        return;
      }

      var selectMode = this.selectMode;
      var selectedRows = this.selectedRows.slice();
      var selected = !selectedRows[index]; // Note 'multi' mode needs no special event handling

      if (selectMode === 'single') {
        selectedRows = [];
      } else if (selectMode === 'range') {
        if (this.selectedLastRow > -1 && evt.shiftKey) {
          // range
          for (var idx = Math.min(this.selectedLastRow, index); idx <= Math.max(this.selectedLastRow, index); idx++) {
            selectedRows[idx] = true;
          }

          selected = true;
        } else {
          if (!(evt.ctrlKey || evt.metaKey)) {
            // Clear range selection if any
            selectedRows = [];
            selected = true;
          }

          this.selectedLastRow = selected ? index : -1;
        }
      }

      selectedRows[index] = selected;
      this.selectedRows = selectedRows;
    }
  }
};
exports.default = _default2;
},{"../../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../../utils/range":"node_modules/bootstrap-vue/esm/utils/range.js","../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","./sanitize-row":"node_modules/bootstrap-vue/esm/components/table/helpers/sanitize-row.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-provider.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _looseEqual = _interopRequireDefault(require("../../../utils/loose-equal"));

var _warn = _interopRequireDefault(require("../../../utils/warn"));

var _inspect = require("../../../utils/inspect");

var _listenOnRoot = _interopRequireDefault(require("../../../mixins/listen-on-root"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var _default2 = {
  mixins: [_listenOnRoot.default],
  props: {
    // Prop override(s)
    items: {
      // Adds in 'Function' support
      type: [Array, Function],
      default: function _default()
      /* istanbul ignore next */
      {
        return [];
      }
    },
    // Additional props
    noProviderPaging: {
      type: Boolean,
      default: false
    },
    noProviderSorting: {
      type: Boolean,
      default: false
    },
    noProviderFiltering: {
      type: Boolean,
      default: false
    },
    apiUrl: {
      // Passthrough prop. Passed to the context object. Not used by b-table directly
      type: String,
      default: ''
    }
  },
  computed: {
    hasProvider: function hasProvider() {
      return (0, _inspect.isFunction)(this.items);
    },
    providerTriggerContext: function providerTriggerContext() {
      // Used to trigger the provider function via a watcher. Only the fields that
      // are needed for triggering a provider update are included. Note that the
      // regular this.context is sent to the provider during fetches though, as they
      // may need all the prop info.
      var ctx = {
        apiUrl: this.apiUrl,
        filter: null,
        sortBy: null,
        sortDesc: null,
        perPage: null,
        currentPage: null
      };

      if (!this.noProviderFiltering) {
        // Either a string, or could be an object or array.
        ctx.filter = this.localFilter;
      }

      if (!this.noProviderSorting) {
        ctx.sortBy = this.localSortBy;
        ctx.sortDesc = this.localSortDesc;
      }

      if (!this.noProviderPaging) {
        ctx.perPage = this.perPage;
        ctx.currentPage = this.currentPage;
      }

      return _objectSpread({}, ctx);
    }
  },
  watch: {
    // Provider update triggering
    items: function items(newVal, oldVal) {
      // If a new provider has been specified, trigger an update
      if (this.hasProvider || (0, _inspect.isFunction)(newVal)) {
        this.$nextTick(this._providerUpdate);
      }
    },
    providerTriggerContext: function providerTriggerContext(newVal, oldVal) {
      // Trigger the provider to update as the relevant context values have changed.
      if (!(0, _looseEqual.default)(newVal, oldVal)) {
        this.$nextTick(this._providerUpdate);
      }
    }
  },
  mounted: function mounted() {
    var _this = this; // Call the items provider if necessary


    if (this.hasProvider && (!this.localItems || this.localItems.length === 0)) {
      // Fetch on mount if localItems is empty
      this._providerUpdate();
    } // Listen for global messages to tell us to force refresh the table


    this.listenOnRoot('bv::refresh::table', function (id) {
      if (id === _this.id || id === _this) {
        _this.refresh();
      }
    });
  },
  methods: {
    refresh: function refresh() {
      // Public Method: Force a refresh of the provider function
      this.$off('refreshed', this.refresh);

      if (this.computedBusy) {
        // Can't force an update when forced busy by user (busy prop === true)
        if (this.localBusy && this.hasProvider) {
          // But if provider running (localBusy), re-schedule refresh once `refreshed` emitted
          this.$on('refreshed', this.refresh);
        }
      } else {
        this.clearSelected();

        if (this.hasProvider) {
          this.$nextTick(this._providerUpdate);
        } else {
          /* istanbul ignore next */
          this.localItems = (0, _inspect.isArray)(this.items) ? this.items.slice() : [];
        }
      }
    },
    // Provider related methods
    _providerSetLocal: function _providerSetLocal(items) {
      this.localItems = (0, _inspect.isArray)(items) ? items.slice() : [];
      this.localBusy = false;
      this.$emit('refreshed'); // New root emit

      if (this.id) {
        this.emitOnRoot('bv::table::refreshed', this.id);
      }
    },
    _providerUpdate: function _providerUpdate() {
      var _this2 = this; // Refresh the provider function items.


      if (!this.hasProvider) {
        // Do nothing if no provider
        return;
      } // If table is busy, wait until refreshed before calling again


      if (this.computedBusy) {
        // Schedule a new refresh once `refreshed` is emitted
        this.$nextTick(this.refresh);
        return;
      } // Set internal busy state


      this.localBusy = true; // Call provider function with context and optional callback after DOM is fully updated

      this.$nextTick(function () {
        try {
          // Call provider function passing it the context and optional callback
          var data = _this2.items(_this2.context, _this2._providerSetLocal);

          if ((0, _inspect.isPromise)(data)) {
            // Provider returned Promise
            data.then(function (items) {
              // Provider resolved with items
              _this2._providerSetLocal(items);
            });
          } else if ((0, _inspect.isArray)(data)) {
            // Provider returned Array data
            _this2._providerSetLocal(data);
          } else {
            /* istanbul ignore if */
            if (_this2.items.length !== 2) {
              // Check number of arguments provider function requested
              // Provider not using callback (didn't request second argument), so we clear
              // busy state as most likely there was an error in the provider function

              /* istanbul ignore next */
              (0, _warn.default)("b-table provider function didn't request callback and did not return a promise or data");
              _this2.localBusy = false;
            }
          }
        } catch (e)
        /* istanbul ignore next */
        {
          // Provider function borked on us, so we spew out a warning
          // and clear the busy state
          (0, _warn.default)("b-table provider function error [".concat(e.name, "] ").concat(e.message));
          _this2.localBusy = false;

          _this2.$off('refreshed', _this2.refresh);
        }
      });
    }
  }
};
exports.default = _default2;
},{"../../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../../mixins/listen-on-root":"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js"}],"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _inspect = require("../../../utils/inspect");

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Main `<table>` render mixin
// Includes all main table styling options
var _default = {
  // Don't place attributes on root element automatically,
  // as table could be wrapped in responsive `<div>`
  inheritAttrs: false,
  provide: function provide() {
    return {
      bvTable: this
    };
  },
  props: {
    striped: {
      type: Boolean,
      default: false
    },
    bordered: {
      type: Boolean,
      default: false
    },
    borderless: {
      type: Boolean,
      default: false
    },
    outlined: {
      type: Boolean,
      default: false
    },
    dark: {
      type: Boolean,
      default: false
    },
    hover: {
      type: Boolean,
      default: false
    },
    small: {
      type: Boolean,
      default: false
    },
    fixed: {
      type: Boolean,
      default: false
    },
    responsive: {
      type: [Boolean, String],
      default: false
    },
    stickyHeader: {
      // If a string, it is assumed to be the table `max-height` value
      type: [Boolean, String],
      default: false
    },
    noBorderCollapse: {
      type: Boolean,
      default: false
    },
    captionTop: {
      type: Boolean,
      default: false
    },
    tableVariant: {
      type: String,
      default: null
    },
    tableClass: {
      type: [String, Array, Object],
      default: null
    }
  },
  computed: {
    // Layout related computed props
    isResponsive: function isResponsive() {
      var responsive = this.responsive === '' ? true : this.responsive;
      return this.isStacked ? false : responsive;
    },
    isStickyHeader: function isStickyHeader() {
      var stickyHeader = this.stickyHeader === '' ? true : this.stickyHeader;
      return this.isStacked ? false : stickyHeader;
    },
    wrapperClasses: function wrapperClasses() {
      return [this.isStickyHeader ? 'b-table-sticky-header' : '', this.isResponsive === true ? 'table-responsive' : this.isResponsive ? "table-responsive-".concat(this.responsive) : ''].filter(Boolean);
    },
    wrapperStyles: function wrapperStyles() {
      return this.isStickyHeader && !(0, _inspect.isBoolean)(this.isStickyHeader) ? {
        maxHeight: this.isStickyHeader
      } : {};
    },
    tableClasses: function tableClasses() {
      var hover = this.isTableSimple ? this.hover : this.hover && this.computedItems.length > 0 && !this.computedBusy;
      return [// User supplied classes
      this.tableClass, // Styling classes
      {
        'table-striped': this.striped,
        'table-hover': hover,
        'table-dark': this.dark,
        'table-bordered': this.bordered,
        'table-borderless': this.borderless,
        'table-sm': this.small,
        // The following are b-table custom styles
        border: this.outlined,
        'b-table-fixed': this.fixed,
        'b-table-caption-top': this.captionTop,
        'b-table-no-border-collapse': this.noBorderCollapse
      }, this.tableVariant ? "".concat(this.dark ? 'bg' : 'table', "-").concat(this.tableVariant) : '', // Stacked table classes
      this.stackedTableClasses, // Selectable classes
      this.selectableTableClasses];
    },
    tableAttrs: function tableAttrs() {
      // Preserve user supplied aria-describedby, if provided in `$attrs`
      var adb = [(this.$attrs || {})['aria-describedby'], this.captionId].filter(Boolean).join(' ') || null;
      var items = this.computedItems;
      var filteredItems = this.filteredItems;
      var fields = this.computedFields;
      var selectableAttrs = this.selectableTableAttrs || {};
      var ariaAttrs = this.isTableSimple ? {} : {
        'aria-busy': this.computedBusy ? 'true' : 'false',
        'aria-colcount': String(fields.length),
        'aria-describedby': adb
      };
      var rowCount = items && filteredItems && filteredItems.length > items.length ? String(filteredItems.length) : null;
      return _objectSpread({
        // We set `aria-rowcount` before merging in `$attrs`,
        // in case user has supplied their own
        'aria-rowcount': rowCount
      }, this.$attrs, {
        // Now we can override any `$attrs` here
        id: this.safeId(),
        role: 'table'
      }, ariaAttrs, {}, selectableAttrs);
    }
  },
  render: function render(h) {
    var $content = [];

    if (this.isTableSimple) {
      $content.push(this.normalizeSlot('default', {}));
    } else {
      // Build the `<caption>` (from caption mixin)
      $content.push(this.renderCaption ? this.renderCaption() : null); // Build the `<colgroup>`

      $content.push(this.renderColgroup ? this.renderColgroup() : null); // Build the `<thead>`

      $content.push(this.renderThead ? this.renderThead() : null); // Build the `<tbody>`

      $content.push(this.renderTbody ? this.renderTbody() : null); // Build the `<tfoot>`

      $content.push(this.renderTfoot ? this.renderTfoot() : null);
    } // Assemble `<table>`


    var $table = h('table', {
      key: 'b-table',
      staticClass: 'table b-table',
      class: this.tableClasses,
      attrs: this.tableAttrs
    }, $content.filter(Boolean)); // Add responsive/sticky wrapper if needed and return table

    return this.wrapperClasses.length > 0 ? h('div', {
      key: 'wrap',
      class: this.wrapperClasses,
      style: this.wrapperStyles
    }, [$table]) : $table;
  }
};
exports.default = _default;
},{"../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/components/table/table.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTable = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _mixinItems = _interopRequireDefault(require("./helpers/mixin-items"));

var _mixinStacked = _interopRequireDefault(require("./helpers/mixin-stacked"));

var _mixinFiltering = _interopRequireDefault(require("./helpers/mixin-filtering"));

var _mixinSorting = _interopRequireDefault(require("./helpers/mixin-sorting"));

var _mixinPagination = _interopRequireDefault(require("./helpers/mixin-pagination"));

var _mixinCaption = _interopRequireDefault(require("./helpers/mixin-caption"));

var _mixinColgroup = _interopRequireDefault(require("./helpers/mixin-colgroup"));

var _mixinThead = _interopRequireDefault(require("./helpers/mixin-thead"));

var _mixinTfoot = _interopRequireDefault(require("./helpers/mixin-tfoot"));

var _mixinTbody = _interopRequireDefault(require("./helpers/mixin-tbody"));

var _mixinEmpty = _interopRequireDefault(require("./helpers/mixin-empty"));

var _mixinTopRow = _interopRequireDefault(require("./helpers/mixin-top-row"));

var _mixinBottomRow = _interopRequireDefault(require("./helpers/mixin-bottom-row"));

var _mixinBusy = _interopRequireDefault(require("./helpers/mixin-busy"));

var _mixinSelectable = _interopRequireDefault(require("./helpers/mixin-selectable"));

var _mixinProvider = _interopRequireDefault(require("./helpers/mixin-provider"));

var _mixinTableRenderer = _interopRequireDefault(require("./helpers/mixin-table-renderer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Mixins
// Table helper Mixins
// Main table renderer mixin
// b-table component definition
// @vue/component
var BTable =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTable',
  // Order of mixins is important!
  // They are merged from first to last, followed by this component.
  mixins: [// Required Mixins
  _id.default, _normalizeSlot.default, _mixinItems.default, _mixinTableRenderer.default, _mixinStacked.default, _mixinThead.default, _mixinTfoot.default, _mixinTbody.default, // Features Mixins
  _mixinStacked.default, _mixinFiltering.default, _mixinSorting.default, _mixinPagination.default, _mixinCaption.default, _mixinColgroup.default, _mixinSelectable.default, _mixinEmpty.default, _mixinTopRow.default, _mixinBottomRow.default, _mixinBusy.default, _mixinProvider.default] // render function provided by table-renderer mixin

});

exports.BTable = BTable;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","./helpers/mixin-items":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-items.js","./helpers/mixin-stacked":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js","./helpers/mixin-filtering":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","./helpers/mixin-sorting":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","./helpers/mixin-pagination":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-pagination.js","./helpers/mixin-caption":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-caption.js","./helpers/mixin-colgroup":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-colgroup.js","./helpers/mixin-thead":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","./helpers/mixin-tfoot":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tfoot.js","./helpers/mixin-tbody":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody.js","./helpers/mixin-empty":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-empty.js","./helpers/mixin-top-row":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-top-row.js","./helpers/mixin-bottom-row":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js","./helpers/mixin-busy":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-busy.js","./helpers/mixin-selectable":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-selectable.js","./helpers/mixin-provider":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-provider.js","./helpers/mixin-table-renderer":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js"}],"node_modules/bootstrap-vue/esm/components/table/table-lite.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTableLite = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _mixinItems = _interopRequireDefault(require("./helpers/mixin-items"));

var _mixinCaption = _interopRequireDefault(require("./helpers/mixin-caption"));

var _mixinColgroup = _interopRequireDefault(require("./helpers/mixin-colgroup"));

var _mixinStacked = _interopRequireDefault(require("./helpers/mixin-stacked"));

var _mixinThead = _interopRequireDefault(require("./helpers/mixin-thead"));

var _mixinTfoot = _interopRequireDefault(require("./helpers/mixin-tfoot"));

var _mixinTbody = _interopRequireDefault(require("./helpers/mixin-tbody"));

var _mixinTableRenderer = _interopRequireDefault(require("./helpers/mixin-table-renderer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Mixins
// Table helper Mixins
// Main table renderer mixin
// b-table-lite component definition
// @vue/component
var BTableLite =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTableLite',
  // Order of mixins is important!
  // They are merged from first to last, followed by this component.
  mixins: [// Required mixins
  _id.default, _normalizeSlot.default, _mixinItems.default, _mixinTableRenderer.default, _mixinStacked.default, _mixinThead.default, _mixinTfoot.default, _mixinTbody.default, // Features Mixins
  // These are pretty lightweight, and are useful for lightweight tables
  _mixinCaption.default, _mixinColgroup.default] // render function provided by table-renderer mixin

});

exports.BTableLite = BTableLite;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","./helpers/mixin-items":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-items.js","./helpers/mixin-caption":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-caption.js","./helpers/mixin-colgroup":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-colgroup.js","./helpers/mixin-stacked":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js","./helpers/mixin-thead":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","./helpers/mixin-tfoot":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tfoot.js","./helpers/mixin-tbody":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody.js","./helpers/mixin-table-renderer":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js"}],"node_modules/bootstrap-vue/esm/components/table/table-simple.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTableSimple = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _mixinTableRenderer = _interopRequireDefault(require("./helpers/mixin-table-renderer"));

var _mixinStacked = _interopRequireDefault(require("./helpers/mixin-stacked"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Mixins
// Main table renderer mixin
// Feature miins
// b-table-simple component definition
// @vue/component
var BTableSimple =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTableSimple',
  // Order of mixins is important!
  // They are merged from first to last, followed by this component.
  mixins: [// Required mixins
  _id.default, _normalizeSlot.default, _mixinTableRenderer.default, // feature mixin
  // Stacked requires extra handling by users via
  // the table cell `stacked-heading` prop
  _mixinStacked.default],
  computed: {
    isTableSimple: function isTableSimple() {
      return true;
    }
  } // render function provided by table-renderer mixin

});

exports.BTableSimple = BTableSimple;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","./helpers/mixin-table-renderer":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","./helpers/mixin-stacked":"node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js"}],"node_modules/bootstrap-vue/esm/components/table/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BTable", {
  enumerable: true,
  get: function () {
    return _table.BTable;
  }
});
Object.defineProperty(exports, "BTableLite", {
  enumerable: true,
  get: function () {
    return _tableLite.BTableLite;
  }
});
Object.defineProperty(exports, "BTableSimple", {
  enumerable: true,
  get: function () {
    return _tableSimple.BTableSimple;
  }
});
Object.defineProperty(exports, "BTbody", {
  enumerable: true,
  get: function () {
    return _tbody.BTbody;
  }
});
Object.defineProperty(exports, "BThead", {
  enumerable: true,
  get: function () {
    return _thead.BThead;
  }
});
Object.defineProperty(exports, "BTfoot", {
  enumerable: true,
  get: function () {
    return _tfoot.BTfoot;
  }
});
Object.defineProperty(exports, "BTr", {
  enumerable: true,
  get: function () {
    return _tr.BTr;
  }
});
Object.defineProperty(exports, "BTd", {
  enumerable: true,
  get: function () {
    return _td.BTd;
  }
});
Object.defineProperty(exports, "BTh", {
  enumerable: true,
  get: function () {
    return _th.BTh;
  }
});
exports.TableSimplePlugin = exports.TableLitePlugin = exports.TablePlugin = void 0;

var _table = require("./table");

var _tableLite = require("./table-lite");

var _tableSimple = require("./table-simple");

var _tbody = require("./tbody");

var _thead = require("./thead");

var _tfoot = require("./tfoot");

var _tr = require("./tr");

var _td = require("./td");

var _th = require("./th");

var _plugins = require("../../utils/plugins");

var TableLitePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BTableLite: _tableLite.BTableLite
  }
});
exports.TableLitePlugin = TableLitePlugin;
var TableSimplePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BTableSimple: _tableSimple.BTableSimple,
    BTbody: _tbody.BTbody,
    BThead: _thead.BThead,
    BTfoot: _tfoot.BTfoot,
    BTr: _tr.BTr,
    BTd: _td.BTd,
    BTh: _th.BTh
  }
});
exports.TableSimplePlugin = TableSimplePlugin;
var TablePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BTable: _table.BTable
  },
  plugins: {
    TableLitePlugin: TableLitePlugin,
    TableSimplePlugin: TableSimplePlugin
  }
});
exports.TablePlugin = TablePlugin;
},{"./table":"node_modules/bootstrap-vue/esm/components/table/table.js","./table-lite":"node_modules/bootstrap-vue/esm/components/table/table-lite.js","./table-simple":"node_modules/bootstrap-vue/esm/components/table/table-simple.js","./tbody":"node_modules/bootstrap-vue/esm/components/table/tbody.js","./thead":"node_modules/bootstrap-vue/esm/components/table/thead.js","./tfoot":"node_modules/bootstrap-vue/esm/components/table/tfoot.js","./tr":"node_modules/bootstrap-vue/esm/components/table/tr.js","./td":"node_modules/bootstrap-vue/esm/components/table/td.js","./th":"node_modules/bootstrap-vue/esm/components/table/th.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/tabs/tabs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTabs = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _keyCodes = _interopRequireDefault(require("../../utils/key-codes"));

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

var _observeDom = _interopRequireDefault(require("../../utils/observe-dom"));

var _stableSort = _interopRequireDefault(require("../../utils/stable-sort"));

var _array = require("../../utils/array");

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _link = require("../link/link");

var _nav = require("../nav/nav");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// -- Constants --
var navProps = (0, _object.omit)(_nav.props, ['tabs', 'isNavBar', 'cardHeader']); // -- Utils --
// Filter function to filter out disabled tabs

var notDisabled = function notDisabled(tab) {
  return !tab.disabled;
}; // --- Helper components ---
// @vue/component


var BTabButtonHelper =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTabButtonHelper',
  inject: {
    bvTabs: {
      default: function _default()
      /* istanbul ignore next */
      {
        return {};
      }
    }
  },
  props: {
    // Reference to the child <b-tab> instance
    tab: {
      default: null
    },
    tabs: {
      type: Array,
      default: function _default()
      /* istanbul ignore next */
      {
        return [];
      }
    },
    id: {
      type: String,
      default: null
    },
    controls: {
      type: String,
      default: null
    },
    tabIndex: {
      type: Number,
      default: null
    },
    posInSet: {
      type: Number,
      default: null
    },
    setSize: {
      type: Number,
      default: null
    },
    noKeyNav: {
      type: Boolean,
      default: false
    }
  },
  methods: {
    focus: function focus() {
      if (this.$refs && this.$refs.link && this.$refs.link.focus) {
        this.$refs.link.focus();
      }
    },
    handleEvt: function handleEvt(evt) {
      var stop = function stop() {
        evt.preventDefault();
        evt.stopPropagation();
      };

      if (this.tab.disabled) {
        /* istanbul ignore next */
        return;
      }

      var type = evt.type;
      var key = evt.keyCode;
      var shift = evt.shiftKey;

      if (type === 'click') {
        stop();
        this.$emit('click', evt);
      } else if (type === 'keydown' && !this.noKeyNav && key === _keyCodes.default.SPACE) {
        // In keynav mode, SPACE press will also trigger a click/select
        stop();
        this.$emit('click', evt);
      } else if (type === 'keydown' && !this.noKeyNav) {
        // For keyboard navigation
        if (key === _keyCodes.default.UP || key === _keyCodes.default.LEFT || key === _keyCodes.default.HOME) {
          stop();

          if (shift || key === _keyCodes.default.HOME) {
            this.$emit('first', evt);
          } else {
            this.$emit('prev', evt);
          }
        } else if (key === _keyCodes.default.DOWN || key === _keyCodes.default.RIGHT || key === _keyCodes.default.END) {
          stop();

          if (shift || key === _keyCodes.default.END) {
            this.$emit('last', evt);
          } else {
            this.$emit('next', evt);
          }
        }
      }
    }
  },
  render: function render(h) {
    var link = h(_link.BLink, {
      ref: 'link',
      staticClass: 'nav-link',
      class: [{
        active: this.tab.localActive && !this.tab.disabled,
        disabled: this.tab.disabled
      }, this.tab.titleLinkClass, // Apply <b-tabs> `activeNavItemClass` styles when the tab is active
      this.tab.localActive ? this.bvTabs.activeNavItemClass : null],
      props: {
        disabled: this.tab.disabled
      },
      attrs: {
        role: 'tab',
        id: this.id,
        // Roving tab index when keynav enabled
        tabindex: this.tabIndex,
        'aria-selected': this.tab.localActive && !this.tab.disabled ? 'true' : 'false',
        'aria-setsize': this.setSize,
        'aria-posinset': this.posInSet,
        'aria-controls': this.controls
      },
      on: {
        click: this.handleEvt,
        keydown: this.handleEvt
      }
    }, [this.tab.normalizeSlot('title') || this.tab.title]);
    return h('li', {
      staticClass: 'nav-item',
      class: [this.tab.titleItemClass],
      attrs: {
        role: 'presentation'
      }
    }, [link]);
  }
}); // @vue/component


var BTabs =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTabs',
  mixins: [_id.default, _normalizeSlot.default],
  provide: function provide() {
    return {
      bvTabs: this
    };
  },
  model: {
    prop: 'value',
    event: 'input'
  },
  props: _objectSpread({}, navProps, {
    tag: {
      type: String,
      default: 'div'
    },
    card: {
      type: Boolean,
      default: false
    },
    end: {
      // Synonym for 'bottom'
      type: Boolean,
      default: false
    },
    noFade: {
      type: Boolean,
      default: false
    },
    noNavStyle: {
      type: Boolean,
      default: false
    },
    noKeyNav: {
      type: Boolean,
      default: false
    },
    lazy: {
      // This prop is sniffed by the <b-tab> child
      type: Boolean,
      default: false
    },
    contentClass: {
      type: [String, Array, Object],
      default: null
    },
    navClass: {
      type: [String, Array, Object],
      default: null
    },
    navWrapperClass: {
      type: [String, Array, Object],
      default: null
    },
    activeNavItemClass: {
      // Only applied to the currently active <b-nav-item>
      type: [String, Array, Object],
      default: null
    },
    activeTabClass: {
      // Only applied to the currently active <b-tab>
      // This prop is sniffed by the <b-tab> child
      type: [String, Array, Object],
      default: null
    },
    value: {
      // v-model
      type: Number,
      default: null
    }
  }),
  data: function data() {
    var tabIdx = parseInt(this.value, 10);
    tabIdx = isNaN(tabIdx) ? -1 : tabIdx;
    return {
      // Index of current tab
      currentTab: tabIdx,
      // Array of direct child <b-tab> instances, in DOM order
      tabs: [],
      // Array of child instances registered (for triggering reactive updates)
      registeredTabs: [],
      // Flag to know if we are mounted or not
      isMounted: false
    };
  },
  computed: {
    fade: function fade() {
      // This computed prop is sniffed by the tab child
      return !this.noFade;
    },
    localNavClass: function localNavClass() {
      var classes = [];

      if (this.card && this.vertical) {
        classes.push('card-header', 'h-100', 'border-bottom-0', 'rounded-0');
      }

      return [].concat(classes, [this.navClass]);
    }
  },
  watch: {
    currentTab: function currentTab(val, old) {
      var index = -1; // Ensure only one tab is active at most

      this.tabs.forEach(function (tab, idx) {
        if (val === idx && !tab.disabled) {
          tab.localActive = true;
          index = idx;
        } else {
          tab.localActive = false;
        }
      }); // Update the v-model

      this.$emit('input', index);
    },
    value: function value(val, old) {
      if (val !== old) {
        val = parseInt(val, 10);
        val = isNaN(val) ? -1 : val;
        old = parseInt(old, 10) || 0;
        var tabs = this.tabs;

        if (tabs[val] && !tabs[val].disabled) {
          this.currentTab = val;
        } else {
          // Try next or prev tabs
          if (val < old) {
            this.previousTab();
          } else {
            this.nextTab();
          }
        }
      }
    },
    registeredTabs: function registeredTabs(newVal, oldVal) {
      var _this = this; // Each b-tab will register/unregister itself.
      // We use this to detect when tabs are added/removed
      // to trigger the update of the tabs.


      this.$nextTick(function () {
        (0, _dom.requestAF)(function () {
          _this.updateTabs();
        });
      });
    },
    tabs: function tabs(newVal, oldVal) {
      var _this2 = this; // If tabs added, removed, or re-ordered, we emit a `changed` event.
      // We use `tab._uid` instead of `tab.safeId()`, as the later is changed
      // in a nextTick if no explicit ID is provided, causing duplicate emits.


      if (!(0, _looseEqual.default)(newVal.map(function (t) {
        return t._uid;
      }), oldVal.map(function (t) {
        return t._uid;
      }))) {
        // In a nextTick to ensure currentTab has been set first.
        this.$nextTick(function () {
          // We emit shallow copies of the new and old arrays of tabs, to
          // prevent users from potentially mutating the internal arrays.
          _this2.$emit('changed', newVal.slice(), oldVal.slice());
        });
      }
    },
    isMounted: function isMounted(newVal, oldVal) {
      var _this3 = this; // Trigger an update after mounted.  Needed for tabs inside lazy modals.


      if (newVal) {
        (0, _dom.requestAF)(function () {
          _this3.updateTabs();
        });
      } // Enable or disable the observer


      this.setObserver(newVal);
    }
  },
  created: function created() {
    var _this4 = this;

    var tabIdx = parseInt(this.value, 10);
    this.currentTab = isNaN(tabIdx) ? -1 : tabIdx;
    this._bvObserver = null; // For SSR and to make sure only a single tab is shown on mount
    // We wrap this in a `$nextTick()` to ensure the child tabs have been created

    this.$nextTick(function () {
      _this4.updateTabs();
    });
  },
  mounted: function mounted() {
    var _this5 = this; // Call `updateTabs()` just in case...


    this.updateTabs();
    this.$nextTick(function () {
      // Flag we are now mounted and to switch to DOM for tab probing.
      // As this.$slots.default appears to lie about component instances
      // after b-tabs is destroyed and re-instantiated.
      // And this.$children does not respect DOM order.
      _this5.isMounted = true;
    });
  },
  deactivated: function deactivated()
  /* istanbul ignore next */
  {
    this.isMounted = false;
  },
  activated: function activated()
  /* istanbul ignore next */
  {
    var _this6 = this;

    var tabIdx = parseInt(this.value, 10);
    this.currentTab = isNaN(tabIdx) ? -1 : tabIdx;
    this.$nextTick(function () {
      _this6.updateTabs();

      _this6.isMounted = true;
    });
  },
  beforeDestroy: function beforeDestroy() {
    this.isMounted = false;
  },
  destroyed: function destroyed() {
    // Ensure no references to child instances exist
    this.tabs = [];
  },
  methods: {
    registerTab: function registerTab(tab) {
      var _this7 = this;

      if (!(0, _array.arrayIncludes)(this.registeredTabs, tab)) {
        this.registeredTabs.push(tab);
        tab.$once('hook:destroyed', function () {
          _this7.unregisterTab(tab);
        });
      }
    },
    unregisterTab: function unregisterTab(tab) {
      this.registeredTabs = this.registeredTabs.slice().filter(function (t) {
        return t !== tab;
      });
    },
    setObserver: function setObserver(on) {
      // DOM observer is needed to detect changes in order of tabs
      if (on) {
        // Make sure no existing observer running
        this.setObserver(false);
        var self = this;
        /* istanbul ignore next: difficult to test mutation observer in JSDOM */

        var handler = function handler() {
          // We delay the update to ensure that `tab.safeId()` has
          // updated with the final ID value.
          self.$nextTick(function () {
            (0, _dom.requestAF)(function () {
              self.updateTabs();
            });
          });
        }; // Watch for changes to <b-tab> sub components


        this._bvObserver = (0, _observeDom.default)(this.$refs.tabsContainer, handler, {
          childList: true,
          subtree: false,
          attributes: true,
          attributeFilter: ['id']
        });
      } else {
        if (this._bvObserver && this._bvObserver.disconnect) {
          this._bvObserver.disconnect();
        }

        this._bvObserver = null;
      }
    },
    getTabs: function getTabs() {
      // We use registeredTabs as the source of truth for child tab components. And we
      // filter out any BTab components that are extended BTab with a root child BTab.
      // https://github.com/bootstrap-vue/bootstrap-vue/issues/3260
      var tabs = this.registeredTabs.filter(function (tab) {
        return tab.$children.filter(function (t) {
          return t._isTab;
        }).length === 0;
      }); // DOM Order of Tabs

      var order = [];

      if (this.isMounted && tabs.length > 0) {
        // We rely on the DOM when mounted to get the 'true' order of the b-tab children.
        // querySelectorAll(...) always returns elements in document order, regardless of
        // order specified in the selector.
        var selector = tabs.map(function (tab) {
          return "#".concat(tab.safeId());
        }).join(', ');
        order = (0, _dom.selectAll)(selector, this.$el).map(function (el) {
          return el.id;
        }).filter(Boolean);
      } // Stable sort keeps the original order if not found in the
      // `order` array, which will be an empty array before mount.


      return (0, _stableSort.default)(tabs, function (a, b) {
        return order.indexOf(a.safeId()) - order.indexOf(b.safeId());
      });
    },
    // Update list of <b-tab> children
    updateTabs: function updateTabs() {
      // Probe tabs
      var tabs = this.getTabs(); // Find *last* active non-disabled tab in current tabs
      // We trust tab state over currentTab, in case tabs were added/removed/re-ordered

      var tabIndex = tabs.indexOf(tabs.slice().reverse().find(function (tab) {
        return tab.localActive && !tab.disabled;
      })); // Else try setting to currentTab

      if (tabIndex < 0) {
        var currentTab = this.currentTab;

        if (currentTab >= tabs.length) {
          // Handle last tab being removed, so find the last non-disabled tab
          tabIndex = tabs.indexOf(tabs.slice().reverse().find(notDisabled));
        } else if (tabs[currentTab] && !tabs[currentTab].disabled) {
          // Current tab is not disabled
          tabIndex = currentTab;
        }
      } // Else find *first* non-disabled tab in current tabs


      if (tabIndex < 0) {
        tabIndex = tabs.indexOf(tabs.find(notDisabled));
      } // Set the current tab state to active


      tabs.forEach(function (tab, idx) {
        // tab.localActive = idx === tabIndex && !tab.disabled
        tab.localActive = false;
      });

      if (tabs[tabIndex]) {
        tabs[tabIndex].localActive = true;
      } // Update the array of tab children


      this.tabs = tabs; // Set the currentTab index (can be -1 if no non-disabled tabs)

      this.currentTab = tabIndex;
    },
    // Find a button that controls a tab, given the tab reference
    // Returns the button vm instance
    getButtonForTab: function getButtonForTab(tab) {
      return (this.$refs.buttons || []).find(function (btn) {
        return btn.tab === tab;
      });
    },
    // Force a button to re-render it's content, given a <b-tab> instance
    // Called by <b-tab> on `update()`
    updateButton: function updateButton(tab) {
      var button = this.getButtonForTab(tab);

      if (button && button.$forceUpdate) {
        button.$forceUpdate();
      }
    },
    // Activate a tab given a <b-tab> instance
    // Also accessed by <b-tab>
    activateTab: function activateTab(tab) {
      var result = false;

      if (tab) {
        var index = this.tabs.indexOf(tab);

        if (!tab.disabled && index > -1) {
          result = true;
          this.currentTab = index;
        }
      }

      if (!result) {
        // Couldn't set tab, so ensure v-model is set to `this.currentTab`

        /* istanbul ignore next: should rarely happen */
        this.$emit('input', this.currentTab);
      }

      return result;
    },
    // Deactivate a tab given a <b-tab> instance
    // Accessed by <b-tab>
    deactivateTab: function deactivateTab(tab) {
      if (tab) {
        // Find first non-disabled tab that isn't the one being deactivated
        // If no tabs are available, then don't deactivate current tab
        return this.activateTab(this.tabs.filter(function (t) {
          return t !== tab;
        }).find(notDisabled));
      } else {
        // No tab specified

        /* istanbul ignore next: should never happen */
        return false;
      }
    },
    // Focus a tab button given it's <b-tab> instance
    focusButton: function focusButton(tab) {
      var _this8 = this; // Wrap in `$nextTick()` to ensure DOM has completed rendering/updating before focusing


      this.$nextTick(function () {
        var button = _this8.getButtonForTab(tab);

        if (button && button.focus) {
          button.focus();
        }
      });
    },
    // Emit a click event on a specified <b-tab> component instance
    emitTabClick: function emitTabClick(tab, evt) {
      if ((0, _inspect.isEvent)(evt) && tab && tab.$emit && !tab.disabled) {
        tab.$emit('click', evt);
      }
    },
    // Click handler
    clickTab: function clickTab(tab, evt) {
      this.activateTab(tab);
      this.emitTabClick(tab, evt);
    },
    // Move to first non-disabled tab
    firstTab: function firstTab(focus) {
      var tab = this.tabs.find(notDisabled);

      if (this.activateTab(tab) && focus) {
        this.focusButton(tab);
        this.emitTabClick(tab, focus);
      }
    },
    // Move to previous non-disabled tab
    previousTab: function previousTab(focus) {
      var currentIndex = Math.max(this.currentTab, 0);
      var tab = this.tabs.slice(0, currentIndex).reverse().find(notDisabled);

      if (this.activateTab(tab) && focus) {
        this.focusButton(tab);
        this.emitTabClick(tab, focus);
      }
    },
    // Move to next non-disabled tab
    nextTab: function nextTab(focus) {
      var currentIndex = Math.max(this.currentTab, -1);
      var tab = this.tabs.slice(currentIndex + 1).find(notDisabled);

      if (this.activateTab(tab) && focus) {
        this.focusButton(tab);
        this.emitTabClick(tab, focus);
      }
    },
    // Move to last non-disabled tab
    lastTab: function lastTab(focus) {
      var tab = this.tabs.slice().reverse().find(notDisabled);

      if (this.activateTab(tab) && focus) {
        this.focusButton(tab);
        this.emitTabClick(tab, focus);
      }
    }
  },
  render: function render(h) {
    var _this9 = this;

    var tabs = this.tabs; // Currently active tab

    var activeTab = tabs.find(function (tab) {
      return tab.localActive && !tab.disabled;
    }); // Tab button to allow focusing when no active tab found (keynav only)

    var fallbackTab = tabs.find(function (tab) {
      return !tab.disabled;
    }); // For each <b-tab> found create the tab buttons

    var buttons = tabs.map(function (tab, index) {
      var tabIndex = null; // Ensure at least one tab button is focusable when keynav enabled (if possible)

      if (!_this9.noKeyNav) {
        // Buttons are not in tab index unless active, or a fallback tab
        tabIndex = -1;

        if (activeTab === tab || !activeTab && fallbackTab === tab) {
          // Place tab button in tab sequence
          tabIndex = null;
        }
      }

      return h(BTabButtonHelper, {
        key: tab._uid || index,
        ref: 'buttons',
        // Needed to make `this.$refs.buttons` an array
        refInFor: true,
        props: {
          tab: tab,
          tabs: tabs,
          id: tab.controlledBy || (tab.safeId ? tab.safeId("_BV_tab_button_") : null),
          controls: tab.safeId ? tab.safeId() : null,
          tabIndex: tabIndex,
          setSize: tabs.length,
          posInSet: index + 1,
          noKeyNav: _this9.noKeyNav
        },
        on: {
          click: function click(evt) {
            _this9.clickTab(tab, evt);
          },
          first: _this9.firstTab,
          prev: _this9.previousTab,
          next: _this9.nextTab,
          last: _this9.lastTab
        }
      });
    }); // Nav

    var nav = h(_nav.BNav, {
      ref: 'nav',
      class: this.localNavClass,
      attrs: {
        role: 'tablist',
        id: this.safeId('_BV_tab_controls_')
      },
      props: {
        fill: this.fill,
        justified: this.justified,
        align: this.align,
        tabs: !this.noNavStyle && !this.pills,
        pills: !this.noNavStyle && this.pills,
        vertical: this.vertical,
        small: this.small,
        cardHeader: this.card && !this.vertical
      }
    }, [this.normalizeSlot('tabs-start') || h(), buttons, this.normalizeSlot('tabs-end') || h()]);
    nav = h('div', {
      key: 'bv-tabs-nav',
      class: [{
        'card-header': this.card && !this.vertical && !this.end,
        'card-footer': this.card && !this.vertical && this.end,
        'col-auto': this.vertical
      }, this.navWrapperClass]
    }, [nav]);
    var empty = h();

    if (!tabs || tabs.length === 0) {
      empty = h('div', {
        key: 'bv-empty-tab',
        class: ['tab-pane', 'active', {
          'card-body': this.card
        }]
      }, this.normalizeSlot('empty'));
    } // Main content section


    var content = h('div', {
      ref: 'tabsContainer',
      key: 'bv-tabs-container',
      staticClass: 'tab-content',
      class: [{
        col: this.vertical
      }, this.contentClass],
      attrs: {
        id: this.safeId('_BV_tab_container_')
      }
    }, (0, _array.concat)(this.normalizeSlot('default'), empty)); // Render final output

    return h(this.tag, {
      staticClass: 'tabs',
      class: {
        row: this.vertical,
        'no-gutters': this.vertical && this.card
      },
      attrs: {
        id: this.safeId()
      }
    }, [this.end ? content : h(), [nav], this.end ? h() : content]);
  }
});

exports.BTabs = BTabs;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../utils/key-codes":"node_modules/bootstrap-vue/esm/utils/key-codes.js","../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../utils/observe-dom":"node_modules/bootstrap-vue/esm/utils/observe-dom.js","../../utils/stable-sort":"node_modules/bootstrap-vue/esm/utils/stable-sort.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js","../nav/nav":"node_modules/bootstrap-vue/esm/components/nav/nav.js"}],"node_modules/bootstrap-vue/esm/components/tabs/tab.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BTab = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _id = _interopRequireDefault(require("../../mixins/id"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _bvTransition = _interopRequireDefault(require("../../utils/bv-transition"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @vue/component
var BTab =
/*#__PURE__*/
_vue.default.extend({
  name: 'BTab',
  mixins: [_id.default, _normalizeSlot.default],
  inject: {
    bvTabs: {
      default: function _default() {
        return {
          // Don't set a tab index if not rendered inside <b-tabs>
          noKeyNav: true
        };
      }
    }
  },
  props: {
    active: {
      type: Boolean,
      default: false
    },
    tag: {
      type: String,
      default: 'div'
    },
    buttonId: {
      type: String,
      default: ''
    },
    title: {
      type: String,
      default: ''
    },
    titleItemClass: {
      // Sniffed by tabs.js and added to nav 'li.nav-item'
      type: [String, Array, Object],
      default: null
    },
    titleLinkClass: {
      // Sniffed by tabs.js and added to nav 'a.nav-link'
      type: [String, Array, Object],
      default: null
    },
    disabled: {
      type: Boolean,
      default: false
    },
    noBody: {
      type: Boolean,
      default: false
    },
    lazy: {
      type: Boolean,
      default: false
    }
  },
  data: function data() {
    return {
      localActive: this.active && !this.disabled,
      show: false
    };
  },
  computed: {
    tabClasses: function tabClasses() {
      return [{
        active: this.localActive,
        disabled: this.disabled,
        'card-body': this.bvTabs.card && !this.noBody
      }, // Apply <b-tabs> `activeTabClass` styles when this tab is active
      this.localActive ? this.bvTabs.activeTabClass : null];
    },
    controlledBy: function controlledBy() {
      return this.buttonId || this.safeId('__BV_tab_button__');
    },
    computedNoFade: function computedNoFade() {
      return !(this.bvTabs.fade || false);
    },
    computedLazy: function computedLazy() {
      return this.bvTabs.lazy || this.lazy;
    },
    _isTab: function _isTab() {
      // For parent sniffing of child
      return true;
    }
  },
  watch: {
    localActive: function localActive(newVal, oldVal) {
      // Make 'active' prop work with `.sync` modifier
      this.$emit('update:active', newVal);
    },
    active: function active(newVal, oldVal) {
      if (newVal !== oldVal) {
        if (newVal) {
          // If activated post mount
          this.activate();
        } else {
          /* istanbul ignore next */
          if (!this.deactivate()) {
            // Tab couldn't be deactivated, so we reset the synced active prop
            // Deactivation will fail if no other tabs to activate
            this.$emit('update:active', this.localActive);
          }
        }
      }
    },
    disabled: function disabled(newVal, oldVal) {
      if (newVal !== oldVal) {
        if (newVal && this.localActive && this.bvTabs.firstTab) {
          this.localActive = false;
          this.bvTabs.firstTab();
        }
      }
    }
  },
  mounted: function mounted() {
    // Inform b-tabs of our presence
    this.registerTab(); // Initially show on mount if active and not disabled

    this.show = this.localActive;
  },
  updated: function updated() {
    // Force the tab button content to update (since slots are not reactive)
    // Only done if we have a title slot, as the title prop is reactive
    if (this.hasNormalizedSlot('title') && this.bvTabs.updateButton) {
      this.bvTabs.updateButton(this);
    }
  },
  destroyed: function destroyed() {
    // inform b-tabs of our departure
    this.unregisterTab();
  },
  methods: {
    // Private methods
    registerTab: function registerTab() {
      // Inform `b-tabs` of our presence
      this.bvTabs.registerTab && this.bvTabs.registerTab(this);
    },
    unregisterTab: function unregisterTab() {
      // Inform `b-tabs` of our departure
      this.bvTabs.unregisterTab && this.bvTabs.unregisterTab(this);
    },
    // Public methods
    activate: function activate() {
      if (this.bvTabs.activateTab && !this.disabled) {
        return this.bvTabs.activateTab(this);
      } else {
        // Not inside a <b-tabs> component or tab is disabled
        return false;
      }
    },
    deactivate: function deactivate() {
      if (this.bvTabs.deactivateTab && this.localActive) {
        return this.bvTabs.deactivateTab(this);
      } else {
        // Not inside a <b-tabs> component or not active to begin with
        return false;
      }
    }
  },
  render: function render(h) {
    var content = h(this.tag, {
      ref: 'panel',
      staticClass: 'tab-pane',
      class: this.tabClasses,
      directives: [{
        name: 'show',
        rawName: 'v-show',
        value: this.localActive,
        expression: 'localActive'
      }],
      attrs: {
        role: 'tabpanel',
        id: this.safeId(),
        tabindex: this.localActive && !this.bvTabs.noKeyNav ? '-1' : null,
        'aria-hidden': this.localActive ? 'false' : 'true',
        'aria-labelledby': this.controlledBy || null
      }
    }, // Render content lazily if requested
    [this.localActive || !this.computedLazy ? this.normalizeSlot('default') : h()]);
    return h(_bvTransition.default, {
      props: {
        mode: 'out-in',
        noFade: this.computedNoFade
      }
    }, [content]);
  }
});

exports.BTab = BTab;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../utils/bv-transition":"node_modules/bootstrap-vue/esm/utils/bv-transition.js"}],"node_modules/bootstrap-vue/esm/components/tabs/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BTabs", {
  enumerable: true,
  get: function () {
    return _tabs.BTabs;
  }
});
Object.defineProperty(exports, "BTab", {
  enumerable: true,
  get: function () {
    return _tab.BTab;
  }
});
exports.TabsPlugin = void 0;

var _tabs = require("./tabs");

var _tab = require("./tab");

var _plugins = require("../../utils/plugins");

var TabsPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BTabs: _tabs.BTabs,
    BTab: _tab.BTab
  }
});
exports.TabsPlugin = TabsPlugin;
},{"./tabs":"node_modules/bootstrap-vue/esm/components/tabs/tabs.js","./tab":"node_modules/bootstrap-vue/esm/components/tabs/tab.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/portal-vue/dist/portal-vue.common.js":[function(require,module,exports) {

 /*! 
  * portal-vue © Thorsten Lünborg, 2019 
  * 
  * Version: 2.1.6
  * 
  * LICENCE: MIT 
  * 
  * https://github.com/linusborg/portal-vue
  * 
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Vue = _interopDefault(require('vue'));

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

var inBrowser = typeof window !== 'undefined';
function freeze(item) {
  if (Array.isArray(item) || _typeof(item) === 'object') {
    return Object.freeze(item);
  }

  return item;
}
function combinePassengers(transports) {
  var slotProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return transports.reduce(function (passengers, transport) {
    var temp = transport.passengers[0];
    var newPassengers = typeof temp === 'function' ? temp(slotProps) : transport.passengers;
    return passengers.concat(newPassengers);
  }, []);
}
function stableSort(array, compareFn) {
  return array.map(function (v, idx) {
    return [idx, v];
  }).sort(function (a, b) {
    return compareFn(a[1], b[1]) || a[0] - b[0];
  }).map(function (c) {
    return c[1];
  });
}
function pick(obj, keys) {
  return keys.reduce(function (acc, key) {
    if (obj.hasOwnProperty(key)) {
      acc[key] = obj[key];
    }

    return acc;
  }, {});
}

var transports = {};
var targets = {};
var sources = {};
var Wormhole = Vue.extend({
  data: function data() {
    return {
      transports: transports,
      targets: targets,
      sources: sources,
      trackInstances: inBrowser
    };
  },
  methods: {
    open: function open(transport) {
      if (!inBrowser) return;
      var to = transport.to,
          from = transport.from,
          passengers = transport.passengers,
          _transport$order = transport.order,
          order = _transport$order === void 0 ? Infinity : _transport$order;
      if (!to || !from || !passengers) return;
      var newTransport = {
        to: to,
        from: from,
        passengers: freeze(passengers),
        order: order
      };
      var keys = Object.keys(this.transports);

      if (keys.indexOf(to) === -1) {
        Vue.set(this.transports, to, []);
      }

      var currentIndex = this.$_getTransportIndex(newTransport); // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays

      var newTransports = this.transports[to].slice(0);

      if (currentIndex === -1) {
        newTransports.push(newTransport);
      } else {
        newTransports[currentIndex] = newTransport;
      }

      this.transports[to] = stableSort(newTransports, function (a, b) {
        return a.order - b.order;
      });
    },
    close: function close(transport) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var to = transport.to,
          from = transport.from;
      if (!to || !from && force === false) return;

      if (!this.transports[to]) {
        return;
      }

      if (force) {
        this.transports[to] = [];
      } else {
        var index = this.$_getTransportIndex(transport);

        if (index >= 0) {
          // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays
          var newTransports = this.transports[to].slice(0);
          newTransports.splice(index, 1);
          this.transports[to] = newTransports;
        }
      }
    },
    registerTarget: function registerTarget(target, vm, force) {
      if (!inBrowser) return;

      if (this.trackInstances && !force && this.targets[target]) {
        console.warn("[portal-vue]: Target ".concat(target, " already exists"));
      }

      this.$set(this.targets, target, Object.freeze([vm]));
    },
    unregisterTarget: function unregisterTarget(target) {
      this.$delete(this.targets, target);
    },
    registerSource: function registerSource(source, vm, force) {
      if (!inBrowser) return;

      if (this.trackInstances && !force && this.sources[source]) {
        console.warn("[portal-vue]: source ".concat(source, " already exists"));
      }

      this.$set(this.sources, source, Object.freeze([vm]));
    },
    unregisterSource: function unregisterSource(source) {
      this.$delete(this.sources, source);
    },
    hasTarget: function hasTarget(to) {
      return !!(this.targets[to] && this.targets[to][0]);
    },
    hasSource: function hasSource(to) {
      return !!(this.sources[to] && this.sources[to][0]);
    },
    hasContentFor: function hasContentFor(to) {
      return !!this.transports[to] && !!this.transports[to].length;
    },
    // Internal
    $_getTransportIndex: function $_getTransportIndex(_ref) {
      var to = _ref.to,
          from = _ref.from;

      for (var i in this.transports[to]) {
        if (this.transports[to][i].from === from) {
          return +i;
        }
      }

      return -1;
    }
  }
});
var wormhole = new Wormhole(transports);

var _id = 1;
var Portal = Vue.extend({
  name: 'portal',
  props: {
    disabled: {
      type: Boolean
    },
    name: {
      type: String,
      default: function _default() {
        return String(_id++);
      }
    },
    order: {
      type: Number,
      default: 0
    },
    slim: {
      type: Boolean
    },
    slotProps: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    tag: {
      type: String,
      default: 'DIV'
    },
    to: {
      type: String,
      default: function _default() {
        return String(Math.round(Math.random() * 10000000));
      }
    }
  },
  created: function created() {
    var _this = this;

    this.$nextTick(function () {
      wormhole.registerSource(_this.name, _this);
    });
  },
  mounted: function mounted() {
    if (!this.disabled) {
      this.sendUpdate();
    }
  },
  updated: function updated() {
    if (this.disabled) {
      this.clear();
    } else {
      this.sendUpdate();
    }
  },
  beforeDestroy: function beforeDestroy() {
    wormhole.unregisterSource(this.name);
    this.clear();
  },
  watch: {
    to: function to(newValue, oldValue) {
      oldValue && oldValue !== newValue && this.clear(oldValue);
      this.sendUpdate();
    }
  },
  methods: {
    clear: function clear(target) {
      var closer = {
        from: this.name,
        to: target || this.to
      };
      wormhole.close(closer);
    },
    normalizeSlots: function normalizeSlots() {
      return this.$scopedSlots.default ? [this.$scopedSlots.default] : this.$slots.default;
    },
    normalizeOwnChildren: function normalizeOwnChildren(children) {
      return typeof children === 'function' ? children(this.slotProps) : children;
    },
    sendUpdate: function sendUpdate() {
      var slotContent = this.normalizeSlots();

      if (slotContent) {
        var transport = {
          from: this.name,
          to: this.to,
          passengers: _toConsumableArray(slotContent),
          order: this.order
        };
        wormhole.open(transport);
      } else {
        this.clear();
      }
    }
  },
  render: function render(h) {
    var children = this.$slots.default || this.$scopedSlots.default || [];
    var Tag = this.tag;

    if (children && this.disabled) {
      return children.length <= 1 && this.slim ? this.normalizeOwnChildren(children)[0] : h(Tag, [this.normalizeOwnChildren(children)]);
    } else {
      return this.slim ? h() : h(Tag, {
        class: {
          'v-portal': true
        },
        style: {
          display: 'none'
        },
        key: 'v-portal-placeholder'
      });
    }
  }
});

var PortalTarget = Vue.extend({
  name: 'portalTarget',
  props: {
    multiple: {
      type: Boolean,
      default: false
    },
    name: {
      type: String,
      required: true
    },
    slim: {
      type: Boolean,
      default: false
    },
    slotProps: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    tag: {
      type: String,
      default: 'div'
    },
    transition: {
      type: [String, Object, Function]
    }
  },
  data: function data() {
    return {
      transports: wormhole.transports,
      firstRender: true
    };
  },
  created: function created() {
    var _this = this;

    this.$nextTick(function () {
      wormhole.registerTarget(_this.name, _this);
    });
  },
  watch: {
    ownTransports: function ownTransports() {
      this.$emit('change', this.children().length > 0);
    },
    name: function name(newVal, oldVal) {
      /**
       * TODO
       * This should warn as well ...
       */
      wormhole.unregisterTarget(oldVal);
      wormhole.registerTarget(newVal, this);
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    if (this.transition) {
      this.$nextTick(function () {
        // only when we have a transition, because it causes a re-render
        _this2.firstRender = false;
      });
    }
  },
  beforeDestroy: function beforeDestroy() {
    wormhole.unregisterTarget(this.name);
  },
  computed: {
    ownTransports: function ownTransports() {
      var transports = this.transports[this.name] || [];

      if (this.multiple) {
        return transports;
      }

      return transports.length === 0 ? [] : [transports[transports.length - 1]];
    },
    passengers: function passengers() {
      return combinePassengers(this.ownTransports, this.slotProps);
    }
  },
  methods: {
    // can't be a computed prop because it has to "react" to $slot changes.
    children: function children() {
      return this.passengers.length !== 0 ? this.passengers : this.$scopedSlots.default ? this.$scopedSlots.default(this.slotProps) : this.$slots.default || [];
    },
    // can't be a computed prop because it has to "react" to this.children().
    noWrapper: function noWrapper() {
      var noWrapper = this.slim && !this.transition;

      if (noWrapper && this.children().length > 1) {
        console.warn('[portal-vue]: PortalTarget with `slim` option received more than one child element.');
      }

      return noWrapper;
    }
  },
  render: function render(h) {
    var noWrapper = this.noWrapper();
    var children = this.children();
    var Tag = this.transition || this.tag;
    return noWrapper ? children[0] : this.slim && !Tag ? h() : h(Tag, {
      props: {
        // if we have a transition component, pass the tag if it exists
        tag: this.transition && this.tag ? this.tag : undefined
      },
      class: {
        'vue-portal-target': true
      }
    }, children);
  }
});

var _id$1 = 0;
var portalProps = ['disabled', 'name', 'order', 'slim', 'slotProps', 'tag', 'to'];
var targetProps = ['multiple', 'transition'];
var MountingPortal = Vue.extend({
  name: 'MountingPortal',
  inheritAttrs: false,
  props: {
    append: {
      type: [Boolean, String]
    },
    bail: {
      type: Boolean
    },
    mountTo: {
      type: String,
      required: true
    },
    // Portal
    disabled: {
      type: Boolean
    },
    // name for the portal
    name: {
      type: String,
      default: function _default() {
        return 'mounted_' + String(_id$1++);
      }
    },
    order: {
      type: Number,
      default: 0
    },
    slim: {
      type: Boolean
    },
    slotProps: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    tag: {
      type: String,
      default: 'DIV'
    },
    // name for the target
    to: {
      type: String,
      default: function _default() {
        return String(Math.round(Math.random() * 10000000));
      }
    },
    // Target
    multiple: {
      type: Boolean,
      default: false
    },
    targetSlim: {
      type: Boolean
    },
    targetSlotProps: {
      type: Object,
      default: function _default() {
        return {};
      }
    },
    targetTag: {
      type: String,
      default: 'div'
    },
    transition: {
      type: [String, Object, Function]
    }
  },
  created: function created() {
    if (typeof document === 'undefined') return;
    var el = document.querySelector(this.mountTo);

    if (!el) {
      console.error("[portal-vue]: Mount Point '".concat(this.mountTo, "' not found in document"));
      return;
    }

    var props = this.$props; // Target already exists

    if (wormhole.targets[props.name]) {
      if (props.bail) {
        console.warn("[portal-vue]: Target ".concat(props.name, " is already mounted.\n        Aborting because 'bail: true' is set"));
      } else {
        this.portalTarget = wormhole.targets[props.name];
      }

      return;
    }

    var append = props.append;

    if (append) {
      var type = typeof append === 'string' ? append : 'DIV';
      var mountEl = document.createElement(type);
      el.appendChild(mountEl);
      el = mountEl;
    } // get props for target from $props
    // we have to rename a few of them


    var _props = pick(this.$props, targetProps);

    _props.slim = this.targetSlim;
    _props.tag = this.targetTag;
    _props.slotProps = this.targetSlotProps;
    _props.name = this.to;
    this.portalTarget = new PortalTarget({
      el: el,
      parent: this.$parent || this,
      propsData: _props
    });
  },
  beforeDestroy: function beforeDestroy() {
    var target = this.portalTarget;

    if (this.append) {
      var el = target.$el;
      el.parentNode.removeChild(el);
    }

    target.$destroy();
  },
  render: function render(h) {
    if (!this.portalTarget) {
      console.warn("[portal-vue] Target wasn't mounted");
      return h();
    } // if there's no "manual" scoped slot, so we create a <Portal> ourselves


    if (!this.$scopedSlots.manual) {
      var props = pick(this.$props, portalProps);
      return h(Portal, {
        props: props,
        attrs: this.$attrs,
        on: this.$listeners,
        scopedSlots: this.$scopedSlots
      }, this.$slots.default);
    } // else, we render the scoped slot


    var content = this.$scopedSlots.manual({
      to: this.to
    }); // if user used <template> for the scoped slot
    // content will be an array

    if (Array.isArray(content)) {
      content = content[0];
    }

    if (!content) return h();
    return content;
  }
});

function install(Vue$$1) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  Vue$$1.component(options.portalName || 'Portal', Portal);
  Vue$$1.component(options.portalTargetName || 'PortalTarget', PortalTarget);
  Vue$$1.component(options.MountingPortalName || 'MountingPortal', MountingPortal);
}

var index = {
  install: install
};

exports.default = index;
exports.Portal = Portal;
exports.PortalTarget = PortalTarget;
exports.MountingPortal = MountingPortal;
exports.Wormhole = wormhole;


},{"vue":"node_modules/vue/dist/vue.esm.js"}],"node_modules/bootstrap-vue/esm/components/toast/toaster.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BToaster = exports.DefaultTransition = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _portalVue = require("portal-vue");

var _warn = _interopRequireDefault(require("../../utils/warn"));

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// --- Constants ---
var NAME = 'BToaster';
var props = {
  name: {
    type: String,
    required: true
  },
  ariaLive: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'ariaLive');
    }
  },
  ariaAtomic: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'ariaAtomic');
    } // Allowed: 'true' or 'false' or null

  },
  role: {
    // Aria role
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'role');
    }
  }
  /*
  transition: {
    type: [Boolean, String, Object],
    default: false
  }
  */

}; // @vue/component

exports.props = props;

var DefaultTransition =
/*#__PURE__*/
_vue.default.extend({
  data: function data() {
    return {
      // Transition classes base name
      name: 'b-toaster'
    };
  },
  methods: {
    onAfterEnter: function onAfterEnter(el) {
      var _this = this; // Handle bug where enter-to class is not removed.
      // Bug is related to portal-vue and transition-groups.


      (0, _dom.requestAF)(function () {
        (0, _dom.removeClass)(el, "".concat(_this.name, "-enter-to")); // The *-move class is also stuck on elements that moved,
        // but there are no javascript hooks to handle after move.
      });
    }
  },
  render: function render(h) {
    return h('transition-group', {
      props: {
        tag: 'div',
        name: this.name
      },
      on: {
        afterEnter: this.onAfterEnter
      }
    }, this.$slots.default);
  }
}); // @vue/component


exports.DefaultTransition = DefaultTransition;

var BToaster =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  props: props,
  data: function data() {
    return {
      // We don't render on SSR or if a an existing target found
      doRender: false,
      dead: false,
      // Toaster names cannot change once created
      staticName: this.name
    };
  },
  beforeMount: function beforeMount() {
    var _this2 = this;

    this.staticName = this.name;
    /* istanbul ignore if */

    if (_portalVue.Wormhole.hasTarget(this.staticName)) {
      (0, _warn.default)("b-toaster: A <portal-target> with name '".concat(this.name, "' already exists in the document."));
      this.dead = true;
    } else {
      this.doRender = true;
      this.$once('hook:beforeDestroy', function () {
        // Let toasts made with `this.$bvToast.toast()` know that this toaster
        // is being destroyed and should should also destroy/hide themselves
        _this2.$root.$emit('bv::toaster::destroyed', _this2.staticName);
      });
    }
  },
  destroyed: function destroyed() {
    // Remove from DOM if needed

    /* istanbul ignore next: difficult to test */
    if (this.$el && this.$el.parentNode) {
      this.$el.parentNode.removeChild(this.$el);
    }
  },
  render: function render(h) {
    var $toaster = h('div', {
      class: ['d-none', {
        'b-dead-toaster': this.dead
      }]
    });

    if (this.doRender) {
      var $target = h(_portalVue.PortalTarget, {
        staticClass: 'b-toaster-slot',
        props: {
          name: this.staticName,
          multiple: true,
          tag: 'div',
          slim: false,
          // transition: this.transition || DefaultTransition
          transition: DefaultTransition
        }
      });
      $toaster = h('div', {
        staticClass: 'b-toaster',
        class: [this.staticName],
        attrs: {
          id: this.staticName,
          role: this.role || null,
          // Fallback to null to make sure attribute doesn't exist
          'aria-live': this.ariaLive,
          'aria-atomic': this.ariaAtomic
        }
      }, [$target]);
    }

    return $toaster;
  }
});

exports.BToaster = BToaster;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","portal-vue":"node_modules/portal-vue/dist/portal-vue.common.js","../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js"}],"node_modules/bootstrap-vue/esm/components/toast/toast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BToast = exports.props = void 0;

var _vue = _interopRequireDefault(require("../../utils/vue"));

var _portalVue = require("portal-vue");

var _bvTransition = _interopRequireDefault(require("../../utils/bv-transition"));

var _bvEvent = require("../../utils/bv-event.class");

var _config = require("../../utils/config");

var _dom = require("../../utils/dom");

var _id = _interopRequireDefault(require("../../mixins/id"));

var _listenOnRoot = _interopRequireDefault(require("../../mixins/listen-on-root"));

var _normalizeSlot = _interopRequireDefault(require("../../mixins/normalize-slot"));

var _scopedStyleAttrs = _interopRequireDefault(require("../../mixins/scoped-style-attrs"));

var _toaster = require("./toaster");

var _buttonClose = require("../button/button-close");

var _link = require("../link/link");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// --- Constants ---
var NAME = 'BToast';
var MIN_DURATION = 1000;
var EVENT_OPTIONS = {
  passive: true,
  capture: false
}; // --- Props ---

var props = {
  id: {
    // Even though the ID prop is provided by idMixin, we
    // add it here for $bvToast props filtering
    type: String,
    default: null
  },
  title: {
    type: String,
    default: null
  },
  toaster: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'toaster');
    }
  },
  visible: {
    type: Boolean,
    default: false
  },
  variant: {
    type: String,
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'variant');
    }
  },
  isStatus: {
    // Switches role to 'status' and aria-live to 'polite'
    type: Boolean,
    default: false
  },
  appendToast: {
    type: Boolean,
    default: false
  },
  noAutoHide: {
    type: Boolean,
    default: false
  },
  autoHideDelay: {
    type: [Number, String],
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'autoHideDelay');
    }
  },
  noCloseButton: {
    type: Boolean,
    default: false
  },
  noFade: {
    type: Boolean,
    default: false
  },
  noHoverPause: {
    type: Boolean,
    default: false
  },
  solid: {
    type: Boolean,
    default: false
  },
  toastClass: {
    type: [String, Object, Array],
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'toastClass');
    }
  },
  headerClass: {
    type: [String, Object, Array],
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'headerClass');
    }
  },
  bodyClass: {
    type: [String, Object, Array],
    default: function _default() {
      return (0, _config.getComponentConfig)(NAME, 'bodyClass');
    }
  },
  href: {
    type: String,
    default: null
  },
  to: {
    type: [String, Object],
    default: null
  },
  static: {
    // Render the toast in place, rather than in a portal-target
    type: Boolean,
    default: false
  }
}; // @vue/component

exports.props = props;

var BToast =
/*#__PURE__*/
_vue.default.extend({
  name: NAME,
  mixins: [_id.default, _listenOnRoot.default, _normalizeSlot.default, _scopedStyleAttrs.default],
  inheritAttrs: false,
  model: {
    prop: 'visible',
    event: 'change'
  },
  props: props,
  data: function data() {
    return {
      isMounted: false,
      doRender: false,
      localShow: false,
      isTransitioning: false,
      isHiding: false,
      order: 0,
      timer: null,
      dismissStarted: 0,
      resumeDismiss: 0
    };
  },
  computed: {
    bToastClasses: function bToastClasses() {
      return _defineProperty({
        'b-toast-solid': this.solid,
        'b-toast-append': this.appendToast,
        'b-toast-prepend': !this.appendToast
      }, "b-toast-".concat(this.variant), this.variant);
    },
    slotScope: function slotScope() {
      return {
        hide: this.hide
      };
    },
    computedDuration: function computedDuration() {
      // Minimum supported duration is 1 second
      return Math.max(parseInt(this.autoHideDelay, 10) || 0, MIN_DURATION);
    },
    computedToaster: function computedToaster() {
      return String(this.toaster);
    },
    transitionHandlers: function transitionHandlers() {
      return {
        beforeEnter: this.onBeforeEnter,
        afterEnter: this.onAfterEnter,
        beforeLeave: this.onBeforeLeave,
        afterLeave: this.onAfterLeave
      };
    }
  },
  watch: {
    visible: function visible(newVal) {
      newVal ? this.show() : this.hide();
    },
    localShow: function localShow(newVal) {
      if (newVal !== this.visible) {
        this.$emit('change', newVal);
      }
    },
    toaster: function toaster(newVal)
    /* istanbul ignore next */
    {
      var _this = this; // If toaster target changed, make sure toaster exists


      this.$nextTick(function () {
        return _this.ensureToaster;
      });
    },
    static: function _static(newVal)
    /* istanbul ignore next */
    {
      // If static changes to true, and the toast is showing,
      // ensure the toaster target exists
      if (newVal && this.localShow) {
        this.ensureToaster();
      }
    }
  },
  mounted: function mounted() {
    var _this2 = this;

    this.isMounted = true;
    this.$nextTick(function () {
      if (_this2.visible) {
        (0, _dom.requestAF)(function () {
          _this2.show();
        });
      }
    }); // Listen for global $root show events

    this.listenOnRoot('bv::show::toast', function (id) {
      if (id === _this2.safeId()) {
        _this2.show();
      }
    }); // Listen for global $root hide events

    this.listenOnRoot('bv::hide::toast', function (id) {
      if (!id || id === _this2.safeId()) {
        _this2.hide();
      }
    }); // Make sure we hide when toaster is destroyed

    /* istanbul ignore next: difficult to test */

    this.listenOnRoot('bv::toaster::destroyed', function (toaster) {
      /* istanbul ignore next */
      if (toaster === _this2.computedToaster) {
        /* istanbul ignore next */
        _this2.hide();
      }
    });
  },
  beforeDestroy: function beforeDestroy() {
    this.clearDismissTimer();
  },
  methods: {
    show: function show() {
      var _this3 = this;

      if (!this.localShow) {
        this.ensureToaster();
        var showEvt = this.buildEvent('show');
        this.emitEvent(showEvt);
        this.dismissStarted = this.resumeDismiss = 0;
        this.order = Date.now() * (this.appendToast ? 1 : -1);
        this.isHiding = false;
        this.doRender = true;
        this.$nextTick(function () {
          // We show the toast after we have rendered the portal and b-toast wrapper
          // so that screen readers will properly announce the toast
          (0, _dom.requestAF)(function () {
            _this3.localShow = true;
          });
        });
      }
    },
    hide: function hide() {
      var _this4 = this;

      if (this.localShow) {
        var hideEvt = this.buildEvent('hide');
        this.emitEvent(hideEvt);
        this.setHoverHandler(false);
        this.dismissStarted = this.resumeDismiss = 0;
        this.clearDismissTimer();
        this.isHiding = true;
        (0, _dom.requestAF)(function () {
          _this4.localShow = false;
        });
      }
    },
    buildEvent: function buildEvent(type) {
      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return new _bvEvent.BvEvent(type, _objectSpread({
        cancelable: false,
        target: this.$el || null,
        relatedTarget: null
      }, opts, {
        vueTarget: this,
        componentId: this.safeId()
      }));
    },
    emitEvent: function emitEvent(bvEvt) {
      var type = bvEvt.type;
      this.$root.$emit("bv::toast:".concat(type), bvEvt);
      this.$emit(type, bvEvt);
    },
    ensureToaster: function ensureToaster() {
      if (this.static) {
        return;
      }

      if (!_portalVue.Wormhole.hasTarget(this.computedToaster)) {
        var div = document.createElement('div');
        document.body.appendChild(div);
        var toaster = new _toaster.BToaster({
          parent: this.$root,
          propsData: {
            name: this.computedToaster
          }
        });
        toaster.$mount(div);
      }
    },
    startDismissTimer: function startDismissTimer() {
      this.clearDismissTimer();

      if (!this.noAutoHide) {
        this.timer = setTimeout(this.hide, this.resumeDismiss || this.computedDuration);
        this.dismissStarted = Date.now();
        this.resumeDismiss = 0;
      }
    },
    clearDismissTimer: function clearDismissTimer() {
      clearTimeout(this.timer);
      this.timer = null;
    },
    setHoverHandler: function setHoverHandler(on) {
      var method = on ? _dom.eventOn : _dom.eventOff;
      var el = this.$refs['b-toast'];
      method(el, 'mouseenter', this.onPause, EVENT_OPTIONS);
      method(el, 'mouseleave', this.onUnPause, EVENT_OPTIONS);
    },
    onPause: function onPause(evt) {
      // Determine time remaining, and then pause timer
      if (this.noAutoHide || this.noHoverPause || !this.timer || this.resumeDismiss) {
        return;
      }

      var passed = Date.now() - this.dismissStarted;

      if (passed > 0) {
        this.clearDismissTimer();
        this.resumeDismiss = Math.max(this.computedDuration - passed, MIN_DURATION);
      }
    },
    onUnPause: function onUnPause(evt) {
      // Restart timer with max of time remaining or 1 second
      if (this.noAutoHide || this.noHoverPause || !this.resumeDismiss) {
        this.resumeDismiss = this.dismissStarted = 0;
        return;
      }

      this.startDismissTimer();
    },
    onLinkClick: function onLinkClick() {
      var _this5 = this; // We delay the close to allow time for the
      // browser to process the link click


      this.$nextTick(function () {
        (0, _dom.requestAF)(function () {
          _this5.hide();
        });
      });
    },
    onBeforeEnter: function onBeforeEnter() {
      this.isTransitioning = true;
    },
    onAfterEnter: function onAfterEnter() {
      this.isTransitioning = false;
      var hiddenEvt = this.buildEvent('shown');
      this.emitEvent(hiddenEvt);
      this.startDismissTimer();
      this.setHoverHandler(true);
    },
    onBeforeLeave: function onBeforeLeave() {
      this.isTransitioning = true;
    },
    onAfterLeave: function onAfterLeave() {
      this.isTransitioning = false;
      this.order = 0;
      this.resumeDismiss = this.dismissStarted = 0;
      var hiddenEvt = this.buildEvent('hidden');
      this.emitEvent(hiddenEvt);
      this.doRender = false;
    },
    makeToast: function makeToast(h) {
      var _this6 = this; // Render helper for generating the toast
      // Assemble the header content


      var $headerContent = [];
      var $title = this.normalizeSlot('toast-title', this.slotScope);

      if ($title) {
        $headerContent.push($title);
      } else if (this.title) {
        $headerContent.push(h('strong', {
          staticClass: 'mr-2'
        }, this.title));
      }

      if (!this.noCloseButton) {
        $headerContent.push(h(_buttonClose.BButtonClose, {
          staticClass: 'ml-auto mb-1',
          on: {
            click: function click(evt) {
              _this6.hide();
            }
          }
        }));
      } // Assemble the header (if needed)


      var $header = h();

      if ($headerContent.length > 0) {
        $header = h('header', {
          staticClass: 'toast-header',
          class: this.headerClass
        }, $headerContent);
      } // Toast body


      var isLink = this.href || this.to;
      var $body = h(isLink ? _link.BLink : 'div', {
        staticClass: 'toast-body',
        class: this.bodyClass,
        props: isLink ? {
          to: this.to,
          href: this.href
        } : {},
        on: isLink ? {
          click: this.onLinkClick
        } : {}
      }, [this.normalizeSlot('default', this.slotScope) || h()]); // Build the toast

      var $toast = h('div', {
        key: "toast-".concat(this._uid),
        ref: 'toast',
        staticClass: 'toast',
        class: this.toastClass,
        attrs: _objectSpread({}, this.$attrs, {
          tabindex: '0',
          id: this.safeId()
        })
      }, [$header, $body]);
      return $toast;
    }
  },
  render: function render(h) {
    if (!this.doRender || !this.isMounted) {
      return h();
    }

    var name = "b-toast-".concat(this._uid); // If scoped styles are applied and the toast is not static,
    // make sure the scoped style data attribute is applied

    var scopedStyleAttrs = !this.static ? this.scopedStyleAttrs : {};
    return h(_portalVue.Portal, {
      props: {
        name: name,
        to: this.computedToaster,
        order: this.order,
        slim: true,
        disabled: this.static
      }
    }, [h('div', {
      key: name,
      ref: 'b-toast',
      staticClass: 'b-toast',
      class: this.bToastClasses,
      attrs: _objectSpread({}, scopedStyleAttrs, {
        id: this.safeId('_toast_outer'),
        role: this.isHiding ? null : this.isStatus ? 'status' : 'alert',
        'aria-live': this.isHiding ? null : this.isStatus ? 'polite' : 'assertive',
        'aria-atomic': this.isHiding ? null : 'true'
      })
    }, [h(_bvTransition.default, {
      props: {
        noFade: this.noFade
      },
      on: this.transitionHandlers
    }, [this.localShow ? this.makeToast(h) : h()])])]);
  }
});

exports.BToast = BToast;
},{"../../utils/vue":"node_modules/bootstrap-vue/esm/utils/vue.js","portal-vue":"node_modules/portal-vue/dist/portal-vue.common.js","../../utils/bv-transition":"node_modules/bootstrap-vue/esm/utils/bv-transition.js","../../utils/bv-event.class":"node_modules/bootstrap-vue/esm/utils/bv-event.class.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../mixins/id":"node_modules/bootstrap-vue/esm/mixins/id.js","../../mixins/listen-on-root":"node_modules/bootstrap-vue/esm/mixins/listen-on-root.js","../../mixins/normalize-slot":"node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","../../mixins/scoped-style-attrs":"node_modules/bootstrap-vue/esm/mixins/scoped-style-attrs.js","./toaster":"node_modules/bootstrap-vue/esm/components/toast/toaster.js","../button/button-close":"node_modules/bootstrap-vue/esm/components/button/button-close.js","../link/link":"node_modules/bootstrap-vue/esm/components/link/link.js"}],"node_modules/bootstrap-vue/esm/components/toast/helpers/bv-toast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVToastPlugin = void 0;

var _array = require("../../../utils/array");

var _config = require("../../../utils/config");

var _dom = require("../../../utils/dom");

var _inspect = require("../../../utils/inspect");

var _object = require("../../../utils/object");

var _plugins = require("../../../utils/plugins");

var _warn = require("../../../utils/warn");

var _toast = require("../toast");

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}
/**
 * Plugin for adding `$bvToast` property to all Vue instances
 */


// --- Constants ---
var PROP_NAME = '$bvToast';
var PROP_NAME_PRIV = '_bv__toast'; // Base toast props that are allowed
// Some may be ignored or overridden on some message boxes
// Prop ID is allowed, but really only should be used for testing
// We need to add it in explicitly as it comes from the `idMixin`

var BASE_PROPS = ['id'].concat(_toConsumableArray((0, _object.keys)((0, _object.omit)(_toast.props, ['static', 'visible'])))); // Map prop names to toast slot names

var propsToSlots = {
  toastContent: 'default',
  title: 'toast-title'
}; // --- Utility methods ---
// Method to filter only recognized props that are not undefined

var filterOptions = function filterOptions(options) {
  return BASE_PROPS.reduce(function (memo, key) {
    if (!(0, _inspect.isUndefined)(options[key])) {
      memo[key] = options[key];
    }

    return memo;
  }, {});
}; // Method to install `$bvToast` VM injection


var plugin = function plugin(Vue) {
  // Create a private sub-component constructor that
  // extends BToast and self-destructs after hidden
  // @vue/component
  var BToastPop = Vue.extend({
    name: 'BToastPop',
    extends: _toast.BToast,
    destroyed: function destroyed() {
      // Make sure we not in document any more
      if (this.$el && this.$el.parentNode) {
        this.$el.parentNode.removeChild(this.$el);
      }
    },
    mounted: function mounted() {
      var self = this; // Self destruct handler

      var handleDestroy = function handleDestroy() {
        // Ensure the toast has been force hidden
        self.localShow = false;
        self.doRender = false;
        self.$nextTick(function () {
          self.$nextTick(function () {
            // In a `requestAF()` to release control back to application
            // and to allow the portal-target time to remove the content
            (0, _dom.requestAF)(function () {
              self.$destroy();
            });
          });
        });
      }; // Self destruct if parent destroyed


      this.$parent.$once('hook:destroyed', handleDestroy); // Self destruct after hidden

      this.$once('hidden', handleDestroy); // Self destruct when toaster is destroyed

      this.listenOnRoot('bv::toaster::destroyed', function (toaster) {
        /* istanbul ignore next: hard to test */
        if (toaster === self.toaster) {
          handleDestroy();
        }
      });
    }
  }); // Private method to generate the on-demand toast

  var makeToast = function makeToast(props, $parent) {
    if ((0, _warn.warnNotClient)(PROP_NAME)) {
      /* istanbul ignore next */
      return;
    } // Create an instance of `BToastPop` component


    var toast = new BToastPop({
      // We set parent as the local VM so these toasts can emit events on the
      // app `$root`, and it ensures `BToast` is destroyed when parent is destroyed
      parent: $parent,
      propsData: _objectSpread({}, filterOptions((0, _config.getComponentConfig)('BToast') || {}), {}, (0, _object.omit)(props, (0, _object.keys)(propsToSlots)), {
        // Props that can't be overridden
        static: false,
        visible: true
      })
    }); // Convert certain props to slots

    (0, _object.keys)(propsToSlots).forEach(function (prop) {
      var value = props[prop];

      if (!(0, _inspect.isUndefined)(value)) {
        // Can be a string, or array of VNodes
        if (prop === 'title' && (0, _inspect.isString)(value)) {
          // Special case for title if it is a string, we wrap in a <strong>
          value = [$parent.$createElement('strong', {
            class: 'mr-2'
          }, value)];
        }

        toast.$slots[propsToSlots[prop]] = (0, _array.concat)(value);
      }
    }); // Create a mount point (a DIV) and mount it (which triggers the show)

    var div = document.createElement('div');
    document.body.appendChild(div);
    toast.$mount(div);
  }; // Declare BvToast instance property class


  var BvToast =
  /*#__PURE__*/
  function () {
    function BvToast(vm) {
      _classCallCheck(this, BvToast); // Assign the new properties to this instance


      (0, _object.assign)(this, {
        _vm: vm,
        _root: vm.$root
      }); // Set these properties as read-only and non-enumerable

      (0, _object.defineProperties)(this, {
        _vm: (0, _object.readonlyDescriptor)(),
        _root: (0, _object.readonlyDescriptor)()
      });
    } // --- Public Instance methods ---
    // Opens a user defined toast and returns immediately


    _createClass(BvToast, [{
      key: "toast",
      value: function toast(content) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (!content || (0, _warn.warnNotClient)(PROP_NAME)) {
          /* istanbul ignore next */
          return;
        }

        makeToast(_objectSpread({}, filterOptions(options), {
          toastContent: content
        }), this._vm);
      } // shows a `<b-toast>` component with the specified ID

    }, {
      key: "show",
      value: function show(id) {
        if (id) {
          this._root.$emit('bv::show::toast', id);
        }
      } // Hide a toast with specified ID, or if not ID all toasts

    }, {
      key: "hide",
      value: function hide() {
        var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

        this._root.$emit('bv::hide::toast', id);
      }
    }]);

    return BvToast;
  }(); // Add our instance mixin


  Vue.mixin({
    beforeCreate: function beforeCreate() {
      // Because we need access to `$root` for `$emits`, and VM for parenting,
      // we have to create a fresh instance of `BvToast` for each VM
      this[PROP_NAME_PRIV] = new BvToast(this);
    }
  }); // Define our read-only `$bvToast` instance property
  // Placed in an if just in case in HMR mode
  // eslint-disable-next-line no-prototype-builtins

  if (!Vue.prototype.hasOwnProperty(PROP_NAME)) {
    (0, _object.defineProperty)(Vue.prototype, PROP_NAME, {
      get: function get() {
        /* istanbul ignore next */
        if (!this || !this[PROP_NAME_PRIV]) {
          (0, _warn.warn)("'".concat(PROP_NAME, "' must be accessed from a Vue instance 'this' context"));
        }

        return this[PROP_NAME_PRIV];
      }
    });
  }
};

var BVToastPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  plugins: {
    plugin: plugin
  }
});
exports.BVToastPlugin = BVToastPlugin;
},{"../../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js","../../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../toast":"node_modules/bootstrap-vue/esm/components/toast/toast.js"}],"node_modules/bootstrap-vue/esm/components/toast/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BToast", {
  enumerable: true,
  get: function () {
    return _toast.BToast;
  }
});
Object.defineProperty(exports, "BToaster", {
  enumerable: true,
  get: function () {
    return _toaster.BToaster;
  }
});
exports.ToastPlugin = void 0;

var _bvToast = require("./helpers/bv-toast");

var _toast = require("./toast");

var _toaster = require("./toaster");

var _plugins = require("../../utils/plugins");

var ToastPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BToast: _toast.BToast,
    BToaster: _toaster.BToaster
  },
  // $bvToast injection
  plugins: {
    BVToastPlugin: _bvToast.BVToastPlugin
  }
});
exports.ToastPlugin = ToastPlugin;
},{"./helpers/bv-toast":"node_modules/bootstrap-vue/esm/components/toast/helpers/bv-toast.js","./toast":"node_modules/bootstrap-vue/esm/components/toast/toast.js","./toaster":"node_modules/bootstrap-vue/esm/components/toast/toaster.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/directives/tooltip/tooltip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VBTooltip = void 0;

var _getScopeId = _interopRequireDefault(require("../../utils/get-scope-id"));

var _looseEqual = _interopRequireDefault(require("../../utils/loose-equal"));

var _array = require("../../utils/array");

var _config = require("../../utils/config");

var _env = require("../../utils/env");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

var _bvTooltip = require("../../components/tooltip/helpers/bv-tooltip");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

// Key which we use to store tooltip object on element
var BV_TOOLTIP = '__BV_Tooltip__'; // Default trigger

var DefaultTrigger = 'hover focus'; // Valid event triggers

var validTriggers = {
  focus: true,
  hover: true,
  click: true,
  blur: true,
  manual: true
}; // Directive modifier test regular expressions. Pre-compile for performance

var htmlRE = /^html$/i;
var noFadeRE = /^nofade$/i;
var placementRE = /^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/i;
var boundaryRE = /^(window|viewport|scrollParent)$/i;
var delayRE = /^d\d+$/i;
var delayShowRE = /^ds\d+$/i;
var delayHideRE = /^dh\d+$/i;
var offsetRE = /^o-?\d+$/i;
var variantRE = /^v-.+$/i; // Build a Tooltip config based on bindings (if any)
// Arguments and modifiers take precedence over passed value config object

var parseBindings = function parseBindings(bindings, vnode)
/* istanbul ignore next: not easy to test */
{
  // We start out with a basic config
  var NAME = 'BTooltip'; // Default config

  var config = {
    title: undefined,
    trigger: '',
    // Default set below if needed
    placement: 'top',
    fallbackPlacement: 'flip',
    container: false,
    // Default of body
    animation: true,
    offset: 0,
    id: null,
    html: false,
    disabled: false,
    delay: (0, _config.getComponentConfig)(NAME, 'delay'),
    boundary: String((0, _config.getComponentConfig)(NAME, 'boundary')),
    boundaryPadding: parseInt((0, _config.getComponentConfig)(NAME, 'boundaryPadding'), 10) || 0,
    variant: (0, _config.getComponentConfig)(NAME, 'variant'),
    customClass: (0, _config.getComponentConfig)(NAME, 'customClass')
  }; // Process `bindings.value`

  if ((0, _inspect.isString)(bindings.value) || (0, _inspect.isNumber)(bindings.value)) {
    // Value is tooltip content (HTML optionally supported)
    config.title = bindings.value;
  } else if ((0, _inspect.isFunction)(bindings.value)) {
    // Title generator function
    config.title = bindings.value;
  } else if ((0, _inspect.isPlainObject)(bindings.value)) {
    // Value is config object, so merge
    config = _objectSpread({}, config, {}, bindings.value);
  } // If title is not provided, try title attribute


  if ((0, _inspect.isUndefined)(config.title)) {
    // Try attribute
    var data = vnode.data || {};
    config.title = data.attrs && !(0, _inspect.isUndefinedOrNull)(data.attrs.title) ? data.attrs.title : undefined;
  } // Normalize delay


  if (!(0, _inspect.isPlainObject)(config.delay)) {
    config.delay = {
      show: parseInt(config.delay, 10) || 0,
      hide: parseInt(config.delay, 10) || 0
    };
  } // If argument, assume element ID of container element


  if (bindings.arg) {
    // Element ID specified as arg
    // We must prepend '#' to become a CSS selector
    config.container = "#".concat(bindings.arg);
  } // Process modifiers


  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {
    if (htmlRE.test(mod)) {
      // Title allows HTML
      config.html = true;
    } else if (noFadeRE.test(mod)) {
      // No animation
      config.animation = false;
    } else if (placementRE.test(mod)) {
      // Placement of tooltip
      config.placement = mod;
    } else if (boundaryRE.test(mod)) {
      // Boundary of tooltip
      mod = mod === 'scrollparent' ? 'scrollParent' : mod;
      config.boundary = mod;
    } else if (delayRE.test(mod)) {
      // Delay value
      var delay = parseInt(mod.slice(1), 10) || 0;
      config.delay.show = delay;
      config.delay.hide = delay;
    } else if (delayShowRE.test(mod)) {
      // Delay show value
      config.delay.show = parseInt(mod.slice(2), 10) || 0;
    } else if (delayHideRE.test(mod)) {
      // Delay hide value
      config.delay.hide = parseInt(mod.slice(2), 10) || 0;
    } else if (offsetRE.test(mod)) {
      // Offset value, negative allowed
      config.offset = parseInt(mod.slice(1), 10) || 0;
    } else if (variantRE.test(mod)) {
      // Variant
      config.variant = mod.slice(2) || null;
    }
  }); // Special handling of event trigger modifiers trigger is
  // a space separated list

  var selectedTriggers = {}; // Parse current config object trigger

  (0, _array.concat)(config.trigger || '').filter(Boolean).join(' ').trim().toLowerCase().split(/\s+/).forEach(function (trigger) {
    if (validTriggers[trigger]) {
      selectedTriggers[trigger] = true;
    }
  }); // Parse modifiers for triggers

  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {
    mod = mod.toLowerCase();

    if (validTriggers[mod]) {
      // If modifier is a valid trigger
      selectedTriggers[mod] = true;
    }
  }); // Sanitize triggers

  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');

  if (config.trigger === 'blur') {
    // Blur by itself is useless, so convert it to 'focus'
    config.trigger = 'focus';
  }

  if (!config.trigger) {
    // Use default trigger
    config.trigger = DefaultTrigger;
  } // Return the config


  return config;
}; // Add/update Tooltip on our element


var applyTooltip = function applyTooltip(el, bindings, vnode) {
  if (!_env.isBrowser) {
    /* istanbul ignore next */
    return;
  }

  var config = parseBindings(bindings, vnode);

  if (!el[BV_TOOLTIP]) {
    var $parent = vnode.context;
    el[BV_TOOLTIP] = new _bvTooltip.BVTooltip({
      parent: $parent,
      // Add the parent's scoped style attribute data
      _scopeId: (0, _getScopeId.default)($parent, undefined)
    });
    el[BV_TOOLTIP].__bv_prev_data__ = {};
    el[BV_TOOLTIP].$on('show', function ()
    /* istanbul ignore next: for now */
    {
      // Before showing the tooltip, we update the title if it is a function
      if ((0, _inspect.isFunction)(config.title)) {
        el[BV_TOOLTIP].updateData({
          title: config.title()
        });
      }
    });
  }

  var data = {
    title: config.title,
    triggers: config.trigger,
    placement: config.placement,
    fallbackPlacement: config.fallbackPlacement,
    variant: config.variant,
    customClass: config.customClass,
    container: config.container,
    boundary: config.boundary,
    delay: config.delay,
    offset: config.offset,
    noFade: !config.animation,
    id: config.id,
    disabled: config.disabled,
    html: config.html
  };
  var oldData = el[BV_TOOLTIP].__bv_prev_data__;
  el[BV_TOOLTIP].__bv_prev_data__ = data;

  if (!(0, _looseEqual.default)(data, oldData)) {
    // We only update the instance if data has changed
    var newData = {
      target: el
    };
    (0, _object.keys)(data).forEach(function (prop) {
      // We only pass data properties that have changed
      if (data[prop] !== oldData[prop]) {
        // if title is a function, we execute it here
        newData[prop] = prop === 'title' && (0, _inspect.isFunction)(data[prop]) ? data[prop]() : data[prop];
      }
    });
    el[BV_TOOLTIP].updateData(newData);
  }
}; // Remove Tooltip on our element


var removeTooltip = function removeTooltip(el) {
  if (el[BV_TOOLTIP]) {
    el[BV_TOOLTIP].$destroy();
    el[BV_TOOLTIP] = null;
  }

  delete el[BV_TOOLTIP];
}; // Export our directive


var VBTooltip = {
  bind: function bind(el, bindings, vnode) {
    applyTooltip(el, bindings, vnode);
  },
  // We use `componentUpdated` here instead of `update`, as the former
  // waits until the containing component and children have finished updating
  componentUpdated: function componentUpdated(el, bindings, vnode) {
    // Performed in a `$nextTick()` to prevent render update loops
    vnode.context.$nextTick(function () {
      applyTooltip(el, bindings, vnode);
    });
  },
  unbind: function unbind(el) {
    removeTooltip(el);
  }
};
exports.VBTooltip = VBTooltip;
},{"../../utils/get-scope-id":"node_modules/bootstrap-vue/esm/utils/get-scope-id.js","../../utils/loose-equal":"node_modules/bootstrap-vue/esm/utils/loose-equal.js","../../utils/array":"node_modules/bootstrap-vue/esm/utils/array.js","../../utils/config":"node_modules/bootstrap-vue/esm/utils/config.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../components/tooltip/helpers/bv-tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js"}],"node_modules/bootstrap-vue/esm/directives/tooltip/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "VBTooltip", {
  enumerable: true,
  get: function () {
    return _tooltip.VBTooltip;
  }
});
exports.VBTooltipPlugin = void 0;

var _tooltip = require("./tooltip");

var _plugins = require("../../utils/plugins");

var VBTooltipPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  directives: {
    VBTooltip: _tooltip.VBTooltip
  }
});
exports.VBTooltipPlugin = VBTooltipPlugin;
},{"./tooltip":"node_modules/bootstrap-vue/esm/directives/tooltip/tooltip.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/tooltip/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BTooltip", {
  enumerable: true,
  get: function () {
    return _tooltip.BTooltip;
  }
});
exports.TooltipPlugin = void 0;

var _tooltip = require("./tooltip");

var _tooltip2 = require("../../directives/tooltip");

var _plugins = require("../../utils/plugins");

var TooltipPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  components: {
    BTooltip: _tooltip.BTooltip
  },
  plugins: {
    VBTooltipPlugin: _tooltip2.VBTooltipPlugin
  }
});
exports.TooltipPlugin = TooltipPlugin;
},{"./tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","../../directives/tooltip":"node_modules/bootstrap-vue/esm/directives/tooltip/index.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/components/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.componentsPlugin = void 0;

var _plugins = require("../utils/plugins");

var _alert = require("./alert");

var _badge = require("./badge");

var _breadcrumb = require("./breadcrumb");

var _button = require("./button");

var _buttonGroup = require("./button-group");

var _buttonToolbar = require("./button-toolbar");

var _card = require("./card");

var _carousel = require("./carousel");

var _collapse = require("./collapse");

var _dropdown = require("./dropdown");

var _embed = require("./embed");

var _form = require("./form");

var _formGroup = require("./form-group");

var _formCheckbox = require("./form-checkbox");

var _formRadio = require("./form-radio");

var _formInput = require("./form-input");

var _formTextarea = require("./form-textarea");

var _formFile = require("./form-file");

var _formSelect = require("./form-select");

var _image = require("./image");

var _inputGroup = require("./input-group");

var _jumbotron = require("./jumbotron");

var _layout = require("./layout");

var _link = require("./link");

var _listGroup = require("./list-group");

var _media = require("./media");

var _modal = require("./modal");

var _nav = require("./nav");

var _navbar = require("./navbar");

var _pagination = require("./pagination");

var _paginationNav = require("./pagination-nav");

var _popover = require("./popover");

var _progress = require("./progress");

var _spinner = require("./spinner");

var _table = require("./table");

var _tabs = require("./tabs");

var _toast = require("./toast");

var _tooltip = require("./tooltip");

// Component group plugins
// Table plugin includes TableLitePlugin and TableSimplePlugin
// Main plugin to install all component group plugins
var componentsPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  plugins: {
    AlertPlugin: _alert.AlertPlugin,
    BadgePlugin: _badge.BadgePlugin,
    BreadcrumbPlugin: _breadcrumb.BreadcrumbPlugin,
    ButtonPlugin: _button.ButtonPlugin,
    ButtonGroupPlugin: _buttonGroup.ButtonGroupPlugin,
    ButtonToolbarPlugin: _buttonToolbar.ButtonToolbarPlugin,
    CardPlugin: _card.CardPlugin,
    CarouselPlugin: _carousel.CarouselPlugin,
    CollapsePlugin: _collapse.CollapsePlugin,
    DropdownPlugin: _dropdown.DropdownPlugin,
    EmbedPlugin: _embed.EmbedPlugin,
    FormPlugin: _form.FormPlugin,
    FormGroupPlugin: _formGroup.FormGroupPlugin,
    FormCheckboxPlugin: _formCheckbox.FormCheckboxPlugin,
    FormRadioPlugin: _formRadio.FormRadioPlugin,
    FormInputPlugin: _formInput.FormInputPlugin,
    FormTextareaPlugin: _formTextarea.FormTextareaPlugin,
    FormFilePlugin: _formFile.FormFilePlugin,
    FormSelectPlugin: _formSelect.FormSelectPlugin,
    ImagePlugin: _image.ImagePlugin,
    InputGroupPlugin: _inputGroup.InputGroupPlugin,
    JumbotronPlugin: _jumbotron.JumbotronPlugin,
    LayoutPlugin: _layout.LayoutPlugin,
    LinkPlugin: _link.LinkPlugin,
    ListGroupPlugin: _listGroup.ListGroupPlugin,
    MediaPlugin: _media.MediaPlugin,
    ModalPlugin: _modal.ModalPlugin,
    NavPlugin: _nav.NavPlugin,
    NavbarPlugin: _navbar.NavbarPlugin,
    PaginationPlugin: _pagination.PaginationPlugin,
    PaginationNavPlugin: _paginationNav.PaginationNavPlugin,
    PopoverPlugin: _popover.PopoverPlugin,
    ProgressPlugin: _progress.ProgressPlugin,
    SpinnerPlugin: _spinner.SpinnerPlugin,
    TablePlugin: _table.TablePlugin,
    TabsPlugin: _tabs.TabsPlugin,
    ToastPlugin: _toast.ToastPlugin,
    TooltipPlugin: _tooltip.TooltipPlugin
  }
});
exports.componentsPlugin = componentsPlugin;
},{"../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js","./alert":"node_modules/bootstrap-vue/esm/components/alert/index.js","./badge":"node_modules/bootstrap-vue/esm/components/badge/index.js","./breadcrumb":"node_modules/bootstrap-vue/esm/components/breadcrumb/index.js","./button":"node_modules/bootstrap-vue/esm/components/button/index.js","./button-group":"node_modules/bootstrap-vue/esm/components/button-group/index.js","./button-toolbar":"node_modules/bootstrap-vue/esm/components/button-toolbar/index.js","./card":"node_modules/bootstrap-vue/esm/components/card/index.js","./carousel":"node_modules/bootstrap-vue/esm/components/carousel/index.js","./collapse":"node_modules/bootstrap-vue/esm/components/collapse/index.js","./dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/index.js","./embed":"node_modules/bootstrap-vue/esm/components/embed/index.js","./form":"node_modules/bootstrap-vue/esm/components/form/index.js","./form-group":"node_modules/bootstrap-vue/esm/components/form-group/index.js","./form-checkbox":"node_modules/bootstrap-vue/esm/components/form-checkbox/index.js","./form-radio":"node_modules/bootstrap-vue/esm/components/form-radio/index.js","./form-input":"node_modules/bootstrap-vue/esm/components/form-input/index.js","./form-textarea":"node_modules/bootstrap-vue/esm/components/form-textarea/index.js","./form-file":"node_modules/bootstrap-vue/esm/components/form-file/index.js","./form-select":"node_modules/bootstrap-vue/esm/components/form-select/index.js","./image":"node_modules/bootstrap-vue/esm/components/image/index.js","./input-group":"node_modules/bootstrap-vue/esm/components/input-group/index.js","./jumbotron":"node_modules/bootstrap-vue/esm/components/jumbotron/index.js","./layout":"node_modules/bootstrap-vue/esm/components/layout/index.js","./link":"node_modules/bootstrap-vue/esm/components/link/index.js","./list-group":"node_modules/bootstrap-vue/esm/components/list-group/index.js","./media":"node_modules/bootstrap-vue/esm/components/media/index.js","./modal":"node_modules/bootstrap-vue/esm/components/modal/index.js","./nav":"node_modules/bootstrap-vue/esm/components/nav/index.js","./navbar":"node_modules/bootstrap-vue/esm/components/navbar/index.js","./pagination":"node_modules/bootstrap-vue/esm/components/pagination/index.js","./pagination-nav":"node_modules/bootstrap-vue/esm/components/pagination-nav/index.js","./popover":"node_modules/bootstrap-vue/esm/components/popover/index.js","./progress":"node_modules/bootstrap-vue/esm/components/progress/index.js","./spinner":"node_modules/bootstrap-vue/esm/components/spinner/index.js","./table":"node_modules/bootstrap-vue/esm/components/table/index.js","./tabs":"node_modules/bootstrap-vue/esm/components/tabs/index.js","./toast":"node_modules/bootstrap-vue/esm/components/toast/index.js","./tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/index.js"}],"node_modules/bootstrap-vue/esm/directives/modal/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "VBModal", {
  enumerable: true,
  get: function () {
    return _modal.VBModal;
  }
});
exports.VBModalPlugin = void 0;

var _modal = require("./modal");

var _plugins = require("../../utils/plugins");

var VBModalPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  directives: {
    VBModal: _modal.VBModal
  }
});
exports.VBModalPlugin = VBModalPlugin;
},{"./modal":"node_modules/bootstrap-vue/esm/directives/modal/modal.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.class.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _observeDom = _interopRequireDefault(require("../../utils/observe-dom"));

var _warn = _interopRequireDefault(require("../../utils/warn"));

var _dom = require("../../utils/dom");

var _inspect = require("../../utils/inspect");

var _object = require("../../utils/object");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
/*
 * ScrollSpy class definition
 */


/*
 * Constants / Defaults
 */
var NAME = 'v-b-scrollspy';
var ACTIVATE_EVENT = 'bv::scrollspy::activate';
var Default = {
  element: 'body',
  offset: 10,
  method: 'auto',
  throttle: 75
};
var DefaultType = {
  element: '(string|element|component)',
  offset: 'number',
  method: 'string',
  throttle: 'number'
};
var ClassName = {
  DROPDOWN_ITEM: 'dropdown-item',
  ACTIVE: 'active'
};
var Selector = {
  ACTIVE: '.active',
  NAV_LIST_GROUP: '.nav, .list-group',
  NAV_LINKS: '.nav-link',
  NAV_ITEMS: '.nav-item',
  LIST_ITEMS: '.list-group-item',
  DROPDOWN: '.dropdown, .dropup',
  DROPDOWN_ITEMS: '.dropdown-item',
  DROPDOWN_TOGGLE: '.dropdown-toggle'
};
var OffsetMethod = {
  OFFSET: 'offset',
  POSITION: 'position'
}; // HREFs must end with a hash followed by at least one non-hash character.
// HREFs in the links are assumed to point to non-external links.
// Comparison to the current page base URL is not performed!

var HREF_REGEX = /^.*(#[^#]+)$/; // Transition Events

var TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd']; // Options for events

var EventOptions = {
  passive: true,
  capture: false
};
/*
 * Utility Methods
 */
// Better var type detection

var toType = function toType(obj)
/* istanbul ignore next: not easy to test */
{
  return (0, _object.toString)(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
}; // Check config properties for expected types


var typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)
/* istanbul ignore next: not easy to test */
{
  for (var property in configTypes) {
    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
      var expectedTypes = configTypes[property];
      var value = config[property];
      var valueType = value && (0, _dom.isElement)(value) ? 'element' : toType(value); // handle Vue instances

      valueType = value && value._isVue ? 'component' : valueType;

      if (!new RegExp(expectedTypes).test(valueType)) {
        /* istanbul ignore next */
        (0, _warn.default)("".concat(componentName, ": Option \"").concat(property, "\" provided type \"").concat(valueType, "\" but expected type \"").concat(expectedTypes, "\""));
      }
    }
  }
};
/*
 * ------------------------------------------------------------------------
 * Class Definition
 * ------------------------------------------------------------------------
 */

/* istanbul ignore next: not easy to test */


var ScrollSpy
/* istanbul ignore next: not easy to test */
=
/*#__PURE__*/
function () {
  function ScrollSpy(element, config, $root) {
    _classCallCheck(this, ScrollSpy); // The element we activate links in


    this.$el = element;
    this.$scroller = null;
    this.$selector = [Selector.NAV_LINKS, Selector.LIST_ITEMS, Selector.DROPDOWN_ITEMS].join(',');
    this.$offsets = [];
    this.$targets = [];
    this.$activeTarget = null;
    this.$scrollHeight = 0;
    this.$resizeTimeout = null;
    this.$obs_scroller = null;
    this.$obs_targets = null;
    this.$root = $root || null;
    this.$config = null;
    this.updateConfig(config);
  }

  _createClass(ScrollSpy, [{
    key: "updateConfig",
    value: function updateConfig(config, $root) {
      if (this.$scroller) {
        // Just in case out scroll element has changed
        this.unlisten();
        this.$scroller = null;
      }

      var cfg = _objectSpread({}, this.constructor.Default, {}, config);

      if ($root) {
        this.$root = $root;
      }

      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);
      this.$config = cfg;

      if (this.$root) {
        var self = this;
        this.$root.$nextTick(function () {
          self.listen();
        });
      } else {
        this.listen();
      }
    }
  }, {
    key: "dispose",
    value: function dispose() {
      this.unlisten();
      clearTimeout(this.$resizeTimeout);
      this.$resizeTimeout = null;
      this.$el = null;
      this.$config = null;
      this.$scroller = null;
      this.$selector = null;
      this.$offsets = null;
      this.$targets = null;
      this.$activeTarget = null;
      this.$scrollHeight = null;
    }
  }, {
    key: "listen",
    value: function listen() {
      var _this = this;

      var scroller = this.getScroller();

      if (scroller && scroller.tagName !== 'BODY') {
        (0, _dom.eventOn)(scroller, 'scroll', this, EventOptions);
      }

      (0, _dom.eventOn)(window, 'scroll', this, EventOptions);
      (0, _dom.eventOn)(window, 'resize', this, EventOptions);
      (0, _dom.eventOn)(window, 'orientationchange', this, EventOptions);
      TransitionEndEvents.forEach(function (evtName) {
        (0, _dom.eventOn)(window, evtName, _this, EventOptions);
      });
      this.setObservers(true); // Schedule a refresh

      this.handleEvent('refresh');
    }
  }, {
    key: "unlisten",
    value: function unlisten() {
      var _this2 = this;

      var scroller = this.getScroller();
      this.setObservers(false);

      if (scroller && scroller.tagName !== 'BODY') {
        (0, _dom.eventOff)(scroller, 'scroll', this, EventOptions);
      }

      (0, _dom.eventOff)(window, 'scroll', this, EventOptions);
      (0, _dom.eventOff)(window, 'resize', this, EventOptions);
      (0, _dom.eventOff)(window, 'orientationchange', this, EventOptions);
      TransitionEndEvents.forEach(function (evtName) {
        (0, _dom.eventOff)(window, evtName, _this2, EventOptions);
      });
    }
  }, {
    key: "setObservers",
    value: function setObservers(on) {
      var _this3 = this; // We observe both the scroller for content changes, and the target links


      if (this.$obs_scroller) {
        this.$obs_scroller.disconnect();
        this.$obs_scroller = null;
      }

      if (this.$obs_targets) {
        this.$obs_targets.disconnect();
        this.$obs_targets = null;
      }

      if (on) {
        this.$obs_targets = (0, _observeDom.default)(this.$el, function () {
          _this3.handleEvent('mutation');
        }, {
          subtree: true,
          childList: true,
          attributes: true,
          attributeFilter: ['href']
        });
        this.$obs_scroller = (0, _observeDom.default)(this.getScroller(), function () {
          _this3.handleEvent('mutation');
        }, {
          subtree: true,
          childList: true,
          characterData: true,
          attributes: true,
          attributeFilter: ['id', 'style', 'class']
        });
      }
    } // General event handler

  }, {
    key: "handleEvent",
    value: function handleEvent(evt) {
      var type = (0, _inspect.isString)(evt) ? evt : evt.type;
      var self = this;

      var resizeThrottle = function resizeThrottle() {
        if (!self.$resizeTimeout) {
          self.$resizeTimeout = setTimeout(function () {
            self.refresh();
            self.process();
            self.$resizeTimeout = null;
          }, self.$config.throttle);
        }
      };

      if (type === 'scroll') {
        if (!this.$obs_scroller) {
          // Just in case we are added to the DOM before the scroll target is
          // We re-instantiate our listeners, just in case
          this.listen();
        }

        this.process();
      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {
        // Postpone these events by throttle time
        resizeThrottle();
      }
    } // Refresh the list of target links on the element we are applied to

  }, {
    key: "refresh",
    value: function refresh() {
      var _this4 = this;

      var scroller = this.getScroller();

      if (!scroller) {
        return;
      }

      var autoMethod = scroller !== scroller.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;
      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;
      var methodFn = method === OffsetMethod.POSITION ? _dom.position : _dom.offset;
      var offsetBase = method === OffsetMethod.POSITION ? this.getScrollTop() : 0;
      this.$offsets = [];
      this.$targets = [];
      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control

      (0, _dom.selectAll)(this.$selector, this.$el) // Get HREF value
      .map(function (link) {
        return (0, _dom.getAttr)(link, 'href');
      }) // Filter out HREFs that do not match our RegExp
      .filter(function (href) {
        return href && HREF_REGEX.test(href || '');
      }) // Find all elements with ID that match HREF hash
      .map(function (href) {
        // Convert HREF into an ID (including # at beginning)
        var id = href.replace(HREF_REGEX, '$1').trim();

        if (!id) {
          return null;
        } // Find the element with the ID specified by id


        var el = (0, _dom.select)(id, scroller);

        if (el && (0, _dom.isVisible)(el)) {
          return {
            offset: parseInt(methodFn(el).top, 10) + offsetBase,
            target: id
          };
        }

        return null;
      }).filter(Boolean) // Sort them by their offsets (smallest first)
      .sort(function (a, b) {
        return a.offset - b.offset;
      }) // record only unique targets/offsets
      .reduce(function (memo, item) {
        if (!memo[item.target]) {
          _this4.$offsets.push(item.offset);

          _this4.$targets.push(item.target);

          memo[item.target] = true;
        }

        return memo;
      }, {}); // Return this for easy chaining

      return this;
    } // Handle activating/clearing

  }, {
    key: "process",
    value: function process() {
      var scrollTop = this.getScrollTop() + this.$config.offset;
      var scrollHeight = this.getScrollHeight();
      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();

      if (this.$scrollHeight !== scrollHeight) {
        this.refresh();
      }

      if (scrollTop >= maxScroll) {
        var target = this.$targets[this.$targets.length - 1];

        if (this.$activeTarget !== target) {
          this.activate(target);
        }

        return;
      }

      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {
        this.$activeTarget = null;
        this.clear();
        return;
      }

      for (var i = this.$offsets.length; i--;) {
        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && ((0, _inspect.isUndefined)(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);

        if (isActiveTarget) {
          this.activate(this.$targets[i]);
        }
      }
    }
  }, {
    key: "getScroller",
    value: function getScroller() {
      if (this.$scroller) {
        return this.$scroller;
      }

      var scroller = this.$config.element;

      if (!scroller) {
        return null;
      } else if ((0, _dom.isElement)(scroller.$el)) {
        scroller = scroller.$el;
      } else if ((0, _inspect.isString)(scroller)) {
        scroller = (0, _dom.select)(scroller);
      }

      if (!scroller) {
        return null;
      }

      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;
      return this.$scroller;
    }
  }, {
    key: "getScrollTop",
    value: function getScrollTop() {
      var scroller = this.getScroller();
      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;
    }
  }, {
    key: "getScrollHeight",
    value: function getScrollHeight() {
      return this.getScroller().scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    }
  }, {
    key: "getOffsetHeight",
    value: function getOffsetHeight() {
      var scroller = this.getScroller();
      return scroller === window ? window.innerHeight : (0, _dom.getBCR)(scroller).height;
    }
  }, {
    key: "activate",
    value: function activate(target) {
      var _this5 = this;

      this.$activeTarget = target;
      this.clear(); // Grab the list of target links (<a href="{$target}">)

      var links = (0, _dom.selectAll)(this.$selector // Split out the base selectors
      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')
      .map(function (selector) {
        return "".concat(selector, "[href$=\"").concat(target, "\"]");
      }) // Join back into a single selector string
      .join(','), this.$el);
      links.forEach(function (link) {
        if ((0, _dom.hasClass)(link, ClassName.DROPDOWN_ITEM)) {
          // This is a dropdown item, so find the .dropdown-toggle and set it's state
          var dropdown = (0, _dom.closest)(Selector.DROPDOWN, link);

          if (dropdown) {
            _this5.setActiveState((0, _dom.select)(Selector.DROPDOWN_TOGGLE, dropdown), true);
          } // Also set this link's state


          _this5.setActiveState(link, true);
        } else {
          // Set triggered link as active
          _this5.setActiveState(link, true);

          if ((0, _dom.matches)(link.parentElement, Selector.NAV_ITEMS)) {
            // Handle nav-link inside nav-item, and set nav-item active
            _this5.setActiveState(link.parentElement, true);
          } // Set triggered links parents as active
          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor


          var el = link;

          while (el) {
            el = (0, _dom.closest)(Selector.NAV_LIST_GROUP, el);
            var sibling = el ? el.previousElementSibling : null;

            if (sibling && (0, _dom.matches)(sibling, "".concat(Selector.NAV_LINKS, ", ").concat(Selector.LIST_ITEMS))) {
              _this5.setActiveState(sibling, true);
            } // Handle special case where nav-link is inside a nav-item


            if (sibling && (0, _dom.matches)(sibling, Selector.NAV_ITEMS)) {
              _this5.setActiveState((0, _dom.select)(Selector.NAV_LINKS, sibling), true); // Add active state to nav-item as well


              _this5.setActiveState(sibling, true);
            }
          }
        }
      }); // Signal event to via $root, passing ID of activated target and reference to array of links

      if (links && links.length > 0 && this.$root) {
        this.$root.$emit(ACTIVATE_EVENT, target, links);
      }
    }
  }, {
    key: "clear",
    value: function clear() {
      var _this6 = this;

      (0, _dom.selectAll)("".concat(this.$selector, ", ").concat(Selector.NAV_ITEMS), this.$el).filter(function (el) {
        return (0, _dom.hasClass)(el, ClassName.ACTIVE);
      }).forEach(function (el) {
        return _this6.setActiveState(el, false);
      });
    }
  }, {
    key: "setActiveState",
    value: function setActiveState(el, active) {
      if (!el) {
        return;
      }

      if (active) {
        (0, _dom.addClass)(el, ClassName.ACTIVE);
      } else {
        (0, _dom.removeClass)(el, ClassName.ACTIVE);
      }
    }
  }], [{
    key: "Name",
    get: function get() {
      return NAME;
    }
  }, {
    key: "Default",
    get: function get() {
      return Default;
    }
  }, {
    key: "DefaultType",
    get: function get() {
      return DefaultType;
    }
  }]);

  return ScrollSpy;
}();

var _default = ScrollSpy;
exports.default = _default;
},{"../../utils/observe-dom":"node_modules/bootstrap-vue/esm/utils/observe-dom.js","../../utils/warn":"node_modules/bootstrap-vue/esm/utils/warn.js","../../utils/dom":"node_modules/bootstrap-vue/esm/utils/dom.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js"}],"node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VBScrollspy = void 0;

var _scrollspy = _interopRequireDefault(require("./scrollspy.class"));

var _env = require("../../utils/env");

var _object = require("../../utils/object");

var _inspect = require("../../utils/inspect");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Key we use to store our instance
var BV_SCROLLSPY = '__BV_ScrollSpy__'; // Build a ScrollSpy config based on bindings (if any)
// Arguments and modifiers take precedence over passed value config object

/* istanbul ignore next: not easy to test */

var parseBindings = function parseBindings(bindings)
/* istanbul ignore next: not easy to test */
{
  var config = {}; // If argument, assume element ID

  if (bindings.arg) {
    // Element ID specified as arg
    // We must prepend '#' to become a CSS selector
    config.element = "#".concat(bindings.arg);
  } // Process modifiers


  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {
    if (/^\d+$/.test(mod)) {
      // Offset value
      config.offset = parseInt(mod, 10);
    } else if (/^(auto|position|offset)$/.test(mod)) {
      // Offset method
      config.method = mod;
    }
  }); // Process value

  if ((0, _inspect.isString)(bindings.value)) {
    // Value is a CSS ID or selector
    config.element = bindings.value;
  } else if ((0, _inspect.isNumber)(bindings.value)) {
    // Value is offset
    config.offset = Math.round(bindings.value);
  } else if ((0, _inspect.isObject)(bindings.value)) {
    // Value is config object
    // Filter the object based on our supported config options
    (0, _object.keys)(bindings.value).filter(function (k) {
      return Boolean(_scrollspy.default.DefaultType[k]);
    }).forEach(function (k) {
      config[k] = bindings.value[k];
    });
  }

  return config;
}; // Add or update ScrollSpy on our element


var applyScrollspy = function applyScrollspy(el, bindings, vnode)
/* istanbul ignore next: not easy to test */
{
  if (!_env.isBrowser) {
    /* istanbul ignore next */
    return;
  }

  var config = parseBindings(bindings);

  if (el[BV_SCROLLSPY]) {
    el[BV_SCROLLSPY].updateConfig(config, vnode.context.$root);
  } else {
    el[BV_SCROLLSPY] = new _scrollspy.default(el, config, vnode.context.$root);
  }
}; // Remove ScrollSpy on our element

/* istanbul ignore next: not easy to test */


var removeScrollspy = function removeScrollspy(el)
/* istanbul ignore next: not easy to test */
{
  if (el[BV_SCROLLSPY]) {
    el[BV_SCROLLSPY].dispose();
    el[BV_SCROLLSPY] = null;
    delete el[BV_SCROLLSPY];
  }
};
/*
 * Export our directive
 */


var VBScrollspy = {
  bind: function bind(el, bindings, vnode)
  /* istanbul ignore next: not easy to test */
  {
    applyScrollspy(el, bindings, vnode);
  },
  inserted: function inserted(el, bindings, vnode)
  /* istanbul ignore next: not easy to test */
  {
    applyScrollspy(el, bindings, vnode);
  },
  update: function update(el, bindings, vnode)
  /* istanbul ignore next: not easy to test */
  {
    if (bindings.value !== bindings.oldValue) {
      applyScrollspy(el, bindings, vnode);
    }
  },
  componentUpdated: function componentUpdated(el, bindings, vnode)
  /* istanbul ignore next: not easy to test */
  {
    if (bindings.value !== bindings.oldValue) {
      applyScrollspy(el, bindings, vnode);
    }
  },
  unbind: function unbind(el)
  /* istanbul ignore next: not easy to test */
  {
    removeScrollspy(el);
  }
};
exports.VBScrollspy = VBScrollspy;
},{"./scrollspy.class":"node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.class.js","../../utils/env":"node_modules/bootstrap-vue/esm/utils/env.js","../../utils/object":"node_modules/bootstrap-vue/esm/utils/object.js","../../utils/inspect":"node_modules/bootstrap-vue/esm/utils/inspect.js"}],"node_modules/bootstrap-vue/esm/directives/scrollspy/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "VBScrollspy", {
  enumerable: true,
  get: function () {
    return _scrollspy.VBScrollspy;
  }
});
exports.VBScrollspyPlugin = void 0;

var _scrollspy = require("./scrollspy");

var _plugins = require("../../utils/plugins");

var VBScrollspyPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  directives: {
    VBScrollspy: _scrollspy.VBScrollspy
  }
});
exports.VBScrollspyPlugin = VBScrollspyPlugin;
},{"./scrollspy":"node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/directives/toggle/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "VBToggle", {
  enumerable: true,
  get: function () {
    return _toggle.VBToggle;
  }
});
exports.VBTogglePlugin = void 0;

var _toggle = require("./toggle");

var _plugins = require("../../utils/plugins");

var VBTogglePlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  directives: {
    VBToggle: _toggle.VBToggle
  }
});
exports.VBTogglePlugin = VBTogglePlugin;
},{"./toggle":"node_modules/bootstrap-vue/esm/directives/toggle/toggle.js","../../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/directives/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.directivesPlugin = void 0;

var _plugins = require("../utils/plugins");

var _modal = require("./modal");

var _popover = require("./popover");

var _scrollspy = require("./scrollspy");

var _toggle = require("./toggle");

var _tooltip = require("./tooltip");

// Main plugin for installing all directive plugins
var directivesPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)({
  plugins: {
    VBModalPlugin: _modal.VBModalPlugin,
    VBPopoverPlugin: _popover.VBPopoverPlugin,
    VBScrollspyPlugin: _scrollspy.VBScrollspyPlugin,
    VBTogglePlugin: _toggle.VBTogglePlugin,
    VBTooltipPlugin: _tooltip.VBTooltipPlugin
  }
});
exports.directivesPlugin = directivesPlugin;
},{"../utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js","./modal":"node_modules/bootstrap-vue/esm/directives/modal/index.js","./popover":"node_modules/bootstrap-vue/esm/directives/popover/index.js","./scrollspy":"node_modules/bootstrap-vue/esm/directives/scrollspy/index.js","./toggle":"node_modules/bootstrap-vue/esm/directives/toggle/index.js","./tooltip":"node_modules/bootstrap-vue/esm/directives/tooltip/index.js"}],"node_modules/bootstrap-vue/esm/bv-config.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BVConfigPlugin = void 0;

var _plugins = require("./utils/plugins");

//
// Utility Plugin for setting the configuration
//
var BVConfigPlugin =
/*#__PURE__*/
(0, _plugins.pluginFactory)();
exports.BVConfigPlugin = BVConfigPlugin;
},{"./utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js"}],"node_modules/bootstrap-vue/esm/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BVConfigPlugin", {
  enumerable: true,
  get: function () {
    return _bvConfig.BVConfigPlugin;
  }
});
Object.defineProperty(exports, "BVConfig", {
  enumerable: true,
  get: function () {
    return _bvConfig.BVConfigPlugin;
  }
});
Object.defineProperty(exports, "BVModalPlugin", {
  enumerable: true,
  get: function () {
    return _bvModal.BVModalPlugin;
  }
});
Object.defineProperty(exports, "BVToastPlugin", {
  enumerable: true,
  get: function () {
    return _bvToast.BVToastPlugin;
  }
});
Object.defineProperty(exports, "AlertPlugin", {
  enumerable: true,
  get: function () {
    return _alert.AlertPlugin;
  }
});
Object.defineProperty(exports, "BAlert", {
  enumerable: true,
  get: function () {
    return _alert2.BAlert;
  }
});
Object.defineProperty(exports, "BadgePlugin", {
  enumerable: true,
  get: function () {
    return _badge.BadgePlugin;
  }
});
Object.defineProperty(exports, "BBadge", {
  enumerable: true,
  get: function () {
    return _badge2.BBadge;
  }
});
Object.defineProperty(exports, "BreadcrumbPlugin", {
  enumerable: true,
  get: function () {
    return _breadcrumb.BreadcrumbPlugin;
  }
});
Object.defineProperty(exports, "BBreadcrumb", {
  enumerable: true,
  get: function () {
    return _breadcrumb2.BBreadcrumb;
  }
});
Object.defineProperty(exports, "BBreadcrumbItem", {
  enumerable: true,
  get: function () {
    return _breadcrumbItem.BBreadcrumbItem;
  }
});
Object.defineProperty(exports, "ButtonPlugin", {
  enumerable: true,
  get: function () {
    return _button.ButtonPlugin;
  }
});
Object.defineProperty(exports, "BButton", {
  enumerable: true,
  get: function () {
    return _button2.BButton;
  }
});
Object.defineProperty(exports, "BButtonClose", {
  enumerable: true,
  get: function () {
    return _buttonClose.BButtonClose;
  }
});
Object.defineProperty(exports, "ButtonGroupPlugin", {
  enumerable: true,
  get: function () {
    return _buttonGroup.ButtonGroupPlugin;
  }
});
Object.defineProperty(exports, "BButtonGroup", {
  enumerable: true,
  get: function () {
    return _buttonGroup2.BButtonGroup;
  }
});
Object.defineProperty(exports, "ButtonToolbarPlugin", {
  enumerable: true,
  get: function () {
    return _buttonToolbar.ButtonToolbarPlugin;
  }
});
Object.defineProperty(exports, "BButtonToolbar", {
  enumerable: true,
  get: function () {
    return _buttonToolbar2.BButtonToolbar;
  }
});
Object.defineProperty(exports, "CardPlugin", {
  enumerable: true,
  get: function () {
    return _card.CardPlugin;
  }
});
Object.defineProperty(exports, "BCard", {
  enumerable: true,
  get: function () {
    return _card2.BCard;
  }
});
Object.defineProperty(exports, "BCardBody", {
  enumerable: true,
  get: function () {
    return _cardBody.BCardBody;
  }
});
Object.defineProperty(exports, "BCardFooter", {
  enumerable: true,
  get: function () {
    return _cardFooter.BCardFooter;
  }
});
Object.defineProperty(exports, "BCardGroup", {
  enumerable: true,
  get: function () {
    return _cardGroup.BCardGroup;
  }
});
Object.defineProperty(exports, "BCardHeader", {
  enumerable: true,
  get: function () {
    return _cardHeader.BCardHeader;
  }
});
Object.defineProperty(exports, "BCardImg", {
  enumerable: true,
  get: function () {
    return _cardImg.BCardImg;
  }
});
Object.defineProperty(exports, "BCardImgLazy", {
  enumerable: true,
  get: function () {
    return _cardImgLazy.BCardImgLazy;
  }
});
Object.defineProperty(exports, "BCardSubTitle", {
  enumerable: true,
  get: function () {
    return _cardSubTitle.BCardSubTitle;
  }
});
Object.defineProperty(exports, "BCardText", {
  enumerable: true,
  get: function () {
    return _cardText.BCardText;
  }
});
Object.defineProperty(exports, "BCardTitle", {
  enumerable: true,
  get: function () {
    return _cardTitle.BCardTitle;
  }
});
Object.defineProperty(exports, "CarouselPlugin", {
  enumerable: true,
  get: function () {
    return _carousel.CarouselPlugin;
  }
});
Object.defineProperty(exports, "BCarousel", {
  enumerable: true,
  get: function () {
    return _carousel2.BCarousel;
  }
});
Object.defineProperty(exports, "BCarouselSlide", {
  enumerable: true,
  get: function () {
    return _carouselSlide.BCarouselSlide;
  }
});
Object.defineProperty(exports, "CollapsePlugin", {
  enumerable: true,
  get: function () {
    return _collapse.CollapsePlugin;
  }
});
Object.defineProperty(exports, "BCollapse", {
  enumerable: true,
  get: function () {
    return _collapse2.BCollapse;
  }
});
Object.defineProperty(exports, "DropdownPlugin", {
  enumerable: true,
  get: function () {
    return _dropdown.DropdownPlugin;
  }
});
Object.defineProperty(exports, "BDropdown", {
  enumerable: true,
  get: function () {
    return _dropdown2.BDropdown;
  }
});
Object.defineProperty(exports, "BDropdownItem", {
  enumerable: true,
  get: function () {
    return _dropdownItem.BDropdownItem;
  }
});
Object.defineProperty(exports, "BDropdownItemButton", {
  enumerable: true,
  get: function () {
    return _dropdownItemButton.BDropdownItemButton;
  }
});
Object.defineProperty(exports, "BDropdownDivider", {
  enumerable: true,
  get: function () {
    return _dropdownDivider.BDropdownDivider;
  }
});
Object.defineProperty(exports, "BDropdownForm", {
  enumerable: true,
  get: function () {
    return _dropdownForm.BDropdownForm;
  }
});
Object.defineProperty(exports, "BDropdownGroup", {
  enumerable: true,
  get: function () {
    return _dropdownGroup.BDropdownGroup;
  }
});
Object.defineProperty(exports, "BDropdownHeader", {
  enumerable: true,
  get: function () {
    return _dropdownHeader.BDropdownHeader;
  }
});
Object.defineProperty(exports, "BDropdownText", {
  enumerable: true,
  get: function () {
    return _dropdownText.BDropdownText;
  }
});
Object.defineProperty(exports, "EmbedPlugin", {
  enumerable: true,
  get: function () {
    return _embed.EmbedPlugin;
  }
});
Object.defineProperty(exports, "BEmbed", {
  enumerable: true,
  get: function () {
    return _embed2.BEmbed;
  }
});
Object.defineProperty(exports, "FormPlugin", {
  enumerable: true,
  get: function () {
    return _form.FormPlugin;
  }
});
Object.defineProperty(exports, "BForm", {
  enumerable: true,
  get: function () {
    return _form2.BForm;
  }
});
Object.defineProperty(exports, "BFormDatalist", {
  enumerable: true,
  get: function () {
    return _formDatalist.BFormDatalist;
  }
});
Object.defineProperty(exports, "BFormText", {
  enumerable: true,
  get: function () {
    return _formText.BFormText;
  }
});
Object.defineProperty(exports, "BFormInvalidFeedback", {
  enumerable: true,
  get: function () {
    return _formInvalidFeedback.BFormInvalidFeedback;
  }
});
Object.defineProperty(exports, "BFormValidFeedback", {
  enumerable: true,
  get: function () {
    return _formValidFeedback.BFormValidFeedback;
  }
});
Object.defineProperty(exports, "FormCheckboxPlugin", {
  enumerable: true,
  get: function () {
    return _formCheckbox.FormCheckboxPlugin;
  }
});
Object.defineProperty(exports, "BFormCheckbox", {
  enumerable: true,
  get: function () {
    return _formCheckbox2.BFormCheckbox;
  }
});
Object.defineProperty(exports, "BFormCheckboxGroup", {
  enumerable: true,
  get: function () {
    return _formCheckboxGroup.BFormCheckboxGroup;
  }
});
Object.defineProperty(exports, "FormFilePlugin", {
  enumerable: true,
  get: function () {
    return _formFile.FormFilePlugin;
  }
});
Object.defineProperty(exports, "BFormFile", {
  enumerable: true,
  get: function () {
    return _formFile2.BFormFile;
  }
});
Object.defineProperty(exports, "FormGroupPlugin", {
  enumerable: true,
  get: function () {
    return _formGroup.FormGroupPlugin;
  }
});
Object.defineProperty(exports, "BFormGroup", {
  enumerable: true,
  get: function () {
    return _formGroup2.BFormGroup;
  }
});
Object.defineProperty(exports, "FormInputPlugin", {
  enumerable: true,
  get: function () {
    return _formInput.FormInputPlugin;
  }
});
Object.defineProperty(exports, "BFormInput", {
  enumerable: true,
  get: function () {
    return _formInput2.BFormInput;
  }
});
Object.defineProperty(exports, "FormRadioPlugin", {
  enumerable: true,
  get: function () {
    return _formRadio.FormRadioPlugin;
  }
});
Object.defineProperty(exports, "BFormRadio", {
  enumerable: true,
  get: function () {
    return _formRadio2.BFormRadio;
  }
});
Object.defineProperty(exports, "BFormRadioGroup", {
  enumerable: true,
  get: function () {
    return _formRadioGroup.BFormRadioGroup;
  }
});
Object.defineProperty(exports, "FormSelectPlugin", {
  enumerable: true,
  get: function () {
    return _formSelect.FormSelectPlugin;
  }
});
Object.defineProperty(exports, "BFormSelect", {
  enumerable: true,
  get: function () {
    return _formSelect2.BFormSelect;
  }
});
Object.defineProperty(exports, "FormTextareaPlugin", {
  enumerable: true,
  get: function () {
    return _formTextarea.FormTextareaPlugin;
  }
});
Object.defineProperty(exports, "BFormTextarea", {
  enumerable: true,
  get: function () {
    return _formTextarea2.BFormTextarea;
  }
});
Object.defineProperty(exports, "ImagePlugin", {
  enumerable: true,
  get: function () {
    return _image.ImagePlugin;
  }
});
Object.defineProperty(exports, "BImg", {
  enumerable: true,
  get: function () {
    return _img.BImg;
  }
});
Object.defineProperty(exports, "BImgLazy", {
  enumerable: true,
  get: function () {
    return _imgLazy.BImgLazy;
  }
});
Object.defineProperty(exports, "InputGroupPlugin", {
  enumerable: true,
  get: function () {
    return _inputGroup.InputGroupPlugin;
  }
});
Object.defineProperty(exports, "BInputGroup", {
  enumerable: true,
  get: function () {
    return _inputGroup2.BInputGroup;
  }
});
Object.defineProperty(exports, "BInputGroupAddon", {
  enumerable: true,
  get: function () {
    return _inputGroupAddon.BInputGroupAddon;
  }
});
Object.defineProperty(exports, "BInputGroupAppend", {
  enumerable: true,
  get: function () {
    return _inputGroupAppend.BInputGroupAppend;
  }
});
Object.defineProperty(exports, "BInputGroupPrepend", {
  enumerable: true,
  get: function () {
    return _inputGroupPrepend.BInputGroupPrepend;
  }
});
Object.defineProperty(exports, "BInputGroupText", {
  enumerable: true,
  get: function () {
    return _inputGroupText.BInputGroupText;
  }
});
Object.defineProperty(exports, "JumbotronPlugin", {
  enumerable: true,
  get: function () {
    return _jumbotron.JumbotronPlugin;
  }
});
Object.defineProperty(exports, "BJumbotron", {
  enumerable: true,
  get: function () {
    return _jumbotron2.BJumbotron;
  }
});
Object.defineProperty(exports, "LayoutPlugin", {
  enumerable: true,
  get: function () {
    return _layout.LayoutPlugin;
  }
});
Object.defineProperty(exports, "BContainer", {
  enumerable: true,
  get: function () {
    return _container.BContainer;
  }
});
Object.defineProperty(exports, "BRow", {
  enumerable: true,
  get: function () {
    return _row.BRow;
  }
});
Object.defineProperty(exports, "BCol", {
  enumerable: true,
  get: function () {
    return _col.BCol;
  }
});
Object.defineProperty(exports, "BFormRow", {
  enumerable: true,
  get: function () {
    return _formRow.BFormRow;
  }
});
Object.defineProperty(exports, "LinkPlugin", {
  enumerable: true,
  get: function () {
    return _link.LinkPlugin;
  }
});
Object.defineProperty(exports, "BLink", {
  enumerable: true,
  get: function () {
    return _link2.BLink;
  }
});
Object.defineProperty(exports, "ListGroupPlugin", {
  enumerable: true,
  get: function () {
    return _listGroup.ListGroupPlugin;
  }
});
Object.defineProperty(exports, "BListGroup", {
  enumerable: true,
  get: function () {
    return _listGroup2.BListGroup;
  }
});
Object.defineProperty(exports, "BListGroupItem", {
  enumerable: true,
  get: function () {
    return _listGroupItem.BListGroupItem;
  }
});
Object.defineProperty(exports, "MediaPlugin", {
  enumerable: true,
  get: function () {
    return _media.MediaPlugin;
  }
});
Object.defineProperty(exports, "BMedia", {
  enumerable: true,
  get: function () {
    return _media2.BMedia;
  }
});
Object.defineProperty(exports, "BMediaAside", {
  enumerable: true,
  get: function () {
    return _mediaAside.BMediaAside;
  }
});
Object.defineProperty(exports, "BMediaBody", {
  enumerable: true,
  get: function () {
    return _mediaBody.BMediaBody;
  }
});
Object.defineProperty(exports, "ModalPlugin", {
  enumerable: true,
  get: function () {
    return _modal.ModalPlugin;
  }
});
Object.defineProperty(exports, "BModal", {
  enumerable: true,
  get: function () {
    return _modal2.BModal;
  }
});
Object.defineProperty(exports, "NavPlugin", {
  enumerable: true,
  get: function () {
    return _nav.NavPlugin;
  }
});
Object.defineProperty(exports, "BNav", {
  enumerable: true,
  get: function () {
    return _nav2.BNav;
  }
});
Object.defineProperty(exports, "BNavForm", {
  enumerable: true,
  get: function () {
    return _navForm.BNavForm;
  }
});
Object.defineProperty(exports, "BNavItem", {
  enumerable: true,
  get: function () {
    return _navItem.BNavItem;
  }
});
Object.defineProperty(exports, "BNavItemDropdown", {
  enumerable: true,
  get: function () {
    return _navItemDropdown.BNavItemDropdown;
  }
});
Object.defineProperty(exports, "BNavText", {
  enumerable: true,
  get: function () {
    return _navText.BNavText;
  }
});
Object.defineProperty(exports, "NavbarPlugin", {
  enumerable: true,
  get: function () {
    return _navbar.NavbarPlugin;
  }
});
Object.defineProperty(exports, "BNavbar", {
  enumerable: true,
  get: function () {
    return _navbar2.BNavbar;
  }
});
Object.defineProperty(exports, "BNavbarBrand", {
  enumerable: true,
  get: function () {
    return _navbarBrand.BNavbarBrand;
  }
});
Object.defineProperty(exports, "BNavbarNav", {
  enumerable: true,
  get: function () {
    return _navbarNav.BNavbarNav;
  }
});
Object.defineProperty(exports, "BNavbarToggle", {
  enumerable: true,
  get: function () {
    return _navbarToggle.BNavbarToggle;
  }
});
Object.defineProperty(exports, "PaginationPlugin", {
  enumerable: true,
  get: function () {
    return _pagination.PaginationPlugin;
  }
});
Object.defineProperty(exports, "BPagination", {
  enumerable: true,
  get: function () {
    return _pagination2.BPagination;
  }
});
Object.defineProperty(exports, "PaginationNavPlugin", {
  enumerable: true,
  get: function () {
    return _paginationNav.PaginationNavPlugin;
  }
});
Object.defineProperty(exports, "BPaginationNav", {
  enumerable: true,
  get: function () {
    return _paginationNav2.BPaginationNav;
  }
});
Object.defineProperty(exports, "PopoverPlugin", {
  enumerable: true,
  get: function () {
    return _popover.PopoverPlugin;
  }
});
Object.defineProperty(exports, "BPopover", {
  enumerable: true,
  get: function () {
    return _popover2.BPopover;
  }
});
Object.defineProperty(exports, "ProgressPlugin", {
  enumerable: true,
  get: function () {
    return _progress.ProgressPlugin;
  }
});
Object.defineProperty(exports, "BProgress", {
  enumerable: true,
  get: function () {
    return _progress2.BProgress;
  }
});
Object.defineProperty(exports, "BProgressBar", {
  enumerable: true,
  get: function () {
    return _progressBar.BProgressBar;
  }
});
Object.defineProperty(exports, "SpinnerPlugin", {
  enumerable: true,
  get: function () {
    return _spinner.SpinnerPlugin;
  }
});
Object.defineProperty(exports, "BSpinner", {
  enumerable: true,
  get: function () {
    return _spinner2.BSpinner;
  }
});
Object.defineProperty(exports, "TablePlugin", {
  enumerable: true,
  get: function () {
    return _table.TablePlugin;
  }
});
Object.defineProperty(exports, "TableLitePlugin", {
  enumerable: true,
  get: function () {
    return _table.TableLitePlugin;
  }
});
Object.defineProperty(exports, "TableSimplePlugin", {
  enumerable: true,
  get: function () {
    return _table.TableSimplePlugin;
  }
});
Object.defineProperty(exports, "BTable", {
  enumerable: true,
  get: function () {
    return _table2.BTable;
  }
});
Object.defineProperty(exports, "BTableLite", {
  enumerable: true,
  get: function () {
    return _tableLite.BTableLite;
  }
});
Object.defineProperty(exports, "BTableSimple", {
  enumerable: true,
  get: function () {
    return _tableSimple.BTableSimple;
  }
});
Object.defineProperty(exports, "BTbody", {
  enumerable: true,
  get: function () {
    return _tbody.BTbody;
  }
});
Object.defineProperty(exports, "BThead", {
  enumerable: true,
  get: function () {
    return _thead.BThead;
  }
});
Object.defineProperty(exports, "BTfoot", {
  enumerable: true,
  get: function () {
    return _tfoot.BTfoot;
  }
});
Object.defineProperty(exports, "BTr", {
  enumerable: true,
  get: function () {
    return _tr.BTr;
  }
});
Object.defineProperty(exports, "BTh", {
  enumerable: true,
  get: function () {
    return _th.BTh;
  }
});
Object.defineProperty(exports, "BTd", {
  enumerable: true,
  get: function () {
    return _td.BTd;
  }
});
Object.defineProperty(exports, "TabsPlugin", {
  enumerable: true,
  get: function () {
    return _tabs.TabsPlugin;
  }
});
Object.defineProperty(exports, "BTabs", {
  enumerable: true,
  get: function () {
    return _tabs2.BTabs;
  }
});
Object.defineProperty(exports, "BTab", {
  enumerable: true,
  get: function () {
    return _tab.BTab;
  }
});
Object.defineProperty(exports, "ToastPlugin", {
  enumerable: true,
  get: function () {
    return _toast.ToastPlugin;
  }
});
Object.defineProperty(exports, "BToast", {
  enumerable: true,
  get: function () {
    return _toast2.BToast;
  }
});
Object.defineProperty(exports, "BToaster", {
  enumerable: true,
  get: function () {
    return _toaster.BToaster;
  }
});
Object.defineProperty(exports, "TooltipPlugin", {
  enumerable: true,
  get: function () {
    return _tooltip.TooltipPlugin;
  }
});
Object.defineProperty(exports, "BTooltip", {
  enumerable: true,
  get: function () {
    return _tooltip2.BTooltip;
  }
});
Object.defineProperty(exports, "VBModalPlugin", {
  enumerable: true,
  get: function () {
    return _modal3.VBModalPlugin;
  }
});
Object.defineProperty(exports, "VBModal", {
  enumerable: true,
  get: function () {
    return _modal4.VBModal;
  }
});
Object.defineProperty(exports, "VBPopoverPlugin", {
  enumerable: true,
  get: function () {
    return _popover3.VBPopoverPlugin;
  }
});
Object.defineProperty(exports, "VBPopover", {
  enumerable: true,
  get: function () {
    return _popover4.VBPopover;
  }
});
Object.defineProperty(exports, "VBScrollspyPlugin", {
  enumerable: true,
  get: function () {
    return _scrollspy.VBScrollspyPlugin;
  }
});
Object.defineProperty(exports, "VBScrollspy", {
  enumerable: true,
  get: function () {
    return _scrollspy2.VBScrollspy;
  }
});
Object.defineProperty(exports, "VBTogglePlugin", {
  enumerable: true,
  get: function () {
    return _toggle.VBTogglePlugin;
  }
});
Object.defineProperty(exports, "VBToggle", {
  enumerable: true,
  get: function () {
    return _toggle2.VBToggle;
  }
});
Object.defineProperty(exports, "VBTooltipPlugin", {
  enumerable: true,
  get: function () {
    return _tooltip3.VBTooltipPlugin;
  }
});
Object.defineProperty(exports, "VBTooltip", {
  enumerable: true,
  get: function () {
    return _tooltip4.VBTooltip;
  }
});
exports.default = exports.BootstrapVue = exports.NAME = exports.install = void 0;

var _plugins = require("./utils/plugins");

var _components = require("./components");

var _directives = require("./directives");

var _bvConfig = require("./bv-config");

var _bvModal = require("./components/modal/helpers/bv-modal");

var _bvToast = require("./components/toast/helpers/bv-toast");

var _alert = require("./components/alert");

var _alert2 = require("./components/alert/alert");

var _badge = require("./components/badge");

var _badge2 = require("./components/badge/badge");

var _breadcrumb = require("./components/breadcrumb");

var _breadcrumb2 = require("./components/breadcrumb/breadcrumb");

var _breadcrumbItem = require("./components/breadcrumb/breadcrumb-item");

var _button = require("./components/button");

var _button2 = require("./components/button/button");

var _buttonClose = require("./components/button/button-close");

var _buttonGroup = require("./components/button-group");

var _buttonGroup2 = require("./components/button-group/button-group");

var _buttonToolbar = require("./components/button-toolbar");

var _buttonToolbar2 = require("./components/button-toolbar/button-toolbar");

var _card = require("./components/card");

var _card2 = require("./components/card/card");

var _cardBody = require("./components/card/card-body");

var _cardFooter = require("./components/card/card-footer");

var _cardGroup = require("./components/card/card-group");

var _cardHeader = require("./components/card/card-header");

var _cardImg = require("./components/card/card-img");

var _cardImgLazy = require("./components/card/card-img-lazy");

var _cardSubTitle = require("./components/card/card-sub-title");

var _cardText = require("./components/card/card-text");

var _cardTitle = require("./components/card/card-title");

var _carousel = require("./components/carousel");

var _carousel2 = require("./components/carousel/carousel");

var _carouselSlide = require("./components/carousel/carousel-slide");

var _collapse = require("./components/collapse");

var _collapse2 = require("./components/collapse/collapse");

var _dropdown = require("./components/dropdown");

var _dropdown2 = require("./components/dropdown/dropdown");

var _dropdownItem = require("./components/dropdown/dropdown-item");

var _dropdownItemButton = require("./components/dropdown/dropdown-item-button");

var _dropdownDivider = require("./components/dropdown/dropdown-divider");

var _dropdownForm = require("./components/dropdown/dropdown-form");

var _dropdownGroup = require("./components/dropdown/dropdown-group");

var _dropdownHeader = require("./components/dropdown/dropdown-header");

var _dropdownText = require("./components/dropdown/dropdown-text");

var _embed = require("./components/embed");

var _embed2 = require("./components/embed/embed");

var _form = require("./components/form");

var _form2 = require("./components/form/form");

var _formDatalist = require("./components/form/form-datalist");

var _formText = require("./components/form/form-text");

var _formInvalidFeedback = require("./components/form/form-invalid-feedback");

var _formValidFeedback = require("./components/form/form-valid-feedback");

var _formCheckbox = require("./components/form-checkbox");

var _formCheckbox2 = require("./components/form-checkbox/form-checkbox");

var _formCheckboxGroup = require("./components/form-checkbox/form-checkbox-group");

var _formFile = require("./components/form-file");

var _formFile2 = require("./components/form-file/form-file");

var _formGroup = require("./components/form-group");

var _formGroup2 = require("./components/form-group/form-group");

var _formInput = require("./components/form-input");

var _formInput2 = require("./components/form-input/form-input");

var _formRadio = require("./components/form-radio");

var _formRadio2 = require("./components/form-radio/form-radio");

var _formRadioGroup = require("./components/form-radio/form-radio-group");

var _formSelect = require("./components/form-select");

var _formSelect2 = require("./components/form-select/form-select");

var _formTextarea = require("./components/form-textarea");

var _formTextarea2 = require("./components/form-textarea/form-textarea");

var _image = require("./components/image");

var _img = require("./components/image/img");

var _imgLazy = require("./components/image/img-lazy");

var _inputGroup = require("./components/input-group");

var _inputGroup2 = require("./components/input-group/input-group");

var _inputGroupAddon = require("./components/input-group/input-group-addon");

var _inputGroupAppend = require("./components/input-group/input-group-append");

var _inputGroupPrepend = require("./components/input-group/input-group-prepend");

var _inputGroupText = require("./components/input-group/input-group-text");

var _jumbotron = require("./components/jumbotron");

var _jumbotron2 = require("./components/jumbotron/jumbotron");

var _layout = require("./components/layout");

var _container = require("./components/layout/container");

var _row = require("./components/layout/row");

var _col = require("./components/layout/col");

var _formRow = require("./components/layout/form-row");

var _link = require("./components/link");

var _link2 = require("./components/link/link");

var _listGroup = require("./components/list-group");

var _listGroup2 = require("./components/list-group/list-group");

var _listGroupItem = require("./components/list-group/list-group-item");

var _media = require("./components/media");

var _media2 = require("./components/media/media");

var _mediaAside = require("./components/media/media-aside");

var _mediaBody = require("./components/media/media-body");

var _modal = require("./components/modal");

var _modal2 = require("./components/modal/modal");

var _nav = require("./components/nav");

var _nav2 = require("./components/nav/nav");

var _navForm = require("./components/nav/nav-form");

var _navItem = require("./components/nav/nav-item");

var _navItemDropdown = require("./components/nav/nav-item-dropdown");

var _navText = require("./components/nav/nav-text");

var _navbar = require("./components/navbar");

var _navbar2 = require("./components/navbar/navbar");

var _navbarBrand = require("./components/navbar/navbar-brand");

var _navbarNav = require("./components/navbar/navbar-nav");

var _navbarToggle = require("./components/navbar/navbar-toggle");

var _pagination = require("./components/pagination");

var _pagination2 = require("./components/pagination/pagination");

var _paginationNav = require("./components/pagination-nav");

var _paginationNav2 = require("./components/pagination-nav/pagination-nav");

var _popover = require("./components/popover");

var _popover2 = require("./components/popover/popover");

var _progress = require("./components/progress");

var _progress2 = require("./components/progress/progress");

var _progressBar = require("./components/progress/progress-bar");

var _spinner = require("./components/spinner");

var _spinner2 = require("./components/spinner/spinner");

var _table = require("./components/table");

var _table2 = require("./components/table/table");

var _tableLite = require("./components/table/table-lite");

var _tableSimple = require("./components/table/table-simple");

var _tbody = require("./components/table/tbody");

var _thead = require("./components/table/thead");

var _tfoot = require("./components/table/tfoot");

var _tr = require("./components/table/tr");

var _th = require("./components/table/th");

var _td = require("./components/table/td");

var _tabs = require("./components/tabs");

var _tabs2 = require("./components/tabs/tabs");

var _tab = require("./components/tabs/tab");

var _toast = require("./components/toast");

var _toast2 = require("./components/toast/toast");

var _toaster = require("./components/toast/toaster");

var _tooltip = require("./components/tooltip");

var _tooltip2 = require("./components/tooltip/tooltip");

var _modal3 = require("./directives/modal");

var _modal4 = require("./directives/modal/modal");

var _popover3 = require("./directives/popover");

var _popover4 = require("./directives/popover/popover");

var _scrollspy = require("./directives/scrollspy");

var _scrollspy2 = require("./directives/scrollspy/scrollspy");

var _toggle = require("./directives/toggle");

var _toggle2 = require("./directives/toggle/toggle");

var _tooltip3 = require("./directives/tooltip");

var _tooltip4 = require("./directives/tooltip/tooltip");

/*!
 * BoostrapVue 2.0.4
 *
 * @link https://bootstrap-vue.js.org
 * @source https://github.com/bootstrap-vue/bootstrap-vue
 * @copyright (c) 2016-2019 BootstrapVue
 * @license MIT
 * https://github.com/bootstrap-vue/bootstrap-vue/blob/master/LICENSE
 */
var NAME = 'BootstrapVue'; //
// BootstrapVue installer
//

exports.NAME = NAME;
var install =
/*#__PURE__*/
(0, _plugins.installFactory)({
  plugins: {
    componentsPlugin: _components.componentsPlugin,
    directivesPlugin: _directives.directivesPlugin
  }
}); //
// BootstrapVue plugin
//

exports.install = install;
var BootstrapVue =
/*#__PURE__*/
{
  install: install,
  NAME: NAME
}; //
// Named exports for BvConfigPlugin
//

exports.BootstrapVue = BootstrapVue;
// Default export is the BootstrapVue plugin
var _default = BootstrapVue;
exports.default = _default;
},{"./utils/plugins":"node_modules/bootstrap-vue/esm/utils/plugins.js","./components":"node_modules/bootstrap-vue/esm/components/index.js","./directives":"node_modules/bootstrap-vue/esm/directives/index.js","./bv-config":"node_modules/bootstrap-vue/esm/bv-config.js","./components/modal/helpers/bv-modal":"node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","./components/toast/helpers/bv-toast":"node_modules/bootstrap-vue/esm/components/toast/helpers/bv-toast.js","./components/alert":"node_modules/bootstrap-vue/esm/components/alert/index.js","./components/alert/alert":"node_modules/bootstrap-vue/esm/components/alert/alert.js","./components/badge":"node_modules/bootstrap-vue/esm/components/badge/index.js","./components/badge/badge":"node_modules/bootstrap-vue/esm/components/badge/badge.js","./components/breadcrumb":"node_modules/bootstrap-vue/esm/components/breadcrumb/index.js","./components/breadcrumb/breadcrumb":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb.js","./components/breadcrumb/breadcrumb-item":"node_modules/bootstrap-vue/esm/components/breadcrumb/breadcrumb-item.js","./components/button":"node_modules/bootstrap-vue/esm/components/button/index.js","./components/button/button":"node_modules/bootstrap-vue/esm/components/button/button.js","./components/button/button-close":"node_modules/bootstrap-vue/esm/components/button/button-close.js","./components/button-group":"node_modules/bootstrap-vue/esm/components/button-group/index.js","./components/button-group/button-group":"node_modules/bootstrap-vue/esm/components/button-group/button-group.js","./components/button-toolbar":"node_modules/bootstrap-vue/esm/components/button-toolbar/index.js","./components/button-toolbar/button-toolbar":"node_modules/bootstrap-vue/esm/components/button-toolbar/button-toolbar.js","./components/card":"node_modules/bootstrap-vue/esm/components/card/index.js","./components/card/card":"node_modules/bootstrap-vue/esm/components/card/card.js","./components/card/card-body":"node_modules/bootstrap-vue/esm/components/card/card-body.js","./components/card/card-footer":"node_modules/bootstrap-vue/esm/components/card/card-footer.js","./components/card/card-group":"node_modules/bootstrap-vue/esm/components/card/card-group.js","./components/card/card-header":"node_modules/bootstrap-vue/esm/components/card/card-header.js","./components/card/card-img":"node_modules/bootstrap-vue/esm/components/card/card-img.js","./components/card/card-img-lazy":"node_modules/bootstrap-vue/esm/components/card/card-img-lazy.js","./components/card/card-sub-title":"node_modules/bootstrap-vue/esm/components/card/card-sub-title.js","./components/card/card-text":"node_modules/bootstrap-vue/esm/components/card/card-text.js","./components/card/card-title":"node_modules/bootstrap-vue/esm/components/card/card-title.js","./components/carousel":"node_modules/bootstrap-vue/esm/components/carousel/index.js","./components/carousel/carousel":"node_modules/bootstrap-vue/esm/components/carousel/carousel.js","./components/carousel/carousel-slide":"node_modules/bootstrap-vue/esm/components/carousel/carousel-slide.js","./components/collapse":"node_modules/bootstrap-vue/esm/components/collapse/index.js","./components/collapse/collapse":"node_modules/bootstrap-vue/esm/components/collapse/collapse.js","./components/dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/index.js","./components/dropdown/dropdown":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown.js","./components/dropdown/dropdown-item":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-item.js","./components/dropdown/dropdown-item-button":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-item-button.js","./components/dropdown/dropdown-divider":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-divider.js","./components/dropdown/dropdown-form":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-form.js","./components/dropdown/dropdown-group":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-group.js","./components/dropdown/dropdown-header":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-header.js","./components/dropdown/dropdown-text":"node_modules/bootstrap-vue/esm/components/dropdown/dropdown-text.js","./components/embed":"node_modules/bootstrap-vue/esm/components/embed/index.js","./components/embed/embed":"node_modules/bootstrap-vue/esm/components/embed/embed.js","./components/form":"node_modules/bootstrap-vue/esm/components/form/index.js","./components/form/form":"node_modules/bootstrap-vue/esm/components/form/form.js","./components/form/form-datalist":"node_modules/bootstrap-vue/esm/components/form/form-datalist.js","./components/form/form-text":"node_modules/bootstrap-vue/esm/components/form/form-text.js","./components/form/form-invalid-feedback":"node_modules/bootstrap-vue/esm/components/form/form-invalid-feedback.js","./components/form/form-valid-feedback":"node_modules/bootstrap-vue/esm/components/form/form-valid-feedback.js","./components/form-checkbox":"node_modules/bootstrap-vue/esm/components/form-checkbox/index.js","./components/form-checkbox/form-checkbox":"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox.js","./components/form-checkbox/form-checkbox-group":"node_modules/bootstrap-vue/esm/components/form-checkbox/form-checkbox-group.js","./components/form-file":"node_modules/bootstrap-vue/esm/components/form-file/index.js","./components/form-file/form-file":"node_modules/bootstrap-vue/esm/components/form-file/form-file.js","./components/form-group":"node_modules/bootstrap-vue/esm/components/form-group/index.js","./components/form-group/form-group":"node_modules/bootstrap-vue/esm/components/form-group/form-group.js","./components/form-input":"node_modules/bootstrap-vue/esm/components/form-input/index.js","./components/form-input/form-input":"node_modules/bootstrap-vue/esm/components/form-input/form-input.js","./components/form-radio":"node_modules/bootstrap-vue/esm/components/form-radio/index.js","./components/form-radio/form-radio":"node_modules/bootstrap-vue/esm/components/form-radio/form-radio.js","./components/form-radio/form-radio-group":"node_modules/bootstrap-vue/esm/components/form-radio/form-radio-group.js","./components/form-select":"node_modules/bootstrap-vue/esm/components/form-select/index.js","./components/form-select/form-select":"node_modules/bootstrap-vue/esm/components/form-select/form-select.js","./components/form-textarea":"node_modules/bootstrap-vue/esm/components/form-textarea/index.js","./components/form-textarea/form-textarea":"node_modules/bootstrap-vue/esm/components/form-textarea/form-textarea.js","./components/image":"node_modules/bootstrap-vue/esm/components/image/index.js","./components/image/img":"node_modules/bootstrap-vue/esm/components/image/img.js","./components/image/img-lazy":"node_modules/bootstrap-vue/esm/components/image/img-lazy.js","./components/input-group":"node_modules/bootstrap-vue/esm/components/input-group/index.js","./components/input-group/input-group":"node_modules/bootstrap-vue/esm/components/input-group/input-group.js","./components/input-group/input-group-addon":"node_modules/bootstrap-vue/esm/components/input-group/input-group-addon.js","./components/input-group/input-group-append":"node_modules/bootstrap-vue/esm/components/input-group/input-group-append.js","./components/input-group/input-group-prepend":"node_modules/bootstrap-vue/esm/components/input-group/input-group-prepend.js","./components/input-group/input-group-text":"node_modules/bootstrap-vue/esm/components/input-group/input-group-text.js","./components/jumbotron":"node_modules/bootstrap-vue/esm/components/jumbotron/index.js","./components/jumbotron/jumbotron":"node_modules/bootstrap-vue/esm/components/jumbotron/jumbotron.js","./components/layout":"node_modules/bootstrap-vue/esm/components/layout/index.js","./components/layout/container":"node_modules/bootstrap-vue/esm/components/layout/container.js","./components/layout/row":"node_modules/bootstrap-vue/esm/components/layout/row.js","./components/layout/col":"node_modules/bootstrap-vue/esm/components/layout/col.js","./components/layout/form-row":"node_modules/bootstrap-vue/esm/components/layout/form-row.js","./components/link":"node_modules/bootstrap-vue/esm/components/link/index.js","./components/link/link":"node_modules/bootstrap-vue/esm/components/link/link.js","./components/list-group":"node_modules/bootstrap-vue/esm/components/list-group/index.js","./components/list-group/list-group":"node_modules/bootstrap-vue/esm/components/list-group/list-group.js","./components/list-group/list-group-item":"node_modules/bootstrap-vue/esm/components/list-group/list-group-item.js","./components/media":"node_modules/bootstrap-vue/esm/components/media/index.js","./components/media/media":"node_modules/bootstrap-vue/esm/components/media/media.js","./components/media/media-aside":"node_modules/bootstrap-vue/esm/components/media/media-aside.js","./components/media/media-body":"node_modules/bootstrap-vue/esm/components/media/media-body.js","./components/modal":"node_modules/bootstrap-vue/esm/components/modal/index.js","./components/modal/modal":"node_modules/bootstrap-vue/esm/components/modal/modal.js","./components/nav":"node_modules/bootstrap-vue/esm/components/nav/index.js","./components/nav/nav":"node_modules/bootstrap-vue/esm/components/nav/nav.js","./components/nav/nav-form":"node_modules/bootstrap-vue/esm/components/nav/nav-form.js","./components/nav/nav-item":"node_modules/bootstrap-vue/esm/components/nav/nav-item.js","./components/nav/nav-item-dropdown":"node_modules/bootstrap-vue/esm/components/nav/nav-item-dropdown.js","./components/nav/nav-text":"node_modules/bootstrap-vue/esm/components/nav/nav-text.js","./components/navbar":"node_modules/bootstrap-vue/esm/components/navbar/index.js","./components/navbar/navbar":"node_modules/bootstrap-vue/esm/components/navbar/navbar.js","./components/navbar/navbar-brand":"node_modules/bootstrap-vue/esm/components/navbar/navbar-brand.js","./components/navbar/navbar-nav":"node_modules/bootstrap-vue/esm/components/navbar/navbar-nav.js","./components/navbar/navbar-toggle":"node_modules/bootstrap-vue/esm/components/navbar/navbar-toggle.js","./components/pagination":"node_modules/bootstrap-vue/esm/components/pagination/index.js","./components/pagination/pagination":"node_modules/bootstrap-vue/esm/components/pagination/pagination.js","./components/pagination-nav":"node_modules/bootstrap-vue/esm/components/pagination-nav/index.js","./components/pagination-nav/pagination-nav":"node_modules/bootstrap-vue/esm/components/pagination-nav/pagination-nav.js","./components/popover":"node_modules/bootstrap-vue/esm/components/popover/index.js","./components/popover/popover":"node_modules/bootstrap-vue/esm/components/popover/popover.js","./components/progress":"node_modules/bootstrap-vue/esm/components/progress/index.js","./components/progress/progress":"node_modules/bootstrap-vue/esm/components/progress/progress.js","./components/progress/progress-bar":"node_modules/bootstrap-vue/esm/components/progress/progress-bar.js","./components/spinner":"node_modules/bootstrap-vue/esm/components/spinner/index.js","./components/spinner/spinner":"node_modules/bootstrap-vue/esm/components/spinner/spinner.js","./components/table":"node_modules/bootstrap-vue/esm/components/table/index.js","./components/table/table":"node_modules/bootstrap-vue/esm/components/table/table.js","./components/table/table-lite":"node_modules/bootstrap-vue/esm/components/table/table-lite.js","./components/table/table-simple":"node_modules/bootstrap-vue/esm/components/table/table-simple.js","./components/table/tbody":"node_modules/bootstrap-vue/esm/components/table/tbody.js","./components/table/thead":"node_modules/bootstrap-vue/esm/components/table/thead.js","./components/table/tfoot":"node_modules/bootstrap-vue/esm/components/table/tfoot.js","./components/table/tr":"node_modules/bootstrap-vue/esm/components/table/tr.js","./components/table/th":"node_modules/bootstrap-vue/esm/components/table/th.js","./components/table/td":"node_modules/bootstrap-vue/esm/components/table/td.js","./components/tabs":"node_modules/bootstrap-vue/esm/components/tabs/index.js","./components/tabs/tabs":"node_modules/bootstrap-vue/esm/components/tabs/tabs.js","./components/tabs/tab":"node_modules/bootstrap-vue/esm/components/tabs/tab.js","./components/toast":"node_modules/bootstrap-vue/esm/components/toast/index.js","./components/toast/toast":"node_modules/bootstrap-vue/esm/components/toast/toast.js","./components/toast/toaster":"node_modules/bootstrap-vue/esm/components/toast/toaster.js","./components/tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/index.js","./components/tooltip/tooltip":"node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","./directives/modal":"node_modules/bootstrap-vue/esm/directives/modal/index.js","./directives/modal/modal":"node_modules/bootstrap-vue/esm/directives/modal/modal.js","./directives/popover":"node_modules/bootstrap-vue/esm/directives/popover/index.js","./directives/popover/popover":"node_modules/bootstrap-vue/esm/directives/popover/popover.js","./directives/scrollspy":"node_modules/bootstrap-vue/esm/directives/scrollspy/index.js","./directives/scrollspy/scrollspy":"node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.js","./directives/toggle":"node_modules/bootstrap-vue/esm/directives/toggle/index.js","./directives/toggle/toggle":"node_modules/bootstrap-vue/esm/directives/toggle/toggle.js","./directives/tooltip":"node_modules/bootstrap-vue/esm/directives/tooltip/index.js","./directives/tooltip/tooltip":"node_modules/bootstrap-vue/esm/directives/tooltip/tooltip.js"}],"node_modules/bootstrap/dist/css/bootstrap.css":[function(require,module,exports) {
var reloadCSS = require('_css_loader');

module.hot.dispose(reloadCSS);
module.hot.accept(reloadCSS);
},{"_css_loader":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"node_modules/bootstrap-vue/dist/bootstrap-vue.css":[function(require,module,exports) {

        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
},{"_css_loader":"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"}],"index.js":[function(require,module,exports) {
"use strict";

var _vue = _interopRequireDefault(require("vue"));

var _App = _interopRequireDefault(require("./components/App.vue"));

var _bootstrapVue = _interopRequireDefault(require("bootstrap-vue"));

require("./node_modules/bootstrap/dist/css/bootstrap.css");

require("./node_modules/bootstrap-vue/dist/bootstrap-vue.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*********************************************************************************
 * WEB422 – Assignment 3
 * I declare that this assignment is my own work in accordance with Seneca Academic Policy.
 * No part of this assignment has been copied manually or electronically from any other source
 * (including web sites) or distributed to other students.
 *
 * Name: David Zak Student ID: 158458174 Date: October 10th, 2019
 *
 *
 ********************************************************************************/
var app = new _vue.default({
  el: "#app",
  components: {
    App: _App.default
  },
  template: "<App></App>"
});
},{"vue":"node_modules/vue/dist/vue.esm.js","./components/App.vue":"components/App.vue","bootstrap-vue":"node_modules/bootstrap-vue/esm/index.js","./node_modules/bootstrap/dist/css/bootstrap.css":"node_modules/bootstrap/dist/css/bootstrap.css","./node_modules/bootstrap-vue/dist/bootstrap-vue.css":"node_modules/bootstrap-vue/dist/bootstrap-vue.css"}],"../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "50717" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js","index.js"], null)
//# sourceMappingURL=/Assignment3DavidZak.e31bb0bc.js.map